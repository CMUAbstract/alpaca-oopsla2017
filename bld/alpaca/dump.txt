
templog.out:     file format elf32-msp430


Disassembly of section .text:

000054c8 <__crt0_start>:
    54c8:	31 40 00 24 	mov	#9216,	r1	;#0x2400

000054cc <__crt0_init_bss>:
    54cc:	3c 40 04 1c 	mov	#7172,	r12	;#0x1c04
    54d0:	0d 43       	clr	r13		;
    54d2:	3e 40 da 00 	mov	#218,	r14	;#0x00da
    54d6:	b0 12 50 64 	call	#25680		;#0x6450

000054da <__crt0_movedata>:
    54da:	3c 40 00 1c 	mov	#7168,	r12	;#0x1c00
    54de:	3d 40 c0 54 	mov	#21696,	r13	;#0x54c0
    54e2:	0d 9c       	cmp	r12,	r13	;
    54e4:	04 24       	jz	$+10     	;abs 0x54ee
    54e6:	3e 40 04 00 	mov	#4,	r14	;
    54ea:	b0 12 10 64 	call	#25616		;#0x6410

000054ee <__crt0_call_init_then_main>:
    54ee:	b0 12 82 64 	call	#25730		;#0x6482
    54f2:	0c 43       	clr	r12		;
    54f4:	b0 12 dc 61 	call	#25052		;#0x61dc

000054f8 <_msp430_run_init_array>:
    54f8:	34 40 04 44 	mov	#17412,	r4	;#0x4404
    54fc:	35 40 04 44 	mov	#17412,	r5	;#0x4404
    5500:	26 43       	mov	#2,	r6	;r3 As==10
    5502:	0d 3c       	jmp	$+28     	;abs 0x551e

00005504 <_msp430_run_preinit_array>:
    5504:	34 40 04 44 	mov	#17412,	r4	;#0x4404
    5508:	35 40 04 44 	mov	#17412,	r5	;#0x4404
    550c:	26 43       	mov	#2,	r6	;r3 As==10
    550e:	07 3c       	jmp	$+16     	;abs 0x551e

00005510 <_msp430_run_fini_array>:
    5510:	34 40 04 44 	mov	#17412,	r4	;#0x4404
    5514:	35 40 04 44 	mov	#17412,	r5	;#0x4404
    5518:	36 40 fe ff 	mov	#65534,	r6	;#0xfffe
    551c:	00 3c       	jmp	$+2      	;abs 0x551e

0000551e <_msp430_run_array>:
    551e:	05 94       	cmp	r4,	r5	;
    5520:	05 24       	jz	$+12     	;abs 0x552c
    5522:	27 44       	mov	@r4,	r7	;
    5524:	04 56       	add	r6,	r4	;
    5526:	a7 12       	call	@r7		;
    5528:	10 40 f4 ff 	br	0xfff4		;PC rel. 0x551e

0000552c <_msp430_run_done>:
    552c:	30 41       	ret			

0000552e <deregister_tm_clones>:
    552e:	3c 40 9e 64 	mov	#25758,	r12	;#0x649e
    5532:	3c 80 9d 64 	sub	#25757,	r12	;#0x649d
    5536:	2d 43       	mov	#2,	r13	;r3 As==10
    5538:	0d 9c       	cmp	r12,	r13	;
    553a:	07 2c       	jc	$+16     	;abs 0x554a
    553c:	3d 40 00 00 	mov	#0,	r13	;
    5540:	0d 93       	cmp	#0,	r13	;r3 As==00
    5542:	03 24       	jz	$+8      	;abs 0x554a
    5544:	3c 40 9e 64 	mov	#25758,	r12	;#0x649e
    5548:	8d 12       	call	r13		;
    554a:	30 41       	ret			

0000554c <register_tm_clones>:
    554c:	3d 40 9e 64 	mov	#25758,	r13	;#0x649e
    5550:	3d 80 9e 64 	sub	#25758,	r13	;#0x649e
    5554:	0d 11       	rra	r13		;
    5556:	0c 4d       	mov	r13,	r12	;
    5558:	5c 03       	rrum	#1,	r12	;
    555a:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    555e:	0d 5c       	add	r12,	r13	;
    5560:	0d 11       	rra	r13		;
    5562:	0d 93       	cmp	#0,	r13	;r3 As==00
    5564:	07 24       	jz	$+16     	;abs 0x5574
    5566:	3e 40 00 00 	mov	#0,	r14	;
    556a:	0e 93       	cmp	#0,	r14	;r3 As==00
    556c:	03 24       	jz	$+8      	;abs 0x5574
    556e:	3c 40 9e 64 	mov	#25758,	r12	;#0x649e
    5572:	8e 12       	call	r14		;
    5574:	30 41       	ret			

00005576 <__do_global_dtors_aux>:
    5576:	0a 15       	pushm	#1,	r10	;16-bit words
    5578:	c2 93 04 1c 	cmp.b	#0,	&0x1c04	;r3 As==00
    557c:	20 20       	jnz	$+66     	;abs 0x55be
    557e:	1c 42 06 1c 	mov	&0x1c06,r12	;0x1c06
    5582:	3a 40 0e 44 	mov	#17422,	r10	;#0x440e
    5586:	3a 80 0c 44 	sub	#17420,	r10	;#0x440c
    558a:	0a 11       	rra	r10		;
    558c:	3a 53       	add	#-1,	r10	;r3 As==11
    558e:	0c 9a       	cmp	r10,	r12	;
    5590:	0b 2c       	jc	$+24     	;abs 0x55a8
    5592:	1c 53       	inc	r12		;
    5594:	82 4c 06 1c 	mov	r12,	&0x1c06	;
    5598:	0c 5c       	rla	r12		;
    559a:	1c 4c 0c 44 	mov	17420(r12),r12	;0x0440c
    559e:	8c 12       	call	r12		;
    55a0:	1c 42 06 1c 	mov	&0x1c06,r12	;0x1c06
    55a4:	0c 9a       	cmp	r10,	r12	;
    55a6:	f5 2b       	jnc	$-20     	;abs 0x5592
    55a8:	b0 12 2e 55 	call	#21806		;#0x552e
    55ac:	3d 40 00 00 	mov	#0,	r13	;
    55b0:	0d 93       	cmp	#0,	r13	;r3 As==00
    55b2:	03 24       	jz	$+8      	;abs 0x55ba
    55b4:	3c 40 00 44 	mov	#17408,	r12	;#0x4400
    55b8:	8d 12       	call	r13		;
    55ba:	d2 43 04 1c 	mov.b	#1,	&0x1c04	;r3 As==01
    55be:	0a 17       	popm	#1,	r10	;16-bit words
    55c0:	30 41       	ret			

000055c2 <call___do_global_dtors_aux>:
    55c2:	30 41       	ret			

000055c4 <frame_dummy>:
    55c4:	3e 40 00 00 	mov	#0,	r14	;
    55c8:	0e 93       	cmp	#0,	r14	;r3 As==00
    55ca:	05 24       	jz	$+12     	;abs 0x55d6
    55cc:	3c 40 00 44 	mov	#17408,	r12	;#0x4400
    55d0:	3d 40 08 1c 	mov	#7176,	r13	;#0x1c08
    55d4:	8e 12       	call	r14		;
    55d6:	3c 40 00 1c 	mov	#7168,	r12	;#0x1c00
    55da:	8c 93 00 00 	cmp	#0,	0(r12)	;r3 As==00
    55de:	03 20       	jnz	$+8      	;abs 0x55e6
    55e0:	b0 12 4c 55 	call	#21836		;#0x554c
    55e4:	30 41       	ret			
    55e6:	3d 40 00 00 	mov	#0,	r13	;
    55ea:	0d 93       	cmp	#0,	r13	;r3 As==00
    55ec:	f9 27       	jz	$-12     	;abs 0x55e0
    55ee:	8d 12       	call	r13		;
    55f0:	f7 3f       	jmp	$-16     	;abs 0x55e0

000055f2 <call_frame_dummy>:
    55f2:	30 41       	ret			

000055f4 <TimerB1_ISR>:
    55f4:	04 12       	push	r4		;
    55f6:	04 41       	mov	r1,	r4	;
    55f8:	0c 12       	push	r12		;
    55fa:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    55fe:	3c f0 fd ff 	and	#65533,	r12	;#0xfffd
    5602:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5606:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    560a:	0c 93       	cmp	#0,	r12	;r3 As==00
    560c:	17 24       	jz	$+48     	;abs 0x563c
    560e:	00 3c       	jmp	$+2      	;abs 0x5610
    5610:	1c 42 16 1c 	mov	&0x1c16,r12	;0x1c16
    5614:	1c 53       	inc	r12		;
    5616:	82 4c 16 1c 	mov	r12,	&0x1c16	;
    561a:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    561e:	2c d2       	bis	#4,	r12	;r2 As==10
    5620:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5624:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5628:	2c d3       	bis	#2,	r12	;r3 As==10
    562a:	82 4c c0 03 	mov	r12,	&0x03c0	;
    562e:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5632:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    5636:	82 4c c0 03 	mov	r12,	&0x03c0	;
    563a:	00 3c       	jmp	$+2      	;abs 0x563c
    563c:	3c 41       	pop	r12		;
    563e:	34 41       	pop	r4		;
    5640:	00 13       	reti			
	...

00005644 <init>:
    5644:	04 12       	push	r4		;
    5646:	04 41       	mov	r1,	r4	;
    5648:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    564c:	3c f0 ff e6 	and	#59135,	r12	;#0xe6ff
    5650:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5654:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5658:	3c d0 00 02 	bis	#512,	r12	;#0x0200
    565c:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5660:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5664:	3c d0 c0 00 	bis	#192,	r12	;#0x00c0
    5668:	82 4c c0 03 	mov	r12,	&0x03c0	;
    566c:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5670:	3c f0 ef ff 	and	#65519,	r12	;#0xffef
    5674:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5678:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    567c:	3c d0 20 00 	bis	#32,	r12	;#0x0020
    5680:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5684:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5688:	2c d3       	bis	#2,	r12	;r3 As==10
    568a:	82 4c c0 03 	mov	r12,	&0x03c0	;
    568e:	b0 12 2a 63 	call	#25386		;#0x632a
    5692:	5c 42 04 02 	mov.b	&0x0204,r12	;0x0204
    5696:	2c d3       	bis	#2,	r12	;r3 As==10
    5698:	4d 4c       	mov.b	r12,	r13	;
    569a:	c2 4d 04 02 	mov.b	r13,	&0x0204	;
    569e:	5c 42 04 02 	mov.b	&0x0204,r12	;0x0204
    56a2:	2c d2       	bis	#4,	r12	;r2 As==10
    56a4:	4d 4c       	mov.b	r12,	r13	;
    56a6:	c2 4d 04 02 	mov.b	r13,	&0x0204	;
    56aa:	5c 42 04 02 	mov.b	&0x0204,r12	;0x0204
    56ae:	1c d3       	bis	#1,	r12	;r3 As==01
    56b0:	4d 4c       	mov.b	r12,	r13	;
    56b2:	c2 4d 04 02 	mov.b	r13,	&0x0204	;
    56b6:	32 d2       	eint			
    56b8:	03 43       	nop			
    56ba:	34 41       	pop	r4		;
    56bc:	30 41       	ret			
	...

000056c0 <task_init>:
    56c0:	04 12       	push	r4		;
    56c2:	04 41       	mov	r1,	r4	;
    56c4:	82 43 08 46 	mov	#0,	&0x4608	;r3 As==00
    56c8:	82 43 0a 46 	mov	#0,	&0x460a	;r3 As==00
    56cc:	82 43 0c 46 	mov	#0,	&0x460c	;r3 As==00
    56d0:	82 43 0e 46 	mov	#0,	&0x460e	;r3 As==00
    56d4:	82 43 10 46 	mov	#0,	&0x4610	;r3 As==00
    56d8:	92 43 12 46 	mov	#1,	&0x4612	;r3 As==01
    56dc:	3f 40 3a 44 	mov	#17466,	r15	;#0x443a
    56e0:	b0 12 ac 5e 	call	#24236		;#0x5eac
    56e4:	34 41       	pop	r4		;
    56e6:	30 41       	ret			

000056e8 <task_init_dict>:
    56e8:	04 12       	push	r4		;
    56ea:	04 41       	mov	r1,	r4	;
    56ec:	31 80 0a 00 	sub	#10,	r1	;#0x000a
    56f0:	1c 42 0c 46 	mov	&0x460c,r12	;0x460c
    56f4:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    56f8:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    56fc:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa
    5700:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    5704:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5708:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    570c:	3e 40 06 00 	mov	#6,	r14	;
    5710:	0f 4c       	mov	r12,	r15	;
    5712:	b0 12 1c 63 	call	#25372		;#0x631c
    5716:	1c 44 fc ff 	mov	-4(r4),	r12	;
    571a:	8f 4c 18 46 	mov	r12,	17944(r15); 0x4618
    571e:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5722:	8f 4c 16 46 	mov	r12,	17942(r15); 0x4616
    5726:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    572a:	8f 4c 14 46 	mov	r12,	17940(r15); 0x4614
    572e:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5732:	1c 53       	inc	r12		;
    5734:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5738:	0c 44       	mov	r4,	r12	;
    573a:	2c 83       	decd	r12		;
    573c:	2d 43       	mov	#2,	r13	;r3 As==10
    573e:	0f 4c       	mov	r12,	r15	;
    5740:	0e 4c       	mov	r12,	r14	;
    5742:	b0 12 0c 60 	call	#24588		;#0x600c
    5746:	1c 44 fe ff 	mov	-2(r4),	r12	;
    574a:	3c 90 00 01 	cmp	#256,	r12	;#0x0100
    574e:	0d 2c       	jc	$+28     	;abs 0x576a
    5750:	00 3c       	jmp	$+2      	;abs 0x5752
    5752:	3e 40 0c 46 	mov	#17932,	r14	;#0x460c
    5756:	0f 44       	mov	r4,	r15	;
    5758:	2f 83       	decd	r15		;
    575a:	2d 43       	mov	#2,	r13	;r3 As==10
    575c:	b0 12 0c 60 	call	#24588		;#0x600c
    5760:	3f 40 3a 44 	mov	#17466,	r15	;#0x443a
    5764:	b0 12 ac 5e 	call	#24236		;#0x5eac
    5768:	0f 3c       	jmp	$+32     	;abs 0x5788
    576a:	b2 40 00 01 	mov	#256,	&0x5214	;#0x0100
    576e:	14 52 
    5770:	3e 40 0c 46 	mov	#17932,	r14	;#0x460c
    5774:	0f 44       	mov	r4,	r15	;
    5776:	2f 83       	decd	r15		;
    5778:	2d 43       	mov	#2,	r13	;r3 As==10
    577a:	b0 12 0c 60 	call	#24588		;#0x600c
    577e:	3f 40 64 44 	mov	#17508,	r15	;#0x4464
    5782:	b0 12 ac 5e 	call	#24236		;#0x5eac
    5786:	00 3c       	jmp	$+2      	;abs 0x5788
    5788:	31 50 0a 00 	add	#10,	r1	;#0x000a
    578c:	34 41       	pop	r4		;
    578e:	30 41       	ret			

00005790 <task_sample>:
    5790:	04 12       	push	r4		;
    5792:	04 41       	mov	r1,	r4	;
    5794:	21 82       	sub	#4,	r1	;r2 As==10
    5796:	1c 42 10 46 	mov	&0x4610,r12	;0x4610
    579a:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    579e:	1c 53       	inc	r12		;
    57a0:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    57a4:	2c 93       	cmp	#2,	r12	;r3 As==10
    57a6:	04 20       	jnz	$+10     	;abs 0x57b0
    57a8:	00 3c       	jmp	$+2      	;abs 0x57aa
    57aa:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    57ae:	00 3c       	jmp	$+2      	;abs 0x57b0
    57b0:	1c 44 fe ff 	mov	-2(r4),	r12	;
    57b4:	0c 93       	cmp	#0,	r12	;r3 As==00
    57b6:	11 20       	jnz	$+36     	;abs 0x57da
    57b8:	00 3c       	jmp	$+2      	;abs 0x57ba
    57ba:	1c 44 fc ff 	mov	-4(r4),	r12	;
    57be:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    57c2:	3e 40 10 46 	mov	#17936,	r14	;#0x4610
    57c6:	0f 44       	mov	r4,	r15	;
    57c8:	2f 83       	decd	r15		;
    57ca:	2d 43       	mov	#2,	r13	;r3 As==10
    57cc:	b0 12 0c 60 	call	#24588		;#0x600c
    57d0:	3f 40 8e 44 	mov	#17550,	r15	;#0x448e
    57d4:	b0 12 ac 5e 	call	#24236		;#0x5eac
    57d8:	10 3c       	jmp	$+34     	;abs 0x57fa
    57da:	1c 44 fc ff 	mov	-4(r4),	r12	;
    57de:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    57e2:	3e 40 10 46 	mov	#17936,	r14	;#0x4610
    57e6:	0f 44       	mov	r4,	r15	;
    57e8:	2f 83       	decd	r15		;
    57ea:	2d 43       	mov	#2,	r13	;r3 As==10
    57ec:	b0 12 0c 60 	call	#24588		;#0x600c
    57f0:	3f 40 b8 44 	mov	#17592,	r15	;#0x44b8
    57f4:	b0 12 ac 5e 	call	#24236		;#0x5eac
    57f8:	00 3c       	jmp	$+2      	;abs 0x57fa
    57fa:	21 52       	add	#4,	r1	;r2 As==10
    57fc:	34 41       	pop	r4		;
    57fe:	30 41       	ret			

00005800 <task_measure_temp>:
    5800:	04 12       	push	r4		;
    5802:	04 41       	mov	r1,	r4	;
    5804:	31 82       	sub	#8,	r1	;r2 As==11
    5806:	3e 40 0e 46 	mov	#17934,	r14	;#0x460e
    580a:	1c 42 0e 46 	mov	&0x460e,r12	;0x460e
    580e:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5812:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5816:	0f 4c       	mov	r12,	r15	;
    5818:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    581c:	b0 12 dc 5d 	call	#24028		;#0x5ddc
    5820:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    5824:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    5828:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    582c:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5830:	82 4c 16 52 	mov	r12,	&0x5216	;
    5834:	0f 44       	mov	r4,	r15	;
    5836:	2f 83       	decd	r15		;
    5838:	2d 43       	mov	#2,	r13	;r3 As==10
    583a:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    583e:	b0 12 0c 60 	call	#24588		;#0x600c
    5842:	3f 40 b8 44 	mov	#17592,	r15	;#0x44b8
    5846:	b0 12 ac 5e 	call	#24236		;#0x5eac
    584a:	31 52       	add	#8,	r1	;r2 As==11
    584c:	34 41       	pop	r4		;
    584e:	30 41       	ret			

00005850 <task_letterize>:
    5850:	04 12       	push	r4		;
    5852:	04 41       	mov	r1,	r4	;
    5854:	31 80 10 00 	sub	#16,	r1	;#0x0010
    5858:	1c 42 10 46 	mov	&0x4610,r12	;0x4610
    585c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5860:	0c 93       	cmp	#0,	r12	;r3 As==00
    5862:	04 20       	jnz	$+10     	;abs 0x586c
    5864:	00 3c       	jmp	$+2      	;abs 0x5866
    5866:	a4 43 fe ff 	mov	#2,	-2(r4)	;r3 As==10, 0xfffe
    586a:	06 3c       	jmp	$+14     	;abs 0x5878
    586c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5870:	3c 53       	add	#-1,	r12	;r3 As==11
    5872:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5876:	00 3c       	jmp	$+2      	;abs 0x5878
    5878:	1c 44 fe ff 	mov	-2(r4),	r12	;
    587c:	0c 5c       	rla	r12		;
    587e:	0c 5c       	rla	r12		;
    5880:	0c 5c       	rla	r12		;
    5882:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5886:	1c 42 16 52 	mov	&0x5216,r12	;0x5216
    588a:	5d 44 fc ff 	mov.b	-4(r4),	r13	;
    588e:	3e 40 ff 00 	mov	#255,	r14	;#0x00ff
    5892:	4d 93       	cmp.b	#0,	r13	;r3 As==00
    5894:	4f 4d       	mov.b	r13,	r15	;
    5896:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    589a:	c4 4d f7 ff 	mov.b	r13,	-9(r4)	; 0xfff7
    589e:	84 4e f4 ff 	mov	r14,	-12(r4)	; 0xfff4
    58a2:	c4 4f f3 ff 	mov.b	r15,	-13(r4)	; 0xfff3
    58a6:	0b 24       	jz	$+24     	;abs 0x58be
    58a8:	5c 44 f3 ff 	mov.b	-13(r4),r12	;0xfffffff3
    58ac:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    58b0:	0d 5d       	rla	r13		;
    58b2:	5c 83       	dec.b	r12		;
    58b4:	84 4d f4 ff 	mov	r13,	-12(r4)	; 0xfff4
    58b8:	c4 4c f3 ff 	mov.b	r12,	-13(r4)	; 0xfff3
    58bc:	f5 23       	jnz	$-20     	;abs 0x58a8
    58be:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    58c2:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    58c6:	0d fc       	and	r12,	r13	;
    58c8:	5e 44 f7 ff 	mov.b	-9(r4),	r14	;
    58cc:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    58ce:	c4 4e f2 ff 	mov.b	r14,	-14(r4)	; 0xfff2
    58d2:	84 4d f0 ff 	mov	r13,	-16(r4)	; 0xfff0
    58d6:	0c 24       	jz	$+26     	;abs 0x58f0
    58d8:	5c 44 f2 ff 	mov.b	-14(r4),r12	;0xfffffff2
    58dc:	1d 44 f0 ff 	mov	-16(r4),r13	;0xfffffff0
    58e0:	12 c3       	clrc			
    58e2:	0d 10       	rrc	r13		;
    58e4:	5c 83       	dec.b	r12		;
    58e6:	84 4d f0 ff 	mov	r13,	-16(r4)	; 0xfff0
    58ea:	c4 4c f2 ff 	mov.b	r12,	-14(r4)	; 0xfff2
    58ee:	f4 23       	jnz	$-22     	;abs 0x58d8
    58f0:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    58f4:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    58f8:	82 4c 0c 46 	mov	r12,	&0x460c	;
    58fc:	3f 40 e2 44 	mov	#17634,	r15	;#0x44e2
    5900:	b0 12 ac 5e 	call	#24236		;#0x5eac
    5904:	31 50 10 00 	add	#16,	r1	;#0x0010
    5908:	34 41       	pop	r4		;
    590a:	30 41       	ret			

0000590c <task_compress>:
    590c:	04 12       	push	r4		;
    590e:	04 41       	mov	r1,	r4	;
    5910:	31 80 0c 00 	sub	#12,	r1	;#0x000c
    5914:	3e 40 12 46 	mov	#17938,	r14	;#0x4612
    5918:	1c 42 12 46 	mov	&0x4612,r12	;0x4612
    591c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5920:	1c 42 08 46 	mov	&0x4608,r12	;0x4608
    5924:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    5928:	3d 40 06 00 	mov	#6,	r13	;
    592c:	0f 4c       	mov	r12,	r15	;
    592e:	84 4e f4 ff 	mov	r14,	-12(r4)	; 0xfff4
    5932:	0e 4d       	mov	r13,	r14	;
    5934:	b0 12 1c 63 	call	#25372		;#0x631c
    5938:	1c 4f 18 46 	mov	17944(r15),r12	;0x04618
    593c:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5940:	1c 4f 16 46 	mov	17942(r15),r12	;0x04616
    5944:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5948:	1c 4f 14 46 	mov	17940(r15),r12	;0x04614
    594c:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5950:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5954:	82 4c 18 52 	mov	r12,	&0x5218	;
    5958:	1c 44 fc ff 	mov	-4(r4),	r12	;
    595c:	82 4c 1e 52 	mov	r12,	&0x521e	;
    5960:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5964:	82 4c 1c 52 	mov	r12,	&0x521c	;
    5968:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    596c:	82 4c 1a 52 	mov	r12,	&0x521a	;
    5970:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    5974:	82 4c 20 52 	mov	r12,	&0x5220	;
    5978:	1c 44 fc ff 	mov	-4(r4),	r12	;
    597c:	82 4c 22 52 	mov	r12,	&0x5222	;
    5980:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5984:	1c 53       	inc	r12		;
    5986:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    598a:	0f 44       	mov	r4,	r15	;
    598c:	2f 83       	decd	r15		;
    598e:	2d 43       	mov	#2,	r13	;r3 As==10
    5990:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfffffff4
    5994:	b0 12 0c 60 	call	#24588		;#0x600c
    5998:	3f 40 0c 45 	mov	#17676,	r15	;#0x450c
    599c:	b0 12 ac 5e 	call	#24236		;#0x5eac
    59a0:	31 50 0c 00 	add	#12,	r1	;#0x000c
    59a4:	34 41       	pop	r4		;
    59a6:	30 41       	ret			

000059a8 <task_find_sibling>:
    59a8:	04 12       	push	r4		;
    59aa:	04 41       	mov	r1,	r4	;
    59ac:	31 82       	sub	#8,	r1	;r2 As==11
    59ae:	1c 42 18 52 	mov	&0x5218,r12	;0x5218
    59b2:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    59b6:	0c 93       	cmp	#0,	r12	;r3 As==00
    59b8:	41 24       	jz	$+132    	;abs 0x5a3c
    59ba:	00 3c       	jmp	$+2      	;abs 0x59bc
    59bc:	1c 44 fe ff 	mov	-2(r4),	r12	;
    59c0:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    59c4:	3e 40 06 00 	mov	#6,	r14	;
    59c8:	0f 4c       	mov	r12,	r15	;
    59ca:	b0 12 1c 63 	call	#25372		;#0x631c
    59ce:	0c 4f       	mov	r15,	r12	;
    59d0:	3c 50 14 46 	add	#17940,	r12	;#0x4614
    59d4:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    59d8:	1c 4f 14 46 	mov	17940(r15),r12	;0x04614
    59dc:	1e 42 0c 46 	mov	&0x460c,r14	;0x460c
    59e0:	0c 9e       	cmp	r14,	r12	;
    59e2:	11 20       	jnz	$+36     	;abs 0x5a06
    59e4:	00 3c       	jmp	$+2      	;abs 0x59e6
    59e6:	1c 44 fe ff 	mov	-2(r4),	r12	;
    59ea:	82 4c 08 46 	mov	r12,	&0x4608	;
    59ee:	3e 40 18 52 	mov	#21016,	r14	;#0x5218
    59f2:	0f 44       	mov	r4,	r15	;
    59f4:	2f 83       	decd	r15		;
    59f6:	2d 43       	mov	#2,	r13	;r3 As==10
    59f8:	b0 12 0c 60 	call	#24588		;#0x600c
    59fc:	3f 40 b8 44 	mov	#17592,	r15	;#0x44b8
    5a00:	b0 12 ac 5e 	call	#24236		;#0x5eac
    5a04:	1a 3c       	jmp	$+54     	;abs 0x5a3a
    5a06:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5a0a:	1c 4c 02 00 	mov	2(r12),	r12	;
    5a0e:	0c 93       	cmp	#0,	r12	;r3 As==00
    5a10:	13 24       	jz	$+40     	;abs 0x5a38
    5a12:	00 3c       	jmp	$+2      	;abs 0x5a14
    5a14:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5a18:	1c 4c 02 00 	mov	2(r12),	r12	;
    5a1c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5a20:	3e 40 18 52 	mov	#21016,	r14	;#0x5218
    5a24:	0f 44       	mov	r4,	r15	;
    5a26:	2f 83       	decd	r15		;
    5a28:	2d 43       	mov	#2,	r13	;r3 As==10
    5a2a:	b0 12 0c 60 	call	#24588		;#0x600c
    5a2e:	3f 40 0c 45 	mov	#17676,	r15	;#0x450c
    5a32:	b0 12 ac 5e 	call	#24236		;#0x5eac
    5a36:	00 3c       	jmp	$+2      	;abs 0x5a38
    5a38:	00 3c       	jmp	$+2      	;abs 0x5a3a
    5a3a:	00 3c       	jmp	$+2      	;abs 0x5a3c
    5a3c:	1c 42 0c 46 	mov	&0x460c,r12	;0x460c
    5a40:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5a44:	82 4c 08 46 	mov	r12,	&0x4608	;
    5a48:	1c 42 22 52 	mov	&0x5222,r12	;0x5222
    5a4c:	0c 93       	cmp	#0,	r12	;r3 As==00
    5a4e:	0d 20       	jnz	$+28     	;abs 0x5a6a
    5a50:	00 3c       	jmp	$+2      	;abs 0x5a52
    5a52:	3e 40 18 52 	mov	#21016,	r14	;#0x5218
    5a56:	0f 44       	mov	r4,	r15	;
    5a58:	2f 83       	decd	r15		;
    5a5a:	2d 43       	mov	#2,	r13	;r3 As==10
    5a5c:	b0 12 0c 60 	call	#24588		;#0x600c
    5a60:	3f 40 60 45 	mov	#17760,	r15	;#0x4560
    5a64:	b0 12 ac 5e 	call	#24236		;#0x5eac
    5a68:	0c 3c       	jmp	$+26     	;abs 0x5a82
    5a6a:	3e 40 18 52 	mov	#21016,	r14	;#0x5218
    5a6e:	0f 44       	mov	r4,	r15	;
    5a70:	2f 83       	decd	r15		;
    5a72:	2d 43       	mov	#2,	r13	;r3 As==10
    5a74:	b0 12 0c 60 	call	#24588		;#0x600c
    5a78:	3f 40 36 45 	mov	#17718,	r15	;#0x4536
    5a7c:	b0 12 ac 5e 	call	#24236		;#0x5eac
    5a80:	00 3c       	jmp	$+2      	;abs 0x5a82
    5a82:	31 52       	add	#8,	r1	;r2 As==11
    5a84:	34 41       	pop	r4		;
    5a86:	30 41       	ret			

00005a88 <task_add_node>:
    5a88:	04 12       	push	r4		;
    5a8a:	04 41       	mov	r1,	r4	;
    5a8c:	31 80 0e 00 	sub	#14,	r1	;#0x000e
    5a90:	1c 42 18 52 	mov	&0x5218,r12	;0x5218
    5a94:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5a98:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5a9c:	3e 40 06 00 	mov	#6,	r14	;
    5aa0:	0f 4c       	mov	r12,	r15	;
    5aa2:	b0 12 1c 63 	call	#25372		;#0x631c
    5aa6:	0c 4f       	mov	r15,	r12	;
    5aa8:	3c 50 14 46 	add	#17940,	r12	;#0x4614
    5aac:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5ab0:	1c 4f 16 46 	mov	17942(r15),r12	;0x04616
    5ab4:	0c 93       	cmp	#0,	r12	;r3 As==00
    5ab6:	15 24       	jz	$+44     	;abs 0x5ae2
    5ab8:	00 3c       	jmp	$+2      	;abs 0x5aba
    5aba:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5abe:	1c 4c 02 00 	mov	2(r12),	r12	;
    5ac2:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5ac6:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5aca:	3e 40 18 52 	mov	#21016,	r14	;#0x5218
    5ace:	0f 44       	mov	r4,	r15	;
    5ad0:	2f 83       	decd	r15		;
    5ad2:	2d 43       	mov	#2,	r13	;r3 As==10
    5ad4:	b0 12 0c 60 	call	#24588		;#0x600c
    5ad8:	3f 40 36 45 	mov	#17718,	r15	;#0x4536
    5adc:	b0 12 ac 5e 	call	#24236		;#0x5eac
    5ae0:	25 3c       	jmp	$+76     	;abs 0x5b2c
    5ae2:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5ae6:	1d 4c 04 00 	mov	4(r12),	r13	;
    5aea:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    5aee:	1d 4c 02 00 	mov	2(r12),	r13	;
    5af2:	84 4d f4 ff 	mov	r13,	-12(r4)	; 0xfff4
    5af6:	2c 4c       	mov	@r12,	r12	;
    5af8:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    5afc:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    5b00:	82 4c 28 52 	mov	r12,	&0x5228	;
    5b04:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    5b08:	82 4c 26 52 	mov	r12,	&0x5226	;
    5b0c:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    5b10:	82 4c 24 52 	mov	r12,	&0x5224	;
    5b14:	3e 40 18 52 	mov	#21016,	r14	;#0x5218
    5b18:	0f 44       	mov	r4,	r15	;
    5b1a:	2f 83       	decd	r15		;
    5b1c:	2d 43       	mov	#2,	r13	;r3 As==10
    5b1e:	b0 12 0c 60 	call	#24588		;#0x600c
    5b22:	3f 40 60 45 	mov	#17760,	r15	;#0x4560
    5b26:	b0 12 ac 5e 	call	#24236		;#0x5eac
    5b2a:	00 3c       	jmp	$+2      	;abs 0x5b2c
    5b2c:	31 50 0e 00 	add	#14,	r1	;#0x000e
    5b30:	34 41       	pop	r4		;
    5b32:	30 41       	ret			

00005b34 <task_add_insert>:
    5b34:	04 12       	push	r4		;
    5b36:	04 41       	mov	r1,	r4	;
    5b38:	31 80 1a 00 	sub	#26,	r1	;#0x001a
    5b3c:	1c 42 14 52 	mov	&0x5214,r12	;0x5214
    5b40:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5b44:	3c 90 00 02 	cmp	#512,	r12	;#0x0200
    5b48:	03 20       	jnz	$+8      	;abs 0x5b50
    5b4a:	00 3c       	jmp	$+2      	;abs 0x5b4c
    5b4c:	00 3c       	jmp	$+2      	;abs 0x5b4e
    5b4e:	ff 3f       	jmp	$+0      	;abs 0x5b4e
    5b50:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5b54:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5b58:	1c 42 0c 46 	mov	&0x460c,r12	;0x460c
    5b5c:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    5b60:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8
    5b64:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa
    5b68:	1c 42 1e 52 	mov	&0x521e,r12	;0x521e
    5b6c:	0c 93       	cmp	#0,	r12	;r3 As==00
    5b6e:	27 20       	jnz	$+80     	;abs 0x5bbe
    5b70:	00 3c       	jmp	$+2      	;abs 0x5b72
    5b72:	1c 42 1e 52 	mov	&0x521e,r12	;0x521e
    5b76:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    5b7a:	1c 42 1c 52 	mov	&0x521c,r12	;0x521c
    5b7e:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    5b82:	1c 42 1a 52 	mov	&0x521a,r12	;0x521a
    5b86:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    5b8a:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5b8e:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    5b92:	1c 42 20 52 	mov	&0x5220,r12	;0x5220
    5b96:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    5b9a:	3e 40 06 00 	mov	#6,	r14	;
    5b9e:	0f 4c       	mov	r12,	r15	;
    5ba0:	b0 12 1c 63 	call	#25372		;#0x631c
    5ba4:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    5ba8:	8f 4c 18 46 	mov	r12,	17944(r15); 0x4618
    5bac:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    5bb0:	8f 4c 16 46 	mov	r12,	17942(r15); 0x4616
    5bb4:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    5bb8:	8f 4c 14 46 	mov	r12,	17940(r15); 0x4614
    5bbc:	27 3c       	jmp	$+80     	;abs 0x5c0c
    5bbe:	1c 42 18 52 	mov	&0x5218,r12	;0x5218
    5bc2:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    5bc6:	1c 42 28 52 	mov	&0x5228,r12	;0x5228
    5bca:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    5bce:	1c 42 26 52 	mov	&0x5226,r12	;0x5226
    5bd2:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    5bd6:	1c 42 24 52 	mov	&0x5224,r12	;0x5224
    5bda:	84 4c e6 ff 	mov	r12,	-26(r4)	; 0xffe6
    5bde:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5be2:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    5be6:	1f 44 ec ff 	mov	-20(r4),r15	;0xffffffec
    5bea:	3e 40 06 00 	mov	#6,	r14	;
    5bee:	b0 12 1c 63 	call	#25372		;#0x631c
    5bf2:	1c 44 ea ff 	mov	-22(r4),r12	;0xffffffea
    5bf6:	8f 4c 18 46 	mov	r12,	17944(r15); 0x4618
    5bfa:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    5bfe:	8f 4c 16 46 	mov	r12,	17942(r15); 0x4616
    5c02:	1c 44 e6 ff 	mov	-26(r4),r12	;0xffffffe6
    5c06:	8f 4c 14 46 	mov	r12,	17940(r15); 0x4614
    5c0a:	00 3c       	jmp	$+2      	;abs 0x5c0c
    5c0c:	1f 44 fc ff 	mov	-4(r4),	r15	;
    5c10:	3e 40 06 00 	mov	#6,	r14	;
    5c14:	b0 12 1c 63 	call	#25372		;#0x631c
    5c18:	1e 44 fa ff 	mov	-6(r4),	r14	;
    5c1c:	8f 4e 18 46 	mov	r14,	17944(r15); 0x4618
    5c20:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    5c24:	8f 4e 16 46 	mov	r14,	17942(r15); 0x4616
    5c28:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfffffff6
    5c2c:	8f 4e 14 46 	mov	r14,	17940(r15); 0x4614
    5c30:	1e 42 20 52 	mov	&0x5220,r14	;0x5220
    5c34:	82 4e 2a 52 	mov	r14,	&0x522a	;
    5c38:	1e 44 fe ff 	mov	-2(r4),	r14	;
    5c3c:	1e 53       	inc	r14		;
    5c3e:	84 4e fe ff 	mov	r14,	-2(r4)	; 0xfffe
    5c42:	3e 40 14 52 	mov	#21012,	r14	;#0x5214
    5c46:	0f 44       	mov	r4,	r15	;
    5c48:	2f 83       	decd	r15		;
    5c4a:	2d 43       	mov	#2,	r13	;r3 As==10
    5c4c:	b0 12 0c 60 	call	#24588		;#0x600c
    5c50:	3f 40 8a 45 	mov	#17802,	r15	;#0x458a
    5c54:	b0 12 ac 5e 	call	#24236		;#0x5eac
    5c58:	31 50 1a 00 	add	#26,	r1	;#0x001a
    5c5c:	34 41       	pop	r4		;
    5c5e:	30 41       	ret			

00005c60 <task_append_compressed>:
    5c60:	04 12       	push	r4		;
    5c62:	04 41       	mov	r1,	r4	;
    5c64:	31 80 06 00 	sub	#6,	r1	;
    5c68:	1c 42 0a 46 	mov	&0x460a,r12	;0x460a
    5c6c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5c70:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5c74:	1d 42 2a 52 	mov	&0x522a,r13	;0x522a
    5c78:	3e 40 06 00 	mov	#6,	r14	;
    5c7c:	0f 4c       	mov	r12,	r15	;
    5c7e:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    5c82:	b0 12 1c 63 	call	#25372		;#0x631c
    5c86:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5c8a:	8f 4c 2c 52 	mov	r12,	21036(r15); 0x522c
    5c8e:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5c92:	1c 53       	inc	r12		;
    5c94:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5c98:	3c 90 40 00 	cmp	#64,	r12	;#0x0040
    5c9c:	0d 20       	jnz	$+28     	;abs 0x5cb8
    5c9e:	00 3c       	jmp	$+2      	;abs 0x5ca0
    5ca0:	3e 40 0a 46 	mov	#17930,	r14	;#0x460a
    5ca4:	0f 44       	mov	r4,	r15	;
    5ca6:	2f 83       	decd	r15		;
    5ca8:	2d 43       	mov	#2,	r13	;r3 As==10
    5caa:	b0 12 0c 60 	call	#24588		;#0x600c
    5cae:	3f 40 b4 45 	mov	#17844,	r15	;#0x45b4
    5cb2:	b0 12 ac 5e 	call	#24236		;#0x5eac
    5cb6:	0c 3c       	jmp	$+26     	;abs 0x5cd0
    5cb8:	3e 40 0a 46 	mov	#17930,	r14	;#0x460a
    5cbc:	0f 44       	mov	r4,	r15	;
    5cbe:	2f 83       	decd	r15		;
    5cc0:	2d 43       	mov	#2,	r13	;r3 As==10
    5cc2:	b0 12 0c 60 	call	#24588		;#0x600c
    5cc6:	3f 40 64 44 	mov	#17508,	r15	;#0x4464
    5cca:	b0 12 ac 5e 	call	#24236		;#0x5eac
    5cce:	00 3c       	jmp	$+2      	;abs 0x5cd0
    5cd0:	31 50 06 00 	add	#6,	r1	;
    5cd4:	34 41       	pop	r4		;
    5cd6:	30 41       	ret			

00005cd8 <task_print>:
    5cd8:	04 12       	push	r4		;
    5cda:	04 41       	mov	r1,	r4	;
    5cdc:	21 82       	sub	#4,	r1	;r2 As==10
    5cde:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    5ce2:	00 3c       	jmp	$+2      	;abs 0x5ce4
    5ce4:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5ce8:	3c 90 40 00 	cmp	#64,	r12	;#0x0040
    5cec:	1f 2c       	jc	$+64     	;abs 0x5d2c
    5cee:	00 3c       	jmp	$+2      	;abs 0x5cf0
    5cf0:	1f 44 fe ff 	mov	-2(r4),	r15	;
    5cf4:	3e 40 06 00 	mov	#6,	r14	;
    5cf8:	b0 12 1c 63 	call	#25372		;#0x631c
    5cfc:	1e 4f 2c 52 	mov	21036(r15),r14	;0x0522c
    5d00:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    5d04:	1e 44 fe ff 	mov	-2(r4),	r14	;
    5d08:	0e 93       	cmp	#0,	r14	;r3 As==00
    5d0a:	09 24       	jz	$+20     	;abs 0x5d1e
    5d0c:	00 3c       	jmp	$+2      	;abs 0x5d0e
    5d0e:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5d12:	1c 53       	inc	r12		;
    5d14:	3c b0 07 00 	bit	#7,	r12	;
    5d18:	02 20       	jnz	$+6      	;abs 0x5d1e
    5d1a:	00 3c       	jmp	$+2      	;abs 0x5d1c
    5d1c:	00 3c       	jmp	$+2      	;abs 0x5d1e
    5d1e:	00 3c       	jmp	$+2      	;abs 0x5d20
    5d20:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5d24:	1c 53       	inc	r12		;
    5d26:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5d2a:	dc 3f       	jmp	$-70     	;abs 0x5ce4
    5d2c:	3f 40 de 45 	mov	#17886,	r15	;#0x45de
    5d30:	b0 12 ac 5e 	call	#24236		;#0x5eac
    5d34:	21 52       	add	#4,	r1	;r2 As==10
    5d36:	34 41       	pop	r4		;
    5d38:	30 41       	ret			
	...

00005d3c <task_done>:
    5d3c:	04 12       	push	r4		;
    5d3e:	04 41       	mov	r1,	r4	;
    5d40:	21 82       	sub	#4,	r1	;r2 As==10
    5d42:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    5d46:	b4 40 f8 01 	mov	#504,	-2(r4)	;#0x01f8, 0xfffe
    5d4a:	fe ff 
    5d4c:	b4 40 fa 01 	mov	#506,	-2(r4)	;#0x01fa, 0xfffe
    5d50:	fe ff 
    5d52:	b4 40 fc 01 	mov	#508,	-2(r4)	;#0x01fc, 0xfffe
    5d56:	fe ff 
    5d58:	b4 40 fe 01 	mov	#510,	-2(r4)	;#0x01fe, 0xfffe
    5d5c:	fe ff 
    5d5e:	b4 40 00 02 	mov	#512,	-2(r4)	;#0x0200, 0xfffe
    5d62:	fe ff 
    5d64:	b4 40 02 02 	mov	#514,	-2(r4)	;#0x0202, 0xfffe
    5d68:	fe ff 
    5d6a:	b4 40 02 0e 	mov	#3586,	-2(r4)	;#0x0e02, 0xfffe
    5d6e:	fe ff 
    5d70:	b4 40 04 0e 	mov	#3588,	-2(r4)	;#0x0e04, 0xfffe
    5d74:	fe ff 
    5d76:	b4 40 06 0e 	mov	#3590,	-2(r4)	;#0x0e06, 0xfffe
    5d7a:	fe ff 
    5d7c:	b4 40 08 0e 	mov	#3592,	-2(r4)	;#0x0e08, 0xfffe
    5d80:	fe ff 
    5d82:	b4 40 0a 0e 	mov	#3594,	-2(r4)	;#0x0e0a, 0xfffe
    5d86:	fe ff 
    5d88:	b4 40 0c 0e 	mov	#3596,	-2(r4)	;#0x0e0c, 0xfffe
    5d8c:	fe ff 
    5d8e:	b4 40 0e 0e 	mov	#3598,	-2(r4)	;#0x0e0e, 0xfffe
    5d92:	fe ff 
    5d94:	b4 40 14 0e 	mov	#3604,	-2(r4)	;#0x0e14, 0xfffe
    5d98:	fe ff 
    5d9a:	b4 40 94 0f 	mov	#3988,	-2(r4)	;#0x0f94, 0xfffe
    5d9e:	fe ff 
    5da0:	b4 40 9a 0f 	mov	#3994,	-2(r4)	;#0x0f9a, 0xfffe
    5da4:	fe ff 
    5da6:	b4 40 9c 0f 	mov	#3996,	-2(r4)	;#0x0f9c, 0xfffe
    5daa:	fe ff 
    5dac:	b4 40 de 0f 	mov	#4062,	-2(r4)	;#0x0fde, 0xfffe
    5db0:	fe ff 
    5db2:	b4 40 e0 0f 	mov	#4064,	-2(r4)	;#0x0fe0, 0xfffe
    5db6:	fe ff 
    5db8:	21 52       	add	#4,	r1	;r2 As==10
    5dba:	34 41       	pop	r4		;
    5dbc:	30 41       	ret			
	...

00005dc0 <_entry_task>:
    5dc0:	04 12       	push	r4		;
    5dc2:	04 41       	mov	r1,	r4	;
    5dc4:	3f 40 10 44 	mov	#17424,	r15	;#0x4410
    5dc8:	b0 12 ac 5e 	call	#24236		;#0x5eac
    5dcc:	34 41       	pop	r4		;
    5dce:	30 41       	ret			

00005dd0 <_init>:
    5dd0:	04 12       	push	r4		;
    5dd2:	04 41       	mov	r1,	r4	;
    5dd4:	b0 12 44 56 	call	#22084		;#0x5644
    5dd8:	34 41       	pop	r4		;
    5dda:	30 41       	ret			

00005ddc <acquire_sample>:
    5ddc:	04 12       	push	r4		;
    5dde:	04 41       	mov	r1,	r4	;
    5de0:	31 80 06 00 	sub	#6,	r1	;
    5de4:	0c 4f       	mov	r15,	r12	;
    5de6:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    5dea:	1f 53       	inc	r15		;
    5dec:	3f f0 03 00 	and	#3,	r15	;
    5df0:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    5df4:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5df8:	31 50 06 00 	add	#6,	r1	;
    5dfc:	34 41       	pop	r4		;
    5dfe:	30 41       	ret			

00005e00 <task_prologue>:
    5e00:	04 12       	push	r4		;
    5e02:	04 41       	mov	r1,	r4	;
    5e04:	31 80 06 00 	sub	#6,	r1	;
    5e08:	1c 42 f4 53 	mov	&0x53f4,r12	;0x53f4
    5e0c:	1c 4c 04 00 	mov	4(r12),	r12	;
    5e10:	2c 4c       	mov	@r12,	r12	;
    5e12:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5e16:	1c 42 f4 53 	mov	&0x53f4,r12	;0x53f4
    5e1a:	1c 4c 02 00 	mov	2(r12),	r12	;
    5e1e:	1d 44 fe ff 	mov	-2(r4),	r13	;
    5e22:	1d 4d 08 00 	mov	8(r13),	r13	;
    5e26:	0c 9d       	cmp	r13,	r12	;
    5e28:	3a 24       	jz	$+118    	;abs 0x5e9e
    5e2a:	00 3c       	jmp	$+2      	;abs 0x5e2c
    5e2c:	00 3c       	jmp	$+2      	;abs 0x5e2e
    5e2e:	1c 42 d6 53 	mov	&0x53d6,r12	;0x53d6
    5e32:	1d 42 d8 53 	mov	&0x53d8,r13	;0x53d8
    5e36:	0c 9d       	cmp	r13,	r12	;
    5e38:	25 2c       	jc	$+76     	;abs 0x5e84
    5e3a:	00 3c       	jmp	$+2      	;abs 0x5e3c
    5e3c:	1c 42 d6 53 	mov	&0x53d6,r12	;0x53d6
    5e40:	0c 5c       	rla	r12		;
    5e42:	1c 4c f8 53 	mov	21496(r12),r12	;0x053f8
    5e46:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5e4a:	0c 93       	cmp	#0,	r12	;r3 As==00
    5e4c:	15 24       	jz	$+44     	;abs 0x5e78
    5e4e:	00 3c       	jmp	$+2      	;abs 0x5e50
    5e50:	1c 42 d6 53 	mov	&0x53d6,r12	;0x53d6
    5e54:	0c 5c       	rla	r12		;
    5e56:	1c 4c 3a 54 	mov	21562(r12),r12	;0x0543a
    5e5a:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5e5e:	1f 44 fc ff 	mov	-4(r4),	r15	;
    5e62:	1c 42 d6 53 	mov	&0x53d6,r12	;0x53d6
    5e66:	0c 5c       	rla	r12		;
    5e68:	3c 50 7c 54 	add	#21628,	r12	;#0x547c
    5e6c:	1d 44 fa ff 	mov	-6(r4),	r13	;
    5e70:	0e 4c       	mov	r12,	r14	;
    5e72:	b0 12 78 62 	call	#25208		;#0x6278
    5e76:	00 3c       	jmp	$+2      	;abs 0x5e78
    5e78:	1c 42 d6 53 	mov	&0x53d6,r12	;0x53d6
    5e7c:	1c 53       	inc	r12		;
    5e7e:	82 4c d6 53 	mov	r12,	&0x53d6	;
    5e82:	d5 3f       	jmp	$-84     	;abs 0x5e2e
    5e84:	82 43 d8 53 	mov	#0,	&0x53d8	;r3 As==00
    5e88:	82 43 d6 53 	mov	#0,	&0x53d6	;r3 As==00
    5e8c:	1c 42 f4 53 	mov	&0x53f4,r12	;0x53f4
    5e90:	1c 4c 02 00 	mov	2(r12),	r12	;
    5e94:	1d 44 fe ff 	mov	-2(r4),	r13	;
    5e98:	8d 4c 08 00 	mov	r12,	8(r13)	;
    5e9c:	03 3c       	jmp	$+8      	;abs 0x5ea4
    5e9e:	82 43 d8 53 	mov	#0,	&0x53d8	;r3 As==00
    5ea2:	00 3c       	jmp	$+2      	;abs 0x5ea4
    5ea4:	31 50 06 00 	add	#6,	r1	;
    5ea8:	34 41       	pop	r4		;
    5eaa:	30 41       	ret			

00005eac <transition_to>:
    5eac:	04 12       	push	r4		;
    5eae:	04 41       	mov	r1,	r4	;
    5eb0:	31 80 0a 00 	sub	#10,	r1	;#0x000a
    5eb4:	0c 4f       	mov	r15,	r12	;
    5eb6:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    5eba:	1f 42 f4 53 	mov	&0x53f4,r15	;0x53f4
    5ebe:	3d 40 ee 53 	mov	#21486,	r13	;#0x53ee
    5ec2:	3e 40 e2 53 	mov	#21474,	r14	;#0x53e2
    5ec6:	0f 9d       	cmp	r13,	r15	;
    5ec8:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5ecc:	84 4d f8 ff 	mov	r13,	-8(r4)	; 0xfff8
    5ed0:	84 4e f6 ff 	mov	r14,	-10(r4)	; 0xfff6
    5ed4:	04 24       	jz	$+10     	;abs 0x5ede
    5ed6:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    5eda:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    5ede:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    5ee2:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5ee6:	1d 44 fe ff 	mov	-2(r4),	r13	;
    5eea:	8c 4d 00 00 	mov	r13,	0(r12)	;
    5eee:	1c 42 f4 53 	mov	&0x53f4,r12	;0x53f4
    5ef2:	1c 4c 02 00 	mov	2(r12),	r12	;
    5ef6:	1c 53       	inc	r12		;
    5ef8:	1d 44 fc ff 	mov	-4(r4),	r13	;
    5efc:	8d 4c 02 00 	mov	r12,	2(r13)	;
    5f00:	1c 42 f4 53 	mov	&0x53f4,r12	;0x53f4
    5f04:	1c 4c 02 00 	mov	2(r12),	r12	;
    5f08:	1d 44 fc ff 	mov	-4(r4),	r13	;
    5f0c:	1d 4d 04 00 	mov	4(r13),	r13	;
    5f10:	8d 4c 02 00 	mov	r12,	2(r13)	;
    5f14:	1c 42 f4 53 	mov	&0x53f4,r12	;0x53f4
    5f18:	2c 4c       	mov	@r12,	r12	;
    5f1a:	1d 44 fc ff 	mov	-4(r4),	r13	;
    5f1e:	1d 4d 04 00 	mov	4(r13),	r13	;
    5f22:	8d 4c 00 00 	mov	r12,	0(r13)	;
    5f26:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5f2a:	82 4c f4 53 	mov	r12,	&0x53f4	;
    5f2e:	b0 12 00 5e 	call	#24064		;#0x5e00
    5f32:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f36:	2c 4c       	mov	@r12,	r12	;
    5f38:	31 40 00 24 	mov	#9216,	r1	;#0x2400
    5f3c:	00 4c       	br	r12		;
    5f3e:	31 50 0a 00 	add	#10,	r1	;#0x000a
    5f42:	34 41       	pop	r4		;
    5f44:	30 41       	ret			
	...

00005f48 <chan_in>:
    5f48:	04 12       	push	r4		;
    5f4a:	04 41       	mov	r1,	r4	;
    5f4c:	0b 12       	push	r11		;
    5f4e:	0a 12       	push	r10		;
    5f50:	31 80 18 00 	sub	#24,	r1	;#0x0018
    5f54:	0c 4d       	mov	r13,	r12	;
    5f56:	0b 4e       	mov	r14,	r11	;
    5f58:	0a 4f       	mov	r15,	r10	;
    5f5a:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    5f5e:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    5f62:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    5f66:	84 43 f2 ff 	mov	#0,	-14(r4)	;r3 As==00, 0xfff2
    5f6a:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    5f6e:	2d 53       	incd	r13		;
    5f70:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    5f74:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    5f78:	84 4d ec ff 	mov	r13,	-20(r4)	; 0xffec
    5f7c:	1d 44 ee ff 	mov	-18(r4),r13	;0xffffffee
    5f80:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfffffff6
    5f84:	0d 5e       	add	r14,	r13	;
    5f86:	84 4d ea ff 	mov	r13,	-22(r4)	; 0xffea
    5f8a:	84 4d f0 ff 	mov	r13,	-16(r4)	; 0xfff0
    5f8e:	0f 4d       	mov	r13,	r15	;
    5f90:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    5f94:	84 4b e6 ff 	mov	r11,	-26(r4)	; 0xffe6
    5f98:	84 4a e4 ff 	mov	r10,	-28(r4)	; 0xffe4
    5f9c:	31 50 18 00 	add	#24,	r1	;#0x0018
    5fa0:	3a 41       	pop	r10		;
    5fa2:	3b 41       	pop	r11		;
    5fa4:	34 41       	pop	r4		;
    5fa6:	30 41       	ret			

00005fa8 <chan_out>:
    5fa8:	04 12       	push	r4		;
    5faa:	04 41       	mov	r1,	r4	;
    5fac:	31 80 14 00 	sub	#20,	r1	;#0x0014
    5fb0:	1c 44 0a 00 	mov	10(r4),	r12	;0x0000a
    5fb4:	1d 44 08 00 	mov	8(r4),	r13	;
    5fb8:	1e 44 06 00 	mov	6(r4),	r14	;
    5fbc:	1f 44 04 00 	mov	4(r4),	r15	;
    5fc0:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    5fc4:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    5fc8:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    5fcc:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5fd0:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5fd4:	2c 53       	incd	r12		;
    5fd6:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    5fda:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5fde:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    5fe2:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    5fe6:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    5fea:	0c 5d       	add	r13,	r12	;
    5fec:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    5ff0:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    5ff4:	1e 44 fe ff 	mov	-2(r4),	r14	;
    5ff8:	1d 44 fc ff 	mov	-4(r4),	r13	;
    5ffc:	0f 4c       	mov	r12,	r15	;
    5ffe:	b0 12 78 62 	call	#25208		;#0x6278
    6002:	31 50 14 00 	add	#20,	r1	;#0x0014
    6006:	34 41       	pop	r4		;
    6008:	30 41       	ret			
	...

0000600c <write_to_gbuf>:
    600c:	04 12       	push	r4		;
    600e:	04 41       	mov	r1,	r4	;
    6010:	0b 12       	push	r11		;
    6012:	0a 12       	push	r10		;
    6014:	31 80 12 00 	sub	#18,	r1	;#0x0012
    6018:	0c 4d       	mov	r13,	r12	;
    601a:	0b 4e       	mov	r14,	r11	;
    601c:	0a 4f       	mov	r15,	r10	;
    601e:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    6022:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    6026:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    602a:	1d 42 d8 53 	mov	&0x53d8,r13	;0x53d8
    602e:	0d 5d       	rla	r13		;
    6030:	3d 50 7c 54 	add	#21628,	r13	;#0x547c
    6034:	1e 44 fa ff 	mov	-6(r4),	r14	;
    6038:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfffffff6
    603c:	84 4f f0 ff 	mov	r15,	-16(r4)	; 0xfff0
    6040:	0f 4d       	mov	r13,	r15	;
    6042:	1d 44 f0 ff 	mov	-16(r4),r13	;0xfffffff0
    6046:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    604a:	84 4b ec ff 	mov	r11,	-20(r4)	; 0xffec
    604e:	84 4a ea ff 	mov	r10,	-22(r4)	; 0xffea
    6052:	b0 12 78 62 	call	#25208		;#0x6278
    6056:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    605a:	1d 42 d8 53 	mov	&0x53d8,r13	;0x53d8
    605e:	0d 5d       	rla	r13		;
    6060:	8d 4c 3a 54 	mov	r12,	21562(r13); 0x543a
    6064:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6068:	1d 42 d8 53 	mov	&0x53d8,r13	;0x53d8
    606c:	0d 5d       	rla	r13		;
    606e:	8d 4c f8 53 	mov	r12,	21496(r13); 0x53f8
    6072:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6076:	3c 90 03 00 	cmp	#3,	r12	;
    607a:	2a 28       	jnc	$+86     	;abs 0x60d0
    607c:	00 3c       	jmp	$+2      	;abs 0x607e
    607e:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6082:	3c 53       	add	#-1,	r12	;r3 As==11
    6084:	12 c3       	clrc			
    6086:	0c 10       	rrc	r12		;
    6088:	1c 53       	inc	r12		;
    608a:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    608e:	94 43 f2 ff 	mov	#1,	-14(r4)	;r3 As==01, 0xfff2
    6092:	00 3c       	jmp	$+2      	;abs 0x6094
    6094:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6098:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    609c:	0c 9d       	cmp	r13,	r12	;
    609e:	10 2c       	jc	$+34     	;abs 0x60c0
    60a0:	00 3c       	jmp	$+2      	;abs 0x60a2
    60a2:	1c 42 d8 53 	mov	&0x53d8,r12	;0x53d8
    60a6:	1d 44 f2 ff 	mov	-14(r4),r13	;0xfffffff2
    60aa:	0c 5d       	add	r13,	r12	;
    60ac:	0c 5c       	rla	r12		;
    60ae:	8c 43 f8 53 	mov	#0,	21496(r12);r3 As==00, 0x53f8
    60b2:	00 3c       	jmp	$+2      	;abs 0x60b4
    60b4:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    60b8:	1c 53       	inc	r12		;
    60ba:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    60be:	ea 3f       	jmp	$-42     	;abs 0x6094
    60c0:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    60c4:	1d 42 d8 53 	mov	&0x53d8,r13	;0x53d8
    60c8:	0d 5c       	add	r12,	r13	;
    60ca:	82 4d d8 53 	mov	r13,	&0x53d8	;
    60ce:	06 3c       	jmp	$+14     	;abs 0x60dc
    60d0:	1c 42 d8 53 	mov	&0x53d8,r12	;0x53d8
    60d4:	1c 53       	inc	r12		;
    60d6:	82 4c d8 53 	mov	r12,	&0x53d8	;
    60da:	00 3c       	jmp	$+2      	;abs 0x60dc
    60dc:	31 50 12 00 	add	#18,	r1	;#0x0012
    60e0:	3a 41       	pop	r10		;
    60e2:	3b 41       	pop	r11		;
    60e4:	34 41       	pop	r4		;
    60e6:	30 41       	ret			

000060e8 <chan_out_gbuf>:
    60e8:	04 12       	push	r4		;
    60ea:	04 41       	mov	r1,	r4	;
    60ec:	31 80 18 00 	sub	#24,	r1	;#0x0018
    60f0:	1c 44 0a 00 	mov	10(r4),	r12	;0x0000a
    60f4:	1d 44 08 00 	mov	8(r4),	r13	;
    60f8:	1e 44 06 00 	mov	6(r4),	r14	;
    60fc:	1f 44 04 00 	mov	4(r4),	r15	;
    6100:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6104:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    6108:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    610c:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    6110:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6114:	2c 53       	incd	r12		;
    6116:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    611a:	1c 44 fa ff 	mov	-6(r4),	r12	;
    611e:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    6122:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    6126:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    612a:	0c 5d       	add	r13,	r12	;
    612c:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    6130:	1c 42 d8 53 	mov	&0x53d8,r12	;0x53d8
    6134:	0c 5c       	rla	r12		;
    6136:	3c 50 7c 54 	add	#21628,	r12	;#0x547c
    613a:	1e 44 fe ff 	mov	-2(r4),	r14	;
    613e:	1d 44 fc ff 	mov	-4(r4),	r13	;
    6142:	0f 4c       	mov	r12,	r15	;
    6144:	b0 12 78 62 	call	#25208		;#0x6278
    6148:	1c 44 fc ff 	mov	-4(r4),	r12	;
    614c:	1d 42 d8 53 	mov	&0x53d8,r13	;0x53d8
    6150:	0d 5d       	rla	r13		;
    6152:	8d 4c 3a 54 	mov	r12,	21562(r13); 0x543a
    6156:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    615a:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    615e:	1d 42 d8 53 	mov	&0x53d8,r13	;0x53d8
    6162:	0d 5d       	rla	r13		;
    6164:	8d 4c f8 53 	mov	r12,	21496(r13); 0x53f8
    6168:	1c 44 fc ff 	mov	-4(r4),	r12	;
    616c:	3c 90 03 00 	cmp	#3,	r12	;
    6170:	2a 28       	jnc	$+86     	;abs 0x61c6
    6172:	00 3c       	jmp	$+2      	;abs 0x6174
    6174:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6178:	3c 53       	add	#-1,	r12	;r3 As==11
    617a:	12 c3       	clrc			
    617c:	0c 10       	rrc	r12		;
    617e:	1c 53       	inc	r12		;
    6180:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    6184:	94 43 e8 ff 	mov	#1,	-24(r4)	;r3 As==01, 0xffe8
    6188:	00 3c       	jmp	$+2      	;abs 0x618a
    618a:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    618e:	1d 44 ea ff 	mov	-22(r4),r13	;0xffffffea
    6192:	0c 9d       	cmp	r13,	r12	;
    6194:	10 2c       	jc	$+34     	;abs 0x61b6
    6196:	00 3c       	jmp	$+2      	;abs 0x6198
    6198:	1c 42 d8 53 	mov	&0x53d8,r12	;0x53d8
    619c:	1d 44 e8 ff 	mov	-24(r4),r13	;0xffffffe8
    61a0:	0c 5d       	add	r13,	r12	;
    61a2:	0c 5c       	rla	r12		;
    61a4:	8c 43 f8 53 	mov	#0,	21496(r12);r3 As==00, 0x53f8
    61a8:	00 3c       	jmp	$+2      	;abs 0x61aa
    61aa:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    61ae:	1c 53       	inc	r12		;
    61b0:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    61b4:	ea 3f       	jmp	$-42     	;abs 0x618a
    61b6:	1c 44 ea ff 	mov	-22(r4),r12	;0xffffffea
    61ba:	1d 42 d8 53 	mov	&0x53d8,r13	;0x53d8
    61be:	0d 5c       	add	r12,	r13	;
    61c0:	82 4d d8 53 	mov	r13,	&0x53d8	;
    61c4:	06 3c       	jmp	$+14     	;abs 0x61d2
    61c6:	1c 42 d8 53 	mov	&0x53d8,r12	;0x53d8
    61ca:	1c 53       	inc	r12		;
    61cc:	82 4c d8 53 	mov	r12,	&0x53d8	;
    61d0:	00 3c       	jmp	$+2      	;abs 0x61d2
    61d2:	31 50 18 00 	add	#24,	r1	;#0x0018
    61d6:	34 41       	pop	r4		;
    61d8:	30 41       	ret			
	...

000061dc <main>:
    61dc:	04 12       	push	r4		;
    61de:	04 41       	mov	r1,	r4	;
    61e0:	21 83       	decd	r1		;
    61e2:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    61e6:	b0 12 d0 5d 	call	#24016		;#0x5dd0
    61ea:	1c 42 f6 53 	mov	&0x53f6,r12	;0x53f6
    61ee:	1c 53       	inc	r12		;
    61f0:	82 4c f6 53 	mov	r12,	&0x53f6	;
    61f4:	b0 12 00 5e 	call	#24064		;#0x5e00
    61f8:	1c 42 f4 53 	mov	&0x53f4,r12	;0x53f4
    61fc:	2c 4c       	mov	@r12,	r12	;
    61fe:	2c 4c       	mov	@r12,	r12	;
    6200:	00 4c       	br	r12		;
    6202:	0f 43       	clr	r15		;
    6204:	21 53       	incd	r1		;
    6206:	34 41       	pop	r4		;
    6208:	30 41       	ret			
	...

0000620c <msp_clock_setup>:
    620c:	04 12       	push	r4		;
    620e:	04 41       	mov	r1,	r4	;
    6210:	f2 40 a5 ff 	mov.b	#65445,	&0x0161	;#0xffa5
    6214:	61 01 
    6216:	b2 40 0c 00 	mov	#12,	&0x0162	;#0x000c
    621a:	62 01 
    621c:	b2 40 33 00 	mov	#51,	&0x0164	;#0x0033
    6220:	64 01 
    6222:	82 43 66 01 	mov	#0,	&0x0166	;r3 As==00
    6226:	34 41       	pop	r4		;
    6228:	30 41       	ret			
	...

0000622c <msp_watchdog_enable>:
    622c:	04 12       	push	r4		;
    622e:	04 41       	mov	r1,	r4	;
    6230:	21 83       	decd	r1		;
    6232:	4c 4f       	mov.b	r15,	r12	;
    6234:	c4 4c ff ff 	mov.b	r12,	-1(r4)	; 0xffff
    6238:	5f 44 ff ff 	mov.b	-1(r4),	r15	;
    623c:	3f d0 08 5a 	bis	#23048,	r15	;#0x5a08
    6240:	82 4f 5c 01 	mov	r15,	&0x015c	;
    6244:	5c 44 ff ff 	mov.b	-1(r4),	r12	;
    6248:	c2 4c 20 1c 	mov.b	r12,	&0x1c20	;
    624c:	21 53       	incd	r1		;
    624e:	34 41       	pop	r4		;
    6250:	30 41       	ret			
	...

00006254 <msp_watchdog_disable>:
    6254:	04 12       	push	r4		;
    6256:	04 41       	mov	r1,	r4	;
    6258:	b2 40 80 5a 	mov	#23168,	&0x015c	;#0x5a80
    625c:	5c 01 
    625e:	34 41       	pop	r4		;
    6260:	30 41       	ret			
	...

00006264 <msp_watchdog_kick>:
    6264:	04 12       	push	r4		;
    6266:	04 41       	mov	r1,	r4	;
    6268:	5c 42 20 1c 	mov.b	&0x1c20,r12	;0x1c20
    626c:	3c d0 08 5a 	bis	#23048,	r12	;#0x5a08
    6270:	82 4c 5c 01 	mov	r12,	&0x015c	;
    6274:	34 41       	pop	r4		;
    6276:	30 41       	ret			

00006278 <memcpy>:
    6278:	04 12       	push	r4		;
    627a:	04 41       	mov	r1,	r4	;
    627c:	0b 12       	push	r11		;
    627e:	0a 12       	push	r10		;
    6280:	31 80 0e 00 	sub	#14,	r1	;#0x000e
    6284:	0c 4d       	mov	r13,	r12	;
    6286:	0b 4e       	mov	r14,	r11	;
    6288:	0a 4f       	mov	r15,	r10	;
    628a:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    628e:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    6292:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    6296:	84 43 f4 ff 	mov	#0,	-12(r4)	;r3 As==00, 0xfff4
    629a:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    629e:	84 4b f0 ff 	mov	r11,	-16(r4)	; 0xfff0
    62a2:	84 4a ee ff 	mov	r10,	-18(r4)	; 0xffee
    62a6:	00 3c       	jmp	$+2      	;abs 0x62a8
    62a8:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    62ac:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    62b0:	0c 9d       	cmp	r13,	r12	;
    62b2:	12 2c       	jc	$+38     	;abs 0x62d8
    62b4:	00 3c       	jmp	$+2      	;abs 0x62b6
    62b6:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    62ba:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    62be:	0c 5d       	add	r13,	r12	;
    62c0:	6e 4c       	mov.b	@r12,	r14	;
    62c2:	1c 44 fa ff 	mov	-6(r4),	r12	;
    62c6:	0c 5d       	add	r13,	r12	;
    62c8:	cc 4e 00 00 	mov.b	r14,	0(r12)	;
    62cc:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    62d0:	1c 53       	inc	r12		;
    62d2:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    62d6:	e8 3f       	jmp	$-46     	;abs 0x62a8
    62d8:	1f 44 fa ff 	mov	-6(r4),	r15	;
    62dc:	31 50 0e 00 	add	#14,	r1	;#0x000e
    62e0:	3a 41       	pop	r10		;
    62e2:	3b 41       	pop	r11		;
    62e4:	34 41       	pop	r4		;
    62e6:	30 41       	ret			

000062e8 <msp_rand>:
    62e8:	04 12       	push	r4		;
    62ea:	04 41       	mov	r1,	r4	;
    62ec:	1f 42 be 54 	mov	&0x54be,r15	;0x54be
    62f0:	3e 40 6d 4e 	mov	#20077,	r14	;#0x4e6d
    62f4:	b0 12 1c 63 	call	#25372		;#0x631c
    62f8:	3f 50 39 30 	add	#12345,	r15	;#0x3039
    62fc:	82 4f be 54 	mov	r15,	&0x54be	;
    6300:	1e 42 be 54 	mov	&0x54be,r14	;0x54be
    6304:	12 c3       	clrc			
    6306:	0e 10       	rrc	r14		;
    6308:	0e 11       	rra	r14		;
    630a:	0e 11       	rra	r14		;
    630c:	0e 11       	rra	r14		;
    630e:	0e 11       	rra	r14		;
    6310:	0e 11       	rra	r14		;
    6312:	0e 11       	rra	r14		;
    6314:	0e 11       	rra	r14		;
    6316:	0f 4e       	mov	r14,	r15	;
    6318:	34 41       	pop	r4		;
    631a:	30 41       	ret			

0000631c <__mulhi3hw_noint>:
    631c:	82 4f c0 04 	mov	r15,	&0x04c0	;
    6320:	82 4e c8 04 	mov	r14,	&0x04c8	;
    6324:	1f 42 ca 04 	mov	&0x04ca,r15	;0x04ca
    6328:	30 41       	ret			

0000632a <WISP_init>:
 *  @section    Considerations
 *      -# If preforming a 'sleep_till_full_power' operation,
 */
void WISP_init(void) {

	WDTCTL = WDTPW | WDTHOLD;	// Stop watchdog timer
    632a:	b2 40 80 5a 	mov	#23168,	&0x015c	;#0x5a80
    632e:	5c 01 

	// Disable the GPIO power-on default high-impedance mode to activate previously configured port settings.
	PM5CTL0 &= ~LOCKLPM5;		// Lock LPM5.
    6330:	92 c3 30 01 	bic	#1,	&0x0130	;r3 As==01

	// Disable FRAM wait cycles to allow clock operation over 8MHz
	FRCTL0 = 0xA500 | ((1) << 4);  //FRCTLPW | NWAITS_1;
    6334:	b2 40 10 a5 	mov	#42256,	&0x0140	;#0xa510
    6338:	40 01 

	// Setup default IO
	setupDflt_IO();
    633a:	c2 43 02 02 	mov.b	#0,	&0x0202	;r3 As==00
    633e:	c2 43 03 02 	mov.b	#0,	&0x0203	;r3 As==00
    6342:	c2 43 22 02 	mov.b	#0,	&0x0222	;r3 As==00
    6346:	c2 43 23 02 	mov.b	#0,	&0x0223	;r3 As==00
    634a:	82 43 22 03 	mov	#0,	&0x0322	;r3 As==00
    634e:	c2 43 04 02 	mov.b	#0,	&0x0204	;r3 As==00
    6352:	b2 40 40 00 	mov	#64,	&0x0324	;#0x0040
    6356:	24 03 
    6358:	f2 40 80 ff 	mov.b	#65408,	&0x0205	;#0xff80
    635c:	05 02 
    635e:	c2 43 24 02 	mov.b	#0,	&0x0224	;r3 As==00
    6362:	f2 40 0d 00 	mov.b	#13,	&0x0225	;#0x000d
    6366:	25 02 

    PRXEOUT |= PIN_RX_EN; /** TODO: enable PIN_RX_EN only when needed in the future */
    6368:	f2 d0 20 00 	bis.b	#32,	&0x0223	;#0x0020
    636c:	23 02 

    CSCTL0_H = 0xA5;
    636e:	f2 40 a5 ff 	mov.b	#65445,	&0x0161	;#0xffa5
    6372:	61 01 
    CSCTL1 = DCORSEL + DCOFSEL_3; //8MHz
    6374:	b2 40 46 00 	mov	#70,	&0x0162	;#0x0046
    6378:	62 01 
    CSCTL2 = SELA_0 + SELM_3;
    637a:	b2 40 03 00 	mov	#3,	&0x0164	;
    637e:	64 01 
    CSCTL2 |= SELS_3;
    6380:	b2 d0 30 00 	bis	#48,	&0x0164	;#0x0030
    6384:	64 01 
    CSCTL3 = DIVA_0 + DIVS_0 + DIVM_0;
    6386:	82 43 66 01 	mov	#0,	&0x0166	;r3 As==00

    // Initialize Gen2 standard memory banks
    RWData.EPCBankPtr = &dataBuf[0];                    // volatile
    638a:	3c 40 30 1c 	mov	#7216,	r12	;#0x1c30
    638e:	bc 40 48 1c 	mov	#7240,	18(r12)	;#0x1c48, 0x0012
    6392:	12 00 
    RWData.RESBankPtr = (uint8_t*) MEM_MAP_INFOC_START; // nonvolatile
    6394:	bc 40 80 18 	mov	#6272,	16(r12)	;#0x1880, 0x0010
    6398:	10 00 
    RWData.TIDBankPtr = (uint8_t*) MEM_MAP_INFOB_START; // nonvolatile
    639a:	bc 40 00 19 	mov	#6400,	20(r12)	;#0x1900, 0x0014
    639e:	14 00 
    RWData.USRBankPtr = (uint8_t*) &usrBank[0];         // volatile
    63a0:	bc 40 be 1c 	mov	#7358,	22(r12)	;#0x1cbe, 0x0016
    63a4:	16 00 

    // Initialize rfid transaction mode
    rfid.isSelected = TRUE;
    63a6:	3d 40 22 1c 	mov	#7202,	r13	;#0x1c22
    63aa:	dd 43 0a 00 	mov.b	#1,	10(r13)	;r3 As==01, 0x000a
    rfid.abortOn    = 0x00;
    63ae:	cd 43 08 00 	mov.b	#0,	8(r13)	;r3 As==00

    isDoingLowPwrSleep = FALSE;
    63b2:	c2 43 58 1c 	mov.b	#0,	&0x1c58	;r3 As==00

    // Initialize callbacks to null in case user doesn't configure them
    RWData.akHook =0;
    63b6:	8c 43 08 00 	mov	#0,	8(r12)	;r3 As==00
    RWData.rdHook= 0;
    63ba:	8c 43 0e 00 	mov	#0,	14(r12)	;r3 As==00, 0x000e
    RWData.wrHook =0;
    63be:	8c 43 0a 00 	mov	#0,	10(r12)	;r3 As==00, 0x000a
    RWData.bwrHook=0;
    63c2:	8c 43 0c 00 	mov	#0,	12(r12)	;r3 As==00, 0x000c

    return;
}
    63c6:	30 41       	ret			

000063c8 <WISP_getDataBuffers>:

uint8_t usrBank[USRBANK_SIZE];

// Client access to RFID data buffers.
void WISP_getDataBuffers(WISP_dataStructInterface_t* clientStruct) {
	clientStruct->epcBuf=&dataBuf[2];
    63c8:	bc 40 4a 1c 	mov	#7242,	0(r12)	;#0x1c4a
    63cc:	00 00 
	clientStruct->writeBufPtr=&(RWData.wrData);
    63ce:	bc 40 32 1c 	mov	#7218,	2(r12)	;#0x1c32
    63d2:	02 00 
	clientStruct->blockWriteBufPtr=RWData.bwrBufPtr;
    63d4:	3d 40 30 1c 	mov	#7216,	r13	;#0x1c30
    63d8:	9c 4d 06 00 	mov	6(r13),	4(r12)	;
    63dc:	04 00 
	clientStruct->blockWriteSizePtr=&(RWData.bwrByteCount);
    63de:	2d 52       	add	#4,	r13	;r2 As==10
    63e0:	8c 4d 06 00 	mov	r13,	6(r12)	;
	clientStruct->readBufPtr=&usrBank[0];
    63e4:	bc 40 be 1c 	mov	#7358,	8(r12)	;#0x1cbe
    63e8:	08 00 
}
    63ea:	30 41       	ret			

000063ec <WISP_registerCallback_ACK>:

/**
 *  Registers a callback for ACK event
 */
void WISP_registerCallback_ACK(void(*fnPtr)(void)){
	RWData.akHook = fnPtr;
    63ec:	82 4c 38 1c 	mov	r12,	&0x1c38	;
}
    63f0:	30 41       	ret			

000063f2 <WISP_registerCallback_READ>:

/**
 * Registers a callback for READ event
 */
void WISP_registerCallback_READ(void(*fnPtr)(void)){
	RWData.rdHook = fnPtr;
    63f2:	82 4c 3e 1c 	mov	r12,	&0x1c3e	;
}
    63f6:	30 41       	ret			

000063f8 <WISP_registerCallback_WRITE>:

/**
 * Registers a callback for a WRITE event
 */
void WISP_registerCallback_WRITE(void(*fnPtr)(void)){
	RWData.wrHook = fnPtr;
    63f8:	82 4c 3a 1c 	mov	r12,	&0x1c3a	;
}
    63fc:	30 41       	ret			

000063fe <WISP_registerCallback_BLOCKWRITE>:

/**
 * Registers a callback for a BLOCKWRITE event
 */
void WISP_registerCallback_BLOCKWRITE(void(*fnPtr)(void)){
	RWData.bwrHook =fnPtr;
    63fe:	82 4c 3c 1c 	mov	r12,	&0x1c3c	;
}
    6402:	30 41       	ret			

00006404 <WISP_setMode>:

/**
 * Sets mode parameters for the RFID state machine
 */
void WISP_setMode(uint8_t mode) {
	rfid.mode = mode;
    6404:	c2 4c 29 1c 	mov.b	r12,	&0x1c29	;
}
    6408:	30 41       	ret			

0000640a <WISP_setAbortConditions>:
/**
 * Sets abort conditions for the RFID state machine. This dictates when
 * WISP comm code will abort and return control to client code.
 */
void WISP_setAbortConditions(uint8_t abortOn) {
	rfid.abortOn = abortOn;
    640a:	c2 4c 2a 1c 	mov.b	r12,	&0x1c2a	;
}
    640e:	30 41       	ret			

00006410 <memmove>:
    6410:	0a 15       	pushm	#1,	r10	;16-bit words
    6412:	0d 9c       	cmp	r12,	r13	;
    6414:	10 2c       	jc	$+34     	;abs 0x6436
    6416:	0b 4d       	mov	r13,	r11	;
    6418:	0b 5e       	add	r14,	r11	;
    641a:	0c 9b       	cmp	r11,	r12	;
    641c:	0c 2c       	jc	$+26     	;abs 0x6436
    641e:	0d 4e       	mov	r14,	r13	;
    6420:	3d 53       	add	#-1,	r13	;r3 As==11
    6422:	3d 93       	cmp	#-1,	r13	;r3 As==11
    6424:	13 24       	jz	$+40     	;abs 0x644c
    6426:	0f 4d       	mov	r13,	r15	;
    6428:	0f 8e       	sub	r14,	r15	;
    642a:	0f 5b       	add	r11,	r15	;
    642c:	0a 4c       	mov	r12,	r10	;
    642e:	0a 5d       	add	r13,	r10	;
    6430:	ea 4f 00 00 	mov.b	@r15,	0(r10)	;
    6434:	f5 3f       	jmp	$-20     	;abs 0x6420
    6436:	0f 43       	clr	r15		;
    6438:	0f 9e       	cmp	r14,	r15	;
    643a:	08 24       	jz	$+18     	;abs 0x644c
    643c:	0a 4d       	mov	r13,	r10	;
    643e:	0a 5f       	add	r15,	r10	;
    6440:	0b 4c       	mov	r12,	r11	;
    6442:	0b 5f       	add	r15,	r11	;
    6444:	eb 4a 00 00 	mov.b	@r10,	0(r11)	;
    6448:	1f 53       	inc	r15		;
    644a:	f6 3f       	jmp	$-18     	;abs 0x6438
    644c:	0a 17       	popm	#1,	r10	;16-bit words
    644e:	30 41       	ret			

00006450 <memset>:
    6450:	0f 4c       	mov	r12,	r15	;
    6452:	0e 5c       	add	r12,	r14	;
    6454:	0f 9e       	cmp	r14,	r15	;
    6456:	04 24       	jz	$+10     	;abs 0x6460
    6458:	cf 4d 00 00 	mov.b	r13,	0(r15)	;
    645c:	1f 53       	inc	r15		;
    645e:	fa 3f       	jmp	$-10     	;abs 0x6454
    6460:	30 41       	ret			

00006462 <__do_global_ctors_aux>:
    6462:	0a 15       	pushm	#1,	r10	;16-bit words
    6464:	1c 42 08 44 	mov	&0x4408,r12	;0x4408
    6468:	3c 93       	cmp	#-1,	r12	;r3 As==11
    646a:	08 24       	jz	$+18     	;abs 0x647c
    646c:	3a 40 08 44 	mov	#17416,	r10	;#0x4408
    6470:	8c 12       	call	r12		;
    6472:	3a 50 fe ff 	add	#65534,	r10	;#0xfffe
    6476:	2c 4a       	mov	@r10,	r12	;
    6478:	3c 93       	cmp	#-1,	r12	;r3 As==11
    647a:	fa 23       	jnz	$-10     	;abs 0x6470
    647c:	0a 17       	popm	#1,	r10	;16-bit words
    647e:	30 41       	ret			

00006480 <call___do_global_ctors_aux>:
    6480:	30 41       	ret			

00006482 <__msp430_init>:
    6482:	b0 12 c4 55 	call	#21956		;#0x55c4
    6486:	b0 12 62 64 	call	#25698		;#0x6462
    648a:	b0 12 04 55 	call	#21764		;#0x5504
    648e:	b0 12 f8 54 	call	#21752		;#0x54f8
    6492:	30 41       	ret			

00006494 <__msp430_fini>:
    6494:	b0 12 10 55 	call	#21776		;#0x5510
    6498:	b0 12 76 55 	call	#21878		;#0x5576
    649c:	30 41       	ret			

templog.out:     file format elf32-msp430


Disassembly of section __interrupt_vector_49:

0000fff0 <__interrupt_vector_49>:
    fff0:	b0 6d       	interrupt service routine at 0x6db0

Disassembly of section .text:

000055b0 <__crt0_start>:
    55b0:	31 40 00 24 	mov	#9216,	r1	;#0x2400

000055b4 <__crt0_init_bss>:
    55b4:	3c 40 04 1c 	mov	#7172,	r12	;#0x1c04
    55b8:	0d 43       	clr	r13		;
    55ba:	3e 40 2a 00 	mov	#42,	r14	;#0x002a
    55be:	b0 12 74 6e 	call	#28276		;#0x6e74

000055c2 <__crt0_movedata>:
    55c2:	3c 40 00 1c 	mov	#7168,	r12	;#0x1c00
    55c6:	3d 40 aa 55 	mov	#21930,	r13	;#0x55aa
    55ca:	0d 9c       	cmp	r12,	r13	;
    55cc:	04 24       	jz	$+10     	;abs 0x55d6
    55ce:	3e 40 04 00 	mov	#4,	r14	;
    55d2:	b0 12 34 6e 	call	#28212		;#0x6e34

000055d6 <__crt0_call_init_then_main>:
    55d6:	b0 12 a6 6e 	call	#28326		;#0x6ea6
    55da:	0c 43       	clr	r12		;
    55dc:	b0 12 b8 6b 	call	#27576		;#0x6bb8

000055e0 <_msp430_run_init_array>:
    55e0:	34 40 f0 44 	mov	#17648,	r4	;#0x44f0
    55e4:	35 40 f0 44 	mov	#17648,	r5	;#0x44f0
    55e8:	26 43       	mov	#2,	r6	;r3 As==10
    55ea:	0d 3c       	jmp	$+28     	;abs 0x5606

000055ec <_msp430_run_preinit_array>:
    55ec:	34 40 f0 44 	mov	#17648,	r4	;#0x44f0
    55f0:	35 40 f0 44 	mov	#17648,	r5	;#0x44f0
    55f4:	26 43       	mov	#2,	r6	;r3 As==10
    55f6:	07 3c       	jmp	$+16     	;abs 0x5606

000055f8 <_msp430_run_fini_array>:
    55f8:	34 40 f0 44 	mov	#17648,	r4	;#0x44f0
    55fc:	35 40 f0 44 	mov	#17648,	r5	;#0x44f0
    5600:	36 40 fe ff 	mov	#65534,	r6	;#0xfffe
    5604:	00 3c       	jmp	$+2      	;abs 0x5606

00005606 <_msp430_run_array>:
    5606:	05 94       	cmp	r4,	r5	;
    5608:	05 24       	jz	$+12     	;abs 0x5614
    560a:	27 44       	mov	@r4,	r7	;
    560c:	04 56       	add	r6,	r4	;
    560e:	a7 12       	call	@r7		;
    5610:	10 40 f4 ff 	br	0xfff4		;PC rel. 0x5606

00005614 <_msp430_run_done>:
    5614:	30 41       	ret			

00005616 <deregister_tm_clones>:
    5616:	3c 40 c2 6e 	mov	#28354,	r12	;#0x6ec2
    561a:	3c 80 c1 6e 	sub	#28353,	r12	;#0x6ec1
    561e:	2d 43       	mov	#2,	r13	;r3 As==10
    5620:	0d 9c       	cmp	r12,	r13	;
    5622:	07 2c       	jc	$+16     	;abs 0x5632
    5624:	3d 40 00 00 	mov	#0,	r13	;
    5628:	0d 93       	cmp	#0,	r13	;r3 As==00
    562a:	03 24       	jz	$+8      	;abs 0x5632
    562c:	3c 40 c2 6e 	mov	#28354,	r12	;#0x6ec2
    5630:	8d 12       	call	r13		;
    5632:	30 41       	ret			

00005634 <register_tm_clones>:
    5634:	3d 40 c2 6e 	mov	#28354,	r13	;#0x6ec2
    5638:	3d 80 c2 6e 	sub	#28354,	r13	;#0x6ec2
    563c:	0d 11       	rra	r13		;
    563e:	0c 4d       	mov	r13,	r12	;
    5640:	5c 03       	rrum	#1,	r12	;
    5642:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    5646:	0d 5c       	add	r12,	r13	;
    5648:	0d 11       	rra	r13		;
    564a:	0d 93       	cmp	#0,	r13	;r3 As==00
    564c:	07 24       	jz	$+16     	;abs 0x565c
    564e:	3e 40 00 00 	mov	#0,	r14	;
    5652:	0e 93       	cmp	#0,	r14	;r3 As==00
    5654:	03 24       	jz	$+8      	;abs 0x565c
    5656:	3c 40 c2 6e 	mov	#28354,	r12	;#0x6ec2
    565a:	8e 12       	call	r14		;
    565c:	30 41       	ret			

0000565e <__do_global_dtors_aux>:
    565e:	0a 15       	pushm	#1,	r10	;16-bit words
    5660:	c2 93 04 1c 	cmp.b	#0,	&0x1c04	;r3 As==00
    5664:	20 20       	jnz	$+66     	;abs 0x56a6
    5666:	1c 42 06 1c 	mov	&0x1c06,r12	;0x1c06
    566a:	3a 40 fa 44 	mov	#17658,	r10	;#0x44fa
    566e:	3a 80 f8 44 	sub	#17656,	r10	;#0x44f8
    5672:	0a 11       	rra	r10		;
    5674:	3a 53       	add	#-1,	r10	;r3 As==11
    5676:	0c 9a       	cmp	r10,	r12	;
    5678:	0b 2c       	jc	$+24     	;abs 0x5690
    567a:	1c 53       	inc	r12		;
    567c:	82 4c 06 1c 	mov	r12,	&0x1c06	;
    5680:	0c 5c       	rla	r12		;
    5682:	1c 4c f8 44 	mov	17656(r12),r12	;0x044f8
    5686:	8c 12       	call	r12		;
    5688:	1c 42 06 1c 	mov	&0x1c06,r12	;0x1c06
    568c:	0c 9a       	cmp	r10,	r12	;
    568e:	f5 2b       	jnc	$-20     	;abs 0x567a
    5690:	b0 12 16 56 	call	#22038		;#0x5616
    5694:	3d 40 00 00 	mov	#0,	r13	;
    5698:	0d 93       	cmp	#0,	r13	;r3 As==00
    569a:	03 24       	jz	$+8      	;abs 0x56a2
    569c:	3c 40 ec 44 	mov	#17644,	r12	;#0x44ec
    56a0:	8d 12       	call	r13		;
    56a2:	d2 43 04 1c 	mov.b	#1,	&0x1c04	;r3 As==01
    56a6:	0a 17       	popm	#1,	r10	;16-bit words
    56a8:	30 41       	ret			

000056aa <call___do_global_dtors_aux>:
    56aa:	30 41       	ret			

000056ac <frame_dummy>:
    56ac:	3e 40 00 00 	mov	#0,	r14	;
    56b0:	0e 93       	cmp	#0,	r14	;r3 As==00
    56b2:	05 24       	jz	$+12     	;abs 0x56be
    56b4:	3c 40 ec 44 	mov	#17644,	r12	;#0x44ec
    56b8:	3d 40 08 1c 	mov	#7176,	r13	;#0x1c08
    56bc:	8e 12       	call	r14		;
    56be:	3c 40 00 1c 	mov	#7168,	r12	;#0x1c00
    56c2:	8c 93 00 00 	cmp	#0,	0(r12)	;r3 As==00
    56c6:	03 20       	jnz	$+8      	;abs 0x56ce
    56c8:	b0 12 34 56 	call	#22068		;#0x5634
    56cc:	30 41       	ret			
    56ce:	3d 40 00 00 	mov	#0,	r13	;
    56d2:	0d 93       	cmp	#0,	r13	;r3 As==00
    56d4:	f9 27       	jz	$-12     	;abs 0x56c8
    56d6:	8d 12       	call	r13		;
    56d8:	f7 3f       	jmp	$-16     	;abs 0x56c8

000056da <call_frame_dummy>:
    56da:	30 41       	ret			

000056dc <TimerB1_ISR>:
    56dc:	04 12       	push	r4		;
    56de:	04 41       	mov	r1,	r4	;
    56e0:	0c 12       	push	r12		;
    56e2:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    56e6:	3c f0 fd ff 	and	#65533,	r12	;#0xfffd
    56ea:	82 4c c0 03 	mov	r12,	&0x03c0	;
    56ee:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    56f2:	0c 93       	cmp	#0,	r12	;r3 As==00
    56f4:	17 24       	jz	$+48     	;abs 0x5724
    56f6:	00 3c       	jmp	$+2      	;abs 0x56f8
    56f8:	1c 42 16 1c 	mov	&0x1c16,r12	;0x1c16
    56fc:	1c 53       	inc	r12		;
    56fe:	82 4c 16 1c 	mov	r12,	&0x1c16	;
    5702:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5706:	2c d2       	bis	#4,	r12	;r2 As==10
    5708:	82 4c c0 03 	mov	r12,	&0x03c0	;
    570c:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5710:	2c d3       	bis	#2,	r12	;r3 As==10
    5712:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5716:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    571a:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    571e:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5722:	00 3c       	jmp	$+2      	;abs 0x5724
    5724:	3c 41       	pop	r12		;
    5726:	34 41       	pop	r4		;
    5728:	00 13       	reti			
	...

0000572c <init>:
    572c:	04 12       	push	r4		;
    572e:	04 41       	mov	r1,	r4	;
    5730:	21 82       	sub	#4,	r1	;r2 As==10
    5732:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5736:	3c f0 ff e6 	and	#59135,	r12	;#0xe6ff
    573a:	82 4c c0 03 	mov	r12,	&0x03c0	;
    573e:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5742:	3c d0 00 02 	bis	#512,	r12	;#0x0200
    5746:	82 4c c0 03 	mov	r12,	&0x03c0	;
    574a:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    574e:	3c d0 c0 00 	bis	#192,	r12	;#0x00c0
    5752:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5756:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    575a:	3c f0 ef ff 	and	#65519,	r12	;#0xffef
    575e:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5762:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5766:	3c d0 20 00 	bis	#32,	r12	;#0x0020
    576a:	82 4c c0 03 	mov	r12,	&0x03c0	;
    576e:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5772:	2c d3       	bis	#2,	r12	;r3 As==10
    5774:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5778:	b0 12 98 61 	call	#24984		;#0x6198
    577c:	5c 42 04 02 	mov.b	&0x0204,r12	;0x0204
    5780:	2c d3       	bis	#2,	r12	;r3 As==10
    5782:	4d 4c       	mov.b	r12,	r13	;
    5784:	c2 4d 04 02 	mov.b	r13,	&0x0204	;
    5788:	5c 42 04 02 	mov.b	&0x0204,r12	;0x0204
    578c:	2c d2       	bis	#4,	r12	;r2 As==10
    578e:	4d 4c       	mov.b	r12,	r13	;
    5790:	c2 4d 04 02 	mov.b	r13,	&0x0204	;
    5794:	5c 42 04 02 	mov.b	&0x0204,r12	;0x0204
    5798:	1c d3       	bis	#1,	r12	;r3 As==01
    579a:	4d 4c       	mov.b	r12,	r13	;
    579c:	c2 4d 04 02 	mov.b	r13,	&0x0204	;
    57a0:	b0 12 18 67 	call	#26392		;#0x6718
    57a4:	0c 41       	mov	r1,	r12	;
    57a6:	bc 40 00 44 	mov	#17408,	0(r12)	;#0x4400
    57aa:	00 00 
    57ac:	b0 12 b4 62 	call	#25268		;#0x62b4
    57b0:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    57b4:	00 3c       	jmp	$+2      	;abs 0x57b6
    57b6:	ff 3f       	jmp	$+0      	;abs 0x57b6

000057b8 <task_init>:
    57b8:	04 12       	push	r4		;
    57ba:	04 41       	mov	r1,	r4	;
    57bc:	21 82       	sub	#4,	r1	;r2 As==10
    57be:	0c 41       	mov	r1,	r12	;
    57c0:	bc 40 00 44 	mov	#17408,	0(r12)	;#0x4400
    57c4:	00 00 
    57c6:	b0 12 b4 62 	call	#25268		;#0x62b4
    57ca:	82 43 f4 46 	mov	#0,	&0x46f4	;r3 As==00
    57ce:	82 43 f6 46 	mov	#0,	&0x46f6	;r3 As==00
    57d2:	82 43 f8 46 	mov	#0,	&0x46f8	;r3 As==00
    57d6:	82 43 fa 46 	mov	#0,	&0x46fa	;r3 As==00
    57da:	82 43 fc 46 	mov	#0,	&0x46fc	;r3 As==00
    57de:	92 43 fe 46 	mov	#1,	&0x46fe	;r3 As==01
    57e2:	3c 40 26 45 	mov	#17702,	r12	;#0x4526
    57e6:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    57ea:	0f 4c       	mov	r12,	r15	;
    57ec:	b0 12 88 68 	call	#26760		;#0x6888
    57f0:	21 52       	add	#4,	r1	;r2 As==10
    57f2:	34 41       	pop	r4		;
    57f4:	30 41       	ret			
	...

000057f8 <task_init_dict>:
    57f8:	04 12       	push	r4		;
    57fa:	04 41       	mov	r1,	r4	;
    57fc:	31 80 0a 00 	sub	#10,	r1	;#0x000a
    5800:	1c 42 f8 46 	mov	&0x46f8,r12	;0x46f8
    5804:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5808:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    580c:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa
    5810:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    5814:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5818:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    581c:	3e 40 06 00 	mov	#6,	r14	;
    5820:	0f 4c       	mov	r12,	r15	;
    5822:	b0 12 e8 6b 	call	#27624		;#0x6be8
    5826:	1c 44 fc ff 	mov	-4(r4),	r12	;
    582a:	8f 4c 04 47 	mov	r12,	18180(r15); 0x4704
    582e:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5832:	8f 4c 02 47 	mov	r12,	18178(r15); 0x4702
    5836:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    583a:	8f 4c 00 47 	mov	r12,	18176(r15); 0x4700
    583e:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5842:	1c 53       	inc	r12		;
    5844:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5848:	3c 90 00 01 	cmp	#256,	r12	;#0x0100
    584c:	0d 2c       	jc	$+28     	;abs 0x5868
    584e:	00 3c       	jmp	$+2      	;abs 0x5850
    5850:	3e 40 f8 46 	mov	#18168,	r14	;#0x46f8
    5854:	0f 44       	mov	r4,	r15	;
    5856:	2f 83       	decd	r15		;
    5858:	2d 43       	mov	#2,	r13	;r3 As==10
    585a:	b0 12 e8 69 	call	#27112		;#0x69e8
    585e:	3f 40 26 45 	mov	#17702,	r15	;#0x4526
    5862:	b0 12 88 68 	call	#26760		;#0x6888
    5866:	0f 3c       	jmp	$+32     	;abs 0x5886
    5868:	b2 40 00 01 	mov	#256,	&0x5300	;#0x0100
    586c:	00 53 
    586e:	3e 40 f8 46 	mov	#18168,	r14	;#0x46f8
    5872:	0f 44       	mov	r4,	r15	;
    5874:	2f 83       	decd	r15		;
    5876:	2d 43       	mov	#2,	r13	;r3 As==10
    5878:	b0 12 e8 69 	call	#27112		;#0x69e8
    587c:	3f 40 50 45 	mov	#17744,	r15	;#0x4550
    5880:	b0 12 88 68 	call	#26760		;#0x6888
    5884:	00 3c       	jmp	$+2      	;abs 0x5886
    5886:	31 50 0a 00 	add	#10,	r1	;#0x000a
    588a:	34 41       	pop	r4		;
    588c:	30 41       	ret			
	...

00005890 <task_sample>:
    5890:	04 12       	push	r4		;
    5892:	04 41       	mov	r1,	r4	;
    5894:	21 82       	sub	#4,	r1	;r2 As==10
    5896:	1c 42 fc 46 	mov	&0x46fc,r12	;0x46fc
    589a:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    589e:	1c 53       	inc	r12		;
    58a0:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    58a4:	2c 93       	cmp	#2,	r12	;r3 As==10
    58a6:	04 20       	jnz	$+10     	;abs 0x58b0
    58a8:	00 3c       	jmp	$+2      	;abs 0x58aa
    58aa:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    58ae:	00 3c       	jmp	$+2      	;abs 0x58b0
    58b0:	1c 44 fe ff 	mov	-2(r4),	r12	;
    58b4:	0c 93       	cmp	#0,	r12	;r3 As==00
    58b6:	11 20       	jnz	$+36     	;abs 0x58da
    58b8:	00 3c       	jmp	$+2      	;abs 0x58ba
    58ba:	1c 44 fc ff 	mov	-4(r4),	r12	;
    58be:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    58c2:	3e 40 fc 46 	mov	#18172,	r14	;#0x46fc
    58c6:	0f 44       	mov	r4,	r15	;
    58c8:	2f 83       	decd	r15		;
    58ca:	2d 43       	mov	#2,	r13	;r3 As==10
    58cc:	b0 12 e8 69 	call	#27112		;#0x69e8
    58d0:	3f 40 7a 45 	mov	#17786,	r15	;#0x457a
    58d4:	b0 12 88 68 	call	#26760		;#0x6888
    58d8:	10 3c       	jmp	$+34     	;abs 0x58fa
    58da:	1c 44 fc ff 	mov	-4(r4),	r12	;
    58de:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    58e2:	3e 40 fc 46 	mov	#18172,	r14	;#0x46fc
    58e6:	0f 44       	mov	r4,	r15	;
    58e8:	2f 83       	decd	r15		;
    58ea:	2d 43       	mov	#2,	r13	;r3 As==10
    58ec:	b0 12 e8 69 	call	#27112		;#0x69e8
    58f0:	3f 40 a4 45 	mov	#17828,	r15	;#0x45a4
    58f4:	b0 12 88 68 	call	#26760		;#0x6888
    58f8:	00 3c       	jmp	$+2      	;abs 0x58fa
    58fa:	21 52       	add	#4,	r1	;r2 As==10
    58fc:	34 41       	pop	r4		;
    58fe:	30 41       	ret			

00005900 <task_measure_temp>:
    5900:	04 12       	push	r4		;
    5902:	04 41       	mov	r1,	r4	;
    5904:	31 82       	sub	#8,	r1	;r2 As==11
    5906:	3e 40 fa 46 	mov	#18170,	r14	;#0x46fa
    590a:	1c 42 fa 46 	mov	&0x46fa,r12	;0x46fa
    590e:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5912:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5916:	0f 4c       	mov	r12,	r15	;
    5918:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    591c:	b0 12 b4 61 	call	#25012		;#0x61b4
    5920:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    5924:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    5928:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    592c:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5930:	82 4c 02 53 	mov	r12,	&0x5302	;
    5934:	0f 44       	mov	r4,	r15	;
    5936:	2f 83       	decd	r15		;
    5938:	2d 43       	mov	#2,	r13	;r3 As==10
    593a:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    593e:	b0 12 e8 69 	call	#27112		;#0x69e8
    5942:	3f 40 a4 45 	mov	#17828,	r15	;#0x45a4
    5946:	b0 12 88 68 	call	#26760		;#0x6888
    594a:	31 52       	add	#8,	r1	;r2 As==11
    594c:	34 41       	pop	r4		;
    594e:	30 41       	ret			

00005950 <task_letterize>:
    5950:	04 12       	push	r4		;
    5952:	04 41       	mov	r1,	r4	;
    5954:	31 80 10 00 	sub	#16,	r1	;#0x0010
    5958:	1c 42 fc 46 	mov	&0x46fc,r12	;0x46fc
    595c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5960:	0c 93       	cmp	#0,	r12	;r3 As==00
    5962:	04 20       	jnz	$+10     	;abs 0x596c
    5964:	00 3c       	jmp	$+2      	;abs 0x5966
    5966:	a4 43 fe ff 	mov	#2,	-2(r4)	;r3 As==10, 0xfffe
    596a:	06 3c       	jmp	$+14     	;abs 0x5978
    596c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5970:	3c 53       	add	#-1,	r12	;r3 As==11
    5972:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5976:	00 3c       	jmp	$+2      	;abs 0x5978
    5978:	1c 44 fe ff 	mov	-2(r4),	r12	;
    597c:	0c 5c       	rla	r12		;
    597e:	0c 5c       	rla	r12		;
    5980:	0c 5c       	rla	r12		;
    5982:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5986:	1c 42 02 53 	mov	&0x5302,r12	;0x5302
    598a:	5d 44 fc ff 	mov.b	-4(r4),	r13	;
    598e:	3e 40 ff 00 	mov	#255,	r14	;#0x00ff
    5992:	4d 93       	cmp.b	#0,	r13	;r3 As==00
    5994:	4f 4d       	mov.b	r13,	r15	;
    5996:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    599a:	c4 4d f7 ff 	mov.b	r13,	-9(r4)	; 0xfff7
    599e:	84 4e f4 ff 	mov	r14,	-12(r4)	; 0xfff4
    59a2:	c4 4f f3 ff 	mov.b	r15,	-13(r4)	; 0xfff3
    59a6:	0b 24       	jz	$+24     	;abs 0x59be
    59a8:	5c 44 f3 ff 	mov.b	-13(r4),r12	;0xfffffff3
    59ac:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    59b0:	0d 5d       	rla	r13		;
    59b2:	5c 83       	dec.b	r12		;
    59b4:	84 4d f4 ff 	mov	r13,	-12(r4)	; 0xfff4
    59b8:	c4 4c f3 ff 	mov.b	r12,	-13(r4)	; 0xfff3
    59bc:	f5 23       	jnz	$-20     	;abs 0x59a8
    59be:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    59c2:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    59c6:	0d fc       	and	r12,	r13	;
    59c8:	5e 44 f7 ff 	mov.b	-9(r4),	r14	;
    59cc:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    59ce:	c4 4e f2 ff 	mov.b	r14,	-14(r4)	; 0xfff2
    59d2:	84 4d f0 ff 	mov	r13,	-16(r4)	; 0xfff0
    59d6:	0c 24       	jz	$+26     	;abs 0x59f0
    59d8:	5c 44 f2 ff 	mov.b	-14(r4),r12	;0xfffffff2
    59dc:	1d 44 f0 ff 	mov	-16(r4),r13	;0xfffffff0
    59e0:	12 c3       	clrc			
    59e2:	0d 10       	rrc	r13		;
    59e4:	5c 83       	dec.b	r12		;
    59e6:	84 4d f0 ff 	mov	r13,	-16(r4)	; 0xfff0
    59ea:	c4 4c f2 ff 	mov.b	r12,	-14(r4)	; 0xfff2
    59ee:	f4 23       	jnz	$-22     	;abs 0x59d8
    59f0:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    59f4:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    59f8:	82 4c f8 46 	mov	r12,	&0x46f8	;
    59fc:	3f 40 ce 45 	mov	#17870,	r15	;#0x45ce
    5a00:	b0 12 88 68 	call	#26760		;#0x6888
    5a04:	31 50 10 00 	add	#16,	r1	;#0x0010
    5a08:	34 41       	pop	r4		;
    5a0a:	30 41       	ret			

00005a0c <task_compress>:
    5a0c:	04 12       	push	r4		;
    5a0e:	04 41       	mov	r1,	r4	;
    5a10:	31 80 0c 00 	sub	#12,	r1	;#0x000c
    5a14:	3e 40 fe 46 	mov	#18174,	r14	;#0x46fe
    5a18:	1c 42 fe 46 	mov	&0x46fe,r12	;0x46fe
    5a1c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5a20:	1c 42 f4 46 	mov	&0x46f4,r12	;0x46f4
    5a24:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    5a28:	3d 40 06 00 	mov	#6,	r13	;
    5a2c:	0f 4c       	mov	r12,	r15	;
    5a2e:	84 4e f4 ff 	mov	r14,	-12(r4)	; 0xfff4
    5a32:	0e 4d       	mov	r13,	r14	;
    5a34:	b0 12 e8 6b 	call	#27624		;#0x6be8
    5a38:	1c 4f 04 47 	mov	18180(r15),r12	;0x04704
    5a3c:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5a40:	1c 4f 02 47 	mov	18178(r15),r12	;0x04702
    5a44:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5a48:	1c 4f 00 47 	mov	18176(r15),r12	;0x04700
    5a4c:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5a50:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5a54:	82 4c 04 53 	mov	r12,	&0x5304	;
    5a58:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5a5c:	82 4c 0a 53 	mov	r12,	&0x530a	;
    5a60:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5a64:	82 4c 08 53 	mov	r12,	&0x5308	;
    5a68:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    5a6c:	82 4c 06 53 	mov	r12,	&0x5306	;
    5a70:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    5a74:	82 4c 0c 53 	mov	r12,	&0x530c	;
    5a78:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5a7c:	82 4c 0e 53 	mov	r12,	&0x530e	;
    5a80:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5a84:	1c 53       	inc	r12		;
    5a86:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5a8a:	0f 44       	mov	r4,	r15	;
    5a8c:	2f 83       	decd	r15		;
    5a8e:	2d 43       	mov	#2,	r13	;r3 As==10
    5a90:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfffffff4
    5a94:	b0 12 e8 69 	call	#27112		;#0x69e8
    5a98:	3f 40 f8 45 	mov	#17912,	r15	;#0x45f8
    5a9c:	b0 12 88 68 	call	#26760		;#0x6888
    5aa0:	31 50 0c 00 	add	#12,	r1	;#0x000c
    5aa4:	34 41       	pop	r4		;
    5aa6:	30 41       	ret			

00005aa8 <task_find_sibling>:
    5aa8:	04 12       	push	r4		;
    5aaa:	04 41       	mov	r1,	r4	;
    5aac:	31 82       	sub	#8,	r1	;r2 As==11
    5aae:	1c 42 04 53 	mov	&0x5304,r12	;0x5304
    5ab2:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5ab6:	0c 93       	cmp	#0,	r12	;r3 As==00
    5ab8:	41 24       	jz	$+132    	;abs 0x5b3c
    5aba:	00 3c       	jmp	$+2      	;abs 0x5abc
    5abc:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5ac0:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5ac4:	3e 40 06 00 	mov	#6,	r14	;
    5ac8:	0f 4c       	mov	r12,	r15	;
    5aca:	b0 12 e8 6b 	call	#27624		;#0x6be8
    5ace:	0c 4f       	mov	r15,	r12	;
    5ad0:	3c 50 00 47 	add	#18176,	r12	;#0x4700
    5ad4:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5ad8:	1c 4f 00 47 	mov	18176(r15),r12	;0x04700
    5adc:	1e 42 f8 46 	mov	&0x46f8,r14	;0x46f8
    5ae0:	0c 9e       	cmp	r14,	r12	;
    5ae2:	11 20       	jnz	$+36     	;abs 0x5b06
    5ae4:	00 3c       	jmp	$+2      	;abs 0x5ae6
    5ae6:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5aea:	82 4c f4 46 	mov	r12,	&0x46f4	;
    5aee:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5af2:	0f 44       	mov	r4,	r15	;
    5af4:	2f 83       	decd	r15		;
    5af6:	2d 43       	mov	#2,	r13	;r3 As==10
    5af8:	b0 12 e8 69 	call	#27112		;#0x69e8
    5afc:	3f 40 a4 45 	mov	#17828,	r15	;#0x45a4
    5b00:	b0 12 88 68 	call	#26760		;#0x6888
    5b04:	1a 3c       	jmp	$+54     	;abs 0x5b3a
    5b06:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5b0a:	1c 4c 02 00 	mov	2(r12),	r12	;
    5b0e:	0c 93       	cmp	#0,	r12	;r3 As==00
    5b10:	13 24       	jz	$+40     	;abs 0x5b38
    5b12:	00 3c       	jmp	$+2      	;abs 0x5b14
    5b14:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5b18:	1c 4c 02 00 	mov	2(r12),	r12	;
    5b1c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5b20:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5b24:	0f 44       	mov	r4,	r15	;
    5b26:	2f 83       	decd	r15		;
    5b28:	2d 43       	mov	#2,	r13	;r3 As==10
    5b2a:	b0 12 e8 69 	call	#27112		;#0x69e8
    5b2e:	3f 40 f8 45 	mov	#17912,	r15	;#0x45f8
    5b32:	b0 12 88 68 	call	#26760		;#0x6888
    5b36:	00 3c       	jmp	$+2      	;abs 0x5b38
    5b38:	00 3c       	jmp	$+2      	;abs 0x5b3a
    5b3a:	00 3c       	jmp	$+2      	;abs 0x5b3c
    5b3c:	1c 42 f8 46 	mov	&0x46f8,r12	;0x46f8
    5b40:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5b44:	82 4c f4 46 	mov	r12,	&0x46f4	;
    5b48:	1c 42 0e 53 	mov	&0x530e,r12	;0x530e
    5b4c:	0c 93       	cmp	#0,	r12	;r3 As==00
    5b4e:	0d 20       	jnz	$+28     	;abs 0x5b6a
    5b50:	00 3c       	jmp	$+2      	;abs 0x5b52
    5b52:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5b56:	0f 44       	mov	r4,	r15	;
    5b58:	2f 83       	decd	r15		;
    5b5a:	2d 43       	mov	#2,	r13	;r3 As==10
    5b5c:	b0 12 e8 69 	call	#27112		;#0x69e8
    5b60:	3f 40 4c 46 	mov	#17996,	r15	;#0x464c
    5b64:	b0 12 88 68 	call	#26760		;#0x6888
    5b68:	0c 3c       	jmp	$+26     	;abs 0x5b82
    5b6a:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5b6e:	0f 44       	mov	r4,	r15	;
    5b70:	2f 83       	decd	r15		;
    5b72:	2d 43       	mov	#2,	r13	;r3 As==10
    5b74:	b0 12 e8 69 	call	#27112		;#0x69e8
    5b78:	3f 40 22 46 	mov	#17954,	r15	;#0x4622
    5b7c:	b0 12 88 68 	call	#26760		;#0x6888
    5b80:	00 3c       	jmp	$+2      	;abs 0x5b82
    5b82:	31 52       	add	#8,	r1	;r2 As==11
    5b84:	34 41       	pop	r4		;
    5b86:	30 41       	ret			

00005b88 <task_add_node>:
    5b88:	04 12       	push	r4		;
    5b8a:	04 41       	mov	r1,	r4	;
    5b8c:	31 80 0e 00 	sub	#14,	r1	;#0x000e
    5b90:	1c 42 04 53 	mov	&0x5304,r12	;0x5304
    5b94:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5b98:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5b9c:	3e 40 06 00 	mov	#6,	r14	;
    5ba0:	0f 4c       	mov	r12,	r15	;
    5ba2:	b0 12 e8 6b 	call	#27624		;#0x6be8
    5ba6:	0c 4f       	mov	r15,	r12	;
    5ba8:	3c 50 00 47 	add	#18176,	r12	;#0x4700
    5bac:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5bb0:	1c 4f 02 47 	mov	18178(r15),r12	;0x04702
    5bb4:	0c 93       	cmp	#0,	r12	;r3 As==00
    5bb6:	15 24       	jz	$+44     	;abs 0x5be2
    5bb8:	00 3c       	jmp	$+2      	;abs 0x5bba
    5bba:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5bbe:	1c 4c 02 00 	mov	2(r12),	r12	;
    5bc2:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5bc6:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5bca:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5bce:	0f 44       	mov	r4,	r15	;
    5bd0:	2f 83       	decd	r15		;
    5bd2:	2d 43       	mov	#2,	r13	;r3 As==10
    5bd4:	b0 12 e8 69 	call	#27112		;#0x69e8
    5bd8:	3f 40 22 46 	mov	#17954,	r15	;#0x4622
    5bdc:	b0 12 88 68 	call	#26760		;#0x6888
    5be0:	25 3c       	jmp	$+76     	;abs 0x5c2c
    5be2:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5be6:	1d 4c 04 00 	mov	4(r12),	r13	;
    5bea:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    5bee:	1d 4c 02 00 	mov	2(r12),	r13	;
    5bf2:	84 4d f4 ff 	mov	r13,	-12(r4)	; 0xfff4
    5bf6:	2c 4c       	mov	@r12,	r12	;
    5bf8:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    5bfc:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    5c00:	82 4c 14 53 	mov	r12,	&0x5314	;
    5c04:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    5c08:	82 4c 12 53 	mov	r12,	&0x5312	;
    5c0c:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    5c10:	82 4c 10 53 	mov	r12,	&0x5310	;
    5c14:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5c18:	0f 44       	mov	r4,	r15	;
    5c1a:	2f 83       	decd	r15		;
    5c1c:	2d 43       	mov	#2,	r13	;r3 As==10
    5c1e:	b0 12 e8 69 	call	#27112		;#0x69e8
    5c22:	3f 40 4c 46 	mov	#17996,	r15	;#0x464c
    5c26:	b0 12 88 68 	call	#26760		;#0x6888
    5c2a:	00 3c       	jmp	$+2      	;abs 0x5c2c
    5c2c:	31 50 0e 00 	add	#14,	r1	;#0x000e
    5c30:	34 41       	pop	r4		;
    5c32:	30 41       	ret			

00005c34 <task_add_insert>:
    5c34:	04 12       	push	r4		;
    5c36:	04 41       	mov	r1,	r4	;
    5c38:	31 80 1a 00 	sub	#26,	r1	;#0x001a
    5c3c:	1c 42 00 53 	mov	&0x5300,r12	;0x5300
    5c40:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5c44:	3c 90 00 02 	cmp	#512,	r12	;#0x0200
    5c48:	03 20       	jnz	$+8      	;abs 0x5c50
    5c4a:	00 3c       	jmp	$+2      	;abs 0x5c4c
    5c4c:	00 3c       	jmp	$+2      	;abs 0x5c4e
    5c4e:	ff 3f       	jmp	$+0      	;abs 0x5c4e
    5c50:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5c54:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5c58:	1c 42 f8 46 	mov	&0x46f8,r12	;0x46f8
    5c5c:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    5c60:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8
    5c64:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa
    5c68:	1c 42 0a 53 	mov	&0x530a,r12	;0x530a
    5c6c:	0c 93       	cmp	#0,	r12	;r3 As==00
    5c6e:	27 20       	jnz	$+80     	;abs 0x5cbe
    5c70:	00 3c       	jmp	$+2      	;abs 0x5c72
    5c72:	1c 42 0a 53 	mov	&0x530a,r12	;0x530a
    5c76:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    5c7a:	1c 42 08 53 	mov	&0x5308,r12	;0x5308
    5c7e:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    5c82:	1c 42 06 53 	mov	&0x5306,r12	;0x5306
    5c86:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    5c8a:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5c8e:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    5c92:	1c 42 0c 53 	mov	&0x530c,r12	;0x530c
    5c96:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    5c9a:	3e 40 06 00 	mov	#6,	r14	;
    5c9e:	0f 4c       	mov	r12,	r15	;
    5ca0:	b0 12 e8 6b 	call	#27624		;#0x6be8
    5ca4:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    5ca8:	8f 4c 04 47 	mov	r12,	18180(r15); 0x4704
    5cac:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    5cb0:	8f 4c 02 47 	mov	r12,	18178(r15); 0x4702
    5cb4:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    5cb8:	8f 4c 00 47 	mov	r12,	18176(r15); 0x4700
    5cbc:	27 3c       	jmp	$+80     	;abs 0x5d0c
    5cbe:	1c 42 04 53 	mov	&0x5304,r12	;0x5304
    5cc2:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    5cc6:	1c 42 14 53 	mov	&0x5314,r12	;0x5314
    5cca:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    5cce:	1c 42 12 53 	mov	&0x5312,r12	;0x5312
    5cd2:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    5cd6:	1c 42 10 53 	mov	&0x5310,r12	;0x5310
    5cda:	84 4c e6 ff 	mov	r12,	-26(r4)	; 0xffe6
    5cde:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5ce2:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    5ce6:	1f 44 ec ff 	mov	-20(r4),r15	;0xffffffec
    5cea:	3e 40 06 00 	mov	#6,	r14	;
    5cee:	b0 12 e8 6b 	call	#27624		;#0x6be8
    5cf2:	1c 44 ea ff 	mov	-22(r4),r12	;0xffffffea
    5cf6:	8f 4c 04 47 	mov	r12,	18180(r15); 0x4704
    5cfa:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    5cfe:	8f 4c 02 47 	mov	r12,	18178(r15); 0x4702
    5d02:	1c 44 e6 ff 	mov	-26(r4),r12	;0xffffffe6
    5d06:	8f 4c 00 47 	mov	r12,	18176(r15); 0x4700
    5d0a:	00 3c       	jmp	$+2      	;abs 0x5d0c
    5d0c:	1f 44 fc ff 	mov	-4(r4),	r15	;
    5d10:	3e 40 06 00 	mov	#6,	r14	;
    5d14:	b0 12 e8 6b 	call	#27624		;#0x6be8
    5d18:	1e 44 fa ff 	mov	-6(r4),	r14	;
    5d1c:	8f 4e 04 47 	mov	r14,	18180(r15); 0x4704
    5d20:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    5d24:	8f 4e 02 47 	mov	r14,	18178(r15); 0x4702
    5d28:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfffffff6
    5d2c:	8f 4e 00 47 	mov	r14,	18176(r15); 0x4700
    5d30:	1e 42 0c 53 	mov	&0x530c,r14	;0x530c
    5d34:	82 4e 16 53 	mov	r14,	&0x5316	;
    5d38:	1e 44 fe ff 	mov	-2(r4),	r14	;
    5d3c:	1e 53       	inc	r14		;
    5d3e:	84 4e fe ff 	mov	r14,	-2(r4)	; 0xfffe
    5d42:	3e 40 00 53 	mov	#21248,	r14	;#0x5300
    5d46:	0f 44       	mov	r4,	r15	;
    5d48:	2f 83       	decd	r15		;
    5d4a:	2d 43       	mov	#2,	r13	;r3 As==10
    5d4c:	b0 12 e8 69 	call	#27112		;#0x69e8
    5d50:	3f 40 76 46 	mov	#18038,	r15	;#0x4676
    5d54:	b0 12 88 68 	call	#26760		;#0x6888
    5d58:	31 50 1a 00 	add	#26,	r1	;#0x001a
    5d5c:	34 41       	pop	r4		;
    5d5e:	30 41       	ret			

00005d60 <task_append_compressed>:
    5d60:	04 12       	push	r4		;
    5d62:	04 41       	mov	r1,	r4	;
    5d64:	31 80 06 00 	sub	#6,	r1	;
    5d68:	1c 42 f6 46 	mov	&0x46f6,r12	;0x46f6
    5d6c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5d70:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5d74:	1d 42 16 53 	mov	&0x5316,r13	;0x5316
    5d78:	3e 40 06 00 	mov	#6,	r14	;
    5d7c:	0f 4c       	mov	r12,	r15	;
    5d7e:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    5d82:	b0 12 e8 6b 	call	#27624		;#0x6be8
    5d86:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5d8a:	8f 4c 18 53 	mov	r12,	21272(r15); 0x5318
    5d8e:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5d92:	1c 53       	inc	r12		;
    5d94:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5d98:	3c 90 40 00 	cmp	#64,	r12	;#0x0040
    5d9c:	0d 20       	jnz	$+28     	;abs 0x5db8
    5d9e:	00 3c       	jmp	$+2      	;abs 0x5da0
    5da0:	3e 40 f6 46 	mov	#18166,	r14	;#0x46f6
    5da4:	0f 44       	mov	r4,	r15	;
    5da6:	2f 83       	decd	r15		;
    5da8:	2d 43       	mov	#2,	r13	;r3 As==10
    5daa:	b0 12 e8 69 	call	#27112		;#0x69e8
    5dae:	3f 40 a0 46 	mov	#18080,	r15	;#0x46a0
    5db2:	b0 12 88 68 	call	#26760		;#0x6888
    5db6:	0c 3c       	jmp	$+26     	;abs 0x5dd0
    5db8:	3e 40 f6 46 	mov	#18166,	r14	;#0x46f6
    5dbc:	0f 44       	mov	r4,	r15	;
    5dbe:	2f 83       	decd	r15		;
    5dc0:	2d 43       	mov	#2,	r13	;r3 As==10
    5dc2:	b0 12 e8 69 	call	#27112		;#0x69e8
    5dc6:	3f 40 50 45 	mov	#17744,	r15	;#0x4550
    5dca:	b0 12 88 68 	call	#26760		;#0x6888
    5dce:	00 3c       	jmp	$+2      	;abs 0x5dd0
    5dd0:	31 50 06 00 	add	#6,	r1	;
    5dd4:	34 41       	pop	r4		;
    5dd6:	30 41       	ret			

00005dd8 <task_print>:
    5dd8:	04 12       	push	r4		;
    5dda:	04 41       	mov	r1,	r4	;
    5ddc:	31 80 14 00 	sub	#20,	r1	;#0x0014
    5de0:	0c 41       	mov	r1,	r12	;
    5de2:	bc 40 0e 44 	mov	#17422,	0(r12)	;#0x440e
    5de6:	00 00 
    5de8:	b0 12 b4 62 	call	#25268		;#0x62b4
    5dec:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    5df0:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    5df4:	00 3c       	jmp	$+2      	;abs 0x5df6
    5df6:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5dfa:	3c 90 40 00 	cmp	#64,	r12	;#0x0040
    5dfe:	31 2c       	jc	$+100    	;abs 0x5e62
    5e00:	00 3c       	jmp	$+2      	;abs 0x5e02
    5e02:	1f 44 fe ff 	mov	-2(r4),	r15	;
    5e06:	3e 40 06 00 	mov	#6,	r14	;
    5e0a:	b0 12 e8 6b 	call	#27624		;#0x6be8
    5e0e:	1e 4f 18 53 	mov	21272(r15),r14	;0x05318
    5e12:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    5e16:	0f 41       	mov	r1,	r15	;
    5e18:	8f 4e 02 00 	mov	r14,	2(r15)	;
    5e1c:	bf 40 22 44 	mov	#17442,	0(r15)	;#0x4422
    5e20:	00 00 
    5e22:	b0 12 b4 62 	call	#25268		;#0x62b4
    5e26:	1e 44 fe ff 	mov	-2(r4),	r14	;
    5e2a:	0e 93       	cmp	#0,	r14	;r3 As==00
    5e2c:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    5e30:	11 24       	jz	$+36     	;abs 0x5e54
    5e32:	00 3c       	jmp	$+2      	;abs 0x5e34
    5e34:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5e38:	1c 53       	inc	r12		;
    5e3a:	3c b0 07 00 	bit	#7,	r12	;
    5e3e:	0a 20       	jnz	$+22     	;abs 0x5e54
    5e40:	00 3c       	jmp	$+2      	;abs 0x5e42
    5e42:	0c 41       	mov	r1,	r12	;
    5e44:	bc 40 1f 44 	mov	#17439,	0(r12)	;#0x441f
    5e48:	00 00 
    5e4a:	b0 12 b4 62 	call	#25268		;#0x62b4
    5e4e:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    5e52:	00 3c       	jmp	$+2      	;abs 0x5e54
    5e54:	00 3c       	jmp	$+2      	;abs 0x5e56
    5e56:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5e5a:	1c 53       	inc	r12		;
    5e5c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5e60:	ca 3f       	jmp	$-106    	;abs 0x5df6
    5e62:	0c 41       	mov	r1,	r12	;
    5e64:	bc 40 1f 44 	mov	#17439,	0(r12)	;#0x441f
    5e68:	00 00 
    5e6a:	b0 12 b4 62 	call	#25268		;#0x62b4
    5e6e:	1c 42 fe 46 	mov	&0x46fe,r12	;0x46fe
    5e72:	0d 41       	mov	r1,	r13	;
    5e74:	8d 4c 02 00 	mov	r12,	2(r13)	;
    5e78:	bd 40 40 00 	mov	#64,	4(r13)	;#0x0040
    5e7c:	04 00 
    5e7e:	bd 40 28 44 	mov	#17448,	0(r13)	;#0x4428
    5e82:	00 00 
    5e84:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    5e88:	b0 12 b4 62 	call	#25268		;#0x62b4
    5e8c:	3c 40 ca 46 	mov	#18122,	r12	;#0x46ca
    5e90:	84 4f f2 ff 	mov	r15,	-14(r4)	; 0xfff2
    5e94:	0f 4c       	mov	r12,	r15	;
    5e96:	b0 12 88 68 	call	#26760		;#0x6888
    5e9a:	31 50 14 00 	add	#20,	r1	;#0x0014
    5e9e:	34 41       	pop	r4		;
    5ea0:	30 41       	ret			
	...

00005ea4 <task_done>:
    5ea4:	04 12       	push	r4		;
    5ea6:	04 41       	mov	r1,	r4	;
    5ea8:	31 80 32 00 	sub	#50,	r1	;#0x0032
    5eac:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    5eb0:	0c 41       	mov	r1,	r12	;
    5eb2:	bc 40 2a 00 	mov	#42,	4(r12)	;#0x002a
    5eb6:	04 00 
    5eb8:	9c 43 02 00 	mov	#1,	2(r12)	;r3 As==01
    5ebc:	bc 40 45 44 	mov	#17477,	0(r12)	;#0x4445
    5ec0:	00 00 
    5ec2:	b0 12 b4 62 	call	#25268		;#0x62b4
    5ec6:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5eca:	3c 50 f8 01 	add	#504,	r12	;#0x01f8
    5ece:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5ed2:	0c 41       	mov	r1,	r12	;
    5ed4:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5ed8:	9c 43 02 00 	mov	#1,	2(r12)	;r3 As==01
    5edc:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5ee0:	00 00 
    5ee2:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    5ee6:	b0 12 b4 62 	call	#25268		;#0x62b4
    5eea:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5eee:	2c 53       	incd	r12		;
    5ef0:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5ef4:	0c 41       	mov	r1,	r12	;
    5ef6:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5efa:	ac 43 02 00 	mov	#2,	2(r12)	;r3 As==10
    5efe:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5f02:	00 00 
    5f04:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    5f08:	b0 12 b4 62 	call	#25268		;#0x62b4
    5f0c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f10:	2c 53       	incd	r12		;
    5f12:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f16:	0c 41       	mov	r1,	r12	;
    5f18:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5f1c:	bc 40 03 00 	mov	#3,	2(r12)	;
    5f20:	02 00 
    5f22:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5f26:	00 00 
    5f28:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    5f2c:	b0 12 b4 62 	call	#25268		;#0x62b4
    5f30:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f34:	2c 53       	incd	r12		;
    5f36:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f3a:	0c 41       	mov	r1,	r12	;
    5f3c:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5f40:	ac 42 02 00 	mov	#4,	2(r12)	;r2 As==10
    5f44:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5f48:	00 00 
    5f4a:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    5f4e:	b0 12 b4 62 	call	#25268		;#0x62b4
    5f52:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f56:	2c 53       	incd	r12		;
    5f58:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f5c:	0c 41       	mov	r1,	r12	;
    5f5e:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5f62:	bc 40 05 00 	mov	#5,	2(r12)	;
    5f66:	02 00 
    5f68:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5f6c:	00 00 
    5f6e:	84 4f f2 ff 	mov	r15,	-14(r4)	; 0xfff2
    5f72:	b0 12 b4 62 	call	#25268		;#0x62b4
    5f76:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f7a:	2c 53       	incd	r12		;
    5f7c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f80:	0c 41       	mov	r1,	r12	;
    5f82:	bc 40 00 0c 	mov	#3072,	4(r12)	;#0x0c00
    5f86:	04 00 
    5f88:	bc 40 06 00 	mov	#6,	2(r12)	;
    5f8c:	02 00 
    5f8e:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5f92:	00 00 
    5f94:	84 4f f0 ff 	mov	r15,	-16(r4)	; 0xfff0
    5f98:	b0 12 b4 62 	call	#25268		;#0x62b4
    5f9c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5fa0:	3c 50 00 0c 	add	#3072,	r12	;#0x0c00
    5fa4:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5fa8:	0c 41       	mov	r1,	r12	;
    5faa:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5fae:	bc 40 07 00 	mov	#7,	2(r12)	;
    5fb2:	02 00 
    5fb4:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5fb8:	00 00 
    5fba:	84 4f ee ff 	mov	r15,	-18(r4)	; 0xffee
    5fbe:	b0 12 b4 62 	call	#25268		;#0x62b4
    5fc2:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5fc6:	2c 53       	incd	r12		;
    5fc8:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5fcc:	0c 41       	mov	r1,	r12	;
    5fce:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5fd2:	bc 42 02 00 	mov	#8,	2(r12)	;r2 As==11
    5fd6:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5fda:	00 00 
    5fdc:	84 4f ec ff 	mov	r15,	-20(r4)	; 0xffec
    5fe0:	b0 12 b4 62 	call	#25268		;#0x62b4
    5fe4:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5fe8:	2c 53       	incd	r12		;
    5fea:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5fee:	0c 41       	mov	r1,	r12	;
    5ff0:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5ff4:	bc 40 09 00 	mov	#9,	2(r12)	;
    5ff8:	02 00 
    5ffa:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5ffe:	00 00 
    6000:	84 4f ea ff 	mov	r15,	-22(r4)	; 0xffea
    6004:	b0 12 b4 62 	call	#25268		;#0x62b4
    6008:	1c 44 fe ff 	mov	-2(r4),	r12	;
    600c:	2c 53       	incd	r12		;
    600e:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    6012:	0c 41       	mov	r1,	r12	;
    6014:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    6018:	bc 40 0b 00 	mov	#11,	2(r12)	;#0x000b
    601c:	02 00 
    601e:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    6022:	00 00 
    6024:	84 4f e8 ff 	mov	r15,	-24(r4)	; 0xffe8
    6028:	b0 12 b4 62 	call	#25268		;#0x62b4
    602c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6030:	2c 53       	incd	r12		;
    6032:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    6036:	0c 41       	mov	r1,	r12	;
    6038:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    603c:	bc 40 0c 00 	mov	#12,	2(r12)	;#0x000c
    6040:	02 00 
    6042:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    6046:	00 00 
    6048:	84 4f e6 ff 	mov	r15,	-26(r4)	; 0xffe6
    604c:	b0 12 b4 62 	call	#25268		;#0x62b4
    6050:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6054:	2c 53       	incd	r12		;
    6056:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    605a:	0c 41       	mov	r1,	r12	;
    605c:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    6060:	bc 40 0d 00 	mov	#13,	2(r12)	;#0x000d
    6064:	02 00 
    6066:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    606a:	00 00 
    606c:	84 4f e4 ff 	mov	r15,	-28(r4)	; 0xffe4
    6070:	b0 12 b4 62 	call	#25268		;#0x62b4
    6074:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6078:	2c 53       	incd	r12		;
    607a:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    607e:	0c 41       	mov	r1,	r12	;
    6080:	bc 40 06 00 	mov	#6,	4(r12)	;
    6084:	04 00 
    6086:	bc 40 0e 00 	mov	#14,	2(r12)	;#0x000e
    608a:	02 00 
    608c:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    6090:	00 00 
    6092:	84 4f e2 ff 	mov	r15,	-30(r4)	; 0xffe2
    6096:	b0 12 b4 62 	call	#25268		;#0x62b4
    609a:	1c 44 fe ff 	mov	-2(r4),	r12	;
    609e:	3c 50 06 00 	add	#6,	r12	;
    60a2:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    60a6:	0c 41       	mov	r1,	r12	;
    60a8:	bc 40 80 01 	mov	#384,	4(r12)	;#0x0180
    60ac:	04 00 
    60ae:	bc 40 0f 00 	mov	#15,	2(r12)	;#0x000f
    60b2:	02 00 
    60b4:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    60b8:	00 00 
    60ba:	84 4f e0 ff 	mov	r15,	-32(r4)	; 0xffe0
    60be:	b0 12 b4 62 	call	#25268		;#0x62b4
    60c2:	1c 44 fe ff 	mov	-2(r4),	r12	;
    60c6:	3c 50 80 01 	add	#384,	r12	;#0x0180
    60ca:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    60ce:	0c 41       	mov	r1,	r12	;
    60d0:	bc 40 06 00 	mov	#6,	4(r12)	;
    60d4:	04 00 
    60d6:	bc 40 10 00 	mov	#16,	2(r12)	;#0x0010
    60da:	02 00 
    60dc:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    60e0:	00 00 
    60e2:	84 4f de ff 	mov	r15,	-34(r4)	; 0xffde
    60e6:	b0 12 b4 62 	call	#25268		;#0x62b4
    60ea:	1c 44 fe ff 	mov	-2(r4),	r12	;
    60ee:	3c 50 06 00 	add	#6,	r12	;
    60f2:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    60f6:	0c 41       	mov	r1,	r12	;
    60f8:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    60fc:	bc 40 11 00 	mov	#17,	2(r12)	;#0x0011
    6100:	02 00 
    6102:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    6106:	00 00 
    6108:	84 4f dc ff 	mov	r15,	-36(r4)	; 0xffdc
    610c:	b0 12 b4 62 	call	#25268		;#0x62b4
    6110:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6114:	2c 53       	incd	r12		;
    6116:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    611a:	0c 41       	mov	r1,	r12	;
    611c:	bc 40 42 00 	mov	#66,	2(r12)	;#0x0042
    6120:	02 00 
    6122:	bc 40 74 44 	mov	#17524,	0(r12)	;#0x4474
    6126:	00 00 
    6128:	84 4f da ff 	mov	r15,	-38(r4)	; 0xffda
    612c:	b0 12 b4 62 	call	#25268		;#0x62b4
    6130:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6134:	3c 50 42 00 	add	#66,	r12	;#0x0042
    6138:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    613c:	0c 41       	mov	r1,	r12	;
    613e:	ac 43 02 00 	mov	#2,	2(r12)	;r3 As==10
    6142:	bc 40 8c 44 	mov	#17548,	0(r12)	;#0x448c
    6146:	00 00 
    6148:	84 4f d8 ff 	mov	r15,	-40(r4)	; 0xffd8
    614c:	b0 12 b4 62 	call	#25268		;#0x62b4
    6150:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6154:	2c 53       	incd	r12		;
    6156:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    615a:	0d 41       	mov	r1,	r13	;
    615c:	8d 4c 02 00 	mov	r12,	2(r13)	;
    6160:	bd 40 a8 44 	mov	#17576,	0(r13)	;#0x44a8
    6164:	00 00 
    6166:	84 4f d6 ff 	mov	r15,	-42(r4)	; 0xffd6
    616a:	b0 12 b4 62 	call	#25268		;#0x62b4
    616e:	84 4f d4 ff 	mov	r15,	-44(r4)	; 0xffd4
    6172:	31 50 32 00 	add	#50,	r1	;#0x0032
    6176:	34 41       	pop	r4		;
    6178:	30 41       	ret			
	...

0000617c <_entry_task>:
    617c:	04 12       	push	r4		;
    617e:	04 41       	mov	r1,	r4	;
    6180:	3f 40 fc 44 	mov	#17660,	r15	;#0x44fc
    6184:	b0 12 88 68 	call	#26760		;#0x6888
    6188:	34 41       	pop	r4		;
    618a:	30 41       	ret			

0000618c <_init>:
    618c:	04 12       	push	r4		;
    618e:	04 41       	mov	r1,	r4	;
    6190:	b0 12 2c 57 	call	#22316		;#0x572c
    6194:	34 41       	pop	r4		;
    6196:	30 41       	ret			

00006198 <init_hw>:
    6198:	04 12       	push	r4		;
    619a:	04 41       	mov	r1,	r4	;
    619c:	b0 12 00 62 	call	#25088		;#0x6200
    61a0:	1c 42 30 01 	mov	&0x0130,r12	;0x0130
    61a4:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    61a8:	82 4c 30 01 	mov	r12,	&0x0130	;
    61ac:	b0 12 94 62 	call	#25236		;#0x6294
    61b0:	34 41       	pop	r4		;
    61b2:	30 41       	ret			

000061b4 <acquire_sample>:
    61b4:	04 12       	push	r4		;
    61b6:	04 41       	mov	r1,	r4	;
    61b8:	31 80 06 00 	sub	#6,	r1	;
    61bc:	0c 4f       	mov	r15,	r12	;
    61be:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    61c2:	1f 53       	inc	r15		;
    61c4:	3f f0 03 00 	and	#3,	r15	;
    61c8:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    61cc:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    61d0:	31 50 06 00 	add	#6,	r1	;
    61d4:	34 41       	pop	r4		;
    61d6:	30 41       	ret			

000061d8 <msp_watchdog_enable>:
    61d8:	04 12       	push	r4		;
    61da:	04 41       	mov	r1,	r4	;
    61dc:	21 83       	decd	r1		;
    61de:	4c 4f       	mov.b	r15,	r12	;
    61e0:	c4 4c ff ff 	mov.b	r12,	-1(r4)	; 0xffff
    61e4:	5f 44 ff ff 	mov.b	-1(r4),	r15	;
    61e8:	3f d0 08 5a 	bis	#23048,	r15	;#0x5a08
    61ec:	82 4f 5c 01 	mov	r15,	&0x015c	;
    61f0:	5c 44 ff ff 	mov.b	-1(r4),	r12	;
    61f4:	c2 4c 20 1c 	mov.b	r12,	&0x1c20	;
    61f8:	21 53       	incd	r1		;
    61fa:	34 41       	pop	r4		;
    61fc:	30 41       	ret			
	...

00006200 <msp_watchdog_disable>:
    6200:	04 12       	push	r4		;
    6202:	04 41       	mov	r1,	r4	;
    6204:	b2 40 80 5a 	mov	#23168,	&0x015c	;#0x5a80
    6208:	5c 01 
    620a:	34 41       	pop	r4		;
    620c:	30 41       	ret			
	...

00006210 <msp_watchdog_kick>:
    6210:	04 12       	push	r4		;
    6212:	04 41       	mov	r1,	r4	;
    6214:	5c 42 20 1c 	mov.b	&0x1c20,r12	;0x1c20
    6218:	3c d0 08 5a 	bis	#23048,	r12	;#0x5a08
    621c:	82 4c 5c 01 	mov	r12,	&0x015c	;
    6220:	34 41       	pop	r4		;
    6222:	30 41       	ret			

00006224 <memcpy>:
    6224:	04 12       	push	r4		;
    6226:	04 41       	mov	r1,	r4	;
    6228:	0b 12       	push	r11		;
    622a:	0a 12       	push	r10		;
    622c:	31 80 0e 00 	sub	#14,	r1	;#0x000e
    6230:	0c 4d       	mov	r13,	r12	;
    6232:	0b 4e       	mov	r14,	r11	;
    6234:	0a 4f       	mov	r15,	r10	;
    6236:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    623a:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    623e:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    6242:	84 43 f4 ff 	mov	#0,	-12(r4)	;r3 As==00, 0xfff4
    6246:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    624a:	84 4b f0 ff 	mov	r11,	-16(r4)	; 0xfff0
    624e:	84 4a ee ff 	mov	r10,	-18(r4)	; 0xffee
    6252:	00 3c       	jmp	$+2      	;abs 0x6254
    6254:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6258:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    625c:	0c 9d       	cmp	r13,	r12	;
    625e:	12 2c       	jc	$+38     	;abs 0x6284
    6260:	00 3c       	jmp	$+2      	;abs 0x6262
    6262:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6266:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    626a:	0c 5d       	add	r13,	r12	;
    626c:	6e 4c       	mov.b	@r12,	r14	;
    626e:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6272:	0c 5d       	add	r13,	r12	;
    6274:	cc 4e 00 00 	mov.b	r14,	0(r12)	;
    6278:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    627c:	1c 53       	inc	r12		;
    627e:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    6282:	e8 3f       	jmp	$-46     	;abs 0x6254
    6284:	1f 44 fa ff 	mov	-6(r4),	r15	;
    6288:	31 50 0e 00 	add	#14,	r1	;#0x000e
    628c:	3a 41       	pop	r10		;
    628e:	3b 41       	pop	r11		;
    6290:	34 41       	pop	r4		;
    6292:	30 41       	ret			

00006294 <msp_clock_setup>:
    6294:	04 12       	push	r4		;
    6296:	04 41       	mov	r1,	r4	;
    6298:	f2 40 a5 ff 	mov.b	#65445,	&0x0161	;#0xffa5
    629c:	61 01 
    629e:	b2 40 0c 00 	mov	#12,	&0x0162	;#0x000c
    62a2:	62 01 
    62a4:	b2 40 33 00 	mov	#51,	&0x0164	;#0x0033
    62a8:	64 01 
    62aa:	82 43 66 01 	mov	#0,	&0x0166	;r3 As==00
    62ae:	34 41       	pop	r4		;
    62b0:	30 41       	ret			
	...

000062b4 <printf>:
    62b4:	04 12       	push	r4		;
    62b6:	04 41       	mov	r1,	r4	;
    62b8:	31 80 20 00 	sub	#32,	r1	;#0x0020
    62bc:	1c 44 04 00 	mov	4(r4),	r12	;
    62c0:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    62c4:	0c 44       	mov	r4,	r12	;
    62c6:	3c 50 06 00 	add	#6,	r12	;
    62ca:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    62ce:	00 3c       	jmp	$+2      	;abs 0x62d0
    62d0:	1c 44 fc ff 	mov	-4(r4),	r12	;
    62d4:	0d 4c       	mov	r12,	r13	;
    62d6:	1d 53       	inc	r13		;
    62d8:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    62dc:	6e 4c       	mov.b	@r12,	r14	;
    62de:	c4 4e fb ff 	mov.b	r14,	-5(r4)	; 0xfffb
    62e2:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    62e4:	02 20       	jnz	$+6      	;abs 0x62ea
    62e6:	52 3d       	jmp	$+678    	;abs 0x658c
    62e8:	00 3c       	jmp	$+2      	;abs 0x62ea
    62ea:	5c 44 fb ff 	mov.b	-5(r4),	r12	;
    62ee:	7c 90 25 00 	cmp.b	#37,	r12	;#0x0025
    62f2:	02 24       	jz	$+6      	;abs 0x62f8
    62f4:	40 3d       	jmp	$+642    	;abs 0x6576
    62f6:	00 3c       	jmp	$+2      	;abs 0x62f8
    62f8:	84 43 f2 ff 	mov	#0,	-14(r4)	;r3 As==00, 0xfff2
    62fc:	00 3c       	jmp	$+2      	;abs 0x62fe
    62fe:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6302:	0d 4c       	mov	r12,	r13	;
    6304:	1d 53       	inc	r13		;
    6306:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    630a:	6c 4c       	mov.b	@r12,	r12	;
    630c:	8c 11       	sxt	r12		;
    630e:	4e 4c       	mov.b	r12,	r14	;
    6310:	c4 4e fb ff 	mov.b	r14,	-5(r4)	; 0xfffb
    6314:	0c 93       	cmp	#0,	r12	;r3 As==00
    6316:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    631a:	02 20       	jnz	$+6      	;abs 0x6320
    631c:	27 3d       	jmp	$+592    	;abs 0x656c
    631e:	00 3c       	jmp	$+2      	;abs 0x6320
    6320:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6324:	3c 90 30 00 	cmp	#48,	r12	;#0x0030
    6328:	02 20       	jnz	$+6      	;abs 0x632e
    632a:	0f 3d       	jmp	$+544    	;abs 0x654a
    632c:	00 3c       	jmp	$+2      	;abs 0x632e
    632e:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6332:	3c 90 63 00 	cmp	#99,	r12	;#0x0063
    6336:	34 24       	jz	$+106    	;abs 0x63a0
    6338:	00 3c       	jmp	$+2      	;abs 0x633a
    633a:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    633e:	3c 90 69 00 	cmp	#105,	r12	;#0x0069
    6342:	3d 24       	jz	$+124    	;abs 0x63be
    6344:	00 3c       	jmp	$+2      	;abs 0x6346
    6346:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    634a:	3c 90 6c 00 	cmp	#108,	r12	;#0x006c
    634e:	66 24       	jz	$+206    	;abs 0x641c
    6350:	00 3c       	jmp	$+2      	;abs 0x6352
    6352:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6356:	3c 90 6e 00 	cmp	#110,	r12	;#0x006e
    635a:	60 24       	jz	$+194    	;abs 0x641c
    635c:	00 3c       	jmp	$+2      	;abs 0x635e
    635e:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6362:	3c 90 73 00 	cmp	#115,	r12	;#0x0073
    6366:	0d 24       	jz	$+28     	;abs 0x6382
    6368:	00 3c       	jmp	$+2      	;abs 0x636a
    636a:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    636e:	3c 90 75 00 	cmp	#117,	r12	;#0x0075
    6372:	25 24       	jz	$+76     	;abs 0x63be
    6374:	00 3c       	jmp	$+2      	;abs 0x6376
    6376:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    637a:	3c 90 78 00 	cmp	#120,	r12	;#0x0078
    637e:	8a 24       	jz	$+278    	;abs 0x6494
    6380:	f8 3c       	jmp	$+498    	;abs 0x6572
    6382:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    6386:	1c 53       	inc	r12		;
    6388:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    638c:	0d 4c       	mov	r12,	r13	;
    638e:	2d 53       	incd	r13		;
    6390:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    6394:	2f 4c       	mov	@r12,	r15	;
    6396:	b0 12 58 67 	call	#26456		;#0x6758
    639a:	84 4f ea ff 	mov	r15,	-22(r4)	; 0xffea
    639e:	ea 3c       	jmp	$+470    	;abs 0x6574
    63a0:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    63a4:	1c 53       	inc	r12		;
    63a6:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    63aa:	0d 4c       	mov	r12,	r13	;
    63ac:	2d 53       	incd	r13		;
    63ae:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    63b2:	2f 4c       	mov	@r12,	r15	;
    63b4:	b0 12 24 67 	call	#26404		;#0x6724
    63b8:	84 4f e8 ff 	mov	r15,	-24(r4)	; 0xffe8
    63bc:	db 3c       	jmp	$+440    	;abs 0x6574
    63be:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    63c2:	1c 53       	inc	r12		;
    63c4:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    63c8:	0d 4c       	mov	r12,	r13	;
    63ca:	2d 53       	incd	r13		;
    63cc:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    63d0:	2c 4c       	mov	@r12,	r12	;
    63d2:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    63d6:	5e 44 fb ff 	mov.b	-5(r4),	r14	;
    63da:	7e 90 69 00 	cmp.b	#105,	r14	;#0x0069
    63de:	13 20       	jnz	$+40     	;abs 0x6406
    63e0:	00 3c       	jmp	$+2      	;abs 0x63e2
    63e2:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    63e6:	0c 93       	cmp	#0,	r12	;r3 As==00
    63e8:	0e 34       	jge	$+30     	;abs 0x6406
    63ea:	00 3c       	jmp	$+2      	;abs 0x63ec
    63ec:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    63f0:	0d 43       	clr	r13		;
    63f2:	0d 8c       	sub	r12,	r13	;
    63f4:	84 4d f8 ff 	mov	r13,	-8(r4)	; 0xfff8
    63f8:	3f 40 2d 00 	mov	#45,	r15	;#0x002d
    63fc:	b0 12 24 67 	call	#26404		;#0x6724
    6400:	84 4f e6 ff 	mov	r15,	-26(r4)	; 0xffe6
    6404:	00 3c       	jmp	$+2      	;abs 0x6406
    6406:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    640a:	3c 40 14 00 	mov	#20,	r12	;#0x0014
    640e:	3c 50 b4 44 	add	#17588,	r12	;#0x44b4
    6412:	0f 43       	clr	r15		;
    6414:	0d 4c       	mov	r12,	r13	;
    6416:	b0 12 a0 65 	call	#26016		;#0x65a0
    641a:	ac 3c       	jmp	$+346    	;abs 0x6574
    641c:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    6420:	1c 53       	inc	r12		;
    6422:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    6426:	0d 4c       	mov	r12,	r13	;
    6428:	2d 53       	incd	r13		;
    642a:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    642e:	2c 4c       	mov	@r12,	r12	;
    6430:	1d 44 ee ff 	mov	-18(r4),r13	;0xffffffee
    6434:	0e 4d       	mov	r13,	r14	;
    6436:	2e 53       	incd	r14		;
    6438:	84 4e ee ff 	mov	r14,	-18(r4)	; 0xffee
    643c:	2d 4d       	mov	@r13,	r13	;
    643e:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    6442:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    6446:	5f 44 fb ff 	mov.b	-5(r4),	r15	;
    644a:	7f 90 6c 00 	cmp.b	#108,	r15	;#0x006c
    644e:	19 20       	jnz	$+52     	;abs 0x6482
    6450:	00 3c       	jmp	$+2      	;abs 0x6452
    6452:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6456:	0c 93       	cmp	#0,	r12	;r3 As==00
    6458:	14 34       	jge	$+42     	;abs 0x6482
    645a:	00 3c       	jmp	$+2      	;abs 0x645c
    645c:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6460:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    6464:	0e 43       	clr	r14		;
    6466:	0f 4e       	mov	r14,	r15	;
    6468:	0f 8c       	sub	r12,	r15	;
    646a:	0e 7d       	subc	r13,	r14	;
    646c:	84 4e f6 ff 	mov	r14,	-10(r4)	; 0xfff6
    6470:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    6474:	3f 40 2d 00 	mov	#45,	r15	;#0x002d
    6478:	b0 12 24 67 	call	#26404		;#0x6724
    647c:	84 4f e4 ff 	mov	r15,	-28(r4)	; 0xffe4
    6480:	00 3c       	jmp	$+2      	;abs 0x6482
    6482:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfffffff6
    6486:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfffffff4
    648a:	3d 40 b4 44 	mov	#17588,	r13	;#0x44b4
    648e:	b0 12 a0 65 	call	#26016		;#0x65a0
    6492:	70 3c       	jmp	$+226    	;abs 0x6574
    6494:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    6498:	1c 53       	inc	r12		;
    649a:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    649e:	0d 4c       	mov	r12,	r13	;
    64a0:	2d 53       	incd	r13		;
    64a2:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    64a6:	2c 4c       	mov	@r12,	r12	;
    64a8:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    64ac:	0c 11       	rra	r12		;
    64ae:	0c 11       	rra	r12		;
    64b0:	0c 11       	rra	r12		;
    64b2:	0c 11       	rra	r12		;
    64b4:	0c 11       	rra	r12		;
    64b6:	0c 11       	rra	r12		;
    64b8:	0c 11       	rra	r12		;
    64ba:	0c 11       	rra	r12		;
    64bc:	0c 11       	rra	r12		;
    64be:	0c 11       	rra	r12		;
    64c0:	0c 11       	rra	r12		;
    64c2:	0c 11       	rra	r12		;
    64c4:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    64c8:	0c 93       	cmp	#0,	r12	;r3 As==00
    64ca:	06 20       	jnz	$+14     	;abs 0x64d8
    64cc:	00 3c       	jmp	$+2      	;abs 0x64ce
    64ce:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    64d2:	2c 92       	cmp	#4,	r12	;r2 As==10
    64d4:	06 38       	jl	$+14     	;abs 0x64e2
    64d6:	00 3c       	jmp	$+2      	;abs 0x64d8
    64d8:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfffffff0
    64dc:	b0 12 ec 66 	call	#26348		;#0x66ec
    64e0:	00 3c       	jmp	$+2      	;abs 0x64e2
    64e2:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    64e6:	0c 11       	rra	r12		;
    64e8:	0c 11       	rra	r12		;
    64ea:	0c 11       	rra	r12		;
    64ec:	0c 11       	rra	r12		;
    64ee:	0c 11       	rra	r12		;
    64f0:	0c 11       	rra	r12		;
    64f2:	0c 11       	rra	r12		;
    64f4:	0c 11       	rra	r12		;
    64f6:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    64fa:	0c 93       	cmp	#0,	r12	;r3 As==00
    64fc:	07 20       	jnz	$+16     	;abs 0x650c
    64fe:	00 3c       	jmp	$+2      	;abs 0x6500
    6500:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6504:	3c 90 03 00 	cmp	#3,	r12	;
    6508:	06 38       	jl	$+14     	;abs 0x6516
    650a:	00 3c       	jmp	$+2      	;abs 0x650c
    650c:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfffffff0
    6510:	b0 12 ec 66 	call	#26348		;#0x66ec
    6514:	00 3c       	jmp	$+2      	;abs 0x6516
    6516:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    651a:	0c 11       	rra	r12		;
    651c:	0c 11       	rra	r12		;
    651e:	0c 11       	rra	r12		;
    6520:	0c 11       	rra	r12		;
    6522:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    6526:	0c 93       	cmp	#0,	r12	;r3 As==00
    6528:	06 20       	jnz	$+14     	;abs 0x6536
    652a:	00 3c       	jmp	$+2      	;abs 0x652c
    652c:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6530:	2c 93       	cmp	#2,	r12	;r3 As==10
    6532:	06 38       	jl	$+14     	;abs 0x6540
    6534:	00 3c       	jmp	$+2      	;abs 0x6536
    6536:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfffffff0
    653a:	b0 12 ec 66 	call	#26348		;#0x66ec
    653e:	00 3c       	jmp	$+2      	;abs 0x6540
    6540:	1f 44 f8 ff 	mov	-8(r4),	r15	;
    6544:	b0 12 ec 66 	call	#26348		;#0x66ec
    6548:	15 3c       	jmp	$+44     	;abs 0x6574
    654a:	1c 44 fc ff 	mov	-4(r4),	r12	;
    654e:	0d 4c       	mov	r12,	r13	;
    6550:	1d 53       	inc	r13		;
    6552:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    6556:	6e 4c       	mov.b	@r12,	r14	;
    6558:	c4 4e fb ff 	mov.b	r14,	-5(r4)	; 0xfffb
    655c:	5c 44 fb ff 	mov.b	-5(r4),	r12	;
    6560:	8c 11       	sxt	r12		;
    6562:	3c 50 d0 ff 	add	#65488,	r12	;#0xffd0
    6566:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    656a:	c9 3e       	jmp	$-620    	;abs 0x62fe
    656c:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    6570:	10 3c       	jmp	$+34     	;abs 0x6592
    6572:	02 3c       	jmp	$+6      	;abs 0x6578
    6574:	0a 3c       	jmp	$+22     	;abs 0x658a
    6576:	00 3c       	jmp	$+2      	;abs 0x6578
    6578:	5c 44 fb ff 	mov.b	-5(r4),	r12	;
    657c:	8c 11       	sxt	r12		;
    657e:	0f 4c       	mov	r12,	r15	;
    6580:	b0 12 24 67 	call	#26404		;#0x6724
    6584:	84 4f e2 ff 	mov	r15,	-30(r4)	; 0xffe2
    6588:	00 3c       	jmp	$+2      	;abs 0x658a
    658a:	a2 3e       	jmp	$-698    	;abs 0x62d0
    658c:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    6590:	00 3c       	jmp	$+2      	;abs 0x6592
    6592:	1f 44 fe ff 	mov	-2(r4),	r15	;
    6596:	31 50 20 00 	add	#32,	r1	;#0x0020
    659a:	34 41       	pop	r4		;
    659c:	30 41       	ret			
	...

000065a0 <xtoa>:
    65a0:	04 12       	push	r4		;
    65a2:	04 41       	mov	r1,	r4	;
    65a4:	0b 12       	push	r11		;
    65a6:	0a 12       	push	r10		;
    65a8:	09 12       	push	r9		;
    65aa:	31 80 22 00 	sub	#34,	r1	;#0x0022
    65ae:	0c 4f       	mov	r15,	r12	;
    65b0:	0b 4e       	mov	r14,	r11	;
    65b2:	0a 4d       	mov	r13,	r10	;
    65b4:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    65b8:	84 4e f4 ff 	mov	r14,	-12(r4)	; 0xfff4
    65bc:	84 4d f2 ff 	mov	r13,	-14(r4)	; 0xfff2
    65c0:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    65c4:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfffffff4
    65c8:	0e dd       	bis	r13,	r14	;
    65ca:	0e 93       	cmp	#0,	r14	;r3 As==00
    65cc:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    65d0:	84 4a e8 ff 	mov	r10,	-24(r4)	; 0xffe8
    65d4:	84 4b e6 ff 	mov	r11,	-26(r4)	; 0xffe6
    65d8:	7a 24       	jz	$+246    	;abs 0x66ce
    65da:	00 3c       	jmp	$+2      	;abs 0x65dc
    65dc:	00 3c       	jmp	$+2      	;abs 0x65de
    65de:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    65e2:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    65e6:	1e 44 f2 ff 	mov	-14(r4),r14	;0xfffffff2
    65ea:	2f 4e       	mov	@r14,	r15	;
    65ec:	1e 4e 02 00 	mov	2(r14),	r14	;
    65f0:	0d 9e       	cmp	r14,	r13	;
    65f2:	0b 42       	mov	r2,	r11	;
    65f4:	1b f3       	and	#1,	r11	;r3 As==01
    65f6:	0c 9f       	cmp	r15,	r12	;
    65f8:	0c 42       	mov	r2,	r12	;
    65fa:	1c f3       	and	#1,	r12	;r3 As==01
    65fc:	0d 9e       	cmp	r14,	r13	;
    65fe:	84 4b e4 ff 	mov	r11,	-28(r4)	; 0xffe4
    6602:	84 4c e2 ff 	mov	r12,	-30(r4)	; 0xffe2
    6606:	04 24       	jz	$+10     	;abs 0x6610
    6608:	1c 44 e4 ff 	mov	-28(r4),r12	;0xffffffe4
    660c:	84 4c e2 ff 	mov	r12,	-30(r4)	; 0xffe2
    6610:	1c 44 e2 ff 	mov	-30(r4),r12	;0xffffffe2
    6614:	1c b3       	bit	#1,	r12	;r3 As==01
    6616:	07 20       	jnz	$+16     	;abs 0x6626
    6618:	00 3c       	jmp	$+2      	;abs 0x661a
    661a:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    661e:	2c 52       	add	#4,	r12	;r2 As==10
    6620:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    6624:	dc 3f       	jmp	$-70     	;abs 0x65de
    6626:	00 3c       	jmp	$+2      	;abs 0x6628
    6628:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    662c:	0d 4c       	mov	r12,	r13	;
    662e:	2d 52       	add	#4,	r13	;r2 As==10
    6630:	84 4d f2 ff 	mov	r13,	-14(r4)	; 0xfff2
    6634:	2d 4c       	mov	@r12,	r13	;
    6636:	1c 4c 02 00 	mov	2(r12),	r12	;
    663a:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    663e:	84 4d ec ff 	mov	r13,	-20(r4)	; 0xffec
    6642:	f4 40 30 00 	mov.b	#48,	-15(r4)	;#0x0030, 0xfff1
    6646:	f1 ff 
    6648:	00 3c       	jmp	$+2      	;abs 0x664a
    664a:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    664e:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    6652:	1e 44 ec ff 	mov	-20(r4),r14	;0xffffffec
    6656:	1f 44 ee ff 	mov	-18(r4),r15	;0xffffffee
    665a:	0d 9f       	cmp	r15,	r13	;
    665c:	0b 42       	mov	r2,	r11	;
    665e:	1a 43       	mov	#1,	r10	;r3 As==01
    6660:	09 4a       	mov	r10,	r9	;
    6662:	09 cb       	bic	r11,	r9	;
    6664:	0c 9e       	cmp	r14,	r12	;
    6666:	0c 42       	mov	r2,	r12	;
    6668:	0a cc       	bic	r12,	r10	;
    666a:	0d 9f       	cmp	r15,	r13	;
    666c:	84 49 e0 ff 	mov	r9,	-32(r4)	; 0xffe0
    6670:	84 4a de ff 	mov	r10,	-34(r4)	; 0xffde
    6674:	04 24       	jz	$+10     	;abs 0x667e
    6676:	1c 44 e0 ff 	mov	-32(r4),r12	;0xffffffe0
    667a:	84 4c de ff 	mov	r12,	-34(r4)	; 0xffde
    667e:	1c 44 de ff 	mov	-34(r4),r12	;0xffffffde
    6682:	1c b3       	bit	#1,	r12	;r3 As==01
    6684:	15 20       	jnz	$+44     	;abs 0x66b0
    6686:	00 3c       	jmp	$+2      	;abs 0x6688
    6688:	5c 44 f1 ff 	mov.b	-15(r4),r12	;0xfffffff1
    668c:	5c 53       	inc.b	r12		;
    668e:	c4 4c f1 ff 	mov.b	r12,	-15(r4)	; 0xfff1
    6692:	1d 44 ec ff 	mov	-20(r4),r13	;0xffffffec
    6696:	1e 44 ee ff 	mov	-18(r4),r14	;0xffffffee
    669a:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfffffff4
    669e:	1b 44 f6 ff 	mov	-10(r4),r11	;0xfffffff6
    66a2:	0f 8d       	sub	r13,	r15	;
    66a4:	0b 7e       	subc	r14,	r11	;
    66a6:	84 4b f6 ff 	mov	r11,	-10(r4)	; 0xfff6
    66aa:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    66ae:	cd 3f       	jmp	$-100    	;abs 0x664a
    66b0:	5c 44 f1 ff 	mov.b	-15(r4),r12	;0xfffffff1
    66b4:	8c 11       	sxt	r12		;
    66b6:	0f 4c       	mov	r12,	r15	;
    66b8:	b0 12 24 67 	call	#26404		;#0x6724
    66bc:	84 4f dc ff 	mov	r15,	-36(r4)	; 0xffdc
    66c0:	00 3c       	jmp	$+2      	;abs 0x66c2
    66c2:	5c 44 ec ff 	mov.b	-20(r4),r12	;0xffffffec
    66c6:	5c b3       	bit.b	#1,	r12	;r3 As==01
    66c8:	af 27       	jz	$-160    	;abs 0x6628
    66ca:	00 3c       	jmp	$+2      	;abs 0x66cc
    66cc:	07 3c       	jmp	$+16     	;abs 0x66dc
    66ce:	3f 40 30 00 	mov	#48,	r15	;#0x0030
    66d2:	b0 12 24 67 	call	#26404		;#0x6724
    66d6:	84 4f da ff 	mov	r15,	-38(r4)	; 0xffda
    66da:	00 3c       	jmp	$+2      	;abs 0x66dc
    66dc:	31 50 22 00 	add	#34,	r1	;#0x0022
    66e0:	39 41       	pop	r9		;
    66e2:	3a 41       	pop	r10		;
    66e4:	3b 41       	pop	r11		;
    66e6:	34 41       	pop	r4		;
    66e8:	30 41       	ret			
	...

000066ec <puth>:
    66ec:	04 12       	push	r4		;
    66ee:	04 41       	mov	r1,	r4	;
    66f0:	31 80 06 00 	sub	#6,	r1	;
    66f4:	0c 4f       	mov	r15,	r12	;
    66f6:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    66fa:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    66fe:	5f 4f dc 44 	mov.b	17628(r15),r15	;0x044dc
    6702:	8f 11       	sxt	r15		;
    6704:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    6708:	b0 12 24 67 	call	#26404		;#0x6724
    670c:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    6710:	31 50 06 00 	add	#6,	r1	;
    6714:	34 41       	pop	r4		;
    6716:	30 41       	ret			

00006718 <mspconsole_init>:
    6718:	04 12       	push	r4		;
    671a:	04 41       	mov	r1,	r4	;
    671c:	b0 12 f6 6b 	call	#27638		;#0x6bf6
    6720:	34 41       	pop	r4		;
    6722:	30 41       	ret			

00006724 <io_putchar>:
    6724:	04 12       	push	r4		;
    6726:	04 41       	mov	r1,	r4	;
    6728:	31 80 06 00 	sub	#6,	r1	;
    672c:	0c 4f       	mov	r15,	r12	;
    672e:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6732:	5d 44 fe ff 	mov.b	-2(r4),	r13	;
    6736:	c4 4d fd ff 	mov.b	r13,	-3(r4)	; 0xfffd
    673a:	0f 44       	mov	r4,	r15	;
    673c:	3f 80 03 00 	sub	#3,	r15	;
    6740:	1e 43       	mov	#1,	r14	;r3 As==01
    6742:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    6746:	b0 12 82 6c 	call	#27778		;#0x6c82
    674a:	1f 44 fe ff 	mov	-2(r4),	r15	;
    674e:	31 50 06 00 	add	#6,	r1	;
    6752:	34 41       	pop	r4		;
    6754:	30 41       	ret			
	...

00006758 <io_puts_no_newline>:
    6758:	04 12       	push	r4		;
    675a:	04 41       	mov	r1,	r4	;
    675c:	31 82       	sub	#8,	r1	;r2 As==11
    675e:	0c 4f       	mov	r15,	r12	;
    6760:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6764:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    6768:	1f 44 fe ff 	mov	-2(r4),	r15	;
    676c:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    6770:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    6774:	00 3c       	jmp	$+2      	;abs 0x6776
    6776:	1c 44 fa ff 	mov	-6(r4),	r12	;
    677a:	0d 4c       	mov	r12,	r13	;
    677c:	1d 53       	inc	r13		;
    677e:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    6782:	6e 4c       	mov.b	@r12,	r14	;
    6784:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    6786:	07 24       	jz	$+16     	;abs 0x6796
    6788:	00 3c       	jmp	$+2      	;abs 0x678a
    678a:	1c 44 fc ff 	mov	-4(r4),	r12	;
    678e:	1c 53       	inc	r12		;
    6790:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    6794:	f0 3f       	jmp	$-30     	;abs 0x6776
    6796:	1f 44 fe ff 	mov	-2(r4),	r15	;
    679a:	1e 44 fc ff 	mov	-4(r4),	r14	;
    679e:	b0 12 82 6c 	call	#27778		;#0x6c82
    67a2:	1f 44 fc ff 	mov	-4(r4),	r15	;
    67a6:	31 52       	add	#8,	r1	;r2 As==11
    67a8:	34 41       	pop	r4		;
    67aa:	30 41       	ret			

000067ac <io_puts>:
    67ac:	04 12       	push	r4		;
    67ae:	04 41       	mov	r1,	r4	;
    67b0:	31 82       	sub	#8,	r1	;r2 As==11
    67b2:	0c 4f       	mov	r15,	r12	;
    67b4:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    67b8:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    67bc:	b0 12 58 67 	call	#26456		;#0x6758
    67c0:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    67c4:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    67c8:	b0 12 24 67 	call	#26404		;#0x6724
    67cc:	1c 44 fc ff 	mov	-4(r4),	r12	;
    67d0:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    67d4:	0f 4c       	mov	r12,	r15	;
    67d6:	31 52       	add	#8,	r1	;r2 As==11
    67d8:	34 41       	pop	r4		;
    67da:	30 41       	ret			

000067dc <task_prologue>:
    67dc:	04 12       	push	r4		;
    67de:	04 41       	mov	r1,	r4	;
    67e0:	31 80 06 00 	sub	#6,	r1	;
    67e4:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    67e8:	1c 4c 04 00 	mov	4(r12),	r12	;
    67ec:	2c 4c       	mov	@r12,	r12	;
    67ee:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    67f2:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    67f6:	1c 4c 02 00 	mov	2(r12),	r12	;
    67fa:	1d 44 fe ff 	mov	-2(r4),	r13	;
    67fe:	1d 4d 08 00 	mov	8(r13),	r13	;
    6802:	0c 9d       	cmp	r13,	r12	;
    6804:	3a 24       	jz	$+118    	;abs 0x687a
    6806:	00 3c       	jmp	$+2      	;abs 0x6808
    6808:	00 3c       	jmp	$+2      	;abs 0x680a
    680a:	1c 42 c2 54 	mov	&0x54c2,r12	;0x54c2
    680e:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6812:	0c 9d       	cmp	r13,	r12	;
    6814:	25 2c       	jc	$+76     	;abs 0x6860
    6816:	00 3c       	jmp	$+2      	;abs 0x6818
    6818:	1c 42 c2 54 	mov	&0x54c2,r12	;0x54c2
    681c:	0c 5c       	rla	r12		;
    681e:	1c 4c e4 54 	mov	21732(r12),r12	;0x054e4
    6822:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    6826:	0c 93       	cmp	#0,	r12	;r3 As==00
    6828:	15 24       	jz	$+44     	;abs 0x6854
    682a:	00 3c       	jmp	$+2      	;abs 0x682c
    682c:	1c 42 c2 54 	mov	&0x54c2,r12	;0x54c2
    6830:	0c 5c       	rla	r12		;
    6832:	1c 4c 26 55 	mov	21798(r12),r12	;0x05526
    6836:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    683a:	1f 44 fc ff 	mov	-4(r4),	r15	;
    683e:	1c 42 c2 54 	mov	&0x54c2,r12	;0x54c2
    6842:	0c 5c       	rla	r12		;
    6844:	3c 50 68 55 	add	#21864,	r12	;#0x5568
    6848:	1d 44 fa ff 	mov	-6(r4),	r13	;
    684c:	0e 4c       	mov	r12,	r14	;
    684e:	b0 12 24 62 	call	#25124		;#0x6224
    6852:	00 3c       	jmp	$+2      	;abs 0x6854
    6854:	1c 42 c2 54 	mov	&0x54c2,r12	;0x54c2
    6858:	1c 53       	inc	r12		;
    685a:	82 4c c2 54 	mov	r12,	&0x54c2	;
    685e:	d5 3f       	jmp	$-84     	;abs 0x680a
    6860:	82 43 c4 54 	mov	#0,	&0x54c4	;r3 As==00
    6864:	82 43 c2 54 	mov	#0,	&0x54c2	;r3 As==00
    6868:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    686c:	1c 4c 02 00 	mov	2(r12),	r12	;
    6870:	1d 44 fe ff 	mov	-2(r4),	r13	;
    6874:	8d 4c 08 00 	mov	r12,	8(r13)	;
    6878:	03 3c       	jmp	$+8      	;abs 0x6880
    687a:	82 43 c4 54 	mov	#0,	&0x54c4	;r3 As==00
    687e:	00 3c       	jmp	$+2      	;abs 0x6880
    6880:	31 50 06 00 	add	#6,	r1	;
    6884:	34 41       	pop	r4		;
    6886:	30 41       	ret			

00006888 <transition_to>:
    6888:	04 12       	push	r4		;
    688a:	04 41       	mov	r1,	r4	;
    688c:	31 80 0a 00 	sub	#10,	r1	;#0x000a
    6890:	0c 4f       	mov	r15,	r12	;
    6892:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6896:	1f 42 e0 54 	mov	&0x54e0,r15	;0x54e0
    689a:	3d 40 da 54 	mov	#21722,	r13	;#0x54da
    689e:	3e 40 ce 54 	mov	#21710,	r14	;#0x54ce
    68a2:	0f 9d       	cmp	r13,	r15	;
    68a4:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    68a8:	84 4d f8 ff 	mov	r13,	-8(r4)	; 0xfff8
    68ac:	84 4e f6 ff 	mov	r14,	-10(r4)	; 0xfff6
    68b0:	04 24       	jz	$+10     	;abs 0x68ba
    68b2:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    68b6:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    68ba:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    68be:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    68c2:	1d 44 fe ff 	mov	-2(r4),	r13	;
    68c6:	8c 4d 00 00 	mov	r13,	0(r12)	;
    68ca:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    68ce:	1c 4c 02 00 	mov	2(r12),	r12	;
    68d2:	1c 53       	inc	r12		;
    68d4:	1d 44 fc ff 	mov	-4(r4),	r13	;
    68d8:	8d 4c 02 00 	mov	r12,	2(r13)	;
    68dc:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    68e0:	1c 4c 02 00 	mov	2(r12),	r12	;
    68e4:	1d 44 fc ff 	mov	-4(r4),	r13	;
    68e8:	1d 4d 04 00 	mov	4(r13),	r13	;
    68ec:	8d 4c 02 00 	mov	r12,	2(r13)	;
    68f0:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    68f4:	2c 4c       	mov	@r12,	r12	;
    68f6:	1d 44 fc ff 	mov	-4(r4),	r13	;
    68fa:	1d 4d 04 00 	mov	4(r13),	r13	;
    68fe:	8d 4c 00 00 	mov	r12,	0(r13)	;
    6902:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6906:	82 4c e0 54 	mov	r12,	&0x54e0	;
    690a:	b0 12 dc 67 	call	#26588		;#0x67dc
    690e:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6912:	2c 4c       	mov	@r12,	r12	;
    6914:	31 40 00 24 	mov	#9216,	r1	;#0x2400
    6918:	00 4c       	br	r12		;
    691a:	31 50 0a 00 	add	#10,	r1	;#0x000a
    691e:	34 41       	pop	r4		;
    6920:	30 41       	ret			
	...

00006924 <chan_in>:
    6924:	04 12       	push	r4		;
    6926:	04 41       	mov	r1,	r4	;
    6928:	0b 12       	push	r11		;
    692a:	0a 12       	push	r10		;
    692c:	31 80 18 00 	sub	#24,	r1	;#0x0018
    6930:	0c 4d       	mov	r13,	r12	;
    6932:	0b 4e       	mov	r14,	r11	;
    6934:	0a 4f       	mov	r15,	r10	;
    6936:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    693a:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    693e:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    6942:	84 43 f2 ff 	mov	#0,	-14(r4)	;r3 As==00, 0xfff2
    6946:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    694a:	2d 53       	incd	r13		;
    694c:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    6950:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    6954:	84 4d ec ff 	mov	r13,	-20(r4)	; 0xffec
    6958:	1d 44 ee ff 	mov	-18(r4),r13	;0xffffffee
    695c:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfffffff6
    6960:	0d 5e       	add	r14,	r13	;
    6962:	84 4d ea ff 	mov	r13,	-22(r4)	; 0xffea
    6966:	84 4d f0 ff 	mov	r13,	-16(r4)	; 0xfff0
    696a:	0f 4d       	mov	r13,	r15	;
    696c:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    6970:	84 4b e6 ff 	mov	r11,	-26(r4)	; 0xffe6
    6974:	84 4a e4 ff 	mov	r10,	-28(r4)	; 0xffe4
    6978:	31 50 18 00 	add	#24,	r1	;#0x0018
    697c:	3a 41       	pop	r10		;
    697e:	3b 41       	pop	r11		;
    6980:	34 41       	pop	r4		;
    6982:	30 41       	ret			

00006984 <chan_out>:
    6984:	04 12       	push	r4		;
    6986:	04 41       	mov	r1,	r4	;
    6988:	31 80 14 00 	sub	#20,	r1	;#0x0014
    698c:	1c 44 0a 00 	mov	10(r4),	r12	;0x0000a
    6990:	1d 44 08 00 	mov	8(r4),	r13	;
    6994:	1e 44 06 00 	mov	6(r4),	r14	;
    6998:	1f 44 04 00 	mov	4(r4),	r15	;
    699c:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    69a0:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    69a4:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    69a8:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    69ac:	1c 44 fa ff 	mov	-6(r4),	r12	;
    69b0:	2c 53       	incd	r12		;
    69b2:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    69b6:	1c 44 fa ff 	mov	-6(r4),	r12	;
    69ba:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    69be:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    69c2:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    69c6:	0c 5d       	add	r13,	r12	;
    69c8:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    69cc:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    69d0:	1e 44 fe ff 	mov	-2(r4),	r14	;
    69d4:	1d 44 fc ff 	mov	-4(r4),	r13	;
    69d8:	0f 4c       	mov	r12,	r15	;
    69da:	b0 12 24 62 	call	#25124		;#0x6224
    69de:	31 50 14 00 	add	#20,	r1	;#0x0014
    69e2:	34 41       	pop	r4		;
    69e4:	30 41       	ret			
	...

000069e8 <write_to_gbuf>:
    69e8:	04 12       	push	r4		;
    69ea:	04 41       	mov	r1,	r4	;
    69ec:	0b 12       	push	r11		;
    69ee:	0a 12       	push	r10		;
    69f0:	31 80 12 00 	sub	#18,	r1	;#0x0012
    69f4:	0c 4d       	mov	r13,	r12	;
    69f6:	0b 4e       	mov	r14,	r11	;
    69f8:	0a 4f       	mov	r15,	r10	;
    69fa:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    69fe:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    6a02:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    6a06:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6a0a:	0d 5d       	rla	r13		;
    6a0c:	3d 50 68 55 	add	#21864,	r13	;#0x5568
    6a10:	1e 44 fa ff 	mov	-6(r4),	r14	;
    6a14:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfffffff6
    6a18:	84 4f f0 ff 	mov	r15,	-16(r4)	; 0xfff0
    6a1c:	0f 4d       	mov	r13,	r15	;
    6a1e:	1d 44 f0 ff 	mov	-16(r4),r13	;0xfffffff0
    6a22:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    6a26:	84 4b ec ff 	mov	r11,	-20(r4)	; 0xffec
    6a2a:	84 4a ea ff 	mov	r10,	-22(r4)	; 0xffea
    6a2e:	b0 12 24 62 	call	#25124		;#0x6224
    6a32:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6a36:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6a3a:	0d 5d       	rla	r13		;
    6a3c:	8d 4c 26 55 	mov	r12,	21798(r13); 0x5526
    6a40:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6a44:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6a48:	0d 5d       	rla	r13		;
    6a4a:	8d 4c e4 54 	mov	r12,	21732(r13); 0x54e4
    6a4e:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6a52:	3c 90 03 00 	cmp	#3,	r12	;
    6a56:	2a 28       	jnc	$+86     	;abs 0x6aac
    6a58:	00 3c       	jmp	$+2      	;abs 0x6a5a
    6a5a:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6a5e:	3c 53       	add	#-1,	r12	;r3 As==11
    6a60:	12 c3       	clrc			
    6a62:	0c 10       	rrc	r12		;
    6a64:	1c 53       	inc	r12		;
    6a66:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    6a6a:	94 43 f2 ff 	mov	#1,	-14(r4)	;r3 As==01, 0xfff2
    6a6e:	00 3c       	jmp	$+2      	;abs 0x6a70
    6a70:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6a74:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    6a78:	0c 9d       	cmp	r13,	r12	;
    6a7a:	10 2c       	jc	$+34     	;abs 0x6a9c
    6a7c:	00 3c       	jmp	$+2      	;abs 0x6a7e
    6a7e:	1c 42 c4 54 	mov	&0x54c4,r12	;0x54c4
    6a82:	1d 44 f2 ff 	mov	-14(r4),r13	;0xfffffff2
    6a86:	0c 5d       	add	r13,	r12	;
    6a88:	0c 5c       	rla	r12		;
    6a8a:	8c 43 e4 54 	mov	#0,	21732(r12);r3 As==00, 0x54e4
    6a8e:	00 3c       	jmp	$+2      	;abs 0x6a90
    6a90:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6a94:	1c 53       	inc	r12		;
    6a96:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    6a9a:	ea 3f       	jmp	$-42     	;abs 0x6a70
    6a9c:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6aa0:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6aa4:	0d 5c       	add	r12,	r13	;
    6aa6:	82 4d c4 54 	mov	r13,	&0x54c4	;
    6aaa:	06 3c       	jmp	$+14     	;abs 0x6ab8
    6aac:	1c 42 c4 54 	mov	&0x54c4,r12	;0x54c4
    6ab0:	1c 53       	inc	r12		;
    6ab2:	82 4c c4 54 	mov	r12,	&0x54c4	;
    6ab6:	00 3c       	jmp	$+2      	;abs 0x6ab8
    6ab8:	31 50 12 00 	add	#18,	r1	;#0x0012
    6abc:	3a 41       	pop	r10		;
    6abe:	3b 41       	pop	r11		;
    6ac0:	34 41       	pop	r4		;
    6ac2:	30 41       	ret			

00006ac4 <chan_out_gbuf>:
    6ac4:	04 12       	push	r4		;
    6ac6:	04 41       	mov	r1,	r4	;
    6ac8:	31 80 18 00 	sub	#24,	r1	;#0x0018
    6acc:	1c 44 0a 00 	mov	10(r4),	r12	;0x0000a
    6ad0:	1d 44 08 00 	mov	8(r4),	r13	;
    6ad4:	1e 44 06 00 	mov	6(r4),	r14	;
    6ad8:	1f 44 04 00 	mov	4(r4),	r15	;
    6adc:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6ae0:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    6ae4:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    6ae8:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    6aec:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6af0:	2c 53       	incd	r12		;
    6af2:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    6af6:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6afa:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    6afe:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    6b02:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    6b06:	0c 5d       	add	r13,	r12	;
    6b08:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    6b0c:	1c 42 c4 54 	mov	&0x54c4,r12	;0x54c4
    6b10:	0c 5c       	rla	r12		;
    6b12:	3c 50 68 55 	add	#21864,	r12	;#0x5568
    6b16:	1e 44 fe ff 	mov	-2(r4),	r14	;
    6b1a:	1d 44 fc ff 	mov	-4(r4),	r13	;
    6b1e:	0f 4c       	mov	r12,	r15	;
    6b20:	b0 12 24 62 	call	#25124		;#0x6224
    6b24:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6b28:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6b2c:	0d 5d       	rla	r13		;
    6b2e:	8d 4c 26 55 	mov	r12,	21798(r13); 0x5526
    6b32:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6b36:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    6b3a:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6b3e:	0d 5d       	rla	r13		;
    6b40:	8d 4c e4 54 	mov	r12,	21732(r13); 0x54e4
    6b44:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6b48:	3c 90 03 00 	cmp	#3,	r12	;
    6b4c:	2a 28       	jnc	$+86     	;abs 0x6ba2
    6b4e:	00 3c       	jmp	$+2      	;abs 0x6b50
    6b50:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6b54:	3c 53       	add	#-1,	r12	;r3 As==11
    6b56:	12 c3       	clrc			
    6b58:	0c 10       	rrc	r12		;
    6b5a:	1c 53       	inc	r12		;
    6b5c:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    6b60:	94 43 e8 ff 	mov	#1,	-24(r4)	;r3 As==01, 0xffe8
    6b64:	00 3c       	jmp	$+2      	;abs 0x6b66
    6b66:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    6b6a:	1d 44 ea ff 	mov	-22(r4),r13	;0xffffffea
    6b6e:	0c 9d       	cmp	r13,	r12	;
    6b70:	10 2c       	jc	$+34     	;abs 0x6b92
    6b72:	00 3c       	jmp	$+2      	;abs 0x6b74
    6b74:	1c 42 c4 54 	mov	&0x54c4,r12	;0x54c4
    6b78:	1d 44 e8 ff 	mov	-24(r4),r13	;0xffffffe8
    6b7c:	0c 5d       	add	r13,	r12	;
    6b7e:	0c 5c       	rla	r12		;
    6b80:	8c 43 e4 54 	mov	#0,	21732(r12);r3 As==00, 0x54e4
    6b84:	00 3c       	jmp	$+2      	;abs 0x6b86
    6b86:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    6b8a:	1c 53       	inc	r12		;
    6b8c:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    6b90:	ea 3f       	jmp	$-42     	;abs 0x6b66
    6b92:	1c 44 ea ff 	mov	-22(r4),r12	;0xffffffea
    6b96:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6b9a:	0d 5c       	add	r12,	r13	;
    6b9c:	82 4d c4 54 	mov	r13,	&0x54c4	;
    6ba0:	06 3c       	jmp	$+14     	;abs 0x6bae
    6ba2:	1c 42 c4 54 	mov	&0x54c4,r12	;0x54c4
    6ba6:	1c 53       	inc	r12		;
    6ba8:	82 4c c4 54 	mov	r12,	&0x54c4	;
    6bac:	00 3c       	jmp	$+2      	;abs 0x6bae
    6bae:	31 50 18 00 	add	#24,	r1	;#0x0018
    6bb2:	34 41       	pop	r4		;
    6bb4:	30 41       	ret			
	...

00006bb8 <main>:
    6bb8:	04 12       	push	r4		;
    6bba:	04 41       	mov	r1,	r4	;
    6bbc:	21 83       	decd	r1		;
    6bbe:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    6bc2:	b0 12 8c 61 	call	#24972		;#0x618c
    6bc6:	1c 42 e2 54 	mov	&0x54e2,r12	;0x54e2
    6bca:	1c 53       	inc	r12		;
    6bcc:	82 4c e2 54 	mov	r12,	&0x54e2	;
    6bd0:	b0 12 dc 67 	call	#26588		;#0x67dc
    6bd4:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    6bd8:	2c 4c       	mov	@r12,	r12	;
    6bda:	2c 4c       	mov	@r12,	r12	;
    6bdc:	00 4c       	br	r12		;
    6bde:	0f 43       	clr	r15		;
    6be0:	21 53       	incd	r1		;
    6be2:	34 41       	pop	r4		;
    6be4:	30 41       	ret			
	...

00006be8 <__mulhi3hw_noint>:
    6be8:	82 4f c0 04 	mov	r15,	&0x04c0	;
    6bec:	82 4e c8 04 	mov	r14,	&0x04c8	;
    6bf0:	1f 42 ca 04 	mov	&0x04ca,r15	;0x04ca
    6bf4:	30 41       	ret			

00006bf6 <UART_init>:
 * @todo Currently assumes an 8MHz SMCLK. Make robust to clock frequency changes by using 32k ACLK.
 */
void UART_init(void) {

    // Configure USCI_A0 for UART mode
    UCA0CTLW0 = UCSWRST;                      // Put eUSCI in reset
    6bf6:	92 43 c0 05 	mov	#1,	&0x05c0	;r3 As==01
    UCA0CTLW0 |= UCSSEL__SMCLK;               // CLK = SMCLK
    6bfa:	b2 d0 80 00 	bis	#128,	&0x05c0	;#0x0080
    6bfe:	c0 05 
    UCA0BR1 = 0;
    UCA0MCTLW = UCOS16 | UCBRF_2 | (0xBB << 8);
#endif // UART_BAUDRATE
#elif UART_CLOCK == 8000000
#if UART_BAUDRATE == 115200
    UCA0BR0 = 4;
    6c00:	e2 42 c6 05 	mov.b	#4,	&0x05c6	;r2 As==10
    UCA0BR1 = 0;
    6c04:	c2 43 c7 05 	mov.b	#0,	&0x05c7	;r3 As==00
    UCA0MCTLW = UCOS16 | UCBRF_4 | (0x55 << 8);
    6c08:	b2 40 41 55 	mov	#21825,	&0x05c8	;#0x5541
    6c0c:	c8 05 
#endif // UART_BAUDRATE
#endif // UART_CLOCK

#if defined(__MSP430FR5969__) || defined(__MSP430FR5949__)
    PUART_TXSEL0 &= ~PIN_UART_TX; // TX pin to UART module
    6c0e:	d2 c3 0b 02 	bic.b	#1,	&0x020b	;r3 As==01
    PUART_TXSEL1 |= PIN_UART_TX;
    6c12:	d2 d3 0d 02 	bis.b	#1,	&0x020d	;r3 As==01

    PUART_RXSEL0 &= ~PIN_UART_RX; // RX pin to UART module
    6c16:	e2 c3 0b 02 	bic.b	#2,	&0x020b	;r3 As==10
    PUART_RXSEL1 |= PIN_UART_RX;
    6c1a:	e2 d3 0d 02 	bis.b	#2,	&0x020d	;r3 As==10
    PUART_RXSEL1 &= ~PIN_UART_RX;
#else
#error MCU not supported
#endif

    UCA0CTLW0 &= ~UCSWRST;                    // Initialize eUSCI
    6c1e:	92 c3 c0 05 	bic	#1,	&0x05c0	;r3 As==01

    // Initialize module state
    UART_SM.isTxBusy = FALSE;
    6c22:	3c 40 22 1c 	mov	#7202,	r12	;#0x1c22
    6c26:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    UART_SM.txBytesRemaining = 0;
    6c2a:	8c 43 04 00 	mov	#0,	4(r12)	;r3 As==00
    UART_SM.isRxBusy = FALSE;
    6c2e:	cc 43 06 00 	mov.b	#0,	6(r12)	;r3 As==00
    UART_SM.rxBytesRemaining = 0;
    6c32:	8c 43 0a 00 	mov	#0,	10(r12)	;r3 As==00, 0x000a

}
    6c36:	30 41       	ret			

00006c38 <UART_teardown>:
void UART_teardown()
{
    // disable UART
    // Not sure how to do this best, but set all UCA0* registers to
    // their default values.  See User's Guide for default values.
    PUART_TXSEL0 &= ~PIN_UART_TX;
    6c38:	d2 c3 0b 02 	bic.b	#1,	&0x020b	;r3 As==01
    PUART_TXSEL1 &= ~PIN_UART_TX;
    6c3c:	d2 c3 0d 02 	bic.b	#1,	&0x020d	;r3 As==01
    PUART_RXSEL0 &= ~PIN_UART_RX;
    6c40:	e2 c3 0b 02 	bic.b	#2,	&0x020b	;r3 As==10
    PUART_RXSEL1 &= ~PIN_UART_RX;
    6c44:	e2 c3 0d 02 	bic.b	#2,	&0x020d	;r3 As==10
    UCA0CTLW0 = 0x0001;
    6c48:	92 43 c0 05 	mov	#1,	&0x05c0	;r3 As==01
    UCA0BR0 = 0x0000;
    6c4c:	c2 43 c6 05 	mov.b	#0,	&0x05c6	;r3 As==00
    UCA0MCTLW = 0x0000;
    6c50:	82 43 c8 05 	mov	#0,	&0x05c8	;r3 As==00
    UCA0IE = 0x0000;
    6c54:	82 43 da 05 	mov	#0,	&0x05da	;r3 As==00
    UCA0IFG = 0x0000;
    6c58:	82 43 dc 05 	mov	#0,	&0x05dc	;r3 As==00
}
    6c5c:	30 41       	ret			

00006c5e <UART_asyncSend>:
 * @param size the number of bytes to send
 */
void UART_asyncSend(uint8_t* txBuf, uint16_t size) {

    // Block until prior transmission has completed
    while (UART_SM.isTxBusy)
    6c5e:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6c62:	6e 4f       	mov.b	@r15,	r14	;
    6c64:	0e 93       	cmp	#0,	r14	;r3 As==00
    6c66:	fd 23       	jnz	$-4      	;abs 0x6c62
        ;

    // Set up for start of transmission
    UART_SM.isTxBusy = TRUE;
    6c68:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6c6c:	de 43 00 00 	mov.b	#1,	0(r14)	;r3 As==01
    UART_SM.txPtr = txBuf;
    6c70:	8e 4c 02 00 	mov	r12,	2(r14)	;
    UART_SM.txBytesRemaining = size;
    6c74:	8e 4d 04 00 	mov	r13,	4(r14)	;

    UCA0IFG &= ~(USCI_UART_UCTXIFG); // Clear the 'ready to accept byte' flag
    6c78:	a2 c2 dc 05 	bic	#4,	&0x05dc	;r2 As==10

    UCA0IE |= UCTXIE; // Enable USCI_A0 TX interrupt ('ready to accept byte')
    6c7c:	a2 d3 da 05 	bis	#2,	&0x05da	;r3 As==10
    //UCA0TXBUF = *(UART_SM.txPtr++); // Load in first byte

    // The bytes are transmitted in the TX ISR (which is called whenever the
    // UART is ready to accept a byte), and the isBusy flag is cleared when the
    // last byte has *finished* transmitting.
}
    6c80:	30 41       	ret			

00006c82 <UART_send>:
 * @param size the number of bytes to send
 *
 */
void UART_send(uint8_t* txBuf, uint16_t size) {

    UART_asyncSend(txBuf, size);
    6c82:	b0 12 5e 6c 	call	#27742		;#0x6c5e

    // Block until complete
    while (UART_SM.isTxBusy)
    6c86:	3d 40 22 1c 	mov	#7202,	r13	;#0x1c22
    6c8a:	6c 4d       	mov.b	@r13,	r12	;
    6c8c:	0c 93       	cmp	#0,	r12	;r3 As==00
    6c8e:	fd 23       	jnz	$-4      	;abs 0x6c8a
        ;
}
    6c90:	30 41       	ret			

00006c92 <UART_critSend>:
 *  and use UART status register polling instead of interrupts.
 */
void UART_critSend(uint8_t* txBuf, uint16_t size) {

    // Block until prior transmission has completed
    while (UART_SM.isTxBusy)
    6c92:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6c96:	6e 4f       	mov.b	@r15,	r14	;
    6c98:	0e 93       	cmp	#0,	r14	;r3 As==00
    6c9a:	fd 23       	jnz	$-4      	;abs 0x6c96
        ;

    // Set up for start of transmission
    UART_SM.isTxBusy = TRUE;
    6c9c:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6ca0:	de 43 00 00 	mov.b	#1,	0(r14)	;r3 As==01
    UART_SM.txPtr = txBuf;
    6ca4:	8e 4c 02 00 	mov	r12,	2(r14)	;
    UART_SM.txBytesRemaining = size;
    6ca8:	8e 4d 04 00 	mov	r13,	4(r14)	;

    UCA0IV &= ~(USCI_UART_UCTXIFG); // Clear byte completion flag
    6cac:	a2 c2 de 05 	bic	#4,	&0x05de	;r2 As==10

    while (UART_SM.txBytesRemaining--) {
    6cb0:	1c 4e 04 00 	mov	4(r14),	r12	;
    6cb4:	0d 4c       	mov	r12,	r13	;
    6cb6:	3d 53       	add	#-1,	r13	;r3 As==11
    6cb8:	8e 4d 04 00 	mov	r13,	4(r14)	;
    6cbc:	0c 93       	cmp	#0,	r12	;r3 As==00
    6cbe:	19 24       	jz	$+52     	;abs 0x6cf2
        UCA0TXBUF = *(UART_SM.txPtr++); // Load in next byte
    6cc0:	0c 4e       	mov	r14,	r12	;
    6cc2:	1d 4c 02 00 	mov	2(r12),	r13	;
    6cc6:	0e 4d       	mov	r13,	r14	;
    6cc8:	1e 53       	inc	r14		;
    6cca:	8c 4e 02 00 	mov	r14,	2(r12)	;
    6cce:	6d 4d       	mov.b	@r13,	r13	;
    6cd0:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    6cd4:	82 4d ce 05 	mov	r13,	&0x05ce	;
        while (!(UCA0IFG & UCTXIFG))
    6cd8:	a2 b3 dc 05 	bit	#2,	&0x05dc	;r3 As==10
    6cdc:	fd 27       	jz	$-4      	;abs 0x6cd8
            ; // Wait for byte transmission to complete
        UCA0IFG &= ~(UCTXIFG); // Clear byte completion flag
    6cde:	a2 c3 dc 05 	bic	#2,	&0x05dc	;r3 As==10
    UART_SM.txPtr = txBuf;
    UART_SM.txBytesRemaining = size;

    UCA0IV &= ~(USCI_UART_UCTXIFG); // Clear byte completion flag

    while (UART_SM.txBytesRemaining--) {
    6ce2:	1d 4c 04 00 	mov	4(r12),	r13	;
    6ce6:	0e 4d       	mov	r13,	r14	;
    6ce8:	3e 53       	add	#-1,	r14	;r3 As==11
    6cea:	8c 4e 04 00 	mov	r14,	4(r12)	;
    6cee:	0d 93       	cmp	#0,	r13	;r3 As==00
    6cf0:	e8 23       	jnz	$-46     	;abs 0x6cc2
        while (!(UCA0IFG & UCTXIFG))
            ; // Wait for byte transmission to complete
        UCA0IFG &= ~(UCTXIFG); // Clear byte completion flag
    }

    UART_SM.isTxBusy = FALSE;
    6cf2:	c2 43 22 1c 	mov.b	#0,	&0x1c22	;r3 As==00
}
    6cf6:	30 41       	ret			

00006cf8 <UART_isTxBusy>:
/**
 * Return true if UART TX module is in the middle of an operation, false if not.
 */
uint8_t UART_isTxBusy() {
    return UART_SM.isTxBusy;
}
    6cf8:	5c 42 22 1c 	mov.b	&0x1c22,r12	;0x1c22
    6cfc:	30 41       	ret			

00006cfe <UART_asyncReceive>:
 * @param size the number of bytes to receive
 */
void UART_asyncReceive(uint8_t* rxBuf, uint16_t size) {

    // Block until prior reception has completed
    while (UART_SM.isRxBusy)
    6cfe:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6d02:	5e 4f 06 00 	mov.b	6(r15),	r14	;
    6d06:	0e 93       	cmp	#0,	r14	;r3 As==00
    6d08:	fc 23       	jnz	$-6      	;abs 0x6d02
        ;

    // Set up for start of reception
    UART_SM.isRxBusy = TRUE;
    6d0a:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6d0e:	de 43 06 00 	mov.b	#1,	6(r14)	;r3 As==01
    UART_SM.rxPtr = rxBuf;
    6d12:	8e 4c 08 00 	mov	r12,	8(r14)	;
    UART_SM.rxBytesRemaining = size;
    6d16:	8e 4d 0a 00 	mov	r13,	10(r14)	; 0x000a

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag
    6d1a:	92 c3 dc 05 	bic	#1,	&0x05dc	;r3 As==01

    UCA0IE |= UCRXIE; // Enable USCI_A0 RX interrupt
    6d1e:	92 d3 da 05 	bis	#1,	&0x05da	;r3 As==01

    // The rest of the reception will be completed by the RX ISR (which
    //  will wake after each byte has been received), and the isBusy flag
    //  will be cleared when done.
}
    6d22:	30 41       	ret			

00006d24 <UART_receive>:
 * @param size the number of bytes to receive
 *
 */
void UART_receive(uint8_t* rxBuf, uint16_t size) {

    UART_asyncReceive(rxBuf, size);
    6d24:	b0 12 fe 6c 	call	#27902		;#0x6cfe

    // Block until complete
    while (UART_SM.isRxBusy)
    6d28:	3d 40 22 1c 	mov	#7202,	r13	;#0x1c22
    6d2c:	5c 4d 06 00 	mov.b	6(r13),	r12	;
    6d30:	0c 93       	cmp	#0,	r12	;r3 As==00
    6d32:	fc 23       	jnz	$-6      	;abs 0x6d2c
        ;
}
    6d34:	30 41       	ret			

00006d36 <UART_critReceive>:
 *  and use UART status register polling instead of interrupts.
 */
void UART_critReceive(uint8_t* rxBuf, uint16_t size) {

    // Block until prior reception has completed
    while (UART_SM.isRxBusy)
    6d36:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6d3a:	5e 4f 06 00 	mov.b	6(r15),	r14	;
    6d3e:	0e 93       	cmp	#0,	r14	;r3 As==00
    6d40:	fc 23       	jnz	$-6      	;abs 0x6d3a
        ;

    // Set up for start of reception
    UART_SM.isRxBusy = TRUE;
    6d42:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6d46:	de 43 06 00 	mov.b	#1,	6(r14)	;r3 As==01
    UART_SM.rxPtr = rxBuf;
    6d4a:	8e 4c 08 00 	mov	r12,	8(r14)	;
    UART_SM.rxBytesRemaining = size;
    6d4e:	8e 4d 0a 00 	mov	r13,	10(r14)	; 0x000a

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag
    6d52:	92 c3 dc 05 	bic	#1,	&0x05dc	;r3 As==01

    while (UART_SM.rxBytesRemaining--) {
    6d56:	1c 4e 0a 00 	mov	10(r14),r12	;0x0000a
    6d5a:	0d 4c       	mov	r12,	r13	;
    6d5c:	3d 53       	add	#-1,	r13	;r3 As==11
    6d5e:	8e 4d 0a 00 	mov	r13,	10(r14)	; 0x000a
    6d62:	0c 93       	cmp	#0,	r12	;r3 As==00
    6d64:	18 24       	jz	$+50     	;abs 0x6d96
        while (!(UCA0IFG & UCRXIFG))
            ; // Wait for byte reception to complete
        UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

        uint8_t rec = UCA0RXBUF; // Read next byte
        *(UART_SM.rxPtr++) = rec; // Store byte
    6d66:	0c 4e       	mov	r14,	r12	;
    UART_SM.rxBytesRemaining = size;

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

    while (UART_SM.rxBytesRemaining--) {
        while (!(UCA0IFG & UCRXIFG))
    6d68:	92 b3 dc 05 	bit	#1,	&0x05dc	;r3 As==01
    6d6c:	fd 27       	jz	$-4      	;abs 0x6d68
            ; // Wait for byte reception to complete
        UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag
    6d6e:	92 c3 dc 05 	bic	#1,	&0x05dc	;r3 As==01

        uint8_t rec = UCA0RXBUF; // Read next byte
    6d72:	1e 42 cc 05 	mov	&0x05cc,r14	;0x05cc
        *(UART_SM.rxPtr++) = rec; // Store byte
    6d76:	1d 4c 08 00 	mov	8(r12),	r13	;
    6d7a:	0f 4d       	mov	r13,	r15	;
    6d7c:	1f 53       	inc	r15		;
    6d7e:	8c 4f 08 00 	mov	r15,	8(r12)	;
    while (UART_SM.rxBytesRemaining--) {
        while (!(UCA0IFG & UCRXIFG))
            ; // Wait for byte reception to complete
        UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

        uint8_t rec = UCA0RXBUF; // Read next byte
    6d82:	cd 4e 00 00 	mov.b	r14,	0(r13)	;
    UART_SM.rxPtr = rxBuf;
    UART_SM.rxBytesRemaining = size;

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

    while (UART_SM.rxBytesRemaining--) {
    6d86:	1d 4c 0a 00 	mov	10(r12),r13	;0x0000a
    6d8a:	0e 4d       	mov	r13,	r14	;
    6d8c:	3e 53       	add	#-1,	r14	;r3 As==11
    6d8e:	8c 4e 0a 00 	mov	r14,	10(r12)	; 0x000a
    6d92:	0d 93       	cmp	#0,	r13	;r3 As==00
    6d94:	e9 23       	jnz	$-44     	;abs 0x6d68

        uint8_t rec = UCA0RXBUF; // Read next byte
        *(UART_SM.rxPtr++) = rec; // Store byte
    }

    UART_SM.isRxBusy = FALSE;
    6d96:	c2 43 28 1c 	mov.b	#0,	&0x1c28	;r3 As==00
}
    6d9a:	30 41       	ret			

00006d9c <UART_isRxBusy>:
/**
 * Return true if UART RX module is in the middle of an operation, false if not.
 */
uint8_t UART_isRxBusy() {
    return UART_SM.isRxBusy;
}
    6d9c:	5c 42 28 1c 	mov.b	&0x1c28,r12	;0x1c28
    6da0:	30 41       	ret			

00006da2 <UART_isRxDone>:
 * Return true if UART RX module is not in the middle of an operation (e.g. done), false if not.
 *
 * Could be used in combination with UART_asyncReceive.
 */
uint8_t UART_isRxDone() {
    return !(UART_SM.isRxBusy);
    6da2:	5c 42 28 1c 	mov.b	&0x1c28,r12	;0x1c28
    6da6:	3c 53       	add	#-1,	r12	;r3 As==11
}
    6da8:	5c 03       	rrum	#1,	r12	;
    6daa:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    6dae:	30 41       	ret			

00006db0 <USCI_A0_ISR>:
#elif defined(__GNUC__)
void __attribute__ ((interrupt(USCI_A0_VECTOR))) USCI_A0_ISR (void)
#else
#error Compiler not supported!
#endif
{
    6db0:	3f 15       	pushm	#4,	r15	;16-bit words
    uint8_t rec;

    switch (__even_in_range(UCA0IV, USCI_UART_UCTXCPTIFG)) {
    6db2:	1c 42 de 05 	mov	&0x05de,r12	;0x05de
    6db6:	2c 93       	cmp	#2,	r12	;r3 As==10
    6db8:	03 24       	jz	$+8      	;abs 0x6dc0
    6dba:	2c 92       	cmp	#4,	r12	;r2 As==10
    6dbc:	1e 24       	jz	$+62     	;abs 0x6dfa
    6dbe:	38 3c       	jmp	$+114    	;abs 0x6e30
    case USCI_NONE:
        break;
    case USCI_UART_UCRXIFG:
        if (UART_SM.rxBytesRemaining--) {
    6dc0:	3d 40 22 1c 	mov	#7202,	r13	;#0x1c22
    6dc4:	1c 4d 0a 00 	mov	10(r13),r12	;0x0000a
    6dc8:	0e 4c       	mov	r12,	r14	;
    6dca:	3e 53       	add	#-1,	r14	;r3 As==11
    6dcc:	8d 4e 0a 00 	mov	r14,	10(r13)	; 0x000a
    6dd0:	0c 93       	cmp	#0,	r12	;r3 As==00
    6dd2:	0a 24       	jz	$+22     	;abs 0x6de8
            rec = UCA0RXBUF; // Read next byte
    6dd4:	1e 42 cc 05 	mov	&0x05cc,r14	;0x05cc
            *(UART_SM.rxPtr++) = rec; // Store byte
    6dd8:	1c 4d 08 00 	mov	8(r13),	r12	;
    6ddc:	0f 4c       	mov	r12,	r15	;
    6dde:	1f 53       	inc	r15		;
    6de0:	8d 4f 08 00 	mov	r15,	8(r13)	;
    switch (__even_in_range(UCA0IV, USCI_UART_UCTXCPTIFG)) {
    case USCI_NONE:
        break;
    case USCI_UART_UCRXIFG:
        if (UART_SM.rxBytesRemaining--) {
            rec = UCA0RXBUF; // Read next byte
    6de4:	cc 4e 00 00 	mov.b	r14,	0(r12)	;
            *(UART_SM.rxPtr++) = rec; // Store byte
        }

        if (0 == UART_SM.rxBytesRemaining) {
    6de8:	1c 42 2c 1c 	mov	&0x1c2c,r12	;0x1c2c
    6dec:	0c 93       	cmp	#0,	r12	;r3 As==00
    6dee:	20 20       	jnz	$+66     	;abs 0x6e30
            UCA0IE &= ~(UCRXIE); // Disable USCI_A0 RX interrupt
    6df0:	92 c3 da 05 	bic	#1,	&0x05da	;r3 As==01
            UART_SM.isRxBusy = FALSE;
    6df4:	c2 43 28 1c 	mov.b	#0,	&0x1c28	;r3 As==00
    6df8:	1b 3c       	jmp	$+56     	;abs 0x6e30
        }

        break;
    case USCI_UART_UCTXIFG:
        UCA0TXBUF = *(UART_SM.txPtr++); // if interrupt was enabled, there must be bytes
    6dfa:	3c 40 22 1c 	mov	#7202,	r12	;#0x1c22
    6dfe:	1d 4c 02 00 	mov	2(r12),	r13	;
    6e02:	0e 4d       	mov	r13,	r14	;
    6e04:	1e 53       	inc	r14		;
    6e06:	8c 4e 02 00 	mov	r14,	2(r12)	;
    6e0a:	6d 4d       	mov.b	@r13,	r13	;
    6e0c:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    6e10:	82 4d ce 05 	mov	r13,	&0x05ce	;
        if (--UART_SM.txBytesRemaining == 0) {
    6e14:	1d 4c 04 00 	mov	4(r12),	r13	;
    6e18:	3d 53       	add	#-1,	r13	;r3 As==11
    6e1a:	8c 4d 04 00 	mov	r13,	4(r12)	;
    6e1e:	0d 93       	cmp	#0,	r13	;r3 As==00
    6e20:	07 20       	jnz	$+16     	;abs 0x6e30
            // TODO: actually, this wait should probably happen for blocking version only
            while (UCA0STATW & UCBUSY); // wait for last byte to finish transmitting
    6e22:	d2 b3 ca 05 	bit.b	#1,	&0x05ca	;r3 As==01
    6e26:	fd 23       	jnz	$-4      	;abs 0x6e22
            UCA0IE &= ~(UCTXIE); // Disable USCI_A0 TX interrupt
    6e28:	a2 c3 da 05 	bic	#2,	&0x05da	;r3 As==10
            UART_SM.isTxBusy = FALSE;
    6e2c:	c2 43 22 1c 	mov.b	#0,	&0x1c22	;r3 As==00
    case USCI_UART_UCSTTIFG:
        break;
    case USCI_UART_UCTXCPTIFG:
        break;
    }
}
    6e30:	3c 17       	popm	#4,	r15	;16-bit words
    6e32:	00 13       	reti			

00006e34 <memmove>:
    6e34:	0a 15       	pushm	#1,	r10	;16-bit words
    6e36:	0d 9c       	cmp	r12,	r13	;
    6e38:	10 2c       	jc	$+34     	;abs 0x6e5a
    6e3a:	0b 4d       	mov	r13,	r11	;
    6e3c:	0b 5e       	add	r14,	r11	;
    6e3e:	0c 9b       	cmp	r11,	r12	;
    6e40:	0c 2c       	jc	$+26     	;abs 0x6e5a
    6e42:	0d 4e       	mov	r14,	r13	;
    6e44:	3d 53       	add	#-1,	r13	;r3 As==11
    6e46:	3d 93       	cmp	#-1,	r13	;r3 As==11
    6e48:	13 24       	jz	$+40     	;abs 0x6e70
    6e4a:	0f 4d       	mov	r13,	r15	;
    6e4c:	0f 8e       	sub	r14,	r15	;
    6e4e:	0f 5b       	add	r11,	r15	;
    6e50:	0a 4c       	mov	r12,	r10	;
    6e52:	0a 5d       	add	r13,	r10	;
    6e54:	ea 4f 00 00 	mov.b	@r15,	0(r10)	;
    6e58:	f5 3f       	jmp	$-20     	;abs 0x6e44
    6e5a:	0f 43       	clr	r15		;
    6e5c:	0f 9e       	cmp	r14,	r15	;
    6e5e:	08 24       	jz	$+18     	;abs 0x6e70
    6e60:	0a 4d       	mov	r13,	r10	;
    6e62:	0a 5f       	add	r15,	r10	;
    6e64:	0b 4c       	mov	r12,	r11	;
    6e66:	0b 5f       	add	r15,	r11	;
    6e68:	eb 4a 00 00 	mov.b	@r10,	0(r11)	;
    6e6c:	1f 53       	inc	r15		;
    6e6e:	f6 3f       	jmp	$-18     	;abs 0x6e5c
    6e70:	0a 17       	popm	#1,	r10	;16-bit words
    6e72:	30 41       	ret			

00006e74 <memset>:
    6e74:	0f 4c       	mov	r12,	r15	;
    6e76:	0e 5c       	add	r12,	r14	;
    6e78:	0f 9e       	cmp	r14,	r15	;
    6e7a:	04 24       	jz	$+10     	;abs 0x6e84
    6e7c:	cf 4d 00 00 	mov.b	r13,	0(r15)	;
    6e80:	1f 53       	inc	r15		;
    6e82:	fa 3f       	jmp	$-10     	;abs 0x6e78
    6e84:	30 41       	ret			

00006e86 <__do_global_ctors_aux>:
    6e86:	0a 15       	pushm	#1,	r10	;16-bit words
    6e88:	1c 42 f4 44 	mov	&0x44f4,r12	;0x44f4
    6e8c:	3c 93       	cmp	#-1,	r12	;r3 As==11
    6e8e:	08 24       	jz	$+18     	;abs 0x6ea0
    6e90:	3a 40 f4 44 	mov	#17652,	r10	;#0x44f4
    6e94:	8c 12       	call	r12		;
    6e96:	3a 50 fe ff 	add	#65534,	r10	;#0xfffe
    6e9a:	2c 4a       	mov	@r10,	r12	;
    6e9c:	3c 93       	cmp	#-1,	r12	;r3 As==11
    6e9e:	fa 23       	jnz	$-10     	;abs 0x6e94
    6ea0:	0a 17       	popm	#1,	r10	;16-bit words
    6ea2:	30 41       	ret			

00006ea4 <call___do_global_ctors_aux>:
    6ea4:	30 41       	ret			

00006ea6 <__msp430_init>:
    6ea6:	b0 12 ac 56 	call	#22188		;#0x56ac
    6eaa:	b0 12 86 6e 	call	#28294		;#0x6e86
    6eae:	b0 12 ec 55 	call	#21996		;#0x55ec
    6eb2:	b0 12 e0 55 	call	#21984		;#0x55e0
    6eb6:	30 41       	ret			

00006eb8 <__msp430_fini>:
    6eb8:	b0 12 f8 55 	call	#22008		;#0x55f8
    6ebc:	b0 12 5e 56 	call	#22110		;#0x565e
    6ec0:	30 41       	ret			

templog.out:     file format elf32-msp430


Disassembly of section __interrupt_vector_49:

0000fff0 <__interrupt_vector_49>:
    fff0:	b0 6d       	interrupt service routine at 0x6db0

Disassembly of section .text:

000055b0 <__crt0_start>:
    55b0:	31 40 00 24 	mov	#9216,	r1	;#0x2400

000055b4 <__crt0_init_bss>:
    55b4:	3c 40 04 1c 	mov	#7172,	r12	;#0x1c04
    55b8:	0d 43       	clr	r13		;
    55ba:	3e 40 2a 00 	mov	#42,	r14	;#0x002a
    55be:	b0 12 74 6e 	call	#28276		;#0x6e74

000055c2 <__crt0_movedata>:
    55c2:	3c 40 00 1c 	mov	#7168,	r12	;#0x1c00
    55c6:	3d 40 aa 55 	mov	#21930,	r13	;#0x55aa
    55ca:	0d 9c       	cmp	r12,	r13	;
    55cc:	04 24       	jz	$+10     	;abs 0x55d6
    55ce:	3e 40 04 00 	mov	#4,	r14	;
    55d2:	b0 12 34 6e 	call	#28212		;#0x6e34

000055d6 <__crt0_call_init_then_main>:
    55d6:	b0 12 a6 6e 	call	#28326		;#0x6ea6
    55da:	0c 43       	clr	r12		;
    55dc:	b0 12 b8 6b 	call	#27576		;#0x6bb8

000055e0 <_msp430_run_init_array>:
    55e0:	34 40 f0 44 	mov	#17648,	r4	;#0x44f0
    55e4:	35 40 f0 44 	mov	#17648,	r5	;#0x44f0
    55e8:	26 43       	mov	#2,	r6	;r3 As==10
    55ea:	0d 3c       	jmp	$+28     	;abs 0x5606

000055ec <_msp430_run_preinit_array>:
    55ec:	34 40 f0 44 	mov	#17648,	r4	;#0x44f0
    55f0:	35 40 f0 44 	mov	#17648,	r5	;#0x44f0
    55f4:	26 43       	mov	#2,	r6	;r3 As==10
    55f6:	07 3c       	jmp	$+16     	;abs 0x5606

000055f8 <_msp430_run_fini_array>:
    55f8:	34 40 f0 44 	mov	#17648,	r4	;#0x44f0
    55fc:	35 40 f0 44 	mov	#17648,	r5	;#0x44f0
    5600:	36 40 fe ff 	mov	#65534,	r6	;#0xfffe
    5604:	00 3c       	jmp	$+2      	;abs 0x5606

00005606 <_msp430_run_array>:
    5606:	05 94       	cmp	r4,	r5	;
    5608:	05 24       	jz	$+12     	;abs 0x5614
    560a:	27 44       	mov	@r4,	r7	;
    560c:	04 56       	add	r6,	r4	;
    560e:	a7 12       	call	@r7		;
    5610:	10 40 f4 ff 	br	0xfff4		;PC rel. 0x5606

00005614 <_msp430_run_done>:
    5614:	30 41       	ret			

00005616 <deregister_tm_clones>:
    5616:	3c 40 c2 6e 	mov	#28354,	r12	;#0x6ec2
    561a:	3c 80 c1 6e 	sub	#28353,	r12	;#0x6ec1
    561e:	2d 43       	mov	#2,	r13	;r3 As==10
    5620:	0d 9c       	cmp	r12,	r13	;
    5622:	07 2c       	jc	$+16     	;abs 0x5632
    5624:	3d 40 00 00 	mov	#0,	r13	;
    5628:	0d 93       	cmp	#0,	r13	;r3 As==00
    562a:	03 24       	jz	$+8      	;abs 0x5632
    562c:	3c 40 c2 6e 	mov	#28354,	r12	;#0x6ec2
    5630:	8d 12       	call	r13		;
    5632:	30 41       	ret			

00005634 <register_tm_clones>:
    5634:	3d 40 c2 6e 	mov	#28354,	r13	;#0x6ec2
    5638:	3d 80 c2 6e 	sub	#28354,	r13	;#0x6ec2
    563c:	0d 11       	rra	r13		;
    563e:	0c 4d       	mov	r13,	r12	;
    5640:	5c 03       	rrum	#1,	r12	;
    5642:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    5646:	0d 5c       	add	r12,	r13	;
    5648:	0d 11       	rra	r13		;
    564a:	0d 93       	cmp	#0,	r13	;r3 As==00
    564c:	07 24       	jz	$+16     	;abs 0x565c
    564e:	3e 40 00 00 	mov	#0,	r14	;
    5652:	0e 93       	cmp	#0,	r14	;r3 As==00
    5654:	03 24       	jz	$+8      	;abs 0x565c
    5656:	3c 40 c2 6e 	mov	#28354,	r12	;#0x6ec2
    565a:	8e 12       	call	r14		;
    565c:	30 41       	ret			

0000565e <__do_global_dtors_aux>:
    565e:	0a 15       	pushm	#1,	r10	;16-bit words
    5660:	c2 93 04 1c 	cmp.b	#0,	&0x1c04	;r3 As==00
    5664:	20 20       	jnz	$+66     	;abs 0x56a6
    5666:	1c 42 06 1c 	mov	&0x1c06,r12	;0x1c06
    566a:	3a 40 fa 44 	mov	#17658,	r10	;#0x44fa
    566e:	3a 80 f8 44 	sub	#17656,	r10	;#0x44f8
    5672:	0a 11       	rra	r10		;
    5674:	3a 53       	add	#-1,	r10	;r3 As==11
    5676:	0c 9a       	cmp	r10,	r12	;
    5678:	0b 2c       	jc	$+24     	;abs 0x5690
    567a:	1c 53       	inc	r12		;
    567c:	82 4c 06 1c 	mov	r12,	&0x1c06	;
    5680:	0c 5c       	rla	r12		;
    5682:	1c 4c f8 44 	mov	17656(r12),r12	;0x044f8
    5686:	8c 12       	call	r12		;
    5688:	1c 42 06 1c 	mov	&0x1c06,r12	;0x1c06
    568c:	0c 9a       	cmp	r10,	r12	;
    568e:	f5 2b       	jnc	$-20     	;abs 0x567a
    5690:	b0 12 16 56 	call	#22038		;#0x5616
    5694:	3d 40 00 00 	mov	#0,	r13	;
    5698:	0d 93       	cmp	#0,	r13	;r3 As==00
    569a:	03 24       	jz	$+8      	;abs 0x56a2
    569c:	3c 40 ec 44 	mov	#17644,	r12	;#0x44ec
    56a0:	8d 12       	call	r13		;
    56a2:	d2 43 04 1c 	mov.b	#1,	&0x1c04	;r3 As==01
    56a6:	0a 17       	popm	#1,	r10	;16-bit words
    56a8:	30 41       	ret			

000056aa <call___do_global_dtors_aux>:
    56aa:	30 41       	ret			

000056ac <frame_dummy>:
    56ac:	3e 40 00 00 	mov	#0,	r14	;
    56b0:	0e 93       	cmp	#0,	r14	;r3 As==00
    56b2:	05 24       	jz	$+12     	;abs 0x56be
    56b4:	3c 40 ec 44 	mov	#17644,	r12	;#0x44ec
    56b8:	3d 40 08 1c 	mov	#7176,	r13	;#0x1c08
    56bc:	8e 12       	call	r14		;
    56be:	3c 40 00 1c 	mov	#7168,	r12	;#0x1c00
    56c2:	8c 93 00 00 	cmp	#0,	0(r12)	;r3 As==00
    56c6:	03 20       	jnz	$+8      	;abs 0x56ce
    56c8:	b0 12 34 56 	call	#22068		;#0x5634
    56cc:	30 41       	ret			
    56ce:	3d 40 00 00 	mov	#0,	r13	;
    56d2:	0d 93       	cmp	#0,	r13	;r3 As==00
    56d4:	f9 27       	jz	$-12     	;abs 0x56c8
    56d6:	8d 12       	call	r13		;
    56d8:	f7 3f       	jmp	$-16     	;abs 0x56c8

000056da <call_frame_dummy>:
    56da:	30 41       	ret			

000056dc <TimerB1_ISR>:
    56dc:	04 12       	push	r4		;
    56de:	04 41       	mov	r1,	r4	;
    56e0:	0c 12       	push	r12		;
    56e2:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    56e6:	3c f0 fd ff 	and	#65533,	r12	;#0xfffd
    56ea:	82 4c c0 03 	mov	r12,	&0x03c0	;
    56ee:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    56f2:	0c 93       	cmp	#0,	r12	;r3 As==00
    56f4:	17 24       	jz	$+48     	;abs 0x5724
    56f6:	00 3c       	jmp	$+2      	;abs 0x56f8
    56f8:	1c 42 16 1c 	mov	&0x1c16,r12	;0x1c16
    56fc:	1c 53       	inc	r12		;
    56fe:	82 4c 16 1c 	mov	r12,	&0x1c16	;
    5702:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5706:	2c d2       	bis	#4,	r12	;r2 As==10
    5708:	82 4c c0 03 	mov	r12,	&0x03c0	;
    570c:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5710:	2c d3       	bis	#2,	r12	;r3 As==10
    5712:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5716:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    571a:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    571e:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5722:	00 3c       	jmp	$+2      	;abs 0x5724
    5724:	3c 41       	pop	r12		;
    5726:	34 41       	pop	r4		;
    5728:	00 13       	reti			
	...

0000572c <init>:
    572c:	04 12       	push	r4		;
    572e:	04 41       	mov	r1,	r4	;
    5730:	21 82       	sub	#4,	r1	;r2 As==10
    5732:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5736:	3c f0 ff e6 	and	#59135,	r12	;#0xe6ff
    573a:	82 4c c0 03 	mov	r12,	&0x03c0	;
    573e:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5742:	3c d0 00 02 	bis	#512,	r12	;#0x0200
    5746:	82 4c c0 03 	mov	r12,	&0x03c0	;
    574a:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    574e:	3c d0 c0 00 	bis	#192,	r12	;#0x00c0
    5752:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5756:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    575a:	3c f0 ef ff 	and	#65519,	r12	;#0xffef
    575e:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5762:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5766:	3c d0 20 00 	bis	#32,	r12	;#0x0020
    576a:	82 4c c0 03 	mov	r12,	&0x03c0	;
    576e:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5772:	2c d3       	bis	#2,	r12	;r3 As==10
    5774:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5778:	b0 12 98 61 	call	#24984		;#0x6198
    577c:	5c 42 04 02 	mov.b	&0x0204,r12	;0x0204
    5780:	2c d3       	bis	#2,	r12	;r3 As==10
    5782:	4d 4c       	mov.b	r12,	r13	;
    5784:	c2 4d 04 02 	mov.b	r13,	&0x0204	;
    5788:	5c 42 04 02 	mov.b	&0x0204,r12	;0x0204
    578c:	2c d2       	bis	#4,	r12	;r2 As==10
    578e:	4d 4c       	mov.b	r12,	r13	;
    5790:	c2 4d 04 02 	mov.b	r13,	&0x0204	;
    5794:	5c 42 04 02 	mov.b	&0x0204,r12	;0x0204
    5798:	1c d3       	bis	#1,	r12	;r3 As==01
    579a:	4d 4c       	mov.b	r12,	r13	;
    579c:	c2 4d 04 02 	mov.b	r13,	&0x0204	;
    57a0:	b0 12 18 67 	call	#26392		;#0x6718
    57a4:	0c 41       	mov	r1,	r12	;
    57a6:	bc 40 00 44 	mov	#17408,	0(r12)	;#0x4400
    57aa:	00 00 
    57ac:	b0 12 b4 62 	call	#25268		;#0x62b4
    57b0:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    57b4:	00 3c       	jmp	$+2      	;abs 0x57b6
    57b6:	ff 3f       	jmp	$+0      	;abs 0x57b6

000057b8 <task_init>:
    57b8:	04 12       	push	r4		;
    57ba:	04 41       	mov	r1,	r4	;
    57bc:	21 82       	sub	#4,	r1	;r2 As==10
    57be:	0c 41       	mov	r1,	r12	;
    57c0:	bc 40 00 44 	mov	#17408,	0(r12)	;#0x4400
    57c4:	00 00 
    57c6:	b0 12 b4 62 	call	#25268		;#0x62b4
    57ca:	82 43 f4 46 	mov	#0,	&0x46f4	;r3 As==00
    57ce:	82 43 f6 46 	mov	#0,	&0x46f6	;r3 As==00
    57d2:	82 43 f8 46 	mov	#0,	&0x46f8	;r3 As==00
    57d6:	82 43 fa 46 	mov	#0,	&0x46fa	;r3 As==00
    57da:	82 43 fc 46 	mov	#0,	&0x46fc	;r3 As==00
    57de:	92 43 fe 46 	mov	#1,	&0x46fe	;r3 As==01
    57e2:	3c 40 26 45 	mov	#17702,	r12	;#0x4526
    57e6:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    57ea:	0f 4c       	mov	r12,	r15	;
    57ec:	b0 12 88 68 	call	#26760		;#0x6888
    57f0:	21 52       	add	#4,	r1	;r2 As==10
    57f2:	34 41       	pop	r4		;
    57f4:	30 41       	ret			
	...

000057f8 <task_init_dict>:
    57f8:	04 12       	push	r4		;
    57fa:	04 41       	mov	r1,	r4	;
    57fc:	31 80 0a 00 	sub	#10,	r1	;#0x000a
    5800:	1c 42 f8 46 	mov	&0x46f8,r12	;0x46f8
    5804:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5808:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    580c:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa
    5810:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    5814:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5818:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    581c:	3e 40 06 00 	mov	#6,	r14	;
    5820:	0f 4c       	mov	r12,	r15	;
    5822:	b0 12 e8 6b 	call	#27624		;#0x6be8
    5826:	1c 44 fc ff 	mov	-4(r4),	r12	;
    582a:	8f 4c 04 47 	mov	r12,	18180(r15); 0x4704
    582e:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5832:	8f 4c 02 47 	mov	r12,	18178(r15); 0x4702
    5836:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    583a:	8f 4c 00 47 	mov	r12,	18176(r15); 0x4700
    583e:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5842:	1c 53       	inc	r12		;
    5844:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5848:	3c 90 00 01 	cmp	#256,	r12	;#0x0100
    584c:	0d 2c       	jc	$+28     	;abs 0x5868
    584e:	00 3c       	jmp	$+2      	;abs 0x5850
    5850:	3e 40 f8 46 	mov	#18168,	r14	;#0x46f8
    5854:	0f 44       	mov	r4,	r15	;
    5856:	2f 83       	decd	r15		;
    5858:	2d 43       	mov	#2,	r13	;r3 As==10
    585a:	b0 12 e8 69 	call	#27112		;#0x69e8
    585e:	3f 40 26 45 	mov	#17702,	r15	;#0x4526
    5862:	b0 12 88 68 	call	#26760		;#0x6888
    5866:	0f 3c       	jmp	$+32     	;abs 0x5886
    5868:	b2 40 00 01 	mov	#256,	&0x5300	;#0x0100
    586c:	00 53 
    586e:	3e 40 f8 46 	mov	#18168,	r14	;#0x46f8
    5872:	0f 44       	mov	r4,	r15	;
    5874:	2f 83       	decd	r15		;
    5876:	2d 43       	mov	#2,	r13	;r3 As==10
    5878:	b0 12 e8 69 	call	#27112		;#0x69e8
    587c:	3f 40 50 45 	mov	#17744,	r15	;#0x4550
    5880:	b0 12 88 68 	call	#26760		;#0x6888
    5884:	00 3c       	jmp	$+2      	;abs 0x5886
    5886:	31 50 0a 00 	add	#10,	r1	;#0x000a
    588a:	34 41       	pop	r4		;
    588c:	30 41       	ret			
	...

00005890 <task_sample>:
    5890:	04 12       	push	r4		;
    5892:	04 41       	mov	r1,	r4	;
    5894:	21 82       	sub	#4,	r1	;r2 As==10
    5896:	1c 42 fc 46 	mov	&0x46fc,r12	;0x46fc
    589a:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    589e:	1c 53       	inc	r12		;
    58a0:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    58a4:	2c 93       	cmp	#2,	r12	;r3 As==10
    58a6:	04 20       	jnz	$+10     	;abs 0x58b0
    58a8:	00 3c       	jmp	$+2      	;abs 0x58aa
    58aa:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    58ae:	00 3c       	jmp	$+2      	;abs 0x58b0
    58b0:	1c 44 fe ff 	mov	-2(r4),	r12	;
    58b4:	0c 93       	cmp	#0,	r12	;r3 As==00
    58b6:	11 20       	jnz	$+36     	;abs 0x58da
    58b8:	00 3c       	jmp	$+2      	;abs 0x58ba
    58ba:	1c 44 fc ff 	mov	-4(r4),	r12	;
    58be:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    58c2:	3e 40 fc 46 	mov	#18172,	r14	;#0x46fc
    58c6:	0f 44       	mov	r4,	r15	;
    58c8:	2f 83       	decd	r15		;
    58ca:	2d 43       	mov	#2,	r13	;r3 As==10
    58cc:	b0 12 e8 69 	call	#27112		;#0x69e8
    58d0:	3f 40 7a 45 	mov	#17786,	r15	;#0x457a
    58d4:	b0 12 88 68 	call	#26760		;#0x6888
    58d8:	10 3c       	jmp	$+34     	;abs 0x58fa
    58da:	1c 44 fc ff 	mov	-4(r4),	r12	;
    58de:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    58e2:	3e 40 fc 46 	mov	#18172,	r14	;#0x46fc
    58e6:	0f 44       	mov	r4,	r15	;
    58e8:	2f 83       	decd	r15		;
    58ea:	2d 43       	mov	#2,	r13	;r3 As==10
    58ec:	b0 12 e8 69 	call	#27112		;#0x69e8
    58f0:	3f 40 a4 45 	mov	#17828,	r15	;#0x45a4
    58f4:	b0 12 88 68 	call	#26760		;#0x6888
    58f8:	00 3c       	jmp	$+2      	;abs 0x58fa
    58fa:	21 52       	add	#4,	r1	;r2 As==10
    58fc:	34 41       	pop	r4		;
    58fe:	30 41       	ret			

00005900 <task_measure_temp>:
    5900:	04 12       	push	r4		;
    5902:	04 41       	mov	r1,	r4	;
    5904:	31 82       	sub	#8,	r1	;r2 As==11
    5906:	3e 40 fa 46 	mov	#18170,	r14	;#0x46fa
    590a:	1c 42 fa 46 	mov	&0x46fa,r12	;0x46fa
    590e:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5912:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5916:	0f 4c       	mov	r12,	r15	;
    5918:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    591c:	b0 12 b4 61 	call	#25012		;#0x61b4
    5920:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    5924:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    5928:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    592c:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5930:	82 4c 02 53 	mov	r12,	&0x5302	;
    5934:	0f 44       	mov	r4,	r15	;
    5936:	2f 83       	decd	r15		;
    5938:	2d 43       	mov	#2,	r13	;r3 As==10
    593a:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    593e:	b0 12 e8 69 	call	#27112		;#0x69e8
    5942:	3f 40 a4 45 	mov	#17828,	r15	;#0x45a4
    5946:	b0 12 88 68 	call	#26760		;#0x6888
    594a:	31 52       	add	#8,	r1	;r2 As==11
    594c:	34 41       	pop	r4		;
    594e:	30 41       	ret			

00005950 <task_letterize>:
    5950:	04 12       	push	r4		;
    5952:	04 41       	mov	r1,	r4	;
    5954:	31 80 10 00 	sub	#16,	r1	;#0x0010
    5958:	1c 42 fc 46 	mov	&0x46fc,r12	;0x46fc
    595c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5960:	0c 93       	cmp	#0,	r12	;r3 As==00
    5962:	04 20       	jnz	$+10     	;abs 0x596c
    5964:	00 3c       	jmp	$+2      	;abs 0x5966
    5966:	a4 43 fe ff 	mov	#2,	-2(r4)	;r3 As==10, 0xfffe
    596a:	06 3c       	jmp	$+14     	;abs 0x5978
    596c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5970:	3c 53       	add	#-1,	r12	;r3 As==11
    5972:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5976:	00 3c       	jmp	$+2      	;abs 0x5978
    5978:	1c 44 fe ff 	mov	-2(r4),	r12	;
    597c:	0c 5c       	rla	r12		;
    597e:	0c 5c       	rla	r12		;
    5980:	0c 5c       	rla	r12		;
    5982:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5986:	1c 42 02 53 	mov	&0x5302,r12	;0x5302
    598a:	5d 44 fc ff 	mov.b	-4(r4),	r13	;
    598e:	3e 40 ff 00 	mov	#255,	r14	;#0x00ff
    5992:	4d 93       	cmp.b	#0,	r13	;r3 As==00
    5994:	4f 4d       	mov.b	r13,	r15	;
    5996:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    599a:	c4 4d f7 ff 	mov.b	r13,	-9(r4)	; 0xfff7
    599e:	84 4e f4 ff 	mov	r14,	-12(r4)	; 0xfff4
    59a2:	c4 4f f3 ff 	mov.b	r15,	-13(r4)	; 0xfff3
    59a6:	0b 24       	jz	$+24     	;abs 0x59be
    59a8:	5c 44 f3 ff 	mov.b	-13(r4),r12	;0xfffffff3
    59ac:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    59b0:	0d 5d       	rla	r13		;
    59b2:	5c 83       	dec.b	r12		;
    59b4:	84 4d f4 ff 	mov	r13,	-12(r4)	; 0xfff4
    59b8:	c4 4c f3 ff 	mov.b	r12,	-13(r4)	; 0xfff3
    59bc:	f5 23       	jnz	$-20     	;abs 0x59a8
    59be:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    59c2:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    59c6:	0d fc       	and	r12,	r13	;
    59c8:	5e 44 f7 ff 	mov.b	-9(r4),	r14	;
    59cc:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    59ce:	c4 4e f2 ff 	mov.b	r14,	-14(r4)	; 0xfff2
    59d2:	84 4d f0 ff 	mov	r13,	-16(r4)	; 0xfff0
    59d6:	0c 24       	jz	$+26     	;abs 0x59f0
    59d8:	5c 44 f2 ff 	mov.b	-14(r4),r12	;0xfffffff2
    59dc:	1d 44 f0 ff 	mov	-16(r4),r13	;0xfffffff0
    59e0:	12 c3       	clrc			
    59e2:	0d 10       	rrc	r13		;
    59e4:	5c 83       	dec.b	r12		;
    59e6:	84 4d f0 ff 	mov	r13,	-16(r4)	; 0xfff0
    59ea:	c4 4c f2 ff 	mov.b	r12,	-14(r4)	; 0xfff2
    59ee:	f4 23       	jnz	$-22     	;abs 0x59d8
    59f0:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    59f4:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    59f8:	82 4c f8 46 	mov	r12,	&0x46f8	;
    59fc:	3f 40 ce 45 	mov	#17870,	r15	;#0x45ce
    5a00:	b0 12 88 68 	call	#26760		;#0x6888
    5a04:	31 50 10 00 	add	#16,	r1	;#0x0010
    5a08:	34 41       	pop	r4		;
    5a0a:	30 41       	ret			

00005a0c <task_compress>:
    5a0c:	04 12       	push	r4		;
    5a0e:	04 41       	mov	r1,	r4	;
    5a10:	31 80 0c 00 	sub	#12,	r1	;#0x000c
    5a14:	3e 40 fe 46 	mov	#18174,	r14	;#0x46fe
    5a18:	1c 42 fe 46 	mov	&0x46fe,r12	;0x46fe
    5a1c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5a20:	1c 42 f4 46 	mov	&0x46f4,r12	;0x46f4
    5a24:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    5a28:	3d 40 06 00 	mov	#6,	r13	;
    5a2c:	0f 4c       	mov	r12,	r15	;
    5a2e:	84 4e f4 ff 	mov	r14,	-12(r4)	; 0xfff4
    5a32:	0e 4d       	mov	r13,	r14	;
    5a34:	b0 12 e8 6b 	call	#27624		;#0x6be8
    5a38:	1c 4f 04 47 	mov	18180(r15),r12	;0x04704
    5a3c:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5a40:	1c 4f 02 47 	mov	18178(r15),r12	;0x04702
    5a44:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5a48:	1c 4f 00 47 	mov	18176(r15),r12	;0x04700
    5a4c:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5a50:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5a54:	82 4c 04 53 	mov	r12,	&0x5304	;
    5a58:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5a5c:	82 4c 0a 53 	mov	r12,	&0x530a	;
    5a60:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5a64:	82 4c 08 53 	mov	r12,	&0x5308	;
    5a68:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    5a6c:	82 4c 06 53 	mov	r12,	&0x5306	;
    5a70:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    5a74:	82 4c 0c 53 	mov	r12,	&0x530c	;
    5a78:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5a7c:	82 4c 0e 53 	mov	r12,	&0x530e	;
    5a80:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5a84:	1c 53       	inc	r12		;
    5a86:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5a8a:	0f 44       	mov	r4,	r15	;
    5a8c:	2f 83       	decd	r15		;
    5a8e:	2d 43       	mov	#2,	r13	;r3 As==10
    5a90:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfffffff4
    5a94:	b0 12 e8 69 	call	#27112		;#0x69e8
    5a98:	3f 40 f8 45 	mov	#17912,	r15	;#0x45f8
    5a9c:	b0 12 88 68 	call	#26760		;#0x6888
    5aa0:	31 50 0c 00 	add	#12,	r1	;#0x000c
    5aa4:	34 41       	pop	r4		;
    5aa6:	30 41       	ret			

00005aa8 <task_find_sibling>:
    5aa8:	04 12       	push	r4		;
    5aaa:	04 41       	mov	r1,	r4	;
    5aac:	31 82       	sub	#8,	r1	;r2 As==11
    5aae:	1c 42 04 53 	mov	&0x5304,r12	;0x5304
    5ab2:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5ab6:	0c 93       	cmp	#0,	r12	;r3 As==00
    5ab8:	41 24       	jz	$+132    	;abs 0x5b3c
    5aba:	00 3c       	jmp	$+2      	;abs 0x5abc
    5abc:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5ac0:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5ac4:	3e 40 06 00 	mov	#6,	r14	;
    5ac8:	0f 4c       	mov	r12,	r15	;
    5aca:	b0 12 e8 6b 	call	#27624		;#0x6be8
    5ace:	0c 4f       	mov	r15,	r12	;
    5ad0:	3c 50 00 47 	add	#18176,	r12	;#0x4700
    5ad4:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5ad8:	1c 4f 00 47 	mov	18176(r15),r12	;0x04700
    5adc:	1e 42 f8 46 	mov	&0x46f8,r14	;0x46f8
    5ae0:	0c 9e       	cmp	r14,	r12	;
    5ae2:	11 20       	jnz	$+36     	;abs 0x5b06
    5ae4:	00 3c       	jmp	$+2      	;abs 0x5ae6
    5ae6:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5aea:	82 4c f4 46 	mov	r12,	&0x46f4	;
    5aee:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5af2:	0f 44       	mov	r4,	r15	;
    5af4:	2f 83       	decd	r15		;
    5af6:	2d 43       	mov	#2,	r13	;r3 As==10
    5af8:	b0 12 e8 69 	call	#27112		;#0x69e8
    5afc:	3f 40 a4 45 	mov	#17828,	r15	;#0x45a4
    5b00:	b0 12 88 68 	call	#26760		;#0x6888
    5b04:	1a 3c       	jmp	$+54     	;abs 0x5b3a
    5b06:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5b0a:	1c 4c 02 00 	mov	2(r12),	r12	;
    5b0e:	0c 93       	cmp	#0,	r12	;r3 As==00
    5b10:	13 24       	jz	$+40     	;abs 0x5b38
    5b12:	00 3c       	jmp	$+2      	;abs 0x5b14
    5b14:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5b18:	1c 4c 02 00 	mov	2(r12),	r12	;
    5b1c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5b20:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5b24:	0f 44       	mov	r4,	r15	;
    5b26:	2f 83       	decd	r15		;
    5b28:	2d 43       	mov	#2,	r13	;r3 As==10
    5b2a:	b0 12 e8 69 	call	#27112		;#0x69e8
    5b2e:	3f 40 f8 45 	mov	#17912,	r15	;#0x45f8
    5b32:	b0 12 88 68 	call	#26760		;#0x6888
    5b36:	00 3c       	jmp	$+2      	;abs 0x5b38
    5b38:	00 3c       	jmp	$+2      	;abs 0x5b3a
    5b3a:	00 3c       	jmp	$+2      	;abs 0x5b3c
    5b3c:	1c 42 f8 46 	mov	&0x46f8,r12	;0x46f8
    5b40:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5b44:	82 4c f4 46 	mov	r12,	&0x46f4	;
    5b48:	1c 42 0e 53 	mov	&0x530e,r12	;0x530e
    5b4c:	0c 93       	cmp	#0,	r12	;r3 As==00
    5b4e:	0d 20       	jnz	$+28     	;abs 0x5b6a
    5b50:	00 3c       	jmp	$+2      	;abs 0x5b52
    5b52:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5b56:	0f 44       	mov	r4,	r15	;
    5b58:	2f 83       	decd	r15		;
    5b5a:	2d 43       	mov	#2,	r13	;r3 As==10
    5b5c:	b0 12 e8 69 	call	#27112		;#0x69e8
    5b60:	3f 40 4c 46 	mov	#17996,	r15	;#0x464c
    5b64:	b0 12 88 68 	call	#26760		;#0x6888
    5b68:	0c 3c       	jmp	$+26     	;abs 0x5b82
    5b6a:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5b6e:	0f 44       	mov	r4,	r15	;
    5b70:	2f 83       	decd	r15		;
    5b72:	2d 43       	mov	#2,	r13	;r3 As==10
    5b74:	b0 12 e8 69 	call	#27112		;#0x69e8
    5b78:	3f 40 22 46 	mov	#17954,	r15	;#0x4622
    5b7c:	b0 12 88 68 	call	#26760		;#0x6888
    5b80:	00 3c       	jmp	$+2      	;abs 0x5b82
    5b82:	31 52       	add	#8,	r1	;r2 As==11
    5b84:	34 41       	pop	r4		;
    5b86:	30 41       	ret			

00005b88 <task_add_node>:
    5b88:	04 12       	push	r4		;
    5b8a:	04 41       	mov	r1,	r4	;
    5b8c:	31 80 0e 00 	sub	#14,	r1	;#0x000e
    5b90:	1c 42 04 53 	mov	&0x5304,r12	;0x5304
    5b94:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5b98:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5b9c:	3e 40 06 00 	mov	#6,	r14	;
    5ba0:	0f 4c       	mov	r12,	r15	;
    5ba2:	b0 12 e8 6b 	call	#27624		;#0x6be8
    5ba6:	0c 4f       	mov	r15,	r12	;
    5ba8:	3c 50 00 47 	add	#18176,	r12	;#0x4700
    5bac:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5bb0:	1c 4f 02 47 	mov	18178(r15),r12	;0x04702
    5bb4:	0c 93       	cmp	#0,	r12	;r3 As==00
    5bb6:	15 24       	jz	$+44     	;abs 0x5be2
    5bb8:	00 3c       	jmp	$+2      	;abs 0x5bba
    5bba:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5bbe:	1c 4c 02 00 	mov	2(r12),	r12	;
    5bc2:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5bc6:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5bca:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5bce:	0f 44       	mov	r4,	r15	;
    5bd0:	2f 83       	decd	r15		;
    5bd2:	2d 43       	mov	#2,	r13	;r3 As==10
    5bd4:	b0 12 e8 69 	call	#27112		;#0x69e8
    5bd8:	3f 40 22 46 	mov	#17954,	r15	;#0x4622
    5bdc:	b0 12 88 68 	call	#26760		;#0x6888
    5be0:	25 3c       	jmp	$+76     	;abs 0x5c2c
    5be2:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5be6:	1d 4c 04 00 	mov	4(r12),	r13	;
    5bea:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    5bee:	1d 4c 02 00 	mov	2(r12),	r13	;
    5bf2:	84 4d f4 ff 	mov	r13,	-12(r4)	; 0xfff4
    5bf6:	2c 4c       	mov	@r12,	r12	;
    5bf8:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    5bfc:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    5c00:	82 4c 14 53 	mov	r12,	&0x5314	;
    5c04:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    5c08:	82 4c 12 53 	mov	r12,	&0x5312	;
    5c0c:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    5c10:	82 4c 10 53 	mov	r12,	&0x5310	;
    5c14:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5c18:	0f 44       	mov	r4,	r15	;
    5c1a:	2f 83       	decd	r15		;
    5c1c:	2d 43       	mov	#2,	r13	;r3 As==10
    5c1e:	b0 12 e8 69 	call	#27112		;#0x69e8
    5c22:	3f 40 4c 46 	mov	#17996,	r15	;#0x464c
    5c26:	b0 12 88 68 	call	#26760		;#0x6888
    5c2a:	00 3c       	jmp	$+2      	;abs 0x5c2c
    5c2c:	31 50 0e 00 	add	#14,	r1	;#0x000e
    5c30:	34 41       	pop	r4		;
    5c32:	30 41       	ret			

00005c34 <task_add_insert>:
    5c34:	04 12       	push	r4		;
    5c36:	04 41       	mov	r1,	r4	;
    5c38:	31 80 1a 00 	sub	#26,	r1	;#0x001a
    5c3c:	1c 42 00 53 	mov	&0x5300,r12	;0x5300
    5c40:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5c44:	3c 90 00 02 	cmp	#512,	r12	;#0x0200
    5c48:	03 20       	jnz	$+8      	;abs 0x5c50
    5c4a:	00 3c       	jmp	$+2      	;abs 0x5c4c
    5c4c:	00 3c       	jmp	$+2      	;abs 0x5c4e
    5c4e:	ff 3f       	jmp	$+0      	;abs 0x5c4e
    5c50:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5c54:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5c58:	1c 42 f8 46 	mov	&0x46f8,r12	;0x46f8
    5c5c:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    5c60:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8
    5c64:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa
    5c68:	1c 42 0a 53 	mov	&0x530a,r12	;0x530a
    5c6c:	0c 93       	cmp	#0,	r12	;r3 As==00
    5c6e:	27 20       	jnz	$+80     	;abs 0x5cbe
    5c70:	00 3c       	jmp	$+2      	;abs 0x5c72
    5c72:	1c 42 0a 53 	mov	&0x530a,r12	;0x530a
    5c76:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    5c7a:	1c 42 08 53 	mov	&0x5308,r12	;0x5308
    5c7e:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    5c82:	1c 42 06 53 	mov	&0x5306,r12	;0x5306
    5c86:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    5c8a:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5c8e:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    5c92:	1c 42 0c 53 	mov	&0x530c,r12	;0x530c
    5c96:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    5c9a:	3e 40 06 00 	mov	#6,	r14	;
    5c9e:	0f 4c       	mov	r12,	r15	;
    5ca0:	b0 12 e8 6b 	call	#27624		;#0x6be8
    5ca4:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    5ca8:	8f 4c 04 47 	mov	r12,	18180(r15); 0x4704
    5cac:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    5cb0:	8f 4c 02 47 	mov	r12,	18178(r15); 0x4702
    5cb4:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    5cb8:	8f 4c 00 47 	mov	r12,	18176(r15); 0x4700
    5cbc:	27 3c       	jmp	$+80     	;abs 0x5d0c
    5cbe:	1c 42 04 53 	mov	&0x5304,r12	;0x5304
    5cc2:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    5cc6:	1c 42 14 53 	mov	&0x5314,r12	;0x5314
    5cca:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    5cce:	1c 42 12 53 	mov	&0x5312,r12	;0x5312
    5cd2:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    5cd6:	1c 42 10 53 	mov	&0x5310,r12	;0x5310
    5cda:	84 4c e6 ff 	mov	r12,	-26(r4)	; 0xffe6
    5cde:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5ce2:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    5ce6:	1f 44 ec ff 	mov	-20(r4),r15	;0xffffffec
    5cea:	3e 40 06 00 	mov	#6,	r14	;
    5cee:	b0 12 e8 6b 	call	#27624		;#0x6be8
    5cf2:	1c 44 ea ff 	mov	-22(r4),r12	;0xffffffea
    5cf6:	8f 4c 04 47 	mov	r12,	18180(r15); 0x4704
    5cfa:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    5cfe:	8f 4c 02 47 	mov	r12,	18178(r15); 0x4702
    5d02:	1c 44 e6 ff 	mov	-26(r4),r12	;0xffffffe6
    5d06:	8f 4c 00 47 	mov	r12,	18176(r15); 0x4700
    5d0a:	00 3c       	jmp	$+2      	;abs 0x5d0c
    5d0c:	1f 44 fc ff 	mov	-4(r4),	r15	;
    5d10:	3e 40 06 00 	mov	#6,	r14	;
    5d14:	b0 12 e8 6b 	call	#27624		;#0x6be8
    5d18:	1e 44 fa ff 	mov	-6(r4),	r14	;
    5d1c:	8f 4e 04 47 	mov	r14,	18180(r15); 0x4704
    5d20:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    5d24:	8f 4e 02 47 	mov	r14,	18178(r15); 0x4702
    5d28:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfffffff6
    5d2c:	8f 4e 00 47 	mov	r14,	18176(r15); 0x4700
    5d30:	1e 42 0c 53 	mov	&0x530c,r14	;0x530c
    5d34:	82 4e 16 53 	mov	r14,	&0x5316	;
    5d38:	1e 44 fe ff 	mov	-2(r4),	r14	;
    5d3c:	1e 53       	inc	r14		;
    5d3e:	84 4e fe ff 	mov	r14,	-2(r4)	; 0xfffe
    5d42:	3e 40 00 53 	mov	#21248,	r14	;#0x5300
    5d46:	0f 44       	mov	r4,	r15	;
    5d48:	2f 83       	decd	r15		;
    5d4a:	2d 43       	mov	#2,	r13	;r3 As==10
    5d4c:	b0 12 e8 69 	call	#27112		;#0x69e8
    5d50:	3f 40 76 46 	mov	#18038,	r15	;#0x4676
    5d54:	b0 12 88 68 	call	#26760		;#0x6888
    5d58:	31 50 1a 00 	add	#26,	r1	;#0x001a
    5d5c:	34 41       	pop	r4		;
    5d5e:	30 41       	ret			

00005d60 <task_append_compressed>:
    5d60:	04 12       	push	r4		;
    5d62:	04 41       	mov	r1,	r4	;
    5d64:	31 80 06 00 	sub	#6,	r1	;
    5d68:	1c 42 f6 46 	mov	&0x46f6,r12	;0x46f6
    5d6c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5d70:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5d74:	1d 42 16 53 	mov	&0x5316,r13	;0x5316
    5d78:	3e 40 06 00 	mov	#6,	r14	;
    5d7c:	0f 4c       	mov	r12,	r15	;
    5d7e:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    5d82:	b0 12 e8 6b 	call	#27624		;#0x6be8
    5d86:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5d8a:	8f 4c 18 53 	mov	r12,	21272(r15); 0x5318
    5d8e:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5d92:	1c 53       	inc	r12		;
    5d94:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5d98:	3c 90 40 00 	cmp	#64,	r12	;#0x0040
    5d9c:	0d 20       	jnz	$+28     	;abs 0x5db8
    5d9e:	00 3c       	jmp	$+2      	;abs 0x5da0
    5da0:	3e 40 f6 46 	mov	#18166,	r14	;#0x46f6
    5da4:	0f 44       	mov	r4,	r15	;
    5da6:	2f 83       	decd	r15		;
    5da8:	2d 43       	mov	#2,	r13	;r3 As==10
    5daa:	b0 12 e8 69 	call	#27112		;#0x69e8
    5dae:	3f 40 a0 46 	mov	#18080,	r15	;#0x46a0
    5db2:	b0 12 88 68 	call	#26760		;#0x6888
    5db6:	0c 3c       	jmp	$+26     	;abs 0x5dd0
    5db8:	3e 40 f6 46 	mov	#18166,	r14	;#0x46f6
    5dbc:	0f 44       	mov	r4,	r15	;
    5dbe:	2f 83       	decd	r15		;
    5dc0:	2d 43       	mov	#2,	r13	;r3 As==10
    5dc2:	b0 12 e8 69 	call	#27112		;#0x69e8
    5dc6:	3f 40 50 45 	mov	#17744,	r15	;#0x4550
    5dca:	b0 12 88 68 	call	#26760		;#0x6888
    5dce:	00 3c       	jmp	$+2      	;abs 0x5dd0
    5dd0:	31 50 06 00 	add	#6,	r1	;
    5dd4:	34 41       	pop	r4		;
    5dd6:	30 41       	ret			

00005dd8 <task_print>:
    5dd8:	04 12       	push	r4		;
    5dda:	04 41       	mov	r1,	r4	;
    5ddc:	31 80 14 00 	sub	#20,	r1	;#0x0014
    5de0:	0c 41       	mov	r1,	r12	;
    5de2:	bc 40 0e 44 	mov	#17422,	0(r12)	;#0x440e
    5de6:	00 00 
    5de8:	b0 12 b4 62 	call	#25268		;#0x62b4
    5dec:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    5df0:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    5df4:	00 3c       	jmp	$+2      	;abs 0x5df6
    5df6:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5dfa:	3c 90 40 00 	cmp	#64,	r12	;#0x0040
    5dfe:	31 2c       	jc	$+100    	;abs 0x5e62
    5e00:	00 3c       	jmp	$+2      	;abs 0x5e02
    5e02:	1f 44 fe ff 	mov	-2(r4),	r15	;
    5e06:	3e 40 06 00 	mov	#6,	r14	;
    5e0a:	b0 12 e8 6b 	call	#27624		;#0x6be8
    5e0e:	1e 4f 18 53 	mov	21272(r15),r14	;0x05318
    5e12:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    5e16:	0f 41       	mov	r1,	r15	;
    5e18:	8f 4e 02 00 	mov	r14,	2(r15)	;
    5e1c:	bf 40 22 44 	mov	#17442,	0(r15)	;#0x4422
    5e20:	00 00 
    5e22:	b0 12 b4 62 	call	#25268		;#0x62b4
    5e26:	1e 44 fe ff 	mov	-2(r4),	r14	;
    5e2a:	0e 93       	cmp	#0,	r14	;r3 As==00
    5e2c:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    5e30:	11 24       	jz	$+36     	;abs 0x5e54
    5e32:	00 3c       	jmp	$+2      	;abs 0x5e34
    5e34:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5e38:	1c 53       	inc	r12		;
    5e3a:	3c b0 07 00 	bit	#7,	r12	;
    5e3e:	0a 20       	jnz	$+22     	;abs 0x5e54
    5e40:	00 3c       	jmp	$+2      	;abs 0x5e42
    5e42:	0c 41       	mov	r1,	r12	;
    5e44:	bc 40 1f 44 	mov	#17439,	0(r12)	;#0x441f
    5e48:	00 00 
    5e4a:	b0 12 b4 62 	call	#25268		;#0x62b4
    5e4e:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    5e52:	00 3c       	jmp	$+2      	;abs 0x5e54
    5e54:	00 3c       	jmp	$+2      	;abs 0x5e56
    5e56:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5e5a:	1c 53       	inc	r12		;
    5e5c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5e60:	ca 3f       	jmp	$-106    	;abs 0x5df6
    5e62:	0c 41       	mov	r1,	r12	;
    5e64:	bc 40 1f 44 	mov	#17439,	0(r12)	;#0x441f
    5e68:	00 00 
    5e6a:	b0 12 b4 62 	call	#25268		;#0x62b4
    5e6e:	1c 42 fe 46 	mov	&0x46fe,r12	;0x46fe
    5e72:	0d 41       	mov	r1,	r13	;
    5e74:	8d 4c 02 00 	mov	r12,	2(r13)	;
    5e78:	bd 40 40 00 	mov	#64,	4(r13)	;#0x0040
    5e7c:	04 00 
    5e7e:	bd 40 28 44 	mov	#17448,	0(r13)	;#0x4428
    5e82:	00 00 
    5e84:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    5e88:	b0 12 b4 62 	call	#25268		;#0x62b4
    5e8c:	3c 40 ca 46 	mov	#18122,	r12	;#0x46ca
    5e90:	84 4f f2 ff 	mov	r15,	-14(r4)	; 0xfff2
    5e94:	0f 4c       	mov	r12,	r15	;
    5e96:	b0 12 88 68 	call	#26760		;#0x6888
    5e9a:	31 50 14 00 	add	#20,	r1	;#0x0014
    5e9e:	34 41       	pop	r4		;
    5ea0:	30 41       	ret			
	...

00005ea4 <task_done>:
    5ea4:	04 12       	push	r4		;
    5ea6:	04 41       	mov	r1,	r4	;
    5ea8:	31 80 32 00 	sub	#50,	r1	;#0x0032
    5eac:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    5eb0:	0c 41       	mov	r1,	r12	;
    5eb2:	bc 40 2a 00 	mov	#42,	4(r12)	;#0x002a
    5eb6:	04 00 
    5eb8:	9c 43 02 00 	mov	#1,	2(r12)	;r3 As==01
    5ebc:	bc 40 45 44 	mov	#17477,	0(r12)	;#0x4445
    5ec0:	00 00 
    5ec2:	b0 12 b4 62 	call	#25268		;#0x62b4
    5ec6:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5eca:	3c 50 f8 01 	add	#504,	r12	;#0x01f8
    5ece:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5ed2:	0c 41       	mov	r1,	r12	;
    5ed4:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5ed8:	9c 43 02 00 	mov	#1,	2(r12)	;r3 As==01
    5edc:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5ee0:	00 00 
    5ee2:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    5ee6:	b0 12 b4 62 	call	#25268		;#0x62b4
    5eea:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5eee:	2c 53       	incd	r12		;
    5ef0:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5ef4:	0c 41       	mov	r1,	r12	;
    5ef6:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5efa:	ac 43 02 00 	mov	#2,	2(r12)	;r3 As==10
    5efe:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5f02:	00 00 
    5f04:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    5f08:	b0 12 b4 62 	call	#25268		;#0x62b4
    5f0c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f10:	2c 53       	incd	r12		;
    5f12:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f16:	0c 41       	mov	r1,	r12	;
    5f18:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5f1c:	bc 40 03 00 	mov	#3,	2(r12)	;
    5f20:	02 00 
    5f22:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5f26:	00 00 
    5f28:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    5f2c:	b0 12 b4 62 	call	#25268		;#0x62b4
    5f30:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f34:	2c 53       	incd	r12		;
    5f36:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f3a:	0c 41       	mov	r1,	r12	;
    5f3c:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5f40:	ac 42 02 00 	mov	#4,	2(r12)	;r2 As==10
    5f44:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5f48:	00 00 
    5f4a:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    5f4e:	b0 12 b4 62 	call	#25268		;#0x62b4
    5f52:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f56:	2c 53       	incd	r12		;
    5f58:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f5c:	0c 41       	mov	r1,	r12	;
    5f5e:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5f62:	bc 40 05 00 	mov	#5,	2(r12)	;
    5f66:	02 00 
    5f68:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5f6c:	00 00 
    5f6e:	84 4f f2 ff 	mov	r15,	-14(r4)	; 0xfff2
    5f72:	b0 12 b4 62 	call	#25268		;#0x62b4
    5f76:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f7a:	2c 53       	incd	r12		;
    5f7c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f80:	0c 41       	mov	r1,	r12	;
    5f82:	bc 40 00 0c 	mov	#3072,	4(r12)	;#0x0c00
    5f86:	04 00 
    5f88:	bc 40 06 00 	mov	#6,	2(r12)	;
    5f8c:	02 00 
    5f8e:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5f92:	00 00 
    5f94:	84 4f f0 ff 	mov	r15,	-16(r4)	; 0xfff0
    5f98:	b0 12 b4 62 	call	#25268		;#0x62b4
    5f9c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5fa0:	3c 50 00 0c 	add	#3072,	r12	;#0x0c00
    5fa4:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5fa8:	0c 41       	mov	r1,	r12	;
    5faa:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5fae:	bc 40 07 00 	mov	#7,	2(r12)	;
    5fb2:	02 00 
    5fb4:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5fb8:	00 00 
    5fba:	84 4f ee ff 	mov	r15,	-18(r4)	; 0xffee
    5fbe:	b0 12 b4 62 	call	#25268		;#0x62b4
    5fc2:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5fc6:	2c 53       	incd	r12		;
    5fc8:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5fcc:	0c 41       	mov	r1,	r12	;
    5fce:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5fd2:	bc 42 02 00 	mov	#8,	2(r12)	;r2 As==11
    5fd6:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5fda:	00 00 
    5fdc:	84 4f ec ff 	mov	r15,	-20(r4)	; 0xffec
    5fe0:	b0 12 b4 62 	call	#25268		;#0x62b4
    5fe4:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5fe8:	2c 53       	incd	r12		;
    5fea:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5fee:	0c 41       	mov	r1,	r12	;
    5ff0:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5ff4:	bc 40 09 00 	mov	#9,	2(r12)	;
    5ff8:	02 00 
    5ffa:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5ffe:	00 00 
    6000:	84 4f ea ff 	mov	r15,	-22(r4)	; 0xffea
    6004:	b0 12 b4 62 	call	#25268		;#0x62b4
    6008:	1c 44 fe ff 	mov	-2(r4),	r12	;
    600c:	2c 53       	incd	r12		;
    600e:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    6012:	0c 41       	mov	r1,	r12	;
    6014:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    6018:	bc 40 0b 00 	mov	#11,	2(r12)	;#0x000b
    601c:	02 00 
    601e:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    6022:	00 00 
    6024:	84 4f e8 ff 	mov	r15,	-24(r4)	; 0xffe8
    6028:	b0 12 b4 62 	call	#25268		;#0x62b4
    602c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6030:	2c 53       	incd	r12		;
    6032:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    6036:	0c 41       	mov	r1,	r12	;
    6038:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    603c:	bc 40 0c 00 	mov	#12,	2(r12)	;#0x000c
    6040:	02 00 
    6042:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    6046:	00 00 
    6048:	84 4f e6 ff 	mov	r15,	-26(r4)	; 0xffe6
    604c:	b0 12 b4 62 	call	#25268		;#0x62b4
    6050:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6054:	2c 53       	incd	r12		;
    6056:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    605a:	0c 41       	mov	r1,	r12	;
    605c:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    6060:	bc 40 0d 00 	mov	#13,	2(r12)	;#0x000d
    6064:	02 00 
    6066:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    606a:	00 00 
    606c:	84 4f e4 ff 	mov	r15,	-28(r4)	; 0xffe4
    6070:	b0 12 b4 62 	call	#25268		;#0x62b4
    6074:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6078:	2c 53       	incd	r12		;
    607a:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    607e:	0c 41       	mov	r1,	r12	;
    6080:	bc 40 06 00 	mov	#6,	4(r12)	;
    6084:	04 00 
    6086:	bc 40 0e 00 	mov	#14,	2(r12)	;#0x000e
    608a:	02 00 
    608c:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    6090:	00 00 
    6092:	84 4f e2 ff 	mov	r15,	-30(r4)	; 0xffe2
    6096:	b0 12 b4 62 	call	#25268		;#0x62b4
    609a:	1c 44 fe ff 	mov	-2(r4),	r12	;
    609e:	3c 50 06 00 	add	#6,	r12	;
    60a2:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    60a6:	0c 41       	mov	r1,	r12	;
    60a8:	bc 40 80 01 	mov	#384,	4(r12)	;#0x0180
    60ac:	04 00 
    60ae:	bc 40 0f 00 	mov	#15,	2(r12)	;#0x000f
    60b2:	02 00 
    60b4:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    60b8:	00 00 
    60ba:	84 4f e0 ff 	mov	r15,	-32(r4)	; 0xffe0
    60be:	b0 12 b4 62 	call	#25268		;#0x62b4
    60c2:	1c 44 fe ff 	mov	-2(r4),	r12	;
    60c6:	3c 50 80 01 	add	#384,	r12	;#0x0180
    60ca:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    60ce:	0c 41       	mov	r1,	r12	;
    60d0:	bc 40 06 00 	mov	#6,	4(r12)	;
    60d4:	04 00 
    60d6:	bc 40 10 00 	mov	#16,	2(r12)	;#0x0010
    60da:	02 00 
    60dc:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    60e0:	00 00 
    60e2:	84 4f de ff 	mov	r15,	-34(r4)	; 0xffde
    60e6:	b0 12 b4 62 	call	#25268		;#0x62b4
    60ea:	1c 44 fe ff 	mov	-2(r4),	r12	;
    60ee:	3c 50 06 00 	add	#6,	r12	;
    60f2:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    60f6:	0c 41       	mov	r1,	r12	;
    60f8:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    60fc:	bc 40 11 00 	mov	#17,	2(r12)	;#0x0011
    6100:	02 00 
    6102:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    6106:	00 00 
    6108:	84 4f dc ff 	mov	r15,	-36(r4)	; 0xffdc
    610c:	b0 12 b4 62 	call	#25268		;#0x62b4
    6110:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6114:	2c 53       	incd	r12		;
    6116:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    611a:	0c 41       	mov	r1,	r12	;
    611c:	bc 40 42 00 	mov	#66,	2(r12)	;#0x0042
    6120:	02 00 
    6122:	bc 40 74 44 	mov	#17524,	0(r12)	;#0x4474
    6126:	00 00 
    6128:	84 4f da ff 	mov	r15,	-38(r4)	; 0xffda
    612c:	b0 12 b4 62 	call	#25268		;#0x62b4
    6130:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6134:	3c 50 42 00 	add	#66,	r12	;#0x0042
    6138:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    613c:	0c 41       	mov	r1,	r12	;
    613e:	ac 43 02 00 	mov	#2,	2(r12)	;r3 As==10
    6142:	bc 40 8c 44 	mov	#17548,	0(r12)	;#0x448c
    6146:	00 00 
    6148:	84 4f d8 ff 	mov	r15,	-40(r4)	; 0xffd8
    614c:	b0 12 b4 62 	call	#25268		;#0x62b4
    6150:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6154:	2c 53       	incd	r12		;
    6156:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    615a:	0d 41       	mov	r1,	r13	;
    615c:	8d 4c 02 00 	mov	r12,	2(r13)	;
    6160:	bd 40 a8 44 	mov	#17576,	0(r13)	;#0x44a8
    6164:	00 00 
    6166:	84 4f d6 ff 	mov	r15,	-42(r4)	; 0xffd6
    616a:	b0 12 b4 62 	call	#25268		;#0x62b4
    616e:	84 4f d4 ff 	mov	r15,	-44(r4)	; 0xffd4
    6172:	31 50 32 00 	add	#50,	r1	;#0x0032
    6176:	34 41       	pop	r4		;
    6178:	30 41       	ret			
	...

0000617c <_entry_task>:
    617c:	04 12       	push	r4		;
    617e:	04 41       	mov	r1,	r4	;
    6180:	3f 40 fc 44 	mov	#17660,	r15	;#0x44fc
    6184:	b0 12 88 68 	call	#26760		;#0x6888
    6188:	34 41       	pop	r4		;
    618a:	30 41       	ret			

0000618c <_init>:
    618c:	04 12       	push	r4		;
    618e:	04 41       	mov	r1,	r4	;
    6190:	b0 12 2c 57 	call	#22316		;#0x572c
    6194:	34 41       	pop	r4		;
    6196:	30 41       	ret			

00006198 <init_hw>:
    6198:	04 12       	push	r4		;
    619a:	04 41       	mov	r1,	r4	;
    619c:	b0 12 00 62 	call	#25088		;#0x6200
    61a0:	1c 42 30 01 	mov	&0x0130,r12	;0x0130
    61a4:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    61a8:	82 4c 30 01 	mov	r12,	&0x0130	;
    61ac:	b0 12 94 62 	call	#25236		;#0x6294
    61b0:	34 41       	pop	r4		;
    61b2:	30 41       	ret			

000061b4 <acquire_sample>:
    61b4:	04 12       	push	r4		;
    61b6:	04 41       	mov	r1,	r4	;
    61b8:	31 80 06 00 	sub	#6,	r1	;
    61bc:	0c 4f       	mov	r15,	r12	;
    61be:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    61c2:	1f 53       	inc	r15		;
    61c4:	3f f0 03 00 	and	#3,	r15	;
    61c8:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    61cc:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    61d0:	31 50 06 00 	add	#6,	r1	;
    61d4:	34 41       	pop	r4		;
    61d6:	30 41       	ret			

000061d8 <msp_watchdog_enable>:
    61d8:	04 12       	push	r4		;
    61da:	04 41       	mov	r1,	r4	;
    61dc:	21 83       	decd	r1		;
    61de:	4c 4f       	mov.b	r15,	r12	;
    61e0:	c4 4c ff ff 	mov.b	r12,	-1(r4)	; 0xffff
    61e4:	5f 44 ff ff 	mov.b	-1(r4),	r15	;
    61e8:	3f d0 08 5a 	bis	#23048,	r15	;#0x5a08
    61ec:	82 4f 5c 01 	mov	r15,	&0x015c	;
    61f0:	5c 44 ff ff 	mov.b	-1(r4),	r12	;
    61f4:	c2 4c 20 1c 	mov.b	r12,	&0x1c20	;
    61f8:	21 53       	incd	r1		;
    61fa:	34 41       	pop	r4		;
    61fc:	30 41       	ret			
	...

00006200 <msp_watchdog_disable>:
    6200:	04 12       	push	r4		;
    6202:	04 41       	mov	r1,	r4	;
    6204:	b2 40 80 5a 	mov	#23168,	&0x015c	;#0x5a80
    6208:	5c 01 
    620a:	34 41       	pop	r4		;
    620c:	30 41       	ret			
	...

00006210 <msp_watchdog_kick>:
    6210:	04 12       	push	r4		;
    6212:	04 41       	mov	r1,	r4	;
    6214:	5c 42 20 1c 	mov.b	&0x1c20,r12	;0x1c20
    6218:	3c d0 08 5a 	bis	#23048,	r12	;#0x5a08
    621c:	82 4c 5c 01 	mov	r12,	&0x015c	;
    6220:	34 41       	pop	r4		;
    6222:	30 41       	ret			

00006224 <memcpy>:
    6224:	04 12       	push	r4		;
    6226:	04 41       	mov	r1,	r4	;
    6228:	0b 12       	push	r11		;
    622a:	0a 12       	push	r10		;
    622c:	31 80 0e 00 	sub	#14,	r1	;#0x000e
    6230:	0c 4d       	mov	r13,	r12	;
    6232:	0b 4e       	mov	r14,	r11	;
    6234:	0a 4f       	mov	r15,	r10	;
    6236:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    623a:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    623e:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    6242:	84 43 f4 ff 	mov	#0,	-12(r4)	;r3 As==00, 0xfff4
    6246:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    624a:	84 4b f0 ff 	mov	r11,	-16(r4)	; 0xfff0
    624e:	84 4a ee ff 	mov	r10,	-18(r4)	; 0xffee
    6252:	00 3c       	jmp	$+2      	;abs 0x6254
    6254:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6258:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    625c:	0c 9d       	cmp	r13,	r12	;
    625e:	12 2c       	jc	$+38     	;abs 0x6284
    6260:	00 3c       	jmp	$+2      	;abs 0x6262
    6262:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6266:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    626a:	0c 5d       	add	r13,	r12	;
    626c:	6e 4c       	mov.b	@r12,	r14	;
    626e:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6272:	0c 5d       	add	r13,	r12	;
    6274:	cc 4e 00 00 	mov.b	r14,	0(r12)	;
    6278:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    627c:	1c 53       	inc	r12		;
    627e:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    6282:	e8 3f       	jmp	$-46     	;abs 0x6254
    6284:	1f 44 fa ff 	mov	-6(r4),	r15	;
    6288:	31 50 0e 00 	add	#14,	r1	;#0x000e
    628c:	3a 41       	pop	r10		;
    628e:	3b 41       	pop	r11		;
    6290:	34 41       	pop	r4		;
    6292:	30 41       	ret			

00006294 <msp_clock_setup>:
    6294:	04 12       	push	r4		;
    6296:	04 41       	mov	r1,	r4	;
    6298:	f2 40 a5 ff 	mov.b	#65445,	&0x0161	;#0xffa5
    629c:	61 01 
    629e:	b2 40 0c 00 	mov	#12,	&0x0162	;#0x000c
    62a2:	62 01 
    62a4:	b2 40 33 00 	mov	#51,	&0x0164	;#0x0033
    62a8:	64 01 
    62aa:	82 43 66 01 	mov	#0,	&0x0166	;r3 As==00
    62ae:	34 41       	pop	r4		;
    62b0:	30 41       	ret			
	...

000062b4 <printf>:
    62b4:	04 12       	push	r4		;
    62b6:	04 41       	mov	r1,	r4	;
    62b8:	31 80 20 00 	sub	#32,	r1	;#0x0020
    62bc:	1c 44 04 00 	mov	4(r4),	r12	;
    62c0:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    62c4:	0c 44       	mov	r4,	r12	;
    62c6:	3c 50 06 00 	add	#6,	r12	;
    62ca:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    62ce:	00 3c       	jmp	$+2      	;abs 0x62d0
    62d0:	1c 44 fc ff 	mov	-4(r4),	r12	;
    62d4:	0d 4c       	mov	r12,	r13	;
    62d6:	1d 53       	inc	r13		;
    62d8:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    62dc:	6e 4c       	mov.b	@r12,	r14	;
    62de:	c4 4e fb ff 	mov.b	r14,	-5(r4)	; 0xfffb
    62e2:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    62e4:	02 20       	jnz	$+6      	;abs 0x62ea
    62e6:	52 3d       	jmp	$+678    	;abs 0x658c
    62e8:	00 3c       	jmp	$+2      	;abs 0x62ea
    62ea:	5c 44 fb ff 	mov.b	-5(r4),	r12	;
    62ee:	7c 90 25 00 	cmp.b	#37,	r12	;#0x0025
    62f2:	02 24       	jz	$+6      	;abs 0x62f8
    62f4:	40 3d       	jmp	$+642    	;abs 0x6576
    62f6:	00 3c       	jmp	$+2      	;abs 0x62f8
    62f8:	84 43 f2 ff 	mov	#0,	-14(r4)	;r3 As==00, 0xfff2
    62fc:	00 3c       	jmp	$+2      	;abs 0x62fe
    62fe:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6302:	0d 4c       	mov	r12,	r13	;
    6304:	1d 53       	inc	r13		;
    6306:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    630a:	6c 4c       	mov.b	@r12,	r12	;
    630c:	8c 11       	sxt	r12		;
    630e:	4e 4c       	mov.b	r12,	r14	;
    6310:	c4 4e fb ff 	mov.b	r14,	-5(r4)	; 0xfffb
    6314:	0c 93       	cmp	#0,	r12	;r3 As==00
    6316:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    631a:	02 20       	jnz	$+6      	;abs 0x6320
    631c:	27 3d       	jmp	$+592    	;abs 0x656c
    631e:	00 3c       	jmp	$+2      	;abs 0x6320
    6320:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6324:	3c 90 30 00 	cmp	#48,	r12	;#0x0030
    6328:	02 20       	jnz	$+6      	;abs 0x632e
    632a:	0f 3d       	jmp	$+544    	;abs 0x654a
    632c:	00 3c       	jmp	$+2      	;abs 0x632e
    632e:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6332:	3c 90 63 00 	cmp	#99,	r12	;#0x0063
    6336:	34 24       	jz	$+106    	;abs 0x63a0
    6338:	00 3c       	jmp	$+2      	;abs 0x633a
    633a:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    633e:	3c 90 69 00 	cmp	#105,	r12	;#0x0069
    6342:	3d 24       	jz	$+124    	;abs 0x63be
    6344:	00 3c       	jmp	$+2      	;abs 0x6346
    6346:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    634a:	3c 90 6c 00 	cmp	#108,	r12	;#0x006c
    634e:	66 24       	jz	$+206    	;abs 0x641c
    6350:	00 3c       	jmp	$+2      	;abs 0x6352
    6352:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6356:	3c 90 6e 00 	cmp	#110,	r12	;#0x006e
    635a:	60 24       	jz	$+194    	;abs 0x641c
    635c:	00 3c       	jmp	$+2      	;abs 0x635e
    635e:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6362:	3c 90 73 00 	cmp	#115,	r12	;#0x0073
    6366:	0d 24       	jz	$+28     	;abs 0x6382
    6368:	00 3c       	jmp	$+2      	;abs 0x636a
    636a:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    636e:	3c 90 75 00 	cmp	#117,	r12	;#0x0075
    6372:	25 24       	jz	$+76     	;abs 0x63be
    6374:	00 3c       	jmp	$+2      	;abs 0x6376
    6376:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    637a:	3c 90 78 00 	cmp	#120,	r12	;#0x0078
    637e:	8a 24       	jz	$+278    	;abs 0x6494
    6380:	f8 3c       	jmp	$+498    	;abs 0x6572
    6382:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    6386:	1c 53       	inc	r12		;
    6388:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    638c:	0d 4c       	mov	r12,	r13	;
    638e:	2d 53       	incd	r13		;
    6390:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    6394:	2f 4c       	mov	@r12,	r15	;
    6396:	b0 12 58 67 	call	#26456		;#0x6758
    639a:	84 4f ea ff 	mov	r15,	-22(r4)	; 0xffea
    639e:	ea 3c       	jmp	$+470    	;abs 0x6574
    63a0:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    63a4:	1c 53       	inc	r12		;
    63a6:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    63aa:	0d 4c       	mov	r12,	r13	;
    63ac:	2d 53       	incd	r13		;
    63ae:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    63b2:	2f 4c       	mov	@r12,	r15	;
    63b4:	b0 12 24 67 	call	#26404		;#0x6724
    63b8:	84 4f e8 ff 	mov	r15,	-24(r4)	; 0xffe8
    63bc:	db 3c       	jmp	$+440    	;abs 0x6574
    63be:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    63c2:	1c 53       	inc	r12		;
    63c4:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    63c8:	0d 4c       	mov	r12,	r13	;
    63ca:	2d 53       	incd	r13		;
    63cc:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    63d0:	2c 4c       	mov	@r12,	r12	;
    63d2:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    63d6:	5e 44 fb ff 	mov.b	-5(r4),	r14	;
    63da:	7e 90 69 00 	cmp.b	#105,	r14	;#0x0069
    63de:	13 20       	jnz	$+40     	;abs 0x6406
    63e0:	00 3c       	jmp	$+2      	;abs 0x63e2
    63e2:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    63e6:	0c 93       	cmp	#0,	r12	;r3 As==00
    63e8:	0e 34       	jge	$+30     	;abs 0x6406
    63ea:	00 3c       	jmp	$+2      	;abs 0x63ec
    63ec:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    63f0:	0d 43       	clr	r13		;
    63f2:	0d 8c       	sub	r12,	r13	;
    63f4:	84 4d f8 ff 	mov	r13,	-8(r4)	; 0xfff8
    63f8:	3f 40 2d 00 	mov	#45,	r15	;#0x002d
    63fc:	b0 12 24 67 	call	#26404		;#0x6724
    6400:	84 4f e6 ff 	mov	r15,	-26(r4)	; 0xffe6
    6404:	00 3c       	jmp	$+2      	;abs 0x6406
    6406:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    640a:	3c 40 14 00 	mov	#20,	r12	;#0x0014
    640e:	3c 50 b4 44 	add	#17588,	r12	;#0x44b4
    6412:	0f 43       	clr	r15		;
    6414:	0d 4c       	mov	r12,	r13	;
    6416:	b0 12 a0 65 	call	#26016		;#0x65a0
    641a:	ac 3c       	jmp	$+346    	;abs 0x6574
    641c:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    6420:	1c 53       	inc	r12		;
    6422:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    6426:	0d 4c       	mov	r12,	r13	;
    6428:	2d 53       	incd	r13		;
    642a:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    642e:	2c 4c       	mov	@r12,	r12	;
    6430:	1d 44 ee ff 	mov	-18(r4),r13	;0xffffffee
    6434:	0e 4d       	mov	r13,	r14	;
    6436:	2e 53       	incd	r14		;
    6438:	84 4e ee ff 	mov	r14,	-18(r4)	; 0xffee
    643c:	2d 4d       	mov	@r13,	r13	;
    643e:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    6442:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    6446:	5f 44 fb ff 	mov.b	-5(r4),	r15	;
    644a:	7f 90 6c 00 	cmp.b	#108,	r15	;#0x006c
    644e:	19 20       	jnz	$+52     	;abs 0x6482
    6450:	00 3c       	jmp	$+2      	;abs 0x6452
    6452:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6456:	0c 93       	cmp	#0,	r12	;r3 As==00
    6458:	14 34       	jge	$+42     	;abs 0x6482
    645a:	00 3c       	jmp	$+2      	;abs 0x645c
    645c:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6460:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    6464:	0e 43       	clr	r14		;
    6466:	0f 4e       	mov	r14,	r15	;
    6468:	0f 8c       	sub	r12,	r15	;
    646a:	0e 7d       	subc	r13,	r14	;
    646c:	84 4e f6 ff 	mov	r14,	-10(r4)	; 0xfff6
    6470:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    6474:	3f 40 2d 00 	mov	#45,	r15	;#0x002d
    6478:	b0 12 24 67 	call	#26404		;#0x6724
    647c:	84 4f e4 ff 	mov	r15,	-28(r4)	; 0xffe4
    6480:	00 3c       	jmp	$+2      	;abs 0x6482
    6482:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfffffff6
    6486:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfffffff4
    648a:	3d 40 b4 44 	mov	#17588,	r13	;#0x44b4
    648e:	b0 12 a0 65 	call	#26016		;#0x65a0
    6492:	70 3c       	jmp	$+226    	;abs 0x6574
    6494:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    6498:	1c 53       	inc	r12		;
    649a:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    649e:	0d 4c       	mov	r12,	r13	;
    64a0:	2d 53       	incd	r13		;
    64a2:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    64a6:	2c 4c       	mov	@r12,	r12	;
    64a8:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    64ac:	0c 11       	rra	r12		;
    64ae:	0c 11       	rra	r12		;
    64b0:	0c 11       	rra	r12		;
    64b2:	0c 11       	rra	r12		;
    64b4:	0c 11       	rra	r12		;
    64b6:	0c 11       	rra	r12		;
    64b8:	0c 11       	rra	r12		;
    64ba:	0c 11       	rra	r12		;
    64bc:	0c 11       	rra	r12		;
    64be:	0c 11       	rra	r12		;
    64c0:	0c 11       	rra	r12		;
    64c2:	0c 11       	rra	r12		;
    64c4:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    64c8:	0c 93       	cmp	#0,	r12	;r3 As==00
    64ca:	06 20       	jnz	$+14     	;abs 0x64d8
    64cc:	00 3c       	jmp	$+2      	;abs 0x64ce
    64ce:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    64d2:	2c 92       	cmp	#4,	r12	;r2 As==10
    64d4:	06 38       	jl	$+14     	;abs 0x64e2
    64d6:	00 3c       	jmp	$+2      	;abs 0x64d8
    64d8:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfffffff0
    64dc:	b0 12 ec 66 	call	#26348		;#0x66ec
    64e0:	00 3c       	jmp	$+2      	;abs 0x64e2
    64e2:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    64e6:	0c 11       	rra	r12		;
    64e8:	0c 11       	rra	r12		;
    64ea:	0c 11       	rra	r12		;
    64ec:	0c 11       	rra	r12		;
    64ee:	0c 11       	rra	r12		;
    64f0:	0c 11       	rra	r12		;
    64f2:	0c 11       	rra	r12		;
    64f4:	0c 11       	rra	r12		;
    64f6:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    64fa:	0c 93       	cmp	#0,	r12	;r3 As==00
    64fc:	07 20       	jnz	$+16     	;abs 0x650c
    64fe:	00 3c       	jmp	$+2      	;abs 0x6500
    6500:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6504:	3c 90 03 00 	cmp	#3,	r12	;
    6508:	06 38       	jl	$+14     	;abs 0x6516
    650a:	00 3c       	jmp	$+2      	;abs 0x650c
    650c:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfffffff0
    6510:	b0 12 ec 66 	call	#26348		;#0x66ec
    6514:	00 3c       	jmp	$+2      	;abs 0x6516
    6516:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    651a:	0c 11       	rra	r12		;
    651c:	0c 11       	rra	r12		;
    651e:	0c 11       	rra	r12		;
    6520:	0c 11       	rra	r12		;
    6522:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    6526:	0c 93       	cmp	#0,	r12	;r3 As==00
    6528:	06 20       	jnz	$+14     	;abs 0x6536
    652a:	00 3c       	jmp	$+2      	;abs 0x652c
    652c:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6530:	2c 93       	cmp	#2,	r12	;r3 As==10
    6532:	06 38       	jl	$+14     	;abs 0x6540
    6534:	00 3c       	jmp	$+2      	;abs 0x6536
    6536:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfffffff0
    653a:	b0 12 ec 66 	call	#26348		;#0x66ec
    653e:	00 3c       	jmp	$+2      	;abs 0x6540
    6540:	1f 44 f8 ff 	mov	-8(r4),	r15	;
    6544:	b0 12 ec 66 	call	#26348		;#0x66ec
    6548:	15 3c       	jmp	$+44     	;abs 0x6574
    654a:	1c 44 fc ff 	mov	-4(r4),	r12	;
    654e:	0d 4c       	mov	r12,	r13	;
    6550:	1d 53       	inc	r13		;
    6552:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    6556:	6e 4c       	mov.b	@r12,	r14	;
    6558:	c4 4e fb ff 	mov.b	r14,	-5(r4)	; 0xfffb
    655c:	5c 44 fb ff 	mov.b	-5(r4),	r12	;
    6560:	8c 11       	sxt	r12		;
    6562:	3c 50 d0 ff 	add	#65488,	r12	;#0xffd0
    6566:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    656a:	c9 3e       	jmp	$-620    	;abs 0x62fe
    656c:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    6570:	10 3c       	jmp	$+34     	;abs 0x6592
    6572:	02 3c       	jmp	$+6      	;abs 0x6578
    6574:	0a 3c       	jmp	$+22     	;abs 0x658a
    6576:	00 3c       	jmp	$+2      	;abs 0x6578
    6578:	5c 44 fb ff 	mov.b	-5(r4),	r12	;
    657c:	8c 11       	sxt	r12		;
    657e:	0f 4c       	mov	r12,	r15	;
    6580:	b0 12 24 67 	call	#26404		;#0x6724
    6584:	84 4f e2 ff 	mov	r15,	-30(r4)	; 0xffe2
    6588:	00 3c       	jmp	$+2      	;abs 0x658a
    658a:	a2 3e       	jmp	$-698    	;abs 0x62d0
    658c:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    6590:	00 3c       	jmp	$+2      	;abs 0x6592
    6592:	1f 44 fe ff 	mov	-2(r4),	r15	;
    6596:	31 50 20 00 	add	#32,	r1	;#0x0020
    659a:	34 41       	pop	r4		;
    659c:	30 41       	ret			
	...

000065a0 <xtoa>:
    65a0:	04 12       	push	r4		;
    65a2:	04 41       	mov	r1,	r4	;
    65a4:	0b 12       	push	r11		;
    65a6:	0a 12       	push	r10		;
    65a8:	09 12       	push	r9		;
    65aa:	31 80 22 00 	sub	#34,	r1	;#0x0022
    65ae:	0c 4f       	mov	r15,	r12	;
    65b0:	0b 4e       	mov	r14,	r11	;
    65b2:	0a 4d       	mov	r13,	r10	;
    65b4:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    65b8:	84 4e f4 ff 	mov	r14,	-12(r4)	; 0xfff4
    65bc:	84 4d f2 ff 	mov	r13,	-14(r4)	; 0xfff2
    65c0:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    65c4:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfffffff4
    65c8:	0e dd       	bis	r13,	r14	;
    65ca:	0e 93       	cmp	#0,	r14	;r3 As==00
    65cc:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    65d0:	84 4a e8 ff 	mov	r10,	-24(r4)	; 0xffe8
    65d4:	84 4b e6 ff 	mov	r11,	-26(r4)	; 0xffe6
    65d8:	7a 24       	jz	$+246    	;abs 0x66ce
    65da:	00 3c       	jmp	$+2      	;abs 0x65dc
    65dc:	00 3c       	jmp	$+2      	;abs 0x65de
    65de:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    65e2:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    65e6:	1e 44 f2 ff 	mov	-14(r4),r14	;0xfffffff2
    65ea:	2f 4e       	mov	@r14,	r15	;
    65ec:	1e 4e 02 00 	mov	2(r14),	r14	;
    65f0:	0d 9e       	cmp	r14,	r13	;
    65f2:	0b 42       	mov	r2,	r11	;
    65f4:	1b f3       	and	#1,	r11	;r3 As==01
    65f6:	0c 9f       	cmp	r15,	r12	;
    65f8:	0c 42       	mov	r2,	r12	;
    65fa:	1c f3       	and	#1,	r12	;r3 As==01
    65fc:	0d 9e       	cmp	r14,	r13	;
    65fe:	84 4b e4 ff 	mov	r11,	-28(r4)	; 0xffe4
    6602:	84 4c e2 ff 	mov	r12,	-30(r4)	; 0xffe2
    6606:	04 24       	jz	$+10     	;abs 0x6610
    6608:	1c 44 e4 ff 	mov	-28(r4),r12	;0xffffffe4
    660c:	84 4c e2 ff 	mov	r12,	-30(r4)	; 0xffe2
    6610:	1c 44 e2 ff 	mov	-30(r4),r12	;0xffffffe2
    6614:	1c b3       	bit	#1,	r12	;r3 As==01
    6616:	07 20       	jnz	$+16     	;abs 0x6626
    6618:	00 3c       	jmp	$+2      	;abs 0x661a
    661a:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    661e:	2c 52       	add	#4,	r12	;r2 As==10
    6620:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    6624:	dc 3f       	jmp	$-70     	;abs 0x65de
    6626:	00 3c       	jmp	$+2      	;abs 0x6628
    6628:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    662c:	0d 4c       	mov	r12,	r13	;
    662e:	2d 52       	add	#4,	r13	;r2 As==10
    6630:	84 4d f2 ff 	mov	r13,	-14(r4)	; 0xfff2
    6634:	2d 4c       	mov	@r12,	r13	;
    6636:	1c 4c 02 00 	mov	2(r12),	r12	;
    663a:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    663e:	84 4d ec ff 	mov	r13,	-20(r4)	; 0xffec
    6642:	f4 40 30 00 	mov.b	#48,	-15(r4)	;#0x0030, 0xfff1
    6646:	f1 ff 
    6648:	00 3c       	jmp	$+2      	;abs 0x664a
    664a:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    664e:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    6652:	1e 44 ec ff 	mov	-20(r4),r14	;0xffffffec
    6656:	1f 44 ee ff 	mov	-18(r4),r15	;0xffffffee
    665a:	0d 9f       	cmp	r15,	r13	;
    665c:	0b 42       	mov	r2,	r11	;
    665e:	1a 43       	mov	#1,	r10	;r3 As==01
    6660:	09 4a       	mov	r10,	r9	;
    6662:	09 cb       	bic	r11,	r9	;
    6664:	0c 9e       	cmp	r14,	r12	;
    6666:	0c 42       	mov	r2,	r12	;
    6668:	0a cc       	bic	r12,	r10	;
    666a:	0d 9f       	cmp	r15,	r13	;
    666c:	84 49 e0 ff 	mov	r9,	-32(r4)	; 0xffe0
    6670:	84 4a de ff 	mov	r10,	-34(r4)	; 0xffde
    6674:	04 24       	jz	$+10     	;abs 0x667e
    6676:	1c 44 e0 ff 	mov	-32(r4),r12	;0xffffffe0
    667a:	84 4c de ff 	mov	r12,	-34(r4)	; 0xffde
    667e:	1c 44 de ff 	mov	-34(r4),r12	;0xffffffde
    6682:	1c b3       	bit	#1,	r12	;r3 As==01
    6684:	15 20       	jnz	$+44     	;abs 0x66b0
    6686:	00 3c       	jmp	$+2      	;abs 0x6688
    6688:	5c 44 f1 ff 	mov.b	-15(r4),r12	;0xfffffff1
    668c:	5c 53       	inc.b	r12		;
    668e:	c4 4c f1 ff 	mov.b	r12,	-15(r4)	; 0xfff1
    6692:	1d 44 ec ff 	mov	-20(r4),r13	;0xffffffec
    6696:	1e 44 ee ff 	mov	-18(r4),r14	;0xffffffee
    669a:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfffffff4
    669e:	1b 44 f6 ff 	mov	-10(r4),r11	;0xfffffff6
    66a2:	0f 8d       	sub	r13,	r15	;
    66a4:	0b 7e       	subc	r14,	r11	;
    66a6:	84 4b f6 ff 	mov	r11,	-10(r4)	; 0xfff6
    66aa:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    66ae:	cd 3f       	jmp	$-100    	;abs 0x664a
    66b0:	5c 44 f1 ff 	mov.b	-15(r4),r12	;0xfffffff1
    66b4:	8c 11       	sxt	r12		;
    66b6:	0f 4c       	mov	r12,	r15	;
    66b8:	b0 12 24 67 	call	#26404		;#0x6724
    66bc:	84 4f dc ff 	mov	r15,	-36(r4)	; 0xffdc
    66c0:	00 3c       	jmp	$+2      	;abs 0x66c2
    66c2:	5c 44 ec ff 	mov.b	-20(r4),r12	;0xffffffec
    66c6:	5c b3       	bit.b	#1,	r12	;r3 As==01
    66c8:	af 27       	jz	$-160    	;abs 0x6628
    66ca:	00 3c       	jmp	$+2      	;abs 0x66cc
    66cc:	07 3c       	jmp	$+16     	;abs 0x66dc
    66ce:	3f 40 30 00 	mov	#48,	r15	;#0x0030
    66d2:	b0 12 24 67 	call	#26404		;#0x6724
    66d6:	84 4f da ff 	mov	r15,	-38(r4)	; 0xffda
    66da:	00 3c       	jmp	$+2      	;abs 0x66dc
    66dc:	31 50 22 00 	add	#34,	r1	;#0x0022
    66e0:	39 41       	pop	r9		;
    66e2:	3a 41       	pop	r10		;
    66e4:	3b 41       	pop	r11		;
    66e6:	34 41       	pop	r4		;
    66e8:	30 41       	ret			
	...

000066ec <puth>:
    66ec:	04 12       	push	r4		;
    66ee:	04 41       	mov	r1,	r4	;
    66f0:	31 80 06 00 	sub	#6,	r1	;
    66f4:	0c 4f       	mov	r15,	r12	;
    66f6:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    66fa:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    66fe:	5f 4f dc 44 	mov.b	17628(r15),r15	;0x044dc
    6702:	8f 11       	sxt	r15		;
    6704:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    6708:	b0 12 24 67 	call	#26404		;#0x6724
    670c:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    6710:	31 50 06 00 	add	#6,	r1	;
    6714:	34 41       	pop	r4		;
    6716:	30 41       	ret			

00006718 <mspconsole_init>:
    6718:	04 12       	push	r4		;
    671a:	04 41       	mov	r1,	r4	;
    671c:	b0 12 f6 6b 	call	#27638		;#0x6bf6
    6720:	34 41       	pop	r4		;
    6722:	30 41       	ret			

00006724 <io_putchar>:
    6724:	04 12       	push	r4		;
    6726:	04 41       	mov	r1,	r4	;
    6728:	31 80 06 00 	sub	#6,	r1	;
    672c:	0c 4f       	mov	r15,	r12	;
    672e:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6732:	5d 44 fe ff 	mov.b	-2(r4),	r13	;
    6736:	c4 4d fd ff 	mov.b	r13,	-3(r4)	; 0xfffd
    673a:	0f 44       	mov	r4,	r15	;
    673c:	3f 80 03 00 	sub	#3,	r15	;
    6740:	1e 43       	mov	#1,	r14	;r3 As==01
    6742:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    6746:	b0 12 82 6c 	call	#27778		;#0x6c82
    674a:	1f 44 fe ff 	mov	-2(r4),	r15	;
    674e:	31 50 06 00 	add	#6,	r1	;
    6752:	34 41       	pop	r4		;
    6754:	30 41       	ret			
	...

00006758 <io_puts_no_newline>:
    6758:	04 12       	push	r4		;
    675a:	04 41       	mov	r1,	r4	;
    675c:	31 82       	sub	#8,	r1	;r2 As==11
    675e:	0c 4f       	mov	r15,	r12	;
    6760:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6764:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    6768:	1f 44 fe ff 	mov	-2(r4),	r15	;
    676c:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    6770:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    6774:	00 3c       	jmp	$+2      	;abs 0x6776
    6776:	1c 44 fa ff 	mov	-6(r4),	r12	;
    677a:	0d 4c       	mov	r12,	r13	;
    677c:	1d 53       	inc	r13		;
    677e:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    6782:	6e 4c       	mov.b	@r12,	r14	;
    6784:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    6786:	07 24       	jz	$+16     	;abs 0x6796
    6788:	00 3c       	jmp	$+2      	;abs 0x678a
    678a:	1c 44 fc ff 	mov	-4(r4),	r12	;
    678e:	1c 53       	inc	r12		;
    6790:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    6794:	f0 3f       	jmp	$-30     	;abs 0x6776
    6796:	1f 44 fe ff 	mov	-2(r4),	r15	;
    679a:	1e 44 fc ff 	mov	-4(r4),	r14	;
    679e:	b0 12 82 6c 	call	#27778		;#0x6c82
    67a2:	1f 44 fc ff 	mov	-4(r4),	r15	;
    67a6:	31 52       	add	#8,	r1	;r2 As==11
    67a8:	34 41       	pop	r4		;
    67aa:	30 41       	ret			

000067ac <io_puts>:
    67ac:	04 12       	push	r4		;
    67ae:	04 41       	mov	r1,	r4	;
    67b0:	31 82       	sub	#8,	r1	;r2 As==11
    67b2:	0c 4f       	mov	r15,	r12	;
    67b4:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    67b8:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    67bc:	b0 12 58 67 	call	#26456		;#0x6758
    67c0:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    67c4:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    67c8:	b0 12 24 67 	call	#26404		;#0x6724
    67cc:	1c 44 fc ff 	mov	-4(r4),	r12	;
    67d0:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    67d4:	0f 4c       	mov	r12,	r15	;
    67d6:	31 52       	add	#8,	r1	;r2 As==11
    67d8:	34 41       	pop	r4		;
    67da:	30 41       	ret			

000067dc <task_prologue>:
    67dc:	04 12       	push	r4		;
    67de:	04 41       	mov	r1,	r4	;
    67e0:	31 80 06 00 	sub	#6,	r1	;
    67e4:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    67e8:	1c 4c 04 00 	mov	4(r12),	r12	;
    67ec:	2c 4c       	mov	@r12,	r12	;
    67ee:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    67f2:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    67f6:	1c 4c 02 00 	mov	2(r12),	r12	;
    67fa:	1d 44 fe ff 	mov	-2(r4),	r13	;
    67fe:	1d 4d 08 00 	mov	8(r13),	r13	;
    6802:	0c 9d       	cmp	r13,	r12	;
    6804:	3a 24       	jz	$+118    	;abs 0x687a
    6806:	00 3c       	jmp	$+2      	;abs 0x6808
    6808:	00 3c       	jmp	$+2      	;abs 0x680a
    680a:	1c 42 c2 54 	mov	&0x54c2,r12	;0x54c2
    680e:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6812:	0c 9d       	cmp	r13,	r12	;
    6814:	25 2c       	jc	$+76     	;abs 0x6860
    6816:	00 3c       	jmp	$+2      	;abs 0x6818
    6818:	1c 42 c2 54 	mov	&0x54c2,r12	;0x54c2
    681c:	0c 5c       	rla	r12		;
    681e:	1c 4c e4 54 	mov	21732(r12),r12	;0x054e4
    6822:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    6826:	0c 93       	cmp	#0,	r12	;r3 As==00
    6828:	15 24       	jz	$+44     	;abs 0x6854
    682a:	00 3c       	jmp	$+2      	;abs 0x682c
    682c:	1c 42 c2 54 	mov	&0x54c2,r12	;0x54c2
    6830:	0c 5c       	rla	r12		;
    6832:	1c 4c 26 55 	mov	21798(r12),r12	;0x05526
    6836:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    683a:	1f 44 fc ff 	mov	-4(r4),	r15	;
    683e:	1c 42 c2 54 	mov	&0x54c2,r12	;0x54c2
    6842:	0c 5c       	rla	r12		;
    6844:	3c 50 68 55 	add	#21864,	r12	;#0x5568
    6848:	1d 44 fa ff 	mov	-6(r4),	r13	;
    684c:	0e 4c       	mov	r12,	r14	;
    684e:	b0 12 24 62 	call	#25124		;#0x6224
    6852:	00 3c       	jmp	$+2      	;abs 0x6854
    6854:	1c 42 c2 54 	mov	&0x54c2,r12	;0x54c2
    6858:	1c 53       	inc	r12		;
    685a:	82 4c c2 54 	mov	r12,	&0x54c2	;
    685e:	d5 3f       	jmp	$-84     	;abs 0x680a
    6860:	82 43 c4 54 	mov	#0,	&0x54c4	;r3 As==00
    6864:	82 43 c2 54 	mov	#0,	&0x54c2	;r3 As==00
    6868:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    686c:	1c 4c 02 00 	mov	2(r12),	r12	;
    6870:	1d 44 fe ff 	mov	-2(r4),	r13	;
    6874:	8d 4c 08 00 	mov	r12,	8(r13)	;
    6878:	03 3c       	jmp	$+8      	;abs 0x6880
    687a:	82 43 c4 54 	mov	#0,	&0x54c4	;r3 As==00
    687e:	00 3c       	jmp	$+2      	;abs 0x6880
    6880:	31 50 06 00 	add	#6,	r1	;
    6884:	34 41       	pop	r4		;
    6886:	30 41       	ret			

00006888 <transition_to>:
    6888:	04 12       	push	r4		;
    688a:	04 41       	mov	r1,	r4	;
    688c:	31 80 0a 00 	sub	#10,	r1	;#0x000a
    6890:	0c 4f       	mov	r15,	r12	;
    6892:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6896:	1f 42 e0 54 	mov	&0x54e0,r15	;0x54e0
    689a:	3d 40 da 54 	mov	#21722,	r13	;#0x54da
    689e:	3e 40 ce 54 	mov	#21710,	r14	;#0x54ce
    68a2:	0f 9d       	cmp	r13,	r15	;
    68a4:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    68a8:	84 4d f8 ff 	mov	r13,	-8(r4)	; 0xfff8
    68ac:	84 4e f6 ff 	mov	r14,	-10(r4)	; 0xfff6
    68b0:	04 24       	jz	$+10     	;abs 0x68ba
    68b2:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    68b6:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    68ba:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    68be:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    68c2:	1d 44 fe ff 	mov	-2(r4),	r13	;
    68c6:	8c 4d 00 00 	mov	r13,	0(r12)	;
    68ca:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    68ce:	1c 4c 02 00 	mov	2(r12),	r12	;
    68d2:	1c 53       	inc	r12		;
    68d4:	1d 44 fc ff 	mov	-4(r4),	r13	;
    68d8:	8d 4c 02 00 	mov	r12,	2(r13)	;
    68dc:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    68e0:	1c 4c 02 00 	mov	2(r12),	r12	;
    68e4:	1d 44 fc ff 	mov	-4(r4),	r13	;
    68e8:	1d 4d 04 00 	mov	4(r13),	r13	;
    68ec:	8d 4c 02 00 	mov	r12,	2(r13)	;
    68f0:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    68f4:	2c 4c       	mov	@r12,	r12	;
    68f6:	1d 44 fc ff 	mov	-4(r4),	r13	;
    68fa:	1d 4d 04 00 	mov	4(r13),	r13	;
    68fe:	8d 4c 00 00 	mov	r12,	0(r13)	;
    6902:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6906:	82 4c e0 54 	mov	r12,	&0x54e0	;
    690a:	b0 12 dc 67 	call	#26588		;#0x67dc
    690e:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6912:	2c 4c       	mov	@r12,	r12	;
    6914:	31 40 00 24 	mov	#9216,	r1	;#0x2400
    6918:	00 4c       	br	r12		;
    691a:	31 50 0a 00 	add	#10,	r1	;#0x000a
    691e:	34 41       	pop	r4		;
    6920:	30 41       	ret			
	...

00006924 <chan_in>:
    6924:	04 12       	push	r4		;
    6926:	04 41       	mov	r1,	r4	;
    6928:	0b 12       	push	r11		;
    692a:	0a 12       	push	r10		;
    692c:	31 80 18 00 	sub	#24,	r1	;#0x0018
    6930:	0c 4d       	mov	r13,	r12	;
    6932:	0b 4e       	mov	r14,	r11	;
    6934:	0a 4f       	mov	r15,	r10	;
    6936:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    693a:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    693e:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    6942:	84 43 f2 ff 	mov	#0,	-14(r4)	;r3 As==00, 0xfff2
    6946:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    694a:	2d 53       	incd	r13		;
    694c:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    6950:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    6954:	84 4d ec ff 	mov	r13,	-20(r4)	; 0xffec
    6958:	1d 44 ee ff 	mov	-18(r4),r13	;0xffffffee
    695c:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfffffff6
    6960:	0d 5e       	add	r14,	r13	;
    6962:	84 4d ea ff 	mov	r13,	-22(r4)	; 0xffea
    6966:	84 4d f0 ff 	mov	r13,	-16(r4)	; 0xfff0
    696a:	0f 4d       	mov	r13,	r15	;
    696c:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    6970:	84 4b e6 ff 	mov	r11,	-26(r4)	; 0xffe6
    6974:	84 4a e4 ff 	mov	r10,	-28(r4)	; 0xffe4
    6978:	31 50 18 00 	add	#24,	r1	;#0x0018
    697c:	3a 41       	pop	r10		;
    697e:	3b 41       	pop	r11		;
    6980:	34 41       	pop	r4		;
    6982:	30 41       	ret			

00006984 <chan_out>:
    6984:	04 12       	push	r4		;
    6986:	04 41       	mov	r1,	r4	;
    6988:	31 80 14 00 	sub	#20,	r1	;#0x0014
    698c:	1c 44 0a 00 	mov	10(r4),	r12	;0x0000a
    6990:	1d 44 08 00 	mov	8(r4),	r13	;
    6994:	1e 44 06 00 	mov	6(r4),	r14	;
    6998:	1f 44 04 00 	mov	4(r4),	r15	;
    699c:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    69a0:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    69a4:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    69a8:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    69ac:	1c 44 fa ff 	mov	-6(r4),	r12	;
    69b0:	2c 53       	incd	r12		;
    69b2:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    69b6:	1c 44 fa ff 	mov	-6(r4),	r12	;
    69ba:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    69be:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    69c2:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    69c6:	0c 5d       	add	r13,	r12	;
    69c8:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    69cc:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    69d0:	1e 44 fe ff 	mov	-2(r4),	r14	;
    69d4:	1d 44 fc ff 	mov	-4(r4),	r13	;
    69d8:	0f 4c       	mov	r12,	r15	;
    69da:	b0 12 24 62 	call	#25124		;#0x6224
    69de:	31 50 14 00 	add	#20,	r1	;#0x0014
    69e2:	34 41       	pop	r4		;
    69e4:	30 41       	ret			
	...

000069e8 <write_to_gbuf>:
    69e8:	04 12       	push	r4		;
    69ea:	04 41       	mov	r1,	r4	;
    69ec:	0b 12       	push	r11		;
    69ee:	0a 12       	push	r10		;
    69f0:	31 80 12 00 	sub	#18,	r1	;#0x0012
    69f4:	0c 4d       	mov	r13,	r12	;
    69f6:	0b 4e       	mov	r14,	r11	;
    69f8:	0a 4f       	mov	r15,	r10	;
    69fa:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    69fe:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    6a02:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    6a06:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6a0a:	0d 5d       	rla	r13		;
    6a0c:	3d 50 68 55 	add	#21864,	r13	;#0x5568
    6a10:	1e 44 fa ff 	mov	-6(r4),	r14	;
    6a14:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfffffff6
    6a18:	84 4f f0 ff 	mov	r15,	-16(r4)	; 0xfff0
    6a1c:	0f 4d       	mov	r13,	r15	;
    6a1e:	1d 44 f0 ff 	mov	-16(r4),r13	;0xfffffff0
    6a22:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    6a26:	84 4b ec ff 	mov	r11,	-20(r4)	; 0xffec
    6a2a:	84 4a ea ff 	mov	r10,	-22(r4)	; 0xffea
    6a2e:	b0 12 24 62 	call	#25124		;#0x6224
    6a32:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6a36:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6a3a:	0d 5d       	rla	r13		;
    6a3c:	8d 4c 26 55 	mov	r12,	21798(r13); 0x5526
    6a40:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6a44:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6a48:	0d 5d       	rla	r13		;
    6a4a:	8d 4c e4 54 	mov	r12,	21732(r13); 0x54e4
    6a4e:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6a52:	3c 90 03 00 	cmp	#3,	r12	;
    6a56:	2a 28       	jnc	$+86     	;abs 0x6aac
    6a58:	00 3c       	jmp	$+2      	;abs 0x6a5a
    6a5a:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6a5e:	3c 53       	add	#-1,	r12	;r3 As==11
    6a60:	12 c3       	clrc			
    6a62:	0c 10       	rrc	r12		;
    6a64:	1c 53       	inc	r12		;
    6a66:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    6a6a:	94 43 f2 ff 	mov	#1,	-14(r4)	;r3 As==01, 0xfff2
    6a6e:	00 3c       	jmp	$+2      	;abs 0x6a70
    6a70:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6a74:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    6a78:	0c 9d       	cmp	r13,	r12	;
    6a7a:	10 2c       	jc	$+34     	;abs 0x6a9c
    6a7c:	00 3c       	jmp	$+2      	;abs 0x6a7e
    6a7e:	1c 42 c4 54 	mov	&0x54c4,r12	;0x54c4
    6a82:	1d 44 f2 ff 	mov	-14(r4),r13	;0xfffffff2
    6a86:	0c 5d       	add	r13,	r12	;
    6a88:	0c 5c       	rla	r12		;
    6a8a:	8c 43 e4 54 	mov	#0,	21732(r12);r3 As==00, 0x54e4
    6a8e:	00 3c       	jmp	$+2      	;abs 0x6a90
    6a90:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6a94:	1c 53       	inc	r12		;
    6a96:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    6a9a:	ea 3f       	jmp	$-42     	;abs 0x6a70
    6a9c:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6aa0:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6aa4:	0d 5c       	add	r12,	r13	;
    6aa6:	82 4d c4 54 	mov	r13,	&0x54c4	;
    6aaa:	06 3c       	jmp	$+14     	;abs 0x6ab8
    6aac:	1c 42 c4 54 	mov	&0x54c4,r12	;0x54c4
    6ab0:	1c 53       	inc	r12		;
    6ab2:	82 4c c4 54 	mov	r12,	&0x54c4	;
    6ab6:	00 3c       	jmp	$+2      	;abs 0x6ab8
    6ab8:	31 50 12 00 	add	#18,	r1	;#0x0012
    6abc:	3a 41       	pop	r10		;
    6abe:	3b 41       	pop	r11		;
    6ac0:	34 41       	pop	r4		;
    6ac2:	30 41       	ret			

00006ac4 <chan_out_gbuf>:
    6ac4:	04 12       	push	r4		;
    6ac6:	04 41       	mov	r1,	r4	;
    6ac8:	31 80 18 00 	sub	#24,	r1	;#0x0018
    6acc:	1c 44 0a 00 	mov	10(r4),	r12	;0x0000a
    6ad0:	1d 44 08 00 	mov	8(r4),	r13	;
    6ad4:	1e 44 06 00 	mov	6(r4),	r14	;
    6ad8:	1f 44 04 00 	mov	4(r4),	r15	;
    6adc:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6ae0:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    6ae4:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    6ae8:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    6aec:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6af0:	2c 53       	incd	r12		;
    6af2:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    6af6:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6afa:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    6afe:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    6b02:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    6b06:	0c 5d       	add	r13,	r12	;
    6b08:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    6b0c:	1c 42 c4 54 	mov	&0x54c4,r12	;0x54c4
    6b10:	0c 5c       	rla	r12		;
    6b12:	3c 50 68 55 	add	#21864,	r12	;#0x5568
    6b16:	1e 44 fe ff 	mov	-2(r4),	r14	;
    6b1a:	1d 44 fc ff 	mov	-4(r4),	r13	;
    6b1e:	0f 4c       	mov	r12,	r15	;
    6b20:	b0 12 24 62 	call	#25124		;#0x6224
    6b24:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6b28:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6b2c:	0d 5d       	rla	r13		;
    6b2e:	8d 4c 26 55 	mov	r12,	21798(r13); 0x5526
    6b32:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6b36:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    6b3a:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6b3e:	0d 5d       	rla	r13		;
    6b40:	8d 4c e4 54 	mov	r12,	21732(r13); 0x54e4
    6b44:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6b48:	3c 90 03 00 	cmp	#3,	r12	;
    6b4c:	2a 28       	jnc	$+86     	;abs 0x6ba2
    6b4e:	00 3c       	jmp	$+2      	;abs 0x6b50
    6b50:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6b54:	3c 53       	add	#-1,	r12	;r3 As==11
    6b56:	12 c3       	clrc			
    6b58:	0c 10       	rrc	r12		;
    6b5a:	1c 53       	inc	r12		;
    6b5c:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    6b60:	94 43 e8 ff 	mov	#1,	-24(r4)	;r3 As==01, 0xffe8
    6b64:	00 3c       	jmp	$+2      	;abs 0x6b66
    6b66:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    6b6a:	1d 44 ea ff 	mov	-22(r4),r13	;0xffffffea
    6b6e:	0c 9d       	cmp	r13,	r12	;
    6b70:	10 2c       	jc	$+34     	;abs 0x6b92
    6b72:	00 3c       	jmp	$+2      	;abs 0x6b74
    6b74:	1c 42 c4 54 	mov	&0x54c4,r12	;0x54c4
    6b78:	1d 44 e8 ff 	mov	-24(r4),r13	;0xffffffe8
    6b7c:	0c 5d       	add	r13,	r12	;
    6b7e:	0c 5c       	rla	r12		;
    6b80:	8c 43 e4 54 	mov	#0,	21732(r12);r3 As==00, 0x54e4
    6b84:	00 3c       	jmp	$+2      	;abs 0x6b86
    6b86:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    6b8a:	1c 53       	inc	r12		;
    6b8c:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    6b90:	ea 3f       	jmp	$-42     	;abs 0x6b66
    6b92:	1c 44 ea ff 	mov	-22(r4),r12	;0xffffffea
    6b96:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6b9a:	0d 5c       	add	r12,	r13	;
    6b9c:	82 4d c4 54 	mov	r13,	&0x54c4	;
    6ba0:	06 3c       	jmp	$+14     	;abs 0x6bae
    6ba2:	1c 42 c4 54 	mov	&0x54c4,r12	;0x54c4
    6ba6:	1c 53       	inc	r12		;
    6ba8:	82 4c c4 54 	mov	r12,	&0x54c4	;
    6bac:	00 3c       	jmp	$+2      	;abs 0x6bae
    6bae:	31 50 18 00 	add	#24,	r1	;#0x0018
    6bb2:	34 41       	pop	r4		;
    6bb4:	30 41       	ret			
	...

00006bb8 <main>:
    6bb8:	04 12       	push	r4		;
    6bba:	04 41       	mov	r1,	r4	;
    6bbc:	21 83       	decd	r1		;
    6bbe:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    6bc2:	b0 12 8c 61 	call	#24972		;#0x618c
    6bc6:	1c 42 e2 54 	mov	&0x54e2,r12	;0x54e2
    6bca:	1c 53       	inc	r12		;
    6bcc:	82 4c e2 54 	mov	r12,	&0x54e2	;
    6bd0:	b0 12 dc 67 	call	#26588		;#0x67dc
    6bd4:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    6bd8:	2c 4c       	mov	@r12,	r12	;
    6bda:	2c 4c       	mov	@r12,	r12	;
    6bdc:	00 4c       	br	r12		;
    6bde:	0f 43       	clr	r15		;
    6be0:	21 53       	incd	r1		;
    6be2:	34 41       	pop	r4		;
    6be4:	30 41       	ret			
	...

00006be8 <__mulhi3hw_noint>:
    6be8:	82 4f c0 04 	mov	r15,	&0x04c0	;
    6bec:	82 4e c8 04 	mov	r14,	&0x04c8	;
    6bf0:	1f 42 ca 04 	mov	&0x04ca,r15	;0x04ca
    6bf4:	30 41       	ret			

00006bf6 <UART_init>:
 * @todo Currently assumes an 8MHz SMCLK. Make robust to clock frequency changes by using 32k ACLK.
 */
void UART_init(void) {

    // Configure USCI_A0 for UART mode
    UCA0CTLW0 = UCSWRST;                      // Put eUSCI in reset
    6bf6:	92 43 c0 05 	mov	#1,	&0x05c0	;r3 As==01
    UCA0CTLW0 |= UCSSEL__SMCLK;               // CLK = SMCLK
    6bfa:	b2 d0 80 00 	bis	#128,	&0x05c0	;#0x0080
    6bfe:	c0 05 
    UCA0BR1 = 0;
    UCA0MCTLW = UCOS16 | UCBRF_2 | (0xBB << 8);
#endif // UART_BAUDRATE
#elif UART_CLOCK == 8000000
#if UART_BAUDRATE == 115200
    UCA0BR0 = 4;
    6c00:	e2 42 c6 05 	mov.b	#4,	&0x05c6	;r2 As==10
    UCA0BR1 = 0;
    6c04:	c2 43 c7 05 	mov.b	#0,	&0x05c7	;r3 As==00
    UCA0MCTLW = UCOS16 | UCBRF_4 | (0x55 << 8);
    6c08:	b2 40 41 55 	mov	#21825,	&0x05c8	;#0x5541
    6c0c:	c8 05 
#endif // UART_BAUDRATE
#endif // UART_CLOCK

#if defined(__MSP430FR5969__) || defined(__MSP430FR5949__)
    PUART_TXSEL0 &= ~PIN_UART_TX; // TX pin to UART module
    6c0e:	d2 c3 0b 02 	bic.b	#1,	&0x020b	;r3 As==01
    PUART_TXSEL1 |= PIN_UART_TX;
    6c12:	d2 d3 0d 02 	bis.b	#1,	&0x020d	;r3 As==01

    PUART_RXSEL0 &= ~PIN_UART_RX; // RX pin to UART module
    6c16:	e2 c3 0b 02 	bic.b	#2,	&0x020b	;r3 As==10
    PUART_RXSEL1 |= PIN_UART_RX;
    6c1a:	e2 d3 0d 02 	bis.b	#2,	&0x020d	;r3 As==10
    PUART_RXSEL1 &= ~PIN_UART_RX;
#else
#error MCU not supported
#endif

    UCA0CTLW0 &= ~UCSWRST;                    // Initialize eUSCI
    6c1e:	92 c3 c0 05 	bic	#1,	&0x05c0	;r3 As==01

    // Initialize module state
    UART_SM.isTxBusy = FALSE;
    6c22:	3c 40 22 1c 	mov	#7202,	r12	;#0x1c22
    6c26:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    UART_SM.txBytesRemaining = 0;
    6c2a:	8c 43 04 00 	mov	#0,	4(r12)	;r3 As==00
    UART_SM.isRxBusy = FALSE;
    6c2e:	cc 43 06 00 	mov.b	#0,	6(r12)	;r3 As==00
    UART_SM.rxBytesRemaining = 0;
    6c32:	8c 43 0a 00 	mov	#0,	10(r12)	;r3 As==00, 0x000a

}
    6c36:	30 41       	ret			

00006c38 <UART_teardown>:
void UART_teardown()
{
    // disable UART
    // Not sure how to do this best, but set all UCA0* registers to
    // their default values.  See User's Guide for default values.
    PUART_TXSEL0 &= ~PIN_UART_TX;
    6c38:	d2 c3 0b 02 	bic.b	#1,	&0x020b	;r3 As==01
    PUART_TXSEL1 &= ~PIN_UART_TX;
    6c3c:	d2 c3 0d 02 	bic.b	#1,	&0x020d	;r3 As==01
    PUART_RXSEL0 &= ~PIN_UART_RX;
    6c40:	e2 c3 0b 02 	bic.b	#2,	&0x020b	;r3 As==10
    PUART_RXSEL1 &= ~PIN_UART_RX;
    6c44:	e2 c3 0d 02 	bic.b	#2,	&0x020d	;r3 As==10
    UCA0CTLW0 = 0x0001;
    6c48:	92 43 c0 05 	mov	#1,	&0x05c0	;r3 As==01
    UCA0BR0 = 0x0000;
    6c4c:	c2 43 c6 05 	mov.b	#0,	&0x05c6	;r3 As==00
    UCA0MCTLW = 0x0000;
    6c50:	82 43 c8 05 	mov	#0,	&0x05c8	;r3 As==00
    UCA0IE = 0x0000;
    6c54:	82 43 da 05 	mov	#0,	&0x05da	;r3 As==00
    UCA0IFG = 0x0000;
    6c58:	82 43 dc 05 	mov	#0,	&0x05dc	;r3 As==00
}
    6c5c:	30 41       	ret			

00006c5e <UART_asyncSend>:
 * @param size the number of bytes to send
 */
void UART_asyncSend(uint8_t* txBuf, uint16_t size) {

    // Block until prior transmission has completed
    while (UART_SM.isTxBusy)
    6c5e:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6c62:	6e 4f       	mov.b	@r15,	r14	;
    6c64:	0e 93       	cmp	#0,	r14	;r3 As==00
    6c66:	fd 23       	jnz	$-4      	;abs 0x6c62
        ;

    // Set up for start of transmission
    UART_SM.isTxBusy = TRUE;
    6c68:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6c6c:	de 43 00 00 	mov.b	#1,	0(r14)	;r3 As==01
    UART_SM.txPtr = txBuf;
    6c70:	8e 4c 02 00 	mov	r12,	2(r14)	;
    UART_SM.txBytesRemaining = size;
    6c74:	8e 4d 04 00 	mov	r13,	4(r14)	;

    UCA0IFG &= ~(USCI_UART_UCTXIFG); // Clear the 'ready to accept byte' flag
    6c78:	a2 c2 dc 05 	bic	#4,	&0x05dc	;r2 As==10

    UCA0IE |= UCTXIE; // Enable USCI_A0 TX interrupt ('ready to accept byte')
    6c7c:	a2 d3 da 05 	bis	#2,	&0x05da	;r3 As==10
    //UCA0TXBUF = *(UART_SM.txPtr++); // Load in first byte

    // The bytes are transmitted in the TX ISR (which is called whenever the
    // UART is ready to accept a byte), and the isBusy flag is cleared when the
    // last byte has *finished* transmitting.
}
    6c80:	30 41       	ret			

00006c82 <UART_send>:
 * @param size the number of bytes to send
 *
 */
void UART_send(uint8_t* txBuf, uint16_t size) {

    UART_asyncSend(txBuf, size);
    6c82:	b0 12 5e 6c 	call	#27742		;#0x6c5e

    // Block until complete
    while (UART_SM.isTxBusy)
    6c86:	3d 40 22 1c 	mov	#7202,	r13	;#0x1c22
    6c8a:	6c 4d       	mov.b	@r13,	r12	;
    6c8c:	0c 93       	cmp	#0,	r12	;r3 As==00
    6c8e:	fd 23       	jnz	$-4      	;abs 0x6c8a
        ;
}
    6c90:	30 41       	ret			

00006c92 <UART_critSend>:
 *  and use UART status register polling instead of interrupts.
 */
void UART_critSend(uint8_t* txBuf, uint16_t size) {

    // Block until prior transmission has completed
    while (UART_SM.isTxBusy)
    6c92:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6c96:	6e 4f       	mov.b	@r15,	r14	;
    6c98:	0e 93       	cmp	#0,	r14	;r3 As==00
    6c9a:	fd 23       	jnz	$-4      	;abs 0x6c96
        ;

    // Set up for start of transmission
    UART_SM.isTxBusy = TRUE;
    6c9c:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6ca0:	de 43 00 00 	mov.b	#1,	0(r14)	;r3 As==01
    UART_SM.txPtr = txBuf;
    6ca4:	8e 4c 02 00 	mov	r12,	2(r14)	;
    UART_SM.txBytesRemaining = size;
    6ca8:	8e 4d 04 00 	mov	r13,	4(r14)	;

    UCA0IV &= ~(USCI_UART_UCTXIFG); // Clear byte completion flag
    6cac:	a2 c2 de 05 	bic	#4,	&0x05de	;r2 As==10

    while (UART_SM.txBytesRemaining--) {
    6cb0:	1c 4e 04 00 	mov	4(r14),	r12	;
    6cb4:	0d 4c       	mov	r12,	r13	;
    6cb6:	3d 53       	add	#-1,	r13	;r3 As==11
    6cb8:	8e 4d 04 00 	mov	r13,	4(r14)	;
    6cbc:	0c 93       	cmp	#0,	r12	;r3 As==00
    6cbe:	19 24       	jz	$+52     	;abs 0x6cf2
        UCA0TXBUF = *(UART_SM.txPtr++); // Load in next byte
    6cc0:	0c 4e       	mov	r14,	r12	;
    6cc2:	1d 4c 02 00 	mov	2(r12),	r13	;
    6cc6:	0e 4d       	mov	r13,	r14	;
    6cc8:	1e 53       	inc	r14		;
    6cca:	8c 4e 02 00 	mov	r14,	2(r12)	;
    6cce:	6d 4d       	mov.b	@r13,	r13	;
    6cd0:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    6cd4:	82 4d ce 05 	mov	r13,	&0x05ce	;
        while (!(UCA0IFG & UCTXIFG))
    6cd8:	a2 b3 dc 05 	bit	#2,	&0x05dc	;r3 As==10
    6cdc:	fd 27       	jz	$-4      	;abs 0x6cd8
            ; // Wait for byte transmission to complete
        UCA0IFG &= ~(UCTXIFG); // Clear byte completion flag
    6cde:	a2 c3 dc 05 	bic	#2,	&0x05dc	;r3 As==10
    UART_SM.txPtr = txBuf;
    UART_SM.txBytesRemaining = size;

    UCA0IV &= ~(USCI_UART_UCTXIFG); // Clear byte completion flag

    while (UART_SM.txBytesRemaining--) {
    6ce2:	1d 4c 04 00 	mov	4(r12),	r13	;
    6ce6:	0e 4d       	mov	r13,	r14	;
    6ce8:	3e 53       	add	#-1,	r14	;r3 As==11
    6cea:	8c 4e 04 00 	mov	r14,	4(r12)	;
    6cee:	0d 93       	cmp	#0,	r13	;r3 As==00
    6cf0:	e8 23       	jnz	$-46     	;abs 0x6cc2
        while (!(UCA0IFG & UCTXIFG))
            ; // Wait for byte transmission to complete
        UCA0IFG &= ~(UCTXIFG); // Clear byte completion flag
    }

    UART_SM.isTxBusy = FALSE;
    6cf2:	c2 43 22 1c 	mov.b	#0,	&0x1c22	;r3 As==00
}
    6cf6:	30 41       	ret			

00006cf8 <UART_isTxBusy>:
/**
 * Return true if UART TX module is in the middle of an operation, false if not.
 */
uint8_t UART_isTxBusy() {
    return UART_SM.isTxBusy;
}
    6cf8:	5c 42 22 1c 	mov.b	&0x1c22,r12	;0x1c22
    6cfc:	30 41       	ret			

00006cfe <UART_asyncReceive>:
 * @param size the number of bytes to receive
 */
void UART_asyncReceive(uint8_t* rxBuf, uint16_t size) {

    // Block until prior reception has completed
    while (UART_SM.isRxBusy)
    6cfe:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6d02:	5e 4f 06 00 	mov.b	6(r15),	r14	;
    6d06:	0e 93       	cmp	#0,	r14	;r3 As==00
    6d08:	fc 23       	jnz	$-6      	;abs 0x6d02
        ;

    // Set up for start of reception
    UART_SM.isRxBusy = TRUE;
    6d0a:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6d0e:	de 43 06 00 	mov.b	#1,	6(r14)	;r3 As==01
    UART_SM.rxPtr = rxBuf;
    6d12:	8e 4c 08 00 	mov	r12,	8(r14)	;
    UART_SM.rxBytesRemaining = size;
    6d16:	8e 4d 0a 00 	mov	r13,	10(r14)	; 0x000a

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag
    6d1a:	92 c3 dc 05 	bic	#1,	&0x05dc	;r3 As==01

    UCA0IE |= UCRXIE; // Enable USCI_A0 RX interrupt
    6d1e:	92 d3 da 05 	bis	#1,	&0x05da	;r3 As==01

    // The rest of the reception will be completed by the RX ISR (which
    //  will wake after each byte has been received), and the isBusy flag
    //  will be cleared when done.
}
    6d22:	30 41       	ret			

00006d24 <UART_receive>:
 * @param size the number of bytes to receive
 *
 */
void UART_receive(uint8_t* rxBuf, uint16_t size) {

    UART_asyncReceive(rxBuf, size);
    6d24:	b0 12 fe 6c 	call	#27902		;#0x6cfe

    // Block until complete
    while (UART_SM.isRxBusy)
    6d28:	3d 40 22 1c 	mov	#7202,	r13	;#0x1c22
    6d2c:	5c 4d 06 00 	mov.b	6(r13),	r12	;
    6d30:	0c 93       	cmp	#0,	r12	;r3 As==00
    6d32:	fc 23       	jnz	$-6      	;abs 0x6d2c
        ;
}
    6d34:	30 41       	ret			

00006d36 <UART_critReceive>:
 *  and use UART status register polling instead of interrupts.
 */
void UART_critReceive(uint8_t* rxBuf, uint16_t size) {

    // Block until prior reception has completed
    while (UART_SM.isRxBusy)
    6d36:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6d3a:	5e 4f 06 00 	mov.b	6(r15),	r14	;
    6d3e:	0e 93       	cmp	#0,	r14	;r3 As==00
    6d40:	fc 23       	jnz	$-6      	;abs 0x6d3a
        ;

    // Set up for start of reception
    UART_SM.isRxBusy = TRUE;
    6d42:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6d46:	de 43 06 00 	mov.b	#1,	6(r14)	;r3 As==01
    UART_SM.rxPtr = rxBuf;
    6d4a:	8e 4c 08 00 	mov	r12,	8(r14)	;
    UART_SM.rxBytesRemaining = size;
    6d4e:	8e 4d 0a 00 	mov	r13,	10(r14)	; 0x000a

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag
    6d52:	92 c3 dc 05 	bic	#1,	&0x05dc	;r3 As==01

    while (UART_SM.rxBytesRemaining--) {
    6d56:	1c 4e 0a 00 	mov	10(r14),r12	;0x0000a
    6d5a:	0d 4c       	mov	r12,	r13	;
    6d5c:	3d 53       	add	#-1,	r13	;r3 As==11
    6d5e:	8e 4d 0a 00 	mov	r13,	10(r14)	; 0x000a
    6d62:	0c 93       	cmp	#0,	r12	;r3 As==00
    6d64:	18 24       	jz	$+50     	;abs 0x6d96
        while (!(UCA0IFG & UCRXIFG))
            ; // Wait for byte reception to complete
        UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

        uint8_t rec = UCA0RXBUF; // Read next byte
        *(UART_SM.rxPtr++) = rec; // Store byte
    6d66:	0c 4e       	mov	r14,	r12	;
    UART_SM.rxBytesRemaining = size;

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

    while (UART_SM.rxBytesRemaining--) {
        while (!(UCA0IFG & UCRXIFG))
    6d68:	92 b3 dc 05 	bit	#1,	&0x05dc	;r3 As==01
    6d6c:	fd 27       	jz	$-4      	;abs 0x6d68
            ; // Wait for byte reception to complete
        UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag
    6d6e:	92 c3 dc 05 	bic	#1,	&0x05dc	;r3 As==01

        uint8_t rec = UCA0RXBUF; // Read next byte
    6d72:	1e 42 cc 05 	mov	&0x05cc,r14	;0x05cc
        *(UART_SM.rxPtr++) = rec; // Store byte
    6d76:	1d 4c 08 00 	mov	8(r12),	r13	;
    6d7a:	0f 4d       	mov	r13,	r15	;
    6d7c:	1f 53       	inc	r15		;
    6d7e:	8c 4f 08 00 	mov	r15,	8(r12)	;
    while (UART_SM.rxBytesRemaining--) {
        while (!(UCA0IFG & UCRXIFG))
            ; // Wait for byte reception to complete
        UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

        uint8_t rec = UCA0RXBUF; // Read next byte
    6d82:	cd 4e 00 00 	mov.b	r14,	0(r13)	;
    UART_SM.rxPtr = rxBuf;
    UART_SM.rxBytesRemaining = size;

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

    while (UART_SM.rxBytesRemaining--) {
    6d86:	1d 4c 0a 00 	mov	10(r12),r13	;0x0000a
    6d8a:	0e 4d       	mov	r13,	r14	;
    6d8c:	3e 53       	add	#-1,	r14	;r3 As==11
    6d8e:	8c 4e 0a 00 	mov	r14,	10(r12)	; 0x000a
    6d92:	0d 93       	cmp	#0,	r13	;r3 As==00
    6d94:	e9 23       	jnz	$-44     	;abs 0x6d68

        uint8_t rec = UCA0RXBUF; // Read next byte
        *(UART_SM.rxPtr++) = rec; // Store byte
    }

    UART_SM.isRxBusy = FALSE;
    6d96:	c2 43 28 1c 	mov.b	#0,	&0x1c28	;r3 As==00
}
    6d9a:	30 41       	ret			

00006d9c <UART_isRxBusy>:
/**
 * Return true if UART RX module is in the middle of an operation, false if not.
 */
uint8_t UART_isRxBusy() {
    return UART_SM.isRxBusy;
}
    6d9c:	5c 42 28 1c 	mov.b	&0x1c28,r12	;0x1c28
    6da0:	30 41       	ret			

00006da2 <UART_isRxDone>:
 * Return true if UART RX module is not in the middle of an operation (e.g. done), false if not.
 *
 * Could be used in combination with UART_asyncReceive.
 */
uint8_t UART_isRxDone() {
    return !(UART_SM.isRxBusy);
    6da2:	5c 42 28 1c 	mov.b	&0x1c28,r12	;0x1c28
    6da6:	3c 53       	add	#-1,	r12	;r3 As==11
}
    6da8:	5c 03       	rrum	#1,	r12	;
    6daa:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    6dae:	30 41       	ret			

00006db0 <USCI_A0_ISR>:
#elif defined(__GNUC__)
void __attribute__ ((interrupt(USCI_A0_VECTOR))) USCI_A0_ISR (void)
#else
#error Compiler not supported!
#endif
{
    6db0:	3f 15       	pushm	#4,	r15	;16-bit words
    uint8_t rec;

    switch (__even_in_range(UCA0IV, USCI_UART_UCTXCPTIFG)) {
    6db2:	1c 42 de 05 	mov	&0x05de,r12	;0x05de
    6db6:	2c 93       	cmp	#2,	r12	;r3 As==10
    6db8:	03 24       	jz	$+8      	;abs 0x6dc0
    6dba:	2c 92       	cmp	#4,	r12	;r2 As==10
    6dbc:	1e 24       	jz	$+62     	;abs 0x6dfa
    6dbe:	38 3c       	jmp	$+114    	;abs 0x6e30
    case USCI_NONE:
        break;
    case USCI_UART_UCRXIFG:
        if (UART_SM.rxBytesRemaining--) {
    6dc0:	3d 40 22 1c 	mov	#7202,	r13	;#0x1c22
    6dc4:	1c 4d 0a 00 	mov	10(r13),r12	;0x0000a
    6dc8:	0e 4c       	mov	r12,	r14	;
    6dca:	3e 53       	add	#-1,	r14	;r3 As==11
    6dcc:	8d 4e 0a 00 	mov	r14,	10(r13)	; 0x000a
    6dd0:	0c 93       	cmp	#0,	r12	;r3 As==00
    6dd2:	0a 24       	jz	$+22     	;abs 0x6de8
            rec = UCA0RXBUF; // Read next byte
    6dd4:	1e 42 cc 05 	mov	&0x05cc,r14	;0x05cc
            *(UART_SM.rxPtr++) = rec; // Store byte
    6dd8:	1c 4d 08 00 	mov	8(r13),	r12	;
    6ddc:	0f 4c       	mov	r12,	r15	;
    6dde:	1f 53       	inc	r15		;
    6de0:	8d 4f 08 00 	mov	r15,	8(r13)	;
    switch (__even_in_range(UCA0IV, USCI_UART_UCTXCPTIFG)) {
    case USCI_NONE:
        break;
    case USCI_UART_UCRXIFG:
        if (UART_SM.rxBytesRemaining--) {
            rec = UCA0RXBUF; // Read next byte
    6de4:	cc 4e 00 00 	mov.b	r14,	0(r12)	;
            *(UART_SM.rxPtr++) = rec; // Store byte
        }

        if (0 == UART_SM.rxBytesRemaining) {
    6de8:	1c 42 2c 1c 	mov	&0x1c2c,r12	;0x1c2c
    6dec:	0c 93       	cmp	#0,	r12	;r3 As==00
    6dee:	20 20       	jnz	$+66     	;abs 0x6e30
            UCA0IE &= ~(UCRXIE); // Disable USCI_A0 RX interrupt
    6df0:	92 c3 da 05 	bic	#1,	&0x05da	;r3 As==01
            UART_SM.isRxBusy = FALSE;
    6df4:	c2 43 28 1c 	mov.b	#0,	&0x1c28	;r3 As==00
    6df8:	1b 3c       	jmp	$+56     	;abs 0x6e30
        }

        break;
    case USCI_UART_UCTXIFG:
        UCA0TXBUF = *(UART_SM.txPtr++); // if interrupt was enabled, there must be bytes
    6dfa:	3c 40 22 1c 	mov	#7202,	r12	;#0x1c22
    6dfe:	1d 4c 02 00 	mov	2(r12),	r13	;
    6e02:	0e 4d       	mov	r13,	r14	;
    6e04:	1e 53       	inc	r14		;
    6e06:	8c 4e 02 00 	mov	r14,	2(r12)	;
    6e0a:	6d 4d       	mov.b	@r13,	r13	;
    6e0c:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    6e10:	82 4d ce 05 	mov	r13,	&0x05ce	;
        if (--UART_SM.txBytesRemaining == 0) {
    6e14:	1d 4c 04 00 	mov	4(r12),	r13	;
    6e18:	3d 53       	add	#-1,	r13	;r3 As==11
    6e1a:	8c 4d 04 00 	mov	r13,	4(r12)	;
    6e1e:	0d 93       	cmp	#0,	r13	;r3 As==00
    6e20:	07 20       	jnz	$+16     	;abs 0x6e30
            // TODO: actually, this wait should probably happen for blocking version only
            while (UCA0STATW & UCBUSY); // wait for last byte to finish transmitting
    6e22:	d2 b3 ca 05 	bit.b	#1,	&0x05ca	;r3 As==01
    6e26:	fd 23       	jnz	$-4      	;abs 0x6e22
            UCA0IE &= ~(UCTXIE); // Disable USCI_A0 TX interrupt
    6e28:	a2 c3 da 05 	bic	#2,	&0x05da	;r3 As==10
            UART_SM.isTxBusy = FALSE;
    6e2c:	c2 43 22 1c 	mov.b	#0,	&0x1c22	;r3 As==00
    case USCI_UART_UCSTTIFG:
        break;
    case USCI_UART_UCTXCPTIFG:
        break;
    }
}
    6e30:	3c 17       	popm	#4,	r15	;16-bit words
    6e32:	00 13       	reti			

00006e34 <memmove>:
    6e34:	0a 15       	pushm	#1,	r10	;16-bit words
    6e36:	0d 9c       	cmp	r12,	r13	;
    6e38:	10 2c       	jc	$+34     	;abs 0x6e5a
    6e3a:	0b 4d       	mov	r13,	r11	;
    6e3c:	0b 5e       	add	r14,	r11	;
    6e3e:	0c 9b       	cmp	r11,	r12	;
    6e40:	0c 2c       	jc	$+26     	;abs 0x6e5a
    6e42:	0d 4e       	mov	r14,	r13	;
    6e44:	3d 53       	add	#-1,	r13	;r3 As==11
    6e46:	3d 93       	cmp	#-1,	r13	;r3 As==11
    6e48:	13 24       	jz	$+40     	;abs 0x6e70
    6e4a:	0f 4d       	mov	r13,	r15	;
    6e4c:	0f 8e       	sub	r14,	r15	;
    6e4e:	0f 5b       	add	r11,	r15	;
    6e50:	0a 4c       	mov	r12,	r10	;
    6e52:	0a 5d       	add	r13,	r10	;
    6e54:	ea 4f 00 00 	mov.b	@r15,	0(r10)	;
    6e58:	f5 3f       	jmp	$-20     	;abs 0x6e44
    6e5a:	0f 43       	clr	r15		;
    6e5c:	0f 9e       	cmp	r14,	r15	;
    6e5e:	08 24       	jz	$+18     	;abs 0x6e70
    6e60:	0a 4d       	mov	r13,	r10	;
    6e62:	0a 5f       	add	r15,	r10	;
    6e64:	0b 4c       	mov	r12,	r11	;
    6e66:	0b 5f       	add	r15,	r11	;
    6e68:	eb 4a 00 00 	mov.b	@r10,	0(r11)	;
    6e6c:	1f 53       	inc	r15		;
    6e6e:	f6 3f       	jmp	$-18     	;abs 0x6e5c
    6e70:	0a 17       	popm	#1,	r10	;16-bit words
    6e72:	30 41       	ret			

00006e74 <memset>:
    6e74:	0f 4c       	mov	r12,	r15	;
    6e76:	0e 5c       	add	r12,	r14	;
    6e78:	0f 9e       	cmp	r14,	r15	;
    6e7a:	04 24       	jz	$+10     	;abs 0x6e84
    6e7c:	cf 4d 00 00 	mov.b	r13,	0(r15)	;
    6e80:	1f 53       	inc	r15		;
    6e82:	fa 3f       	jmp	$-10     	;abs 0x6e78
    6e84:	30 41       	ret			

00006e86 <__do_global_ctors_aux>:
    6e86:	0a 15       	pushm	#1,	r10	;16-bit words
    6e88:	1c 42 f4 44 	mov	&0x44f4,r12	;0x44f4
    6e8c:	3c 93       	cmp	#-1,	r12	;r3 As==11
    6e8e:	08 24       	jz	$+18     	;abs 0x6ea0
    6e90:	3a 40 f4 44 	mov	#17652,	r10	;#0x44f4
    6e94:	8c 12       	call	r12		;
    6e96:	3a 50 fe ff 	add	#65534,	r10	;#0xfffe
    6e9a:	2c 4a       	mov	@r10,	r12	;
    6e9c:	3c 93       	cmp	#-1,	r12	;r3 As==11
    6e9e:	fa 23       	jnz	$-10     	;abs 0x6e94
    6ea0:	0a 17       	popm	#1,	r10	;16-bit words
    6ea2:	30 41       	ret			

00006ea4 <call___do_global_ctors_aux>:
    6ea4:	30 41       	ret			

00006ea6 <__msp430_init>:
    6ea6:	b0 12 ac 56 	call	#22188		;#0x56ac
    6eaa:	b0 12 86 6e 	call	#28294		;#0x6e86
    6eae:	b0 12 ec 55 	call	#21996		;#0x55ec
    6eb2:	b0 12 e0 55 	call	#21984		;#0x55e0
    6eb6:	30 41       	ret			

00006eb8 <__msp430_fini>:
    6eb8:	b0 12 f8 55 	call	#22008		;#0x55f8
    6ebc:	b0 12 5e 56 	call	#22110		;#0x565e
    6ec0:	30 41       	ret			

templog.out:     file format elf32-little


templog.out:     file format elf32-msp430


Disassembly of section __interrupt_vector_49:

0000fff0 <__interrupt_vector_49>:
    fff0:	b8 6d       	interrupt service routine at 0x6db8

Disassembly of section .text:

000055b0 <__crt0_start>:
    55b0:	31 40 00 24 	mov	#9216,	r1	;#0x2400

000055b4 <__crt0_init_bss>:
    55b4:	3c 40 04 1c 	mov	#7172,	r12	;#0x1c04
    55b8:	0d 43       	clr	r13		;
    55ba:	3e 40 2a 00 	mov	#42,	r14	;#0x002a
    55be:	b0 12 7c 6e 	call	#28284		;#0x6e7c

000055c2 <__crt0_movedata>:
    55c2:	3c 40 00 1c 	mov	#7168,	r12	;#0x1c00
    55c6:	3d 40 aa 55 	mov	#21930,	r13	;#0x55aa
    55ca:	0d 9c       	cmp	r12,	r13	;
    55cc:	04 24       	jz	$+10     	;abs 0x55d6
    55ce:	3e 40 04 00 	mov	#4,	r14	;
    55d2:	b0 12 3c 6e 	call	#28220		;#0x6e3c

000055d6 <__crt0_call_init_then_main>:
    55d6:	b0 12 ae 6e 	call	#28334		;#0x6eae
    55da:	0c 43       	clr	r12		;
    55dc:	b0 12 c0 6b 	call	#27584		;#0x6bc0

000055e0 <_msp430_run_init_array>:
    55e0:	34 40 f0 44 	mov	#17648,	r4	;#0x44f0
    55e4:	35 40 f0 44 	mov	#17648,	r5	;#0x44f0
    55e8:	26 43       	mov	#2,	r6	;r3 As==10
    55ea:	0d 3c       	jmp	$+28     	;abs 0x5606

000055ec <_msp430_run_preinit_array>:
    55ec:	34 40 f0 44 	mov	#17648,	r4	;#0x44f0
    55f0:	35 40 f0 44 	mov	#17648,	r5	;#0x44f0
    55f4:	26 43       	mov	#2,	r6	;r3 As==10
    55f6:	07 3c       	jmp	$+16     	;abs 0x5606

000055f8 <_msp430_run_fini_array>:
    55f8:	34 40 f0 44 	mov	#17648,	r4	;#0x44f0
    55fc:	35 40 f0 44 	mov	#17648,	r5	;#0x44f0
    5600:	36 40 fe ff 	mov	#65534,	r6	;#0xfffe
    5604:	00 3c       	jmp	$+2      	;abs 0x5606

00005606 <_msp430_run_array>:
    5606:	05 94       	cmp	r4,	r5	;
    5608:	05 24       	jz	$+12     	;abs 0x5614
    560a:	27 44       	mov	@r4,	r7	;
    560c:	04 56       	add	r6,	r4	;
    560e:	a7 12       	call	@r7		;
    5610:	10 40 f4 ff 	br	0xfff4		;PC rel. 0x5606

00005614 <_msp430_run_done>:
    5614:	30 41       	ret			

00005616 <deregister_tm_clones>:
    5616:	3c 40 ca 6e 	mov	#28362,	r12	;#0x6eca
    561a:	3c 80 c9 6e 	sub	#28361,	r12	;#0x6ec9
    561e:	2d 43       	mov	#2,	r13	;r3 As==10
    5620:	0d 9c       	cmp	r12,	r13	;
    5622:	07 2c       	jc	$+16     	;abs 0x5632
    5624:	3d 40 00 00 	mov	#0,	r13	;
    5628:	0d 93       	cmp	#0,	r13	;r3 As==00
    562a:	03 24       	jz	$+8      	;abs 0x5632
    562c:	3c 40 ca 6e 	mov	#28362,	r12	;#0x6eca
    5630:	8d 12       	call	r13		;
    5632:	30 41       	ret			

00005634 <register_tm_clones>:
    5634:	3d 40 ca 6e 	mov	#28362,	r13	;#0x6eca
    5638:	3d 80 ca 6e 	sub	#28362,	r13	;#0x6eca
    563c:	0d 11       	rra	r13		;
    563e:	0c 4d       	mov	r13,	r12	;
    5640:	5c 03       	rrum	#1,	r12	;
    5642:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    5646:	0d 5c       	add	r12,	r13	;
    5648:	0d 11       	rra	r13		;
    564a:	0d 93       	cmp	#0,	r13	;r3 As==00
    564c:	07 24       	jz	$+16     	;abs 0x565c
    564e:	3e 40 00 00 	mov	#0,	r14	;
    5652:	0e 93       	cmp	#0,	r14	;r3 As==00
    5654:	03 24       	jz	$+8      	;abs 0x565c
    5656:	3c 40 ca 6e 	mov	#28362,	r12	;#0x6eca
    565a:	8e 12       	call	r14		;
    565c:	30 41       	ret			

0000565e <__do_global_dtors_aux>:
    565e:	0a 15       	pushm	#1,	r10	;16-bit words
    5660:	c2 93 04 1c 	cmp.b	#0,	&0x1c04	;r3 As==00
    5664:	20 20       	jnz	$+66     	;abs 0x56a6
    5666:	1c 42 06 1c 	mov	&0x1c06,r12	;0x1c06
    566a:	3a 40 fa 44 	mov	#17658,	r10	;#0x44fa
    566e:	3a 80 f8 44 	sub	#17656,	r10	;#0x44f8
    5672:	0a 11       	rra	r10		;
    5674:	3a 53       	add	#-1,	r10	;r3 As==11
    5676:	0c 9a       	cmp	r10,	r12	;
    5678:	0b 2c       	jc	$+24     	;abs 0x5690
    567a:	1c 53       	inc	r12		;
    567c:	82 4c 06 1c 	mov	r12,	&0x1c06	;
    5680:	0c 5c       	rla	r12		;
    5682:	1c 4c f8 44 	mov	17656(r12),r12	;0x044f8
    5686:	8c 12       	call	r12		;
    5688:	1c 42 06 1c 	mov	&0x1c06,r12	;0x1c06
    568c:	0c 9a       	cmp	r10,	r12	;
    568e:	f5 2b       	jnc	$-20     	;abs 0x567a
    5690:	b0 12 16 56 	call	#22038		;#0x5616
    5694:	3d 40 00 00 	mov	#0,	r13	;
    5698:	0d 93       	cmp	#0,	r13	;r3 As==00
    569a:	03 24       	jz	$+8      	;abs 0x56a2
    569c:	3c 40 ec 44 	mov	#17644,	r12	;#0x44ec
    56a0:	8d 12       	call	r13		;
    56a2:	d2 43 04 1c 	mov.b	#1,	&0x1c04	;r3 As==01
    56a6:	0a 17       	popm	#1,	r10	;16-bit words
    56a8:	30 41       	ret			

000056aa <call___do_global_dtors_aux>:
    56aa:	30 41       	ret			

000056ac <frame_dummy>:
    56ac:	3e 40 00 00 	mov	#0,	r14	;
    56b0:	0e 93       	cmp	#0,	r14	;r3 As==00
    56b2:	05 24       	jz	$+12     	;abs 0x56be
    56b4:	3c 40 ec 44 	mov	#17644,	r12	;#0x44ec
    56b8:	3d 40 08 1c 	mov	#7176,	r13	;#0x1c08
    56bc:	8e 12       	call	r14		;
    56be:	3c 40 00 1c 	mov	#7168,	r12	;#0x1c00
    56c2:	8c 93 00 00 	cmp	#0,	0(r12)	;r3 As==00
    56c6:	03 20       	jnz	$+8      	;abs 0x56ce
    56c8:	b0 12 34 56 	call	#22068		;#0x5634
    56cc:	30 41       	ret			
    56ce:	3d 40 00 00 	mov	#0,	r13	;
    56d2:	0d 93       	cmp	#0,	r13	;r3 As==00
    56d4:	f9 27       	jz	$-12     	;abs 0x56c8
    56d6:	8d 12       	call	r13		;
    56d8:	f7 3f       	jmp	$-16     	;abs 0x56c8

000056da <call_frame_dummy>:
    56da:	30 41       	ret			

000056dc <TimerB1_ISR>:
    56dc:	04 12       	push	r4		;
    56de:	04 41       	mov	r1,	r4	;
    56e0:	0c 12       	push	r12		;
    56e2:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    56e6:	3c f0 fd ff 	and	#65533,	r12	;#0xfffd
    56ea:	82 4c c0 03 	mov	r12,	&0x03c0	;
    56ee:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    56f2:	0c 93       	cmp	#0,	r12	;r3 As==00
    56f4:	17 24       	jz	$+48     	;abs 0x5724
    56f6:	00 3c       	jmp	$+2      	;abs 0x56f8
    56f8:	1c 42 16 1c 	mov	&0x1c16,r12	;0x1c16
    56fc:	1c 53       	inc	r12		;
    56fe:	82 4c 16 1c 	mov	r12,	&0x1c16	;
    5702:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5706:	2c d2       	bis	#4,	r12	;r2 As==10
    5708:	82 4c c0 03 	mov	r12,	&0x03c0	;
    570c:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5710:	2c d3       	bis	#2,	r12	;r3 As==10
    5712:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5716:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    571a:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    571e:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5722:	00 3c       	jmp	$+2      	;abs 0x5724
    5724:	3c 41       	pop	r12		;
    5726:	34 41       	pop	r4		;
    5728:	00 13       	reti			
	...

0000572c <init>:
    572c:	04 12       	push	r4		;
    572e:	04 41       	mov	r1,	r4	;
    5730:	21 82       	sub	#4,	r1	;r2 As==10
    5732:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5736:	3c f0 ff e6 	and	#59135,	r12	;#0xe6ff
    573a:	82 4c c0 03 	mov	r12,	&0x03c0	;
    573e:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5742:	3c d0 00 02 	bis	#512,	r12	;#0x0200
    5746:	82 4c c0 03 	mov	r12,	&0x03c0	;
    574a:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    574e:	3c d0 c0 00 	bis	#192,	r12	;#0x00c0
    5752:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5756:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    575a:	3c f0 ef ff 	and	#65519,	r12	;#0xffef
    575e:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5762:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5766:	3c d0 20 00 	bis	#32,	r12	;#0x0020
    576a:	82 4c c0 03 	mov	r12,	&0x03c0	;
    576e:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5772:	2c d3       	bis	#2,	r12	;r3 As==10
    5774:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5778:	b0 12 a0 61 	call	#24992		;#0x61a0
    577c:	5c 42 04 02 	mov.b	&0x0204,r12	;0x0204
    5780:	2c d3       	bis	#2,	r12	;r3 As==10
    5782:	4d 4c       	mov.b	r12,	r13	;
    5784:	c2 4d 04 02 	mov.b	r13,	&0x0204	;
    5788:	5c 42 04 02 	mov.b	&0x0204,r12	;0x0204
    578c:	2c d2       	bis	#4,	r12	;r2 As==10
    578e:	4d 4c       	mov.b	r12,	r13	;
    5790:	c2 4d 04 02 	mov.b	r13,	&0x0204	;
    5794:	5c 42 04 02 	mov.b	&0x0204,r12	;0x0204
    5798:	1c d3       	bis	#1,	r12	;r3 As==01
    579a:	4d 4c       	mov.b	r12,	r13	;
    579c:	c2 4d 04 02 	mov.b	r13,	&0x0204	;
    57a0:	b0 12 20 67 	call	#26400		;#0x6720
    57a4:	32 d2       	eint			
    57a6:	03 43       	nop			
    57a8:	0c 41       	mov	r1,	r12	;
    57aa:	bc 40 00 44 	mov	#17408,	0(r12)	;#0x4400
    57ae:	00 00 
    57b0:	b0 12 bc 62 	call	#25276		;#0x62bc
    57b4:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    57b8:	21 52       	add	#4,	r1	;r2 As==10
    57ba:	34 41       	pop	r4		;
    57bc:	30 41       	ret			
	...

000057c0 <task_init>:
    57c0:	04 12       	push	r4		;
    57c2:	04 41       	mov	r1,	r4	;
    57c4:	21 82       	sub	#4,	r1	;r2 As==10
    57c6:	0c 41       	mov	r1,	r12	;
    57c8:	bc 40 00 44 	mov	#17408,	0(r12)	;#0x4400
    57cc:	00 00 
    57ce:	b0 12 bc 62 	call	#25276		;#0x62bc
    57d2:	82 43 f4 46 	mov	#0,	&0x46f4	;r3 As==00
    57d6:	82 43 f6 46 	mov	#0,	&0x46f6	;r3 As==00
    57da:	82 43 f8 46 	mov	#0,	&0x46f8	;r3 As==00
    57de:	82 43 fa 46 	mov	#0,	&0x46fa	;r3 As==00
    57e2:	82 43 fc 46 	mov	#0,	&0x46fc	;r3 As==00
    57e6:	92 43 fe 46 	mov	#1,	&0x46fe	;r3 As==01
    57ea:	3c 40 26 45 	mov	#17702,	r12	;#0x4526
    57ee:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    57f2:	0f 4c       	mov	r12,	r15	;
    57f4:	b0 12 90 68 	call	#26768		;#0x6890
    57f8:	21 52       	add	#4,	r1	;r2 As==10
    57fa:	34 41       	pop	r4		;
    57fc:	30 41       	ret			
	...

00005800 <task_init_dict>:
    5800:	04 12       	push	r4		;
    5802:	04 41       	mov	r1,	r4	;
    5804:	31 80 0a 00 	sub	#10,	r1	;#0x000a
    5808:	1c 42 f8 46 	mov	&0x46f8,r12	;0x46f8
    580c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5810:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5814:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa
    5818:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    581c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5820:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    5824:	3e 40 06 00 	mov	#6,	r14	;
    5828:	0f 4c       	mov	r12,	r15	;
    582a:	b0 12 f0 6b 	call	#27632		;#0x6bf0
    582e:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5832:	8f 4c 04 47 	mov	r12,	18180(r15); 0x4704
    5836:	1c 44 fa ff 	mov	-6(r4),	r12	;
    583a:	8f 4c 02 47 	mov	r12,	18178(r15); 0x4702
    583e:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    5842:	8f 4c 00 47 	mov	r12,	18176(r15); 0x4700
    5846:	1c 44 fe ff 	mov	-2(r4),	r12	;
    584a:	1c 53       	inc	r12		;
    584c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5850:	3c 90 00 01 	cmp	#256,	r12	;#0x0100
    5854:	0d 2c       	jc	$+28     	;abs 0x5870
    5856:	00 3c       	jmp	$+2      	;abs 0x5858
    5858:	3e 40 f8 46 	mov	#18168,	r14	;#0x46f8
    585c:	0f 44       	mov	r4,	r15	;
    585e:	2f 83       	decd	r15		;
    5860:	2d 43       	mov	#2,	r13	;r3 As==10
    5862:	b0 12 f0 69 	call	#27120		;#0x69f0
    5866:	3f 40 26 45 	mov	#17702,	r15	;#0x4526
    586a:	b0 12 90 68 	call	#26768		;#0x6890
    586e:	0f 3c       	jmp	$+32     	;abs 0x588e
    5870:	b2 40 00 01 	mov	#256,	&0x5300	;#0x0100
    5874:	00 53 
    5876:	3e 40 f8 46 	mov	#18168,	r14	;#0x46f8
    587a:	0f 44       	mov	r4,	r15	;
    587c:	2f 83       	decd	r15		;
    587e:	2d 43       	mov	#2,	r13	;r3 As==10
    5880:	b0 12 f0 69 	call	#27120		;#0x69f0
    5884:	3f 40 50 45 	mov	#17744,	r15	;#0x4550
    5888:	b0 12 90 68 	call	#26768		;#0x6890
    588c:	00 3c       	jmp	$+2      	;abs 0x588e
    588e:	31 50 0a 00 	add	#10,	r1	;#0x000a
    5892:	34 41       	pop	r4		;
    5894:	30 41       	ret			
	...

00005898 <task_sample>:
    5898:	04 12       	push	r4		;
    589a:	04 41       	mov	r1,	r4	;
    589c:	21 82       	sub	#4,	r1	;r2 As==10
    589e:	1c 42 fc 46 	mov	&0x46fc,r12	;0x46fc
    58a2:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    58a6:	1c 53       	inc	r12		;
    58a8:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    58ac:	2c 93       	cmp	#2,	r12	;r3 As==10
    58ae:	04 20       	jnz	$+10     	;abs 0x58b8
    58b0:	00 3c       	jmp	$+2      	;abs 0x58b2
    58b2:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    58b6:	00 3c       	jmp	$+2      	;abs 0x58b8
    58b8:	1c 44 fe ff 	mov	-2(r4),	r12	;
    58bc:	0c 93       	cmp	#0,	r12	;r3 As==00
    58be:	11 20       	jnz	$+36     	;abs 0x58e2
    58c0:	00 3c       	jmp	$+2      	;abs 0x58c2
    58c2:	1c 44 fc ff 	mov	-4(r4),	r12	;
    58c6:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    58ca:	3e 40 fc 46 	mov	#18172,	r14	;#0x46fc
    58ce:	0f 44       	mov	r4,	r15	;
    58d0:	2f 83       	decd	r15		;
    58d2:	2d 43       	mov	#2,	r13	;r3 As==10
    58d4:	b0 12 f0 69 	call	#27120		;#0x69f0
    58d8:	3f 40 7a 45 	mov	#17786,	r15	;#0x457a
    58dc:	b0 12 90 68 	call	#26768		;#0x6890
    58e0:	10 3c       	jmp	$+34     	;abs 0x5902
    58e2:	1c 44 fc ff 	mov	-4(r4),	r12	;
    58e6:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    58ea:	3e 40 fc 46 	mov	#18172,	r14	;#0x46fc
    58ee:	0f 44       	mov	r4,	r15	;
    58f0:	2f 83       	decd	r15		;
    58f2:	2d 43       	mov	#2,	r13	;r3 As==10
    58f4:	b0 12 f0 69 	call	#27120		;#0x69f0
    58f8:	3f 40 a4 45 	mov	#17828,	r15	;#0x45a4
    58fc:	b0 12 90 68 	call	#26768		;#0x6890
    5900:	00 3c       	jmp	$+2      	;abs 0x5902
    5902:	21 52       	add	#4,	r1	;r2 As==10
    5904:	34 41       	pop	r4		;
    5906:	30 41       	ret			

00005908 <task_measure_temp>:
    5908:	04 12       	push	r4		;
    590a:	04 41       	mov	r1,	r4	;
    590c:	31 82       	sub	#8,	r1	;r2 As==11
    590e:	3e 40 fa 46 	mov	#18170,	r14	;#0x46fa
    5912:	1c 42 fa 46 	mov	&0x46fa,r12	;0x46fa
    5916:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    591a:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    591e:	0f 4c       	mov	r12,	r15	;
    5920:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    5924:	b0 12 bc 61 	call	#25020		;#0x61bc
    5928:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    592c:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    5930:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    5934:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5938:	82 4c 02 53 	mov	r12,	&0x5302	;
    593c:	0f 44       	mov	r4,	r15	;
    593e:	2f 83       	decd	r15		;
    5940:	2d 43       	mov	#2,	r13	;r3 As==10
    5942:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    5946:	b0 12 f0 69 	call	#27120		;#0x69f0
    594a:	3f 40 a4 45 	mov	#17828,	r15	;#0x45a4
    594e:	b0 12 90 68 	call	#26768		;#0x6890
    5952:	31 52       	add	#8,	r1	;r2 As==11
    5954:	34 41       	pop	r4		;
    5956:	30 41       	ret			

00005958 <task_letterize>:
    5958:	04 12       	push	r4		;
    595a:	04 41       	mov	r1,	r4	;
    595c:	31 80 10 00 	sub	#16,	r1	;#0x0010
    5960:	1c 42 fc 46 	mov	&0x46fc,r12	;0x46fc
    5964:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5968:	0c 93       	cmp	#0,	r12	;r3 As==00
    596a:	04 20       	jnz	$+10     	;abs 0x5974
    596c:	00 3c       	jmp	$+2      	;abs 0x596e
    596e:	a4 43 fe ff 	mov	#2,	-2(r4)	;r3 As==10, 0xfffe
    5972:	06 3c       	jmp	$+14     	;abs 0x5980
    5974:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5978:	3c 53       	add	#-1,	r12	;r3 As==11
    597a:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    597e:	00 3c       	jmp	$+2      	;abs 0x5980
    5980:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5984:	0c 5c       	rla	r12		;
    5986:	0c 5c       	rla	r12		;
    5988:	0c 5c       	rla	r12		;
    598a:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    598e:	1c 42 02 53 	mov	&0x5302,r12	;0x5302
    5992:	5d 44 fc ff 	mov.b	-4(r4),	r13	;
    5996:	3e 40 ff 00 	mov	#255,	r14	;#0x00ff
    599a:	4d 93       	cmp.b	#0,	r13	;r3 As==00
    599c:	4f 4d       	mov.b	r13,	r15	;
    599e:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    59a2:	c4 4d f7 ff 	mov.b	r13,	-9(r4)	; 0xfff7
    59a6:	84 4e f4 ff 	mov	r14,	-12(r4)	; 0xfff4
    59aa:	c4 4f f3 ff 	mov.b	r15,	-13(r4)	; 0xfff3
    59ae:	0b 24       	jz	$+24     	;abs 0x59c6
    59b0:	5c 44 f3 ff 	mov.b	-13(r4),r12	;0xfffffff3
    59b4:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    59b8:	0d 5d       	rla	r13		;
    59ba:	5c 83       	dec.b	r12		;
    59bc:	84 4d f4 ff 	mov	r13,	-12(r4)	; 0xfff4
    59c0:	c4 4c f3 ff 	mov.b	r12,	-13(r4)	; 0xfff3
    59c4:	f5 23       	jnz	$-20     	;abs 0x59b0
    59c6:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    59ca:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    59ce:	0d fc       	and	r12,	r13	;
    59d0:	5e 44 f7 ff 	mov.b	-9(r4),	r14	;
    59d4:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    59d6:	c4 4e f2 ff 	mov.b	r14,	-14(r4)	; 0xfff2
    59da:	84 4d f0 ff 	mov	r13,	-16(r4)	; 0xfff0
    59de:	0c 24       	jz	$+26     	;abs 0x59f8
    59e0:	5c 44 f2 ff 	mov.b	-14(r4),r12	;0xfffffff2
    59e4:	1d 44 f0 ff 	mov	-16(r4),r13	;0xfffffff0
    59e8:	12 c3       	clrc			
    59ea:	0d 10       	rrc	r13		;
    59ec:	5c 83       	dec.b	r12		;
    59ee:	84 4d f0 ff 	mov	r13,	-16(r4)	; 0xfff0
    59f2:	c4 4c f2 ff 	mov.b	r12,	-14(r4)	; 0xfff2
    59f6:	f4 23       	jnz	$-22     	;abs 0x59e0
    59f8:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    59fc:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5a00:	82 4c f8 46 	mov	r12,	&0x46f8	;
    5a04:	3f 40 ce 45 	mov	#17870,	r15	;#0x45ce
    5a08:	b0 12 90 68 	call	#26768		;#0x6890
    5a0c:	31 50 10 00 	add	#16,	r1	;#0x0010
    5a10:	34 41       	pop	r4		;
    5a12:	30 41       	ret			

00005a14 <task_compress>:
    5a14:	04 12       	push	r4		;
    5a16:	04 41       	mov	r1,	r4	;
    5a18:	31 80 0c 00 	sub	#12,	r1	;#0x000c
    5a1c:	3e 40 fe 46 	mov	#18174,	r14	;#0x46fe
    5a20:	1c 42 fe 46 	mov	&0x46fe,r12	;0x46fe
    5a24:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5a28:	1c 42 f4 46 	mov	&0x46f4,r12	;0x46f4
    5a2c:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    5a30:	3d 40 06 00 	mov	#6,	r13	;
    5a34:	0f 4c       	mov	r12,	r15	;
    5a36:	84 4e f4 ff 	mov	r14,	-12(r4)	; 0xfff4
    5a3a:	0e 4d       	mov	r13,	r14	;
    5a3c:	b0 12 f0 6b 	call	#27632		;#0x6bf0
    5a40:	1c 4f 04 47 	mov	18180(r15),r12	;0x04704
    5a44:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5a48:	1c 4f 02 47 	mov	18178(r15),r12	;0x04702
    5a4c:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5a50:	1c 4f 00 47 	mov	18176(r15),r12	;0x04700
    5a54:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5a58:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5a5c:	82 4c 04 53 	mov	r12,	&0x5304	;
    5a60:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5a64:	82 4c 0a 53 	mov	r12,	&0x530a	;
    5a68:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5a6c:	82 4c 08 53 	mov	r12,	&0x5308	;
    5a70:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    5a74:	82 4c 06 53 	mov	r12,	&0x5306	;
    5a78:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    5a7c:	82 4c 0c 53 	mov	r12,	&0x530c	;
    5a80:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5a84:	82 4c 0e 53 	mov	r12,	&0x530e	;
    5a88:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5a8c:	1c 53       	inc	r12		;
    5a8e:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5a92:	0f 44       	mov	r4,	r15	;
    5a94:	2f 83       	decd	r15		;
    5a96:	2d 43       	mov	#2,	r13	;r3 As==10
    5a98:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfffffff4
    5a9c:	b0 12 f0 69 	call	#27120		;#0x69f0
    5aa0:	3f 40 f8 45 	mov	#17912,	r15	;#0x45f8
    5aa4:	b0 12 90 68 	call	#26768		;#0x6890
    5aa8:	31 50 0c 00 	add	#12,	r1	;#0x000c
    5aac:	34 41       	pop	r4		;
    5aae:	30 41       	ret			

00005ab0 <task_find_sibling>:
    5ab0:	04 12       	push	r4		;
    5ab2:	04 41       	mov	r1,	r4	;
    5ab4:	31 82       	sub	#8,	r1	;r2 As==11
    5ab6:	1c 42 04 53 	mov	&0x5304,r12	;0x5304
    5aba:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5abe:	0c 93       	cmp	#0,	r12	;r3 As==00
    5ac0:	41 24       	jz	$+132    	;abs 0x5b44
    5ac2:	00 3c       	jmp	$+2      	;abs 0x5ac4
    5ac4:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5ac8:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5acc:	3e 40 06 00 	mov	#6,	r14	;
    5ad0:	0f 4c       	mov	r12,	r15	;
    5ad2:	b0 12 f0 6b 	call	#27632		;#0x6bf0
    5ad6:	0c 4f       	mov	r15,	r12	;
    5ad8:	3c 50 00 47 	add	#18176,	r12	;#0x4700
    5adc:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5ae0:	1c 4f 00 47 	mov	18176(r15),r12	;0x04700
    5ae4:	1e 42 f8 46 	mov	&0x46f8,r14	;0x46f8
    5ae8:	0c 9e       	cmp	r14,	r12	;
    5aea:	11 20       	jnz	$+36     	;abs 0x5b0e
    5aec:	00 3c       	jmp	$+2      	;abs 0x5aee
    5aee:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5af2:	82 4c f4 46 	mov	r12,	&0x46f4	;
    5af6:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5afa:	0f 44       	mov	r4,	r15	;
    5afc:	2f 83       	decd	r15		;
    5afe:	2d 43       	mov	#2,	r13	;r3 As==10
    5b00:	b0 12 f0 69 	call	#27120		;#0x69f0
    5b04:	3f 40 a4 45 	mov	#17828,	r15	;#0x45a4
    5b08:	b0 12 90 68 	call	#26768		;#0x6890
    5b0c:	1a 3c       	jmp	$+54     	;abs 0x5b42
    5b0e:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5b12:	1c 4c 02 00 	mov	2(r12),	r12	;
    5b16:	0c 93       	cmp	#0,	r12	;r3 As==00
    5b18:	13 24       	jz	$+40     	;abs 0x5b40
    5b1a:	00 3c       	jmp	$+2      	;abs 0x5b1c
    5b1c:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5b20:	1c 4c 02 00 	mov	2(r12),	r12	;
    5b24:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5b28:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5b2c:	0f 44       	mov	r4,	r15	;
    5b2e:	2f 83       	decd	r15		;
    5b30:	2d 43       	mov	#2,	r13	;r3 As==10
    5b32:	b0 12 f0 69 	call	#27120		;#0x69f0
    5b36:	3f 40 f8 45 	mov	#17912,	r15	;#0x45f8
    5b3a:	b0 12 90 68 	call	#26768		;#0x6890
    5b3e:	00 3c       	jmp	$+2      	;abs 0x5b40
    5b40:	00 3c       	jmp	$+2      	;abs 0x5b42
    5b42:	00 3c       	jmp	$+2      	;abs 0x5b44
    5b44:	1c 42 f8 46 	mov	&0x46f8,r12	;0x46f8
    5b48:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5b4c:	82 4c f4 46 	mov	r12,	&0x46f4	;
    5b50:	1c 42 0e 53 	mov	&0x530e,r12	;0x530e
    5b54:	0c 93       	cmp	#0,	r12	;r3 As==00
    5b56:	0d 20       	jnz	$+28     	;abs 0x5b72
    5b58:	00 3c       	jmp	$+2      	;abs 0x5b5a
    5b5a:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5b5e:	0f 44       	mov	r4,	r15	;
    5b60:	2f 83       	decd	r15		;
    5b62:	2d 43       	mov	#2,	r13	;r3 As==10
    5b64:	b0 12 f0 69 	call	#27120		;#0x69f0
    5b68:	3f 40 4c 46 	mov	#17996,	r15	;#0x464c
    5b6c:	b0 12 90 68 	call	#26768		;#0x6890
    5b70:	0c 3c       	jmp	$+26     	;abs 0x5b8a
    5b72:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5b76:	0f 44       	mov	r4,	r15	;
    5b78:	2f 83       	decd	r15		;
    5b7a:	2d 43       	mov	#2,	r13	;r3 As==10
    5b7c:	b0 12 f0 69 	call	#27120		;#0x69f0
    5b80:	3f 40 22 46 	mov	#17954,	r15	;#0x4622
    5b84:	b0 12 90 68 	call	#26768		;#0x6890
    5b88:	00 3c       	jmp	$+2      	;abs 0x5b8a
    5b8a:	31 52       	add	#8,	r1	;r2 As==11
    5b8c:	34 41       	pop	r4		;
    5b8e:	30 41       	ret			

00005b90 <task_add_node>:
    5b90:	04 12       	push	r4		;
    5b92:	04 41       	mov	r1,	r4	;
    5b94:	31 80 0e 00 	sub	#14,	r1	;#0x000e
    5b98:	1c 42 04 53 	mov	&0x5304,r12	;0x5304
    5b9c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5ba0:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5ba4:	3e 40 06 00 	mov	#6,	r14	;
    5ba8:	0f 4c       	mov	r12,	r15	;
    5baa:	b0 12 f0 6b 	call	#27632		;#0x6bf0
    5bae:	0c 4f       	mov	r15,	r12	;
    5bb0:	3c 50 00 47 	add	#18176,	r12	;#0x4700
    5bb4:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5bb8:	1c 4f 02 47 	mov	18178(r15),r12	;0x04702
    5bbc:	0c 93       	cmp	#0,	r12	;r3 As==00
    5bbe:	15 24       	jz	$+44     	;abs 0x5bea
    5bc0:	00 3c       	jmp	$+2      	;abs 0x5bc2
    5bc2:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5bc6:	1c 4c 02 00 	mov	2(r12),	r12	;
    5bca:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5bce:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5bd2:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5bd6:	0f 44       	mov	r4,	r15	;
    5bd8:	2f 83       	decd	r15		;
    5bda:	2d 43       	mov	#2,	r13	;r3 As==10
    5bdc:	b0 12 f0 69 	call	#27120		;#0x69f0
    5be0:	3f 40 22 46 	mov	#17954,	r15	;#0x4622
    5be4:	b0 12 90 68 	call	#26768		;#0x6890
    5be8:	25 3c       	jmp	$+76     	;abs 0x5c34
    5bea:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5bee:	1d 4c 04 00 	mov	4(r12),	r13	;
    5bf2:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    5bf6:	1d 4c 02 00 	mov	2(r12),	r13	;
    5bfa:	84 4d f4 ff 	mov	r13,	-12(r4)	; 0xfff4
    5bfe:	2c 4c       	mov	@r12,	r12	;
    5c00:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    5c04:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    5c08:	82 4c 14 53 	mov	r12,	&0x5314	;
    5c0c:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    5c10:	82 4c 12 53 	mov	r12,	&0x5312	;
    5c14:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    5c18:	82 4c 10 53 	mov	r12,	&0x5310	;
    5c1c:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5c20:	0f 44       	mov	r4,	r15	;
    5c22:	2f 83       	decd	r15		;
    5c24:	2d 43       	mov	#2,	r13	;r3 As==10
    5c26:	b0 12 f0 69 	call	#27120		;#0x69f0
    5c2a:	3f 40 4c 46 	mov	#17996,	r15	;#0x464c
    5c2e:	b0 12 90 68 	call	#26768		;#0x6890
    5c32:	00 3c       	jmp	$+2      	;abs 0x5c34
    5c34:	31 50 0e 00 	add	#14,	r1	;#0x000e
    5c38:	34 41       	pop	r4		;
    5c3a:	30 41       	ret			

00005c3c <task_add_insert>:
    5c3c:	04 12       	push	r4		;
    5c3e:	04 41       	mov	r1,	r4	;
    5c40:	31 80 1a 00 	sub	#26,	r1	;#0x001a
    5c44:	1c 42 00 53 	mov	&0x5300,r12	;0x5300
    5c48:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5c4c:	3c 90 00 02 	cmp	#512,	r12	;#0x0200
    5c50:	03 20       	jnz	$+8      	;abs 0x5c58
    5c52:	00 3c       	jmp	$+2      	;abs 0x5c54
    5c54:	00 3c       	jmp	$+2      	;abs 0x5c56
    5c56:	ff 3f       	jmp	$+0      	;abs 0x5c56
    5c58:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5c5c:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5c60:	1c 42 f8 46 	mov	&0x46f8,r12	;0x46f8
    5c64:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    5c68:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8
    5c6c:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa
    5c70:	1c 42 0a 53 	mov	&0x530a,r12	;0x530a
    5c74:	0c 93       	cmp	#0,	r12	;r3 As==00
    5c76:	27 20       	jnz	$+80     	;abs 0x5cc6
    5c78:	00 3c       	jmp	$+2      	;abs 0x5c7a
    5c7a:	1c 42 0a 53 	mov	&0x530a,r12	;0x530a
    5c7e:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    5c82:	1c 42 08 53 	mov	&0x5308,r12	;0x5308
    5c86:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    5c8a:	1c 42 06 53 	mov	&0x5306,r12	;0x5306
    5c8e:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    5c92:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5c96:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    5c9a:	1c 42 0c 53 	mov	&0x530c,r12	;0x530c
    5c9e:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    5ca2:	3e 40 06 00 	mov	#6,	r14	;
    5ca6:	0f 4c       	mov	r12,	r15	;
    5ca8:	b0 12 f0 6b 	call	#27632		;#0x6bf0
    5cac:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    5cb0:	8f 4c 04 47 	mov	r12,	18180(r15); 0x4704
    5cb4:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    5cb8:	8f 4c 02 47 	mov	r12,	18178(r15); 0x4702
    5cbc:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    5cc0:	8f 4c 00 47 	mov	r12,	18176(r15); 0x4700
    5cc4:	27 3c       	jmp	$+80     	;abs 0x5d14
    5cc6:	1c 42 04 53 	mov	&0x5304,r12	;0x5304
    5cca:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    5cce:	1c 42 14 53 	mov	&0x5314,r12	;0x5314
    5cd2:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    5cd6:	1c 42 12 53 	mov	&0x5312,r12	;0x5312
    5cda:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    5cde:	1c 42 10 53 	mov	&0x5310,r12	;0x5310
    5ce2:	84 4c e6 ff 	mov	r12,	-26(r4)	; 0xffe6
    5ce6:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5cea:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    5cee:	1f 44 ec ff 	mov	-20(r4),r15	;0xffffffec
    5cf2:	3e 40 06 00 	mov	#6,	r14	;
    5cf6:	b0 12 f0 6b 	call	#27632		;#0x6bf0
    5cfa:	1c 44 ea ff 	mov	-22(r4),r12	;0xffffffea
    5cfe:	8f 4c 04 47 	mov	r12,	18180(r15); 0x4704
    5d02:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    5d06:	8f 4c 02 47 	mov	r12,	18178(r15); 0x4702
    5d0a:	1c 44 e6 ff 	mov	-26(r4),r12	;0xffffffe6
    5d0e:	8f 4c 00 47 	mov	r12,	18176(r15); 0x4700
    5d12:	00 3c       	jmp	$+2      	;abs 0x5d14
    5d14:	1f 44 fc ff 	mov	-4(r4),	r15	;
    5d18:	3e 40 06 00 	mov	#6,	r14	;
    5d1c:	b0 12 f0 6b 	call	#27632		;#0x6bf0
    5d20:	1e 44 fa ff 	mov	-6(r4),	r14	;
    5d24:	8f 4e 04 47 	mov	r14,	18180(r15); 0x4704
    5d28:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    5d2c:	8f 4e 02 47 	mov	r14,	18178(r15); 0x4702
    5d30:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfffffff6
    5d34:	8f 4e 00 47 	mov	r14,	18176(r15); 0x4700
    5d38:	1e 42 0c 53 	mov	&0x530c,r14	;0x530c
    5d3c:	82 4e 16 53 	mov	r14,	&0x5316	;
    5d40:	1e 44 fe ff 	mov	-2(r4),	r14	;
    5d44:	1e 53       	inc	r14		;
    5d46:	84 4e fe ff 	mov	r14,	-2(r4)	; 0xfffe
    5d4a:	3e 40 00 53 	mov	#21248,	r14	;#0x5300
    5d4e:	0f 44       	mov	r4,	r15	;
    5d50:	2f 83       	decd	r15		;
    5d52:	2d 43       	mov	#2,	r13	;r3 As==10
    5d54:	b0 12 f0 69 	call	#27120		;#0x69f0
    5d58:	3f 40 76 46 	mov	#18038,	r15	;#0x4676
    5d5c:	b0 12 90 68 	call	#26768		;#0x6890
    5d60:	31 50 1a 00 	add	#26,	r1	;#0x001a
    5d64:	34 41       	pop	r4		;
    5d66:	30 41       	ret			

00005d68 <task_append_compressed>:
    5d68:	04 12       	push	r4		;
    5d6a:	04 41       	mov	r1,	r4	;
    5d6c:	31 80 06 00 	sub	#6,	r1	;
    5d70:	1c 42 f6 46 	mov	&0x46f6,r12	;0x46f6
    5d74:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5d78:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5d7c:	1d 42 16 53 	mov	&0x5316,r13	;0x5316
    5d80:	3e 40 06 00 	mov	#6,	r14	;
    5d84:	0f 4c       	mov	r12,	r15	;
    5d86:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    5d8a:	b0 12 f0 6b 	call	#27632		;#0x6bf0
    5d8e:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5d92:	8f 4c 18 53 	mov	r12,	21272(r15); 0x5318
    5d96:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5d9a:	1c 53       	inc	r12		;
    5d9c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5da0:	3c 90 40 00 	cmp	#64,	r12	;#0x0040
    5da4:	0d 20       	jnz	$+28     	;abs 0x5dc0
    5da6:	00 3c       	jmp	$+2      	;abs 0x5da8
    5da8:	3e 40 f6 46 	mov	#18166,	r14	;#0x46f6
    5dac:	0f 44       	mov	r4,	r15	;
    5dae:	2f 83       	decd	r15		;
    5db0:	2d 43       	mov	#2,	r13	;r3 As==10
    5db2:	b0 12 f0 69 	call	#27120		;#0x69f0
    5db6:	3f 40 a0 46 	mov	#18080,	r15	;#0x46a0
    5dba:	b0 12 90 68 	call	#26768		;#0x6890
    5dbe:	0c 3c       	jmp	$+26     	;abs 0x5dd8
    5dc0:	3e 40 f6 46 	mov	#18166,	r14	;#0x46f6
    5dc4:	0f 44       	mov	r4,	r15	;
    5dc6:	2f 83       	decd	r15		;
    5dc8:	2d 43       	mov	#2,	r13	;r3 As==10
    5dca:	b0 12 f0 69 	call	#27120		;#0x69f0
    5dce:	3f 40 50 45 	mov	#17744,	r15	;#0x4550
    5dd2:	b0 12 90 68 	call	#26768		;#0x6890
    5dd6:	00 3c       	jmp	$+2      	;abs 0x5dd8
    5dd8:	31 50 06 00 	add	#6,	r1	;
    5ddc:	34 41       	pop	r4		;
    5dde:	30 41       	ret			

00005de0 <task_print>:
    5de0:	04 12       	push	r4		;
    5de2:	04 41       	mov	r1,	r4	;
    5de4:	31 80 14 00 	sub	#20,	r1	;#0x0014
    5de8:	0c 41       	mov	r1,	r12	;
    5dea:	bc 40 0e 44 	mov	#17422,	0(r12)	;#0x440e
    5dee:	00 00 
    5df0:	b0 12 bc 62 	call	#25276		;#0x62bc
    5df4:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    5df8:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    5dfc:	00 3c       	jmp	$+2      	;abs 0x5dfe
    5dfe:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5e02:	3c 90 40 00 	cmp	#64,	r12	;#0x0040
    5e06:	31 2c       	jc	$+100    	;abs 0x5e6a
    5e08:	00 3c       	jmp	$+2      	;abs 0x5e0a
    5e0a:	1f 44 fe ff 	mov	-2(r4),	r15	;
    5e0e:	3e 40 06 00 	mov	#6,	r14	;
    5e12:	b0 12 f0 6b 	call	#27632		;#0x6bf0
    5e16:	1e 4f 18 53 	mov	21272(r15),r14	;0x05318
    5e1a:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    5e1e:	0f 41       	mov	r1,	r15	;
    5e20:	8f 4e 02 00 	mov	r14,	2(r15)	;
    5e24:	bf 40 22 44 	mov	#17442,	0(r15)	;#0x4422
    5e28:	00 00 
    5e2a:	b0 12 bc 62 	call	#25276		;#0x62bc
    5e2e:	1e 44 fe ff 	mov	-2(r4),	r14	;
    5e32:	0e 93       	cmp	#0,	r14	;r3 As==00
    5e34:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    5e38:	11 24       	jz	$+36     	;abs 0x5e5c
    5e3a:	00 3c       	jmp	$+2      	;abs 0x5e3c
    5e3c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5e40:	1c 53       	inc	r12		;
    5e42:	3c b0 07 00 	bit	#7,	r12	;
    5e46:	0a 20       	jnz	$+22     	;abs 0x5e5c
    5e48:	00 3c       	jmp	$+2      	;abs 0x5e4a
    5e4a:	0c 41       	mov	r1,	r12	;
    5e4c:	bc 40 1f 44 	mov	#17439,	0(r12)	;#0x441f
    5e50:	00 00 
    5e52:	b0 12 bc 62 	call	#25276		;#0x62bc
    5e56:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    5e5a:	00 3c       	jmp	$+2      	;abs 0x5e5c
    5e5c:	00 3c       	jmp	$+2      	;abs 0x5e5e
    5e5e:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5e62:	1c 53       	inc	r12		;
    5e64:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5e68:	ca 3f       	jmp	$-106    	;abs 0x5dfe
    5e6a:	0c 41       	mov	r1,	r12	;
    5e6c:	bc 40 1f 44 	mov	#17439,	0(r12)	;#0x441f
    5e70:	00 00 
    5e72:	b0 12 bc 62 	call	#25276		;#0x62bc
    5e76:	1c 42 fe 46 	mov	&0x46fe,r12	;0x46fe
    5e7a:	0d 41       	mov	r1,	r13	;
    5e7c:	8d 4c 02 00 	mov	r12,	2(r13)	;
    5e80:	bd 40 40 00 	mov	#64,	4(r13)	;#0x0040
    5e84:	04 00 
    5e86:	bd 40 28 44 	mov	#17448,	0(r13)	;#0x4428
    5e8a:	00 00 
    5e8c:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    5e90:	b0 12 bc 62 	call	#25276		;#0x62bc
    5e94:	3c 40 ca 46 	mov	#18122,	r12	;#0x46ca
    5e98:	84 4f f2 ff 	mov	r15,	-14(r4)	; 0xfff2
    5e9c:	0f 4c       	mov	r12,	r15	;
    5e9e:	b0 12 90 68 	call	#26768		;#0x6890
    5ea2:	31 50 14 00 	add	#20,	r1	;#0x0014
    5ea6:	34 41       	pop	r4		;
    5ea8:	30 41       	ret			
	...

00005eac <task_done>:
    5eac:	04 12       	push	r4		;
    5eae:	04 41       	mov	r1,	r4	;
    5eb0:	31 80 32 00 	sub	#50,	r1	;#0x0032
    5eb4:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    5eb8:	0c 41       	mov	r1,	r12	;
    5eba:	bc 40 2a 00 	mov	#42,	4(r12)	;#0x002a
    5ebe:	04 00 
    5ec0:	9c 43 02 00 	mov	#1,	2(r12)	;r3 As==01
    5ec4:	bc 40 45 44 	mov	#17477,	0(r12)	;#0x4445
    5ec8:	00 00 
    5eca:	b0 12 bc 62 	call	#25276		;#0x62bc
    5ece:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5ed2:	3c 50 f8 01 	add	#504,	r12	;#0x01f8
    5ed6:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5eda:	0c 41       	mov	r1,	r12	;
    5edc:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5ee0:	9c 43 02 00 	mov	#1,	2(r12)	;r3 As==01
    5ee4:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5ee8:	00 00 
    5eea:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    5eee:	b0 12 bc 62 	call	#25276		;#0x62bc
    5ef2:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5ef6:	2c 53       	incd	r12		;
    5ef8:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5efc:	0c 41       	mov	r1,	r12	;
    5efe:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5f02:	ac 43 02 00 	mov	#2,	2(r12)	;r3 As==10
    5f06:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5f0a:	00 00 
    5f0c:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    5f10:	b0 12 bc 62 	call	#25276		;#0x62bc
    5f14:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f18:	2c 53       	incd	r12		;
    5f1a:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f1e:	0c 41       	mov	r1,	r12	;
    5f20:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5f24:	bc 40 03 00 	mov	#3,	2(r12)	;
    5f28:	02 00 
    5f2a:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5f2e:	00 00 
    5f30:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    5f34:	b0 12 bc 62 	call	#25276		;#0x62bc
    5f38:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f3c:	2c 53       	incd	r12		;
    5f3e:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f42:	0c 41       	mov	r1,	r12	;
    5f44:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5f48:	ac 42 02 00 	mov	#4,	2(r12)	;r2 As==10
    5f4c:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5f50:	00 00 
    5f52:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    5f56:	b0 12 bc 62 	call	#25276		;#0x62bc
    5f5a:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f5e:	2c 53       	incd	r12		;
    5f60:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f64:	0c 41       	mov	r1,	r12	;
    5f66:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5f6a:	bc 40 05 00 	mov	#5,	2(r12)	;
    5f6e:	02 00 
    5f70:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5f74:	00 00 
    5f76:	84 4f f2 ff 	mov	r15,	-14(r4)	; 0xfff2
    5f7a:	b0 12 bc 62 	call	#25276		;#0x62bc
    5f7e:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f82:	2c 53       	incd	r12		;
    5f84:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f88:	0c 41       	mov	r1,	r12	;
    5f8a:	bc 40 00 0c 	mov	#3072,	4(r12)	;#0x0c00
    5f8e:	04 00 
    5f90:	bc 40 06 00 	mov	#6,	2(r12)	;
    5f94:	02 00 
    5f96:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5f9a:	00 00 
    5f9c:	84 4f f0 ff 	mov	r15,	-16(r4)	; 0xfff0
    5fa0:	b0 12 bc 62 	call	#25276		;#0x62bc
    5fa4:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5fa8:	3c 50 00 0c 	add	#3072,	r12	;#0x0c00
    5fac:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5fb0:	0c 41       	mov	r1,	r12	;
    5fb2:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5fb6:	bc 40 07 00 	mov	#7,	2(r12)	;
    5fba:	02 00 
    5fbc:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5fc0:	00 00 
    5fc2:	84 4f ee ff 	mov	r15,	-18(r4)	; 0xffee
    5fc6:	b0 12 bc 62 	call	#25276		;#0x62bc
    5fca:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5fce:	2c 53       	incd	r12		;
    5fd0:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5fd4:	0c 41       	mov	r1,	r12	;
    5fd6:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5fda:	bc 42 02 00 	mov	#8,	2(r12)	;r2 As==11
    5fde:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5fe2:	00 00 
    5fe4:	84 4f ec ff 	mov	r15,	-20(r4)	; 0xffec
    5fe8:	b0 12 bc 62 	call	#25276		;#0x62bc
    5fec:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5ff0:	2c 53       	incd	r12		;
    5ff2:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5ff6:	0c 41       	mov	r1,	r12	;
    5ff8:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5ffc:	bc 40 09 00 	mov	#9,	2(r12)	;
    6000:	02 00 
    6002:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    6006:	00 00 
    6008:	84 4f ea ff 	mov	r15,	-22(r4)	; 0xffea
    600c:	b0 12 bc 62 	call	#25276		;#0x62bc
    6010:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6014:	2c 53       	incd	r12		;
    6016:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    601a:	0c 41       	mov	r1,	r12	;
    601c:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    6020:	bc 40 0b 00 	mov	#11,	2(r12)	;#0x000b
    6024:	02 00 
    6026:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    602a:	00 00 
    602c:	84 4f e8 ff 	mov	r15,	-24(r4)	; 0xffe8
    6030:	b0 12 bc 62 	call	#25276		;#0x62bc
    6034:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6038:	2c 53       	incd	r12		;
    603a:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    603e:	0c 41       	mov	r1,	r12	;
    6040:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    6044:	bc 40 0c 00 	mov	#12,	2(r12)	;#0x000c
    6048:	02 00 
    604a:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    604e:	00 00 
    6050:	84 4f e6 ff 	mov	r15,	-26(r4)	; 0xffe6
    6054:	b0 12 bc 62 	call	#25276		;#0x62bc
    6058:	1c 44 fe ff 	mov	-2(r4),	r12	;
    605c:	2c 53       	incd	r12		;
    605e:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    6062:	0c 41       	mov	r1,	r12	;
    6064:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    6068:	bc 40 0d 00 	mov	#13,	2(r12)	;#0x000d
    606c:	02 00 
    606e:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    6072:	00 00 
    6074:	84 4f e4 ff 	mov	r15,	-28(r4)	; 0xffe4
    6078:	b0 12 bc 62 	call	#25276		;#0x62bc
    607c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6080:	2c 53       	incd	r12		;
    6082:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    6086:	0c 41       	mov	r1,	r12	;
    6088:	bc 40 06 00 	mov	#6,	4(r12)	;
    608c:	04 00 
    608e:	bc 40 0e 00 	mov	#14,	2(r12)	;#0x000e
    6092:	02 00 
    6094:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    6098:	00 00 
    609a:	84 4f e2 ff 	mov	r15,	-30(r4)	; 0xffe2
    609e:	b0 12 bc 62 	call	#25276		;#0x62bc
    60a2:	1c 44 fe ff 	mov	-2(r4),	r12	;
    60a6:	3c 50 06 00 	add	#6,	r12	;
    60aa:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    60ae:	0c 41       	mov	r1,	r12	;
    60b0:	bc 40 80 01 	mov	#384,	4(r12)	;#0x0180
    60b4:	04 00 
    60b6:	bc 40 0f 00 	mov	#15,	2(r12)	;#0x000f
    60ba:	02 00 
    60bc:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    60c0:	00 00 
    60c2:	84 4f e0 ff 	mov	r15,	-32(r4)	; 0xffe0
    60c6:	b0 12 bc 62 	call	#25276		;#0x62bc
    60ca:	1c 44 fe ff 	mov	-2(r4),	r12	;
    60ce:	3c 50 80 01 	add	#384,	r12	;#0x0180
    60d2:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    60d6:	0c 41       	mov	r1,	r12	;
    60d8:	bc 40 06 00 	mov	#6,	4(r12)	;
    60dc:	04 00 
    60de:	bc 40 10 00 	mov	#16,	2(r12)	;#0x0010
    60e2:	02 00 
    60e4:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    60e8:	00 00 
    60ea:	84 4f de ff 	mov	r15,	-34(r4)	; 0xffde
    60ee:	b0 12 bc 62 	call	#25276		;#0x62bc
    60f2:	1c 44 fe ff 	mov	-2(r4),	r12	;
    60f6:	3c 50 06 00 	add	#6,	r12	;
    60fa:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    60fe:	0c 41       	mov	r1,	r12	;
    6100:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    6104:	bc 40 11 00 	mov	#17,	2(r12)	;#0x0011
    6108:	02 00 
    610a:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    610e:	00 00 
    6110:	84 4f dc ff 	mov	r15,	-36(r4)	; 0xffdc
    6114:	b0 12 bc 62 	call	#25276		;#0x62bc
    6118:	1c 44 fe ff 	mov	-2(r4),	r12	;
    611c:	2c 53       	incd	r12		;
    611e:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    6122:	0c 41       	mov	r1,	r12	;
    6124:	bc 40 42 00 	mov	#66,	2(r12)	;#0x0042
    6128:	02 00 
    612a:	bc 40 74 44 	mov	#17524,	0(r12)	;#0x4474
    612e:	00 00 
    6130:	84 4f da ff 	mov	r15,	-38(r4)	; 0xffda
    6134:	b0 12 bc 62 	call	#25276		;#0x62bc
    6138:	1c 44 fe ff 	mov	-2(r4),	r12	;
    613c:	3c 50 42 00 	add	#66,	r12	;#0x0042
    6140:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    6144:	0c 41       	mov	r1,	r12	;
    6146:	ac 43 02 00 	mov	#2,	2(r12)	;r3 As==10
    614a:	bc 40 8c 44 	mov	#17548,	0(r12)	;#0x448c
    614e:	00 00 
    6150:	84 4f d8 ff 	mov	r15,	-40(r4)	; 0xffd8
    6154:	b0 12 bc 62 	call	#25276		;#0x62bc
    6158:	1c 44 fe ff 	mov	-2(r4),	r12	;
    615c:	2c 53       	incd	r12		;
    615e:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    6162:	0d 41       	mov	r1,	r13	;
    6164:	8d 4c 02 00 	mov	r12,	2(r13)	;
    6168:	bd 40 a8 44 	mov	#17576,	0(r13)	;#0x44a8
    616c:	00 00 
    616e:	84 4f d6 ff 	mov	r15,	-42(r4)	; 0xffd6
    6172:	b0 12 bc 62 	call	#25276		;#0x62bc
    6176:	84 4f d4 ff 	mov	r15,	-44(r4)	; 0xffd4
    617a:	31 50 32 00 	add	#50,	r1	;#0x0032
    617e:	34 41       	pop	r4		;
    6180:	30 41       	ret			
	...

00006184 <_entry_task>:
    6184:	04 12       	push	r4		;
    6186:	04 41       	mov	r1,	r4	;
    6188:	3f 40 fc 44 	mov	#17660,	r15	;#0x44fc
    618c:	b0 12 90 68 	call	#26768		;#0x6890
    6190:	34 41       	pop	r4		;
    6192:	30 41       	ret			

00006194 <_init>:
    6194:	04 12       	push	r4		;
    6196:	04 41       	mov	r1,	r4	;
    6198:	b0 12 2c 57 	call	#22316		;#0x572c
    619c:	34 41       	pop	r4		;
    619e:	30 41       	ret			

000061a0 <init_hw>:
    61a0:	04 12       	push	r4		;
    61a2:	04 41       	mov	r1,	r4	;
    61a4:	b0 12 08 62 	call	#25096		;#0x6208
    61a8:	1c 42 30 01 	mov	&0x0130,r12	;0x0130
    61ac:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    61b0:	82 4c 30 01 	mov	r12,	&0x0130	;
    61b4:	b0 12 9c 62 	call	#25244		;#0x629c
    61b8:	34 41       	pop	r4		;
    61ba:	30 41       	ret			

000061bc <acquire_sample>:
    61bc:	04 12       	push	r4		;
    61be:	04 41       	mov	r1,	r4	;
    61c0:	31 80 06 00 	sub	#6,	r1	;
    61c4:	0c 4f       	mov	r15,	r12	;
    61c6:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    61ca:	1f 53       	inc	r15		;
    61cc:	3f f0 03 00 	and	#3,	r15	;
    61d0:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    61d4:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    61d8:	31 50 06 00 	add	#6,	r1	;
    61dc:	34 41       	pop	r4		;
    61de:	30 41       	ret			

000061e0 <msp_watchdog_enable>:
    61e0:	04 12       	push	r4		;
    61e2:	04 41       	mov	r1,	r4	;
    61e4:	21 83       	decd	r1		;
    61e6:	4c 4f       	mov.b	r15,	r12	;
    61e8:	c4 4c ff ff 	mov.b	r12,	-1(r4)	; 0xffff
    61ec:	5f 44 ff ff 	mov.b	-1(r4),	r15	;
    61f0:	3f d0 08 5a 	bis	#23048,	r15	;#0x5a08
    61f4:	82 4f 5c 01 	mov	r15,	&0x015c	;
    61f8:	5c 44 ff ff 	mov.b	-1(r4),	r12	;
    61fc:	c2 4c 20 1c 	mov.b	r12,	&0x1c20	;
    6200:	21 53       	incd	r1		;
    6202:	34 41       	pop	r4		;
    6204:	30 41       	ret			
	...

00006208 <msp_watchdog_disable>:
    6208:	04 12       	push	r4		;
    620a:	04 41       	mov	r1,	r4	;
    620c:	b2 40 80 5a 	mov	#23168,	&0x015c	;#0x5a80
    6210:	5c 01 
    6212:	34 41       	pop	r4		;
    6214:	30 41       	ret			
	...

00006218 <msp_watchdog_kick>:
    6218:	04 12       	push	r4		;
    621a:	04 41       	mov	r1,	r4	;
    621c:	5c 42 20 1c 	mov.b	&0x1c20,r12	;0x1c20
    6220:	3c d0 08 5a 	bis	#23048,	r12	;#0x5a08
    6224:	82 4c 5c 01 	mov	r12,	&0x015c	;
    6228:	34 41       	pop	r4		;
    622a:	30 41       	ret			

0000622c <memcpy>:
    622c:	04 12       	push	r4		;
    622e:	04 41       	mov	r1,	r4	;
    6230:	0b 12       	push	r11		;
    6232:	0a 12       	push	r10		;
    6234:	31 80 0e 00 	sub	#14,	r1	;#0x000e
    6238:	0c 4d       	mov	r13,	r12	;
    623a:	0b 4e       	mov	r14,	r11	;
    623c:	0a 4f       	mov	r15,	r10	;
    623e:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    6242:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    6246:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    624a:	84 43 f4 ff 	mov	#0,	-12(r4)	;r3 As==00, 0xfff4
    624e:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    6252:	84 4b f0 ff 	mov	r11,	-16(r4)	; 0xfff0
    6256:	84 4a ee ff 	mov	r10,	-18(r4)	; 0xffee
    625a:	00 3c       	jmp	$+2      	;abs 0x625c
    625c:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6260:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    6264:	0c 9d       	cmp	r13,	r12	;
    6266:	12 2c       	jc	$+38     	;abs 0x628c
    6268:	00 3c       	jmp	$+2      	;abs 0x626a
    626a:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    626e:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    6272:	0c 5d       	add	r13,	r12	;
    6274:	6e 4c       	mov.b	@r12,	r14	;
    6276:	1c 44 fa ff 	mov	-6(r4),	r12	;
    627a:	0c 5d       	add	r13,	r12	;
    627c:	cc 4e 00 00 	mov.b	r14,	0(r12)	;
    6280:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6284:	1c 53       	inc	r12		;
    6286:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    628a:	e8 3f       	jmp	$-46     	;abs 0x625c
    628c:	1f 44 fa ff 	mov	-6(r4),	r15	;
    6290:	31 50 0e 00 	add	#14,	r1	;#0x000e
    6294:	3a 41       	pop	r10		;
    6296:	3b 41       	pop	r11		;
    6298:	34 41       	pop	r4		;
    629a:	30 41       	ret			

0000629c <msp_clock_setup>:
    629c:	04 12       	push	r4		;
    629e:	04 41       	mov	r1,	r4	;
    62a0:	f2 40 a5 ff 	mov.b	#65445,	&0x0161	;#0xffa5
    62a4:	61 01 
    62a6:	b2 40 0c 00 	mov	#12,	&0x0162	;#0x000c
    62aa:	62 01 
    62ac:	b2 40 33 00 	mov	#51,	&0x0164	;#0x0033
    62b0:	64 01 
    62b2:	82 43 66 01 	mov	#0,	&0x0166	;r3 As==00
    62b6:	34 41       	pop	r4		;
    62b8:	30 41       	ret			
	...

000062bc <printf>:
    62bc:	04 12       	push	r4		;
    62be:	04 41       	mov	r1,	r4	;
    62c0:	31 80 20 00 	sub	#32,	r1	;#0x0020
    62c4:	1c 44 04 00 	mov	4(r4),	r12	;
    62c8:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    62cc:	0c 44       	mov	r4,	r12	;
    62ce:	3c 50 06 00 	add	#6,	r12	;
    62d2:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    62d6:	00 3c       	jmp	$+2      	;abs 0x62d8
    62d8:	1c 44 fc ff 	mov	-4(r4),	r12	;
    62dc:	0d 4c       	mov	r12,	r13	;
    62de:	1d 53       	inc	r13		;
    62e0:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    62e4:	6e 4c       	mov.b	@r12,	r14	;
    62e6:	c4 4e fb ff 	mov.b	r14,	-5(r4)	; 0xfffb
    62ea:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    62ec:	02 20       	jnz	$+6      	;abs 0x62f2
    62ee:	52 3d       	jmp	$+678    	;abs 0x6594
    62f0:	00 3c       	jmp	$+2      	;abs 0x62f2
    62f2:	5c 44 fb ff 	mov.b	-5(r4),	r12	;
    62f6:	7c 90 25 00 	cmp.b	#37,	r12	;#0x0025
    62fa:	02 24       	jz	$+6      	;abs 0x6300
    62fc:	40 3d       	jmp	$+642    	;abs 0x657e
    62fe:	00 3c       	jmp	$+2      	;abs 0x6300
    6300:	84 43 f2 ff 	mov	#0,	-14(r4)	;r3 As==00, 0xfff2
    6304:	00 3c       	jmp	$+2      	;abs 0x6306
    6306:	1c 44 fc ff 	mov	-4(r4),	r12	;
    630a:	0d 4c       	mov	r12,	r13	;
    630c:	1d 53       	inc	r13		;
    630e:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    6312:	6c 4c       	mov.b	@r12,	r12	;
    6314:	8c 11       	sxt	r12		;
    6316:	4e 4c       	mov.b	r12,	r14	;
    6318:	c4 4e fb ff 	mov.b	r14,	-5(r4)	; 0xfffb
    631c:	0c 93       	cmp	#0,	r12	;r3 As==00
    631e:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    6322:	02 20       	jnz	$+6      	;abs 0x6328
    6324:	27 3d       	jmp	$+592    	;abs 0x6574
    6326:	00 3c       	jmp	$+2      	;abs 0x6328
    6328:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    632c:	3c 90 30 00 	cmp	#48,	r12	;#0x0030
    6330:	02 20       	jnz	$+6      	;abs 0x6336
    6332:	0f 3d       	jmp	$+544    	;abs 0x6552
    6334:	00 3c       	jmp	$+2      	;abs 0x6336
    6336:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    633a:	3c 90 63 00 	cmp	#99,	r12	;#0x0063
    633e:	34 24       	jz	$+106    	;abs 0x63a8
    6340:	00 3c       	jmp	$+2      	;abs 0x6342
    6342:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6346:	3c 90 69 00 	cmp	#105,	r12	;#0x0069
    634a:	3d 24       	jz	$+124    	;abs 0x63c6
    634c:	00 3c       	jmp	$+2      	;abs 0x634e
    634e:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6352:	3c 90 6c 00 	cmp	#108,	r12	;#0x006c
    6356:	66 24       	jz	$+206    	;abs 0x6424
    6358:	00 3c       	jmp	$+2      	;abs 0x635a
    635a:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    635e:	3c 90 6e 00 	cmp	#110,	r12	;#0x006e
    6362:	60 24       	jz	$+194    	;abs 0x6424
    6364:	00 3c       	jmp	$+2      	;abs 0x6366
    6366:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    636a:	3c 90 73 00 	cmp	#115,	r12	;#0x0073
    636e:	0d 24       	jz	$+28     	;abs 0x638a
    6370:	00 3c       	jmp	$+2      	;abs 0x6372
    6372:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6376:	3c 90 75 00 	cmp	#117,	r12	;#0x0075
    637a:	25 24       	jz	$+76     	;abs 0x63c6
    637c:	00 3c       	jmp	$+2      	;abs 0x637e
    637e:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6382:	3c 90 78 00 	cmp	#120,	r12	;#0x0078
    6386:	8a 24       	jz	$+278    	;abs 0x649c
    6388:	f8 3c       	jmp	$+498    	;abs 0x657a
    638a:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    638e:	1c 53       	inc	r12		;
    6390:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    6394:	0d 4c       	mov	r12,	r13	;
    6396:	2d 53       	incd	r13		;
    6398:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    639c:	2f 4c       	mov	@r12,	r15	;
    639e:	b0 12 60 67 	call	#26464		;#0x6760
    63a2:	84 4f ea ff 	mov	r15,	-22(r4)	; 0xffea
    63a6:	ea 3c       	jmp	$+470    	;abs 0x657c
    63a8:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    63ac:	1c 53       	inc	r12		;
    63ae:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    63b2:	0d 4c       	mov	r12,	r13	;
    63b4:	2d 53       	incd	r13		;
    63b6:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    63ba:	2f 4c       	mov	@r12,	r15	;
    63bc:	b0 12 2c 67 	call	#26412		;#0x672c
    63c0:	84 4f e8 ff 	mov	r15,	-24(r4)	; 0xffe8
    63c4:	db 3c       	jmp	$+440    	;abs 0x657c
    63c6:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    63ca:	1c 53       	inc	r12		;
    63cc:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    63d0:	0d 4c       	mov	r12,	r13	;
    63d2:	2d 53       	incd	r13		;
    63d4:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    63d8:	2c 4c       	mov	@r12,	r12	;
    63da:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    63de:	5e 44 fb ff 	mov.b	-5(r4),	r14	;
    63e2:	7e 90 69 00 	cmp.b	#105,	r14	;#0x0069
    63e6:	13 20       	jnz	$+40     	;abs 0x640e
    63e8:	00 3c       	jmp	$+2      	;abs 0x63ea
    63ea:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    63ee:	0c 93       	cmp	#0,	r12	;r3 As==00
    63f0:	0e 34       	jge	$+30     	;abs 0x640e
    63f2:	00 3c       	jmp	$+2      	;abs 0x63f4
    63f4:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    63f8:	0d 43       	clr	r13		;
    63fa:	0d 8c       	sub	r12,	r13	;
    63fc:	84 4d f8 ff 	mov	r13,	-8(r4)	; 0xfff8
    6400:	3f 40 2d 00 	mov	#45,	r15	;#0x002d
    6404:	b0 12 2c 67 	call	#26412		;#0x672c
    6408:	84 4f e6 ff 	mov	r15,	-26(r4)	; 0xffe6
    640c:	00 3c       	jmp	$+2      	;abs 0x640e
    640e:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    6412:	3c 40 14 00 	mov	#20,	r12	;#0x0014
    6416:	3c 50 b4 44 	add	#17588,	r12	;#0x44b4
    641a:	0f 43       	clr	r15		;
    641c:	0d 4c       	mov	r12,	r13	;
    641e:	b0 12 a8 65 	call	#26024		;#0x65a8
    6422:	ac 3c       	jmp	$+346    	;abs 0x657c
    6424:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    6428:	1c 53       	inc	r12		;
    642a:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    642e:	0d 4c       	mov	r12,	r13	;
    6430:	2d 53       	incd	r13		;
    6432:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    6436:	2c 4c       	mov	@r12,	r12	;
    6438:	1d 44 ee ff 	mov	-18(r4),r13	;0xffffffee
    643c:	0e 4d       	mov	r13,	r14	;
    643e:	2e 53       	incd	r14		;
    6440:	84 4e ee ff 	mov	r14,	-18(r4)	; 0xffee
    6444:	2d 4d       	mov	@r13,	r13	;
    6446:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    644a:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    644e:	5f 44 fb ff 	mov.b	-5(r4),	r15	;
    6452:	7f 90 6c 00 	cmp.b	#108,	r15	;#0x006c
    6456:	19 20       	jnz	$+52     	;abs 0x648a
    6458:	00 3c       	jmp	$+2      	;abs 0x645a
    645a:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    645e:	0c 93       	cmp	#0,	r12	;r3 As==00
    6460:	14 34       	jge	$+42     	;abs 0x648a
    6462:	00 3c       	jmp	$+2      	;abs 0x6464
    6464:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6468:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    646c:	0e 43       	clr	r14		;
    646e:	0f 4e       	mov	r14,	r15	;
    6470:	0f 8c       	sub	r12,	r15	;
    6472:	0e 7d       	subc	r13,	r14	;
    6474:	84 4e f6 ff 	mov	r14,	-10(r4)	; 0xfff6
    6478:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    647c:	3f 40 2d 00 	mov	#45,	r15	;#0x002d
    6480:	b0 12 2c 67 	call	#26412		;#0x672c
    6484:	84 4f e4 ff 	mov	r15,	-28(r4)	; 0xffe4
    6488:	00 3c       	jmp	$+2      	;abs 0x648a
    648a:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfffffff6
    648e:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfffffff4
    6492:	3d 40 b4 44 	mov	#17588,	r13	;#0x44b4
    6496:	b0 12 a8 65 	call	#26024		;#0x65a8
    649a:	70 3c       	jmp	$+226    	;abs 0x657c
    649c:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    64a0:	1c 53       	inc	r12		;
    64a2:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    64a6:	0d 4c       	mov	r12,	r13	;
    64a8:	2d 53       	incd	r13		;
    64aa:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    64ae:	2c 4c       	mov	@r12,	r12	;
    64b0:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    64b4:	0c 11       	rra	r12		;
    64b6:	0c 11       	rra	r12		;
    64b8:	0c 11       	rra	r12		;
    64ba:	0c 11       	rra	r12		;
    64bc:	0c 11       	rra	r12		;
    64be:	0c 11       	rra	r12		;
    64c0:	0c 11       	rra	r12		;
    64c2:	0c 11       	rra	r12		;
    64c4:	0c 11       	rra	r12		;
    64c6:	0c 11       	rra	r12		;
    64c8:	0c 11       	rra	r12		;
    64ca:	0c 11       	rra	r12		;
    64cc:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    64d0:	0c 93       	cmp	#0,	r12	;r3 As==00
    64d2:	06 20       	jnz	$+14     	;abs 0x64e0
    64d4:	00 3c       	jmp	$+2      	;abs 0x64d6
    64d6:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    64da:	2c 92       	cmp	#4,	r12	;r2 As==10
    64dc:	06 38       	jl	$+14     	;abs 0x64ea
    64de:	00 3c       	jmp	$+2      	;abs 0x64e0
    64e0:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfffffff0
    64e4:	b0 12 f4 66 	call	#26356		;#0x66f4
    64e8:	00 3c       	jmp	$+2      	;abs 0x64ea
    64ea:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    64ee:	0c 11       	rra	r12		;
    64f0:	0c 11       	rra	r12		;
    64f2:	0c 11       	rra	r12		;
    64f4:	0c 11       	rra	r12		;
    64f6:	0c 11       	rra	r12		;
    64f8:	0c 11       	rra	r12		;
    64fa:	0c 11       	rra	r12		;
    64fc:	0c 11       	rra	r12		;
    64fe:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    6502:	0c 93       	cmp	#0,	r12	;r3 As==00
    6504:	07 20       	jnz	$+16     	;abs 0x6514
    6506:	00 3c       	jmp	$+2      	;abs 0x6508
    6508:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    650c:	3c 90 03 00 	cmp	#3,	r12	;
    6510:	06 38       	jl	$+14     	;abs 0x651e
    6512:	00 3c       	jmp	$+2      	;abs 0x6514
    6514:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfffffff0
    6518:	b0 12 f4 66 	call	#26356		;#0x66f4
    651c:	00 3c       	jmp	$+2      	;abs 0x651e
    651e:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6522:	0c 11       	rra	r12		;
    6524:	0c 11       	rra	r12		;
    6526:	0c 11       	rra	r12		;
    6528:	0c 11       	rra	r12		;
    652a:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    652e:	0c 93       	cmp	#0,	r12	;r3 As==00
    6530:	06 20       	jnz	$+14     	;abs 0x653e
    6532:	00 3c       	jmp	$+2      	;abs 0x6534
    6534:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6538:	2c 93       	cmp	#2,	r12	;r3 As==10
    653a:	06 38       	jl	$+14     	;abs 0x6548
    653c:	00 3c       	jmp	$+2      	;abs 0x653e
    653e:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfffffff0
    6542:	b0 12 f4 66 	call	#26356		;#0x66f4
    6546:	00 3c       	jmp	$+2      	;abs 0x6548
    6548:	1f 44 f8 ff 	mov	-8(r4),	r15	;
    654c:	b0 12 f4 66 	call	#26356		;#0x66f4
    6550:	15 3c       	jmp	$+44     	;abs 0x657c
    6552:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6556:	0d 4c       	mov	r12,	r13	;
    6558:	1d 53       	inc	r13		;
    655a:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    655e:	6e 4c       	mov.b	@r12,	r14	;
    6560:	c4 4e fb ff 	mov.b	r14,	-5(r4)	; 0xfffb
    6564:	5c 44 fb ff 	mov.b	-5(r4),	r12	;
    6568:	8c 11       	sxt	r12		;
    656a:	3c 50 d0 ff 	add	#65488,	r12	;#0xffd0
    656e:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    6572:	c9 3e       	jmp	$-620    	;abs 0x6306
    6574:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    6578:	10 3c       	jmp	$+34     	;abs 0x659a
    657a:	02 3c       	jmp	$+6      	;abs 0x6580
    657c:	0a 3c       	jmp	$+22     	;abs 0x6592
    657e:	00 3c       	jmp	$+2      	;abs 0x6580
    6580:	5c 44 fb ff 	mov.b	-5(r4),	r12	;
    6584:	8c 11       	sxt	r12		;
    6586:	0f 4c       	mov	r12,	r15	;
    6588:	b0 12 2c 67 	call	#26412		;#0x672c
    658c:	84 4f e2 ff 	mov	r15,	-30(r4)	; 0xffe2
    6590:	00 3c       	jmp	$+2      	;abs 0x6592
    6592:	a2 3e       	jmp	$-698    	;abs 0x62d8
    6594:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    6598:	00 3c       	jmp	$+2      	;abs 0x659a
    659a:	1f 44 fe ff 	mov	-2(r4),	r15	;
    659e:	31 50 20 00 	add	#32,	r1	;#0x0020
    65a2:	34 41       	pop	r4		;
    65a4:	30 41       	ret			
	...

000065a8 <xtoa>:
    65a8:	04 12       	push	r4		;
    65aa:	04 41       	mov	r1,	r4	;
    65ac:	0b 12       	push	r11		;
    65ae:	0a 12       	push	r10		;
    65b0:	09 12       	push	r9		;
    65b2:	31 80 22 00 	sub	#34,	r1	;#0x0022
    65b6:	0c 4f       	mov	r15,	r12	;
    65b8:	0b 4e       	mov	r14,	r11	;
    65ba:	0a 4d       	mov	r13,	r10	;
    65bc:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    65c0:	84 4e f4 ff 	mov	r14,	-12(r4)	; 0xfff4
    65c4:	84 4d f2 ff 	mov	r13,	-14(r4)	; 0xfff2
    65c8:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    65cc:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfffffff4
    65d0:	0e dd       	bis	r13,	r14	;
    65d2:	0e 93       	cmp	#0,	r14	;r3 As==00
    65d4:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    65d8:	84 4a e8 ff 	mov	r10,	-24(r4)	; 0xffe8
    65dc:	84 4b e6 ff 	mov	r11,	-26(r4)	; 0xffe6
    65e0:	7a 24       	jz	$+246    	;abs 0x66d6
    65e2:	00 3c       	jmp	$+2      	;abs 0x65e4
    65e4:	00 3c       	jmp	$+2      	;abs 0x65e6
    65e6:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    65ea:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    65ee:	1e 44 f2 ff 	mov	-14(r4),r14	;0xfffffff2
    65f2:	2f 4e       	mov	@r14,	r15	;
    65f4:	1e 4e 02 00 	mov	2(r14),	r14	;
    65f8:	0d 9e       	cmp	r14,	r13	;
    65fa:	0b 42       	mov	r2,	r11	;
    65fc:	1b f3       	and	#1,	r11	;r3 As==01
    65fe:	0c 9f       	cmp	r15,	r12	;
    6600:	0c 42       	mov	r2,	r12	;
    6602:	1c f3       	and	#1,	r12	;r3 As==01
    6604:	0d 9e       	cmp	r14,	r13	;
    6606:	84 4b e4 ff 	mov	r11,	-28(r4)	; 0xffe4
    660a:	84 4c e2 ff 	mov	r12,	-30(r4)	; 0xffe2
    660e:	04 24       	jz	$+10     	;abs 0x6618
    6610:	1c 44 e4 ff 	mov	-28(r4),r12	;0xffffffe4
    6614:	84 4c e2 ff 	mov	r12,	-30(r4)	; 0xffe2
    6618:	1c 44 e2 ff 	mov	-30(r4),r12	;0xffffffe2
    661c:	1c b3       	bit	#1,	r12	;r3 As==01
    661e:	07 20       	jnz	$+16     	;abs 0x662e
    6620:	00 3c       	jmp	$+2      	;abs 0x6622
    6622:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6626:	2c 52       	add	#4,	r12	;r2 As==10
    6628:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    662c:	dc 3f       	jmp	$-70     	;abs 0x65e6
    662e:	00 3c       	jmp	$+2      	;abs 0x6630
    6630:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6634:	0d 4c       	mov	r12,	r13	;
    6636:	2d 52       	add	#4,	r13	;r2 As==10
    6638:	84 4d f2 ff 	mov	r13,	-14(r4)	; 0xfff2
    663c:	2d 4c       	mov	@r12,	r13	;
    663e:	1c 4c 02 00 	mov	2(r12),	r12	;
    6642:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    6646:	84 4d ec ff 	mov	r13,	-20(r4)	; 0xffec
    664a:	f4 40 30 00 	mov.b	#48,	-15(r4)	;#0x0030, 0xfff1
    664e:	f1 ff 
    6650:	00 3c       	jmp	$+2      	;abs 0x6652
    6652:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6656:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    665a:	1e 44 ec ff 	mov	-20(r4),r14	;0xffffffec
    665e:	1f 44 ee ff 	mov	-18(r4),r15	;0xffffffee
    6662:	0d 9f       	cmp	r15,	r13	;
    6664:	0b 42       	mov	r2,	r11	;
    6666:	1a 43       	mov	#1,	r10	;r3 As==01
    6668:	09 4a       	mov	r10,	r9	;
    666a:	09 cb       	bic	r11,	r9	;
    666c:	0c 9e       	cmp	r14,	r12	;
    666e:	0c 42       	mov	r2,	r12	;
    6670:	0a cc       	bic	r12,	r10	;
    6672:	0d 9f       	cmp	r15,	r13	;
    6674:	84 49 e0 ff 	mov	r9,	-32(r4)	; 0xffe0
    6678:	84 4a de ff 	mov	r10,	-34(r4)	; 0xffde
    667c:	04 24       	jz	$+10     	;abs 0x6686
    667e:	1c 44 e0 ff 	mov	-32(r4),r12	;0xffffffe0
    6682:	84 4c de ff 	mov	r12,	-34(r4)	; 0xffde
    6686:	1c 44 de ff 	mov	-34(r4),r12	;0xffffffde
    668a:	1c b3       	bit	#1,	r12	;r3 As==01
    668c:	15 20       	jnz	$+44     	;abs 0x66b8
    668e:	00 3c       	jmp	$+2      	;abs 0x6690
    6690:	5c 44 f1 ff 	mov.b	-15(r4),r12	;0xfffffff1
    6694:	5c 53       	inc.b	r12		;
    6696:	c4 4c f1 ff 	mov.b	r12,	-15(r4)	; 0xfff1
    669a:	1d 44 ec ff 	mov	-20(r4),r13	;0xffffffec
    669e:	1e 44 ee ff 	mov	-18(r4),r14	;0xffffffee
    66a2:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfffffff4
    66a6:	1b 44 f6 ff 	mov	-10(r4),r11	;0xfffffff6
    66aa:	0f 8d       	sub	r13,	r15	;
    66ac:	0b 7e       	subc	r14,	r11	;
    66ae:	84 4b f6 ff 	mov	r11,	-10(r4)	; 0xfff6
    66b2:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    66b6:	cd 3f       	jmp	$-100    	;abs 0x6652
    66b8:	5c 44 f1 ff 	mov.b	-15(r4),r12	;0xfffffff1
    66bc:	8c 11       	sxt	r12		;
    66be:	0f 4c       	mov	r12,	r15	;
    66c0:	b0 12 2c 67 	call	#26412		;#0x672c
    66c4:	84 4f dc ff 	mov	r15,	-36(r4)	; 0xffdc
    66c8:	00 3c       	jmp	$+2      	;abs 0x66ca
    66ca:	5c 44 ec ff 	mov.b	-20(r4),r12	;0xffffffec
    66ce:	5c b3       	bit.b	#1,	r12	;r3 As==01
    66d0:	af 27       	jz	$-160    	;abs 0x6630
    66d2:	00 3c       	jmp	$+2      	;abs 0x66d4
    66d4:	07 3c       	jmp	$+16     	;abs 0x66e4
    66d6:	3f 40 30 00 	mov	#48,	r15	;#0x0030
    66da:	b0 12 2c 67 	call	#26412		;#0x672c
    66de:	84 4f da ff 	mov	r15,	-38(r4)	; 0xffda
    66e2:	00 3c       	jmp	$+2      	;abs 0x66e4
    66e4:	31 50 22 00 	add	#34,	r1	;#0x0022
    66e8:	39 41       	pop	r9		;
    66ea:	3a 41       	pop	r10		;
    66ec:	3b 41       	pop	r11		;
    66ee:	34 41       	pop	r4		;
    66f0:	30 41       	ret			
	...

000066f4 <puth>:
    66f4:	04 12       	push	r4		;
    66f6:	04 41       	mov	r1,	r4	;
    66f8:	31 80 06 00 	sub	#6,	r1	;
    66fc:	0c 4f       	mov	r15,	r12	;
    66fe:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6702:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    6706:	5f 4f dc 44 	mov.b	17628(r15),r15	;0x044dc
    670a:	8f 11       	sxt	r15		;
    670c:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    6710:	b0 12 2c 67 	call	#26412		;#0x672c
    6714:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    6718:	31 50 06 00 	add	#6,	r1	;
    671c:	34 41       	pop	r4		;
    671e:	30 41       	ret			

00006720 <mspconsole_init>:
    6720:	04 12       	push	r4		;
    6722:	04 41       	mov	r1,	r4	;
    6724:	b0 12 fe 6b 	call	#27646		;#0x6bfe
    6728:	34 41       	pop	r4		;
    672a:	30 41       	ret			

0000672c <io_putchar>:
    672c:	04 12       	push	r4		;
    672e:	04 41       	mov	r1,	r4	;
    6730:	31 80 06 00 	sub	#6,	r1	;
    6734:	0c 4f       	mov	r15,	r12	;
    6736:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    673a:	5d 44 fe ff 	mov.b	-2(r4),	r13	;
    673e:	c4 4d fd ff 	mov.b	r13,	-3(r4)	; 0xfffd
    6742:	0f 44       	mov	r4,	r15	;
    6744:	3f 80 03 00 	sub	#3,	r15	;
    6748:	1e 43       	mov	#1,	r14	;r3 As==01
    674a:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    674e:	b0 12 8a 6c 	call	#27786		;#0x6c8a
    6752:	1f 44 fe ff 	mov	-2(r4),	r15	;
    6756:	31 50 06 00 	add	#6,	r1	;
    675a:	34 41       	pop	r4		;
    675c:	30 41       	ret			
	...

00006760 <io_puts_no_newline>:
    6760:	04 12       	push	r4		;
    6762:	04 41       	mov	r1,	r4	;
    6764:	31 82       	sub	#8,	r1	;r2 As==11
    6766:	0c 4f       	mov	r15,	r12	;
    6768:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    676c:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    6770:	1f 44 fe ff 	mov	-2(r4),	r15	;
    6774:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    6778:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    677c:	00 3c       	jmp	$+2      	;abs 0x677e
    677e:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6782:	0d 4c       	mov	r12,	r13	;
    6784:	1d 53       	inc	r13		;
    6786:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    678a:	6e 4c       	mov.b	@r12,	r14	;
    678c:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    678e:	07 24       	jz	$+16     	;abs 0x679e
    6790:	00 3c       	jmp	$+2      	;abs 0x6792
    6792:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6796:	1c 53       	inc	r12		;
    6798:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    679c:	f0 3f       	jmp	$-30     	;abs 0x677e
    679e:	1f 44 fe ff 	mov	-2(r4),	r15	;
    67a2:	1e 44 fc ff 	mov	-4(r4),	r14	;
    67a6:	b0 12 8a 6c 	call	#27786		;#0x6c8a
    67aa:	1f 44 fc ff 	mov	-4(r4),	r15	;
    67ae:	31 52       	add	#8,	r1	;r2 As==11
    67b0:	34 41       	pop	r4		;
    67b2:	30 41       	ret			

000067b4 <io_puts>:
    67b4:	04 12       	push	r4		;
    67b6:	04 41       	mov	r1,	r4	;
    67b8:	31 82       	sub	#8,	r1	;r2 As==11
    67ba:	0c 4f       	mov	r15,	r12	;
    67bc:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    67c0:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    67c4:	b0 12 60 67 	call	#26464		;#0x6760
    67c8:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    67cc:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    67d0:	b0 12 2c 67 	call	#26412		;#0x672c
    67d4:	1c 44 fc ff 	mov	-4(r4),	r12	;
    67d8:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    67dc:	0f 4c       	mov	r12,	r15	;
    67de:	31 52       	add	#8,	r1	;r2 As==11
    67e0:	34 41       	pop	r4		;
    67e2:	30 41       	ret			

000067e4 <task_prologue>:
    67e4:	04 12       	push	r4		;
    67e6:	04 41       	mov	r1,	r4	;
    67e8:	31 80 06 00 	sub	#6,	r1	;
    67ec:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    67f0:	1c 4c 04 00 	mov	4(r12),	r12	;
    67f4:	2c 4c       	mov	@r12,	r12	;
    67f6:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    67fa:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    67fe:	1c 4c 02 00 	mov	2(r12),	r12	;
    6802:	1d 44 fe ff 	mov	-2(r4),	r13	;
    6806:	1d 4d 08 00 	mov	8(r13),	r13	;
    680a:	0c 9d       	cmp	r13,	r12	;
    680c:	3a 24       	jz	$+118    	;abs 0x6882
    680e:	00 3c       	jmp	$+2      	;abs 0x6810
    6810:	00 3c       	jmp	$+2      	;abs 0x6812
    6812:	1c 42 c2 54 	mov	&0x54c2,r12	;0x54c2
    6816:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    681a:	0c 9d       	cmp	r13,	r12	;
    681c:	25 2c       	jc	$+76     	;abs 0x6868
    681e:	00 3c       	jmp	$+2      	;abs 0x6820
    6820:	1c 42 c2 54 	mov	&0x54c2,r12	;0x54c2
    6824:	0c 5c       	rla	r12		;
    6826:	1c 4c e4 54 	mov	21732(r12),r12	;0x054e4
    682a:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    682e:	0c 93       	cmp	#0,	r12	;r3 As==00
    6830:	15 24       	jz	$+44     	;abs 0x685c
    6832:	00 3c       	jmp	$+2      	;abs 0x6834
    6834:	1c 42 c2 54 	mov	&0x54c2,r12	;0x54c2
    6838:	0c 5c       	rla	r12		;
    683a:	1c 4c 26 55 	mov	21798(r12),r12	;0x05526
    683e:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    6842:	1f 44 fc ff 	mov	-4(r4),	r15	;
    6846:	1c 42 c2 54 	mov	&0x54c2,r12	;0x54c2
    684a:	0c 5c       	rla	r12		;
    684c:	3c 50 68 55 	add	#21864,	r12	;#0x5568
    6850:	1d 44 fa ff 	mov	-6(r4),	r13	;
    6854:	0e 4c       	mov	r12,	r14	;
    6856:	b0 12 2c 62 	call	#25132		;#0x622c
    685a:	00 3c       	jmp	$+2      	;abs 0x685c
    685c:	1c 42 c2 54 	mov	&0x54c2,r12	;0x54c2
    6860:	1c 53       	inc	r12		;
    6862:	82 4c c2 54 	mov	r12,	&0x54c2	;
    6866:	d5 3f       	jmp	$-84     	;abs 0x6812
    6868:	82 43 c4 54 	mov	#0,	&0x54c4	;r3 As==00
    686c:	82 43 c2 54 	mov	#0,	&0x54c2	;r3 As==00
    6870:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    6874:	1c 4c 02 00 	mov	2(r12),	r12	;
    6878:	1d 44 fe ff 	mov	-2(r4),	r13	;
    687c:	8d 4c 08 00 	mov	r12,	8(r13)	;
    6880:	03 3c       	jmp	$+8      	;abs 0x6888
    6882:	82 43 c4 54 	mov	#0,	&0x54c4	;r3 As==00
    6886:	00 3c       	jmp	$+2      	;abs 0x6888
    6888:	31 50 06 00 	add	#6,	r1	;
    688c:	34 41       	pop	r4		;
    688e:	30 41       	ret			

00006890 <transition_to>:
    6890:	04 12       	push	r4		;
    6892:	04 41       	mov	r1,	r4	;
    6894:	31 80 0a 00 	sub	#10,	r1	;#0x000a
    6898:	0c 4f       	mov	r15,	r12	;
    689a:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    689e:	1f 42 e0 54 	mov	&0x54e0,r15	;0x54e0
    68a2:	3d 40 da 54 	mov	#21722,	r13	;#0x54da
    68a6:	3e 40 ce 54 	mov	#21710,	r14	;#0x54ce
    68aa:	0f 9d       	cmp	r13,	r15	;
    68ac:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    68b0:	84 4d f8 ff 	mov	r13,	-8(r4)	; 0xfff8
    68b4:	84 4e f6 ff 	mov	r14,	-10(r4)	; 0xfff6
    68b8:	04 24       	jz	$+10     	;abs 0x68c2
    68ba:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    68be:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    68c2:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    68c6:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    68ca:	1d 44 fe ff 	mov	-2(r4),	r13	;
    68ce:	8c 4d 00 00 	mov	r13,	0(r12)	;
    68d2:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    68d6:	1c 4c 02 00 	mov	2(r12),	r12	;
    68da:	1c 53       	inc	r12		;
    68dc:	1d 44 fc ff 	mov	-4(r4),	r13	;
    68e0:	8d 4c 02 00 	mov	r12,	2(r13)	;
    68e4:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    68e8:	1c 4c 02 00 	mov	2(r12),	r12	;
    68ec:	1d 44 fc ff 	mov	-4(r4),	r13	;
    68f0:	1d 4d 04 00 	mov	4(r13),	r13	;
    68f4:	8d 4c 02 00 	mov	r12,	2(r13)	;
    68f8:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    68fc:	2c 4c       	mov	@r12,	r12	;
    68fe:	1d 44 fc ff 	mov	-4(r4),	r13	;
    6902:	1d 4d 04 00 	mov	4(r13),	r13	;
    6906:	8d 4c 00 00 	mov	r12,	0(r13)	;
    690a:	1c 44 fc ff 	mov	-4(r4),	r12	;
    690e:	82 4c e0 54 	mov	r12,	&0x54e0	;
    6912:	b0 12 e4 67 	call	#26596		;#0x67e4
    6916:	1c 44 fe ff 	mov	-2(r4),	r12	;
    691a:	2c 4c       	mov	@r12,	r12	;
    691c:	31 40 00 24 	mov	#9216,	r1	;#0x2400
    6920:	00 4c       	br	r12		;
    6922:	31 50 0a 00 	add	#10,	r1	;#0x000a
    6926:	34 41       	pop	r4		;
    6928:	30 41       	ret			
	...

0000692c <chan_in>:
    692c:	04 12       	push	r4		;
    692e:	04 41       	mov	r1,	r4	;
    6930:	0b 12       	push	r11		;
    6932:	0a 12       	push	r10		;
    6934:	31 80 18 00 	sub	#24,	r1	;#0x0018
    6938:	0c 4d       	mov	r13,	r12	;
    693a:	0b 4e       	mov	r14,	r11	;
    693c:	0a 4f       	mov	r15,	r10	;
    693e:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    6942:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    6946:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    694a:	84 43 f2 ff 	mov	#0,	-14(r4)	;r3 As==00, 0xfff2
    694e:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    6952:	2d 53       	incd	r13		;
    6954:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    6958:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    695c:	84 4d ec ff 	mov	r13,	-20(r4)	; 0xffec
    6960:	1d 44 ee ff 	mov	-18(r4),r13	;0xffffffee
    6964:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfffffff6
    6968:	0d 5e       	add	r14,	r13	;
    696a:	84 4d ea ff 	mov	r13,	-22(r4)	; 0xffea
    696e:	84 4d f0 ff 	mov	r13,	-16(r4)	; 0xfff0
    6972:	0f 4d       	mov	r13,	r15	;
    6974:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    6978:	84 4b e6 ff 	mov	r11,	-26(r4)	; 0xffe6
    697c:	84 4a e4 ff 	mov	r10,	-28(r4)	; 0xffe4
    6980:	31 50 18 00 	add	#24,	r1	;#0x0018
    6984:	3a 41       	pop	r10		;
    6986:	3b 41       	pop	r11		;
    6988:	34 41       	pop	r4		;
    698a:	30 41       	ret			

0000698c <chan_out>:
    698c:	04 12       	push	r4		;
    698e:	04 41       	mov	r1,	r4	;
    6990:	31 80 14 00 	sub	#20,	r1	;#0x0014
    6994:	1c 44 0a 00 	mov	10(r4),	r12	;0x0000a
    6998:	1d 44 08 00 	mov	8(r4),	r13	;
    699c:	1e 44 06 00 	mov	6(r4),	r14	;
    69a0:	1f 44 04 00 	mov	4(r4),	r15	;
    69a4:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    69a8:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    69ac:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    69b0:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    69b4:	1c 44 fa ff 	mov	-6(r4),	r12	;
    69b8:	2c 53       	incd	r12		;
    69ba:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    69be:	1c 44 fa ff 	mov	-6(r4),	r12	;
    69c2:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    69c6:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    69ca:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    69ce:	0c 5d       	add	r13,	r12	;
    69d0:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    69d4:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    69d8:	1e 44 fe ff 	mov	-2(r4),	r14	;
    69dc:	1d 44 fc ff 	mov	-4(r4),	r13	;
    69e0:	0f 4c       	mov	r12,	r15	;
    69e2:	b0 12 2c 62 	call	#25132		;#0x622c
    69e6:	31 50 14 00 	add	#20,	r1	;#0x0014
    69ea:	34 41       	pop	r4		;
    69ec:	30 41       	ret			
	...

000069f0 <write_to_gbuf>:
    69f0:	04 12       	push	r4		;
    69f2:	04 41       	mov	r1,	r4	;
    69f4:	0b 12       	push	r11		;
    69f6:	0a 12       	push	r10		;
    69f8:	31 80 12 00 	sub	#18,	r1	;#0x0012
    69fc:	0c 4d       	mov	r13,	r12	;
    69fe:	0b 4e       	mov	r14,	r11	;
    6a00:	0a 4f       	mov	r15,	r10	;
    6a02:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    6a06:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    6a0a:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    6a0e:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6a12:	0d 5d       	rla	r13		;
    6a14:	3d 50 68 55 	add	#21864,	r13	;#0x5568
    6a18:	1e 44 fa ff 	mov	-6(r4),	r14	;
    6a1c:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfffffff6
    6a20:	84 4f f0 ff 	mov	r15,	-16(r4)	; 0xfff0
    6a24:	0f 4d       	mov	r13,	r15	;
    6a26:	1d 44 f0 ff 	mov	-16(r4),r13	;0xfffffff0
    6a2a:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    6a2e:	84 4b ec ff 	mov	r11,	-20(r4)	; 0xffec
    6a32:	84 4a ea ff 	mov	r10,	-22(r4)	; 0xffea
    6a36:	b0 12 2c 62 	call	#25132		;#0x622c
    6a3a:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6a3e:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6a42:	0d 5d       	rla	r13		;
    6a44:	8d 4c 26 55 	mov	r12,	21798(r13); 0x5526
    6a48:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6a4c:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6a50:	0d 5d       	rla	r13		;
    6a52:	8d 4c e4 54 	mov	r12,	21732(r13); 0x54e4
    6a56:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6a5a:	3c 90 03 00 	cmp	#3,	r12	;
    6a5e:	2a 28       	jnc	$+86     	;abs 0x6ab4
    6a60:	00 3c       	jmp	$+2      	;abs 0x6a62
    6a62:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6a66:	3c 53       	add	#-1,	r12	;r3 As==11
    6a68:	12 c3       	clrc			
    6a6a:	0c 10       	rrc	r12		;
    6a6c:	1c 53       	inc	r12		;
    6a6e:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    6a72:	94 43 f2 ff 	mov	#1,	-14(r4)	;r3 As==01, 0xfff2
    6a76:	00 3c       	jmp	$+2      	;abs 0x6a78
    6a78:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6a7c:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    6a80:	0c 9d       	cmp	r13,	r12	;
    6a82:	10 2c       	jc	$+34     	;abs 0x6aa4
    6a84:	00 3c       	jmp	$+2      	;abs 0x6a86
    6a86:	1c 42 c4 54 	mov	&0x54c4,r12	;0x54c4
    6a8a:	1d 44 f2 ff 	mov	-14(r4),r13	;0xfffffff2
    6a8e:	0c 5d       	add	r13,	r12	;
    6a90:	0c 5c       	rla	r12		;
    6a92:	8c 43 e4 54 	mov	#0,	21732(r12);r3 As==00, 0x54e4
    6a96:	00 3c       	jmp	$+2      	;abs 0x6a98
    6a98:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6a9c:	1c 53       	inc	r12		;
    6a9e:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    6aa2:	ea 3f       	jmp	$-42     	;abs 0x6a78
    6aa4:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6aa8:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6aac:	0d 5c       	add	r12,	r13	;
    6aae:	82 4d c4 54 	mov	r13,	&0x54c4	;
    6ab2:	06 3c       	jmp	$+14     	;abs 0x6ac0
    6ab4:	1c 42 c4 54 	mov	&0x54c4,r12	;0x54c4
    6ab8:	1c 53       	inc	r12		;
    6aba:	82 4c c4 54 	mov	r12,	&0x54c4	;
    6abe:	00 3c       	jmp	$+2      	;abs 0x6ac0
    6ac0:	31 50 12 00 	add	#18,	r1	;#0x0012
    6ac4:	3a 41       	pop	r10		;
    6ac6:	3b 41       	pop	r11		;
    6ac8:	34 41       	pop	r4		;
    6aca:	30 41       	ret			

00006acc <chan_out_gbuf>:
    6acc:	04 12       	push	r4		;
    6ace:	04 41       	mov	r1,	r4	;
    6ad0:	31 80 18 00 	sub	#24,	r1	;#0x0018
    6ad4:	1c 44 0a 00 	mov	10(r4),	r12	;0x0000a
    6ad8:	1d 44 08 00 	mov	8(r4),	r13	;
    6adc:	1e 44 06 00 	mov	6(r4),	r14	;
    6ae0:	1f 44 04 00 	mov	4(r4),	r15	;
    6ae4:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6ae8:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    6aec:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    6af0:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    6af4:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6af8:	2c 53       	incd	r12		;
    6afa:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    6afe:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6b02:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    6b06:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    6b0a:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    6b0e:	0c 5d       	add	r13,	r12	;
    6b10:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    6b14:	1c 42 c4 54 	mov	&0x54c4,r12	;0x54c4
    6b18:	0c 5c       	rla	r12		;
    6b1a:	3c 50 68 55 	add	#21864,	r12	;#0x5568
    6b1e:	1e 44 fe ff 	mov	-2(r4),	r14	;
    6b22:	1d 44 fc ff 	mov	-4(r4),	r13	;
    6b26:	0f 4c       	mov	r12,	r15	;
    6b28:	b0 12 2c 62 	call	#25132		;#0x622c
    6b2c:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6b30:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6b34:	0d 5d       	rla	r13		;
    6b36:	8d 4c 26 55 	mov	r12,	21798(r13); 0x5526
    6b3a:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6b3e:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    6b42:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6b46:	0d 5d       	rla	r13		;
    6b48:	8d 4c e4 54 	mov	r12,	21732(r13); 0x54e4
    6b4c:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6b50:	3c 90 03 00 	cmp	#3,	r12	;
    6b54:	2a 28       	jnc	$+86     	;abs 0x6baa
    6b56:	00 3c       	jmp	$+2      	;abs 0x6b58
    6b58:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6b5c:	3c 53       	add	#-1,	r12	;r3 As==11
    6b5e:	12 c3       	clrc			
    6b60:	0c 10       	rrc	r12		;
    6b62:	1c 53       	inc	r12		;
    6b64:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    6b68:	94 43 e8 ff 	mov	#1,	-24(r4)	;r3 As==01, 0xffe8
    6b6c:	00 3c       	jmp	$+2      	;abs 0x6b6e
    6b6e:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    6b72:	1d 44 ea ff 	mov	-22(r4),r13	;0xffffffea
    6b76:	0c 9d       	cmp	r13,	r12	;
    6b78:	10 2c       	jc	$+34     	;abs 0x6b9a
    6b7a:	00 3c       	jmp	$+2      	;abs 0x6b7c
    6b7c:	1c 42 c4 54 	mov	&0x54c4,r12	;0x54c4
    6b80:	1d 44 e8 ff 	mov	-24(r4),r13	;0xffffffe8
    6b84:	0c 5d       	add	r13,	r12	;
    6b86:	0c 5c       	rla	r12		;
    6b88:	8c 43 e4 54 	mov	#0,	21732(r12);r3 As==00, 0x54e4
    6b8c:	00 3c       	jmp	$+2      	;abs 0x6b8e
    6b8e:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    6b92:	1c 53       	inc	r12		;
    6b94:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    6b98:	ea 3f       	jmp	$-42     	;abs 0x6b6e
    6b9a:	1c 44 ea ff 	mov	-22(r4),r12	;0xffffffea
    6b9e:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6ba2:	0d 5c       	add	r12,	r13	;
    6ba4:	82 4d c4 54 	mov	r13,	&0x54c4	;
    6ba8:	06 3c       	jmp	$+14     	;abs 0x6bb6
    6baa:	1c 42 c4 54 	mov	&0x54c4,r12	;0x54c4
    6bae:	1c 53       	inc	r12		;
    6bb0:	82 4c c4 54 	mov	r12,	&0x54c4	;
    6bb4:	00 3c       	jmp	$+2      	;abs 0x6bb6
    6bb6:	31 50 18 00 	add	#24,	r1	;#0x0018
    6bba:	34 41       	pop	r4		;
    6bbc:	30 41       	ret			
	...

00006bc0 <main>:
    6bc0:	04 12       	push	r4		;
    6bc2:	04 41       	mov	r1,	r4	;
    6bc4:	21 83       	decd	r1		;
    6bc6:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    6bca:	b0 12 94 61 	call	#24980		;#0x6194
    6bce:	1c 42 e2 54 	mov	&0x54e2,r12	;0x54e2
    6bd2:	1c 53       	inc	r12		;
    6bd4:	82 4c e2 54 	mov	r12,	&0x54e2	;
    6bd8:	b0 12 e4 67 	call	#26596		;#0x67e4
    6bdc:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    6be0:	2c 4c       	mov	@r12,	r12	;
    6be2:	2c 4c       	mov	@r12,	r12	;
    6be4:	00 4c       	br	r12		;
    6be6:	0f 43       	clr	r15		;
    6be8:	21 53       	incd	r1		;
    6bea:	34 41       	pop	r4		;
    6bec:	30 41       	ret			
	...

00006bf0 <__mulhi3hw_noint>:
    6bf0:	82 4f c0 04 	mov	r15,	&0x04c0	;
    6bf4:	82 4e c8 04 	mov	r14,	&0x04c8	;
    6bf8:	1f 42 ca 04 	mov	&0x04ca,r15	;0x04ca
    6bfc:	30 41       	ret			

00006bfe <UART_init>:
 * @todo Currently assumes an 8MHz SMCLK. Make robust to clock frequency changes by using 32k ACLK.
 */
void UART_init(void) {

    // Configure USCI_A0 for UART mode
    UCA0CTLW0 = UCSWRST;                      // Put eUSCI in reset
    6bfe:	92 43 c0 05 	mov	#1,	&0x05c0	;r3 As==01
    UCA0CTLW0 |= UCSSEL__SMCLK;               // CLK = SMCLK
    6c02:	b2 d0 80 00 	bis	#128,	&0x05c0	;#0x0080
    6c06:	c0 05 
    UCA0BR1 = 0;
    UCA0MCTLW = UCOS16 | UCBRF_2 | (0xBB << 8);
#endif // UART_BAUDRATE
#elif UART_CLOCK == 8000000
#if UART_BAUDRATE == 115200
    UCA0BR0 = 4;
    6c08:	e2 42 c6 05 	mov.b	#4,	&0x05c6	;r2 As==10
    UCA0BR1 = 0;
    6c0c:	c2 43 c7 05 	mov.b	#0,	&0x05c7	;r3 As==00
    UCA0MCTLW = UCOS16 | UCBRF_4 | (0x55 << 8);
    6c10:	b2 40 41 55 	mov	#21825,	&0x05c8	;#0x5541
    6c14:	c8 05 
#endif // UART_BAUDRATE
#endif // UART_CLOCK

#if defined(__MSP430FR5969__) || defined(__MSP430FR5949__)
    PUART_TXSEL0 &= ~PIN_UART_TX; // TX pin to UART module
    6c16:	d2 c3 0b 02 	bic.b	#1,	&0x020b	;r3 As==01
    PUART_TXSEL1 |= PIN_UART_TX;
    6c1a:	d2 d3 0d 02 	bis.b	#1,	&0x020d	;r3 As==01

    PUART_RXSEL0 &= ~PIN_UART_RX; // RX pin to UART module
    6c1e:	e2 c3 0b 02 	bic.b	#2,	&0x020b	;r3 As==10
    PUART_RXSEL1 |= PIN_UART_RX;
    6c22:	e2 d3 0d 02 	bis.b	#2,	&0x020d	;r3 As==10
    PUART_RXSEL1 &= ~PIN_UART_RX;
#else
#error MCU not supported
#endif

    UCA0CTLW0 &= ~UCSWRST;                    // Initialize eUSCI
    6c26:	92 c3 c0 05 	bic	#1,	&0x05c0	;r3 As==01

    // Initialize module state
    UART_SM.isTxBusy = FALSE;
    6c2a:	3c 40 22 1c 	mov	#7202,	r12	;#0x1c22
    6c2e:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    UART_SM.txBytesRemaining = 0;
    6c32:	8c 43 04 00 	mov	#0,	4(r12)	;r3 As==00
    UART_SM.isRxBusy = FALSE;
    6c36:	cc 43 06 00 	mov.b	#0,	6(r12)	;r3 As==00
    UART_SM.rxBytesRemaining = 0;
    6c3a:	8c 43 0a 00 	mov	#0,	10(r12)	;r3 As==00, 0x000a

}
    6c3e:	30 41       	ret			

00006c40 <UART_teardown>:
void UART_teardown()
{
    // disable UART
    // Not sure how to do this best, but set all UCA0* registers to
    // their default values.  See User's Guide for default values.
    PUART_TXSEL0 &= ~PIN_UART_TX;
    6c40:	d2 c3 0b 02 	bic.b	#1,	&0x020b	;r3 As==01
    PUART_TXSEL1 &= ~PIN_UART_TX;
    6c44:	d2 c3 0d 02 	bic.b	#1,	&0x020d	;r3 As==01
    PUART_RXSEL0 &= ~PIN_UART_RX;
    6c48:	e2 c3 0b 02 	bic.b	#2,	&0x020b	;r3 As==10
    PUART_RXSEL1 &= ~PIN_UART_RX;
    6c4c:	e2 c3 0d 02 	bic.b	#2,	&0x020d	;r3 As==10
    UCA0CTLW0 = 0x0001;
    6c50:	92 43 c0 05 	mov	#1,	&0x05c0	;r3 As==01
    UCA0BR0 = 0x0000;
    6c54:	c2 43 c6 05 	mov.b	#0,	&0x05c6	;r3 As==00
    UCA0MCTLW = 0x0000;
    6c58:	82 43 c8 05 	mov	#0,	&0x05c8	;r3 As==00
    UCA0IE = 0x0000;
    6c5c:	82 43 da 05 	mov	#0,	&0x05da	;r3 As==00
    UCA0IFG = 0x0000;
    6c60:	82 43 dc 05 	mov	#0,	&0x05dc	;r3 As==00
}
    6c64:	30 41       	ret			

00006c66 <UART_asyncSend>:
 * @param size the number of bytes to send
 */
void UART_asyncSend(uint8_t* txBuf, uint16_t size) {

    // Block until prior transmission has completed
    while (UART_SM.isTxBusy)
    6c66:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6c6a:	6e 4f       	mov.b	@r15,	r14	;
    6c6c:	0e 93       	cmp	#0,	r14	;r3 As==00
    6c6e:	fd 23       	jnz	$-4      	;abs 0x6c6a
        ;

    // Set up for start of transmission
    UART_SM.isTxBusy = TRUE;
    6c70:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6c74:	de 43 00 00 	mov.b	#1,	0(r14)	;r3 As==01
    UART_SM.txPtr = txBuf;
    6c78:	8e 4c 02 00 	mov	r12,	2(r14)	;
    UART_SM.txBytesRemaining = size;
    6c7c:	8e 4d 04 00 	mov	r13,	4(r14)	;

    UCA0IFG &= ~(USCI_UART_UCTXIFG); // Clear the 'ready to accept byte' flag
    6c80:	a2 c2 dc 05 	bic	#4,	&0x05dc	;r2 As==10

    UCA0IE |= UCTXIE; // Enable USCI_A0 TX interrupt ('ready to accept byte')
    6c84:	a2 d3 da 05 	bis	#2,	&0x05da	;r3 As==10
    //UCA0TXBUF = *(UART_SM.txPtr++); // Load in first byte

    // The bytes are transmitted in the TX ISR (which is called whenever the
    // UART is ready to accept a byte), and the isBusy flag is cleared when the
    // last byte has *finished* transmitting.
}
    6c88:	30 41       	ret			

00006c8a <UART_send>:
 * @param size the number of bytes to send
 *
 */
void UART_send(uint8_t* txBuf, uint16_t size) {

    UART_asyncSend(txBuf, size);
    6c8a:	b0 12 66 6c 	call	#27750		;#0x6c66

    // Block until complete
    while (UART_SM.isTxBusy)
    6c8e:	3d 40 22 1c 	mov	#7202,	r13	;#0x1c22
    6c92:	6c 4d       	mov.b	@r13,	r12	;
    6c94:	0c 93       	cmp	#0,	r12	;r3 As==00
    6c96:	fd 23       	jnz	$-4      	;abs 0x6c92
        ;
}
    6c98:	30 41       	ret			

00006c9a <UART_critSend>:
 *  and use UART status register polling instead of interrupts.
 */
void UART_critSend(uint8_t* txBuf, uint16_t size) {

    // Block until prior transmission has completed
    while (UART_SM.isTxBusy)
    6c9a:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6c9e:	6e 4f       	mov.b	@r15,	r14	;
    6ca0:	0e 93       	cmp	#0,	r14	;r3 As==00
    6ca2:	fd 23       	jnz	$-4      	;abs 0x6c9e
        ;

    // Set up for start of transmission
    UART_SM.isTxBusy = TRUE;
    6ca4:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6ca8:	de 43 00 00 	mov.b	#1,	0(r14)	;r3 As==01
    UART_SM.txPtr = txBuf;
    6cac:	8e 4c 02 00 	mov	r12,	2(r14)	;
    UART_SM.txBytesRemaining = size;
    6cb0:	8e 4d 04 00 	mov	r13,	4(r14)	;

    UCA0IV &= ~(USCI_UART_UCTXIFG); // Clear byte completion flag
    6cb4:	a2 c2 de 05 	bic	#4,	&0x05de	;r2 As==10

    while (UART_SM.txBytesRemaining--) {
    6cb8:	1c 4e 04 00 	mov	4(r14),	r12	;
    6cbc:	0d 4c       	mov	r12,	r13	;
    6cbe:	3d 53       	add	#-1,	r13	;r3 As==11
    6cc0:	8e 4d 04 00 	mov	r13,	4(r14)	;
    6cc4:	0c 93       	cmp	#0,	r12	;r3 As==00
    6cc6:	19 24       	jz	$+52     	;abs 0x6cfa
        UCA0TXBUF = *(UART_SM.txPtr++); // Load in next byte
    6cc8:	0c 4e       	mov	r14,	r12	;
    6cca:	1d 4c 02 00 	mov	2(r12),	r13	;
    6cce:	0e 4d       	mov	r13,	r14	;
    6cd0:	1e 53       	inc	r14		;
    6cd2:	8c 4e 02 00 	mov	r14,	2(r12)	;
    6cd6:	6d 4d       	mov.b	@r13,	r13	;
    6cd8:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    6cdc:	82 4d ce 05 	mov	r13,	&0x05ce	;
        while (!(UCA0IFG & UCTXIFG))
    6ce0:	a2 b3 dc 05 	bit	#2,	&0x05dc	;r3 As==10
    6ce4:	fd 27       	jz	$-4      	;abs 0x6ce0
            ; // Wait for byte transmission to complete
        UCA0IFG &= ~(UCTXIFG); // Clear byte completion flag
    6ce6:	a2 c3 dc 05 	bic	#2,	&0x05dc	;r3 As==10
    UART_SM.txPtr = txBuf;
    UART_SM.txBytesRemaining = size;

    UCA0IV &= ~(USCI_UART_UCTXIFG); // Clear byte completion flag

    while (UART_SM.txBytesRemaining--) {
    6cea:	1d 4c 04 00 	mov	4(r12),	r13	;
    6cee:	0e 4d       	mov	r13,	r14	;
    6cf0:	3e 53       	add	#-1,	r14	;r3 As==11
    6cf2:	8c 4e 04 00 	mov	r14,	4(r12)	;
    6cf6:	0d 93       	cmp	#0,	r13	;r3 As==00
    6cf8:	e8 23       	jnz	$-46     	;abs 0x6cca
        while (!(UCA0IFG & UCTXIFG))
            ; // Wait for byte transmission to complete
        UCA0IFG &= ~(UCTXIFG); // Clear byte completion flag
    }

    UART_SM.isTxBusy = FALSE;
    6cfa:	c2 43 22 1c 	mov.b	#0,	&0x1c22	;r3 As==00
}
    6cfe:	30 41       	ret			

00006d00 <UART_isTxBusy>:
/**
 * Return true if UART TX module is in the middle of an operation, false if not.
 */
uint8_t UART_isTxBusy() {
    return UART_SM.isTxBusy;
}
    6d00:	5c 42 22 1c 	mov.b	&0x1c22,r12	;0x1c22
    6d04:	30 41       	ret			

00006d06 <UART_asyncReceive>:
 * @param size the number of bytes to receive
 */
void UART_asyncReceive(uint8_t* rxBuf, uint16_t size) {

    // Block until prior reception has completed
    while (UART_SM.isRxBusy)
    6d06:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6d0a:	5e 4f 06 00 	mov.b	6(r15),	r14	;
    6d0e:	0e 93       	cmp	#0,	r14	;r3 As==00
    6d10:	fc 23       	jnz	$-6      	;abs 0x6d0a
        ;

    // Set up for start of reception
    UART_SM.isRxBusy = TRUE;
    6d12:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6d16:	de 43 06 00 	mov.b	#1,	6(r14)	;r3 As==01
    UART_SM.rxPtr = rxBuf;
    6d1a:	8e 4c 08 00 	mov	r12,	8(r14)	;
    UART_SM.rxBytesRemaining = size;
    6d1e:	8e 4d 0a 00 	mov	r13,	10(r14)	; 0x000a

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag
    6d22:	92 c3 dc 05 	bic	#1,	&0x05dc	;r3 As==01

    UCA0IE |= UCRXIE; // Enable USCI_A0 RX interrupt
    6d26:	92 d3 da 05 	bis	#1,	&0x05da	;r3 As==01

    // The rest of the reception will be completed by the RX ISR (which
    //  will wake after each byte has been received), and the isBusy flag
    //  will be cleared when done.
}
    6d2a:	30 41       	ret			

00006d2c <UART_receive>:
 * @param size the number of bytes to receive
 *
 */
void UART_receive(uint8_t* rxBuf, uint16_t size) {

    UART_asyncReceive(rxBuf, size);
    6d2c:	b0 12 06 6d 	call	#27910		;#0x6d06

    // Block until complete
    while (UART_SM.isRxBusy)
    6d30:	3d 40 22 1c 	mov	#7202,	r13	;#0x1c22
    6d34:	5c 4d 06 00 	mov.b	6(r13),	r12	;
    6d38:	0c 93       	cmp	#0,	r12	;r3 As==00
    6d3a:	fc 23       	jnz	$-6      	;abs 0x6d34
        ;
}
    6d3c:	30 41       	ret			

00006d3e <UART_critReceive>:
 *  and use UART status register polling instead of interrupts.
 */
void UART_critReceive(uint8_t* rxBuf, uint16_t size) {

    // Block until prior reception has completed
    while (UART_SM.isRxBusy)
    6d3e:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6d42:	5e 4f 06 00 	mov.b	6(r15),	r14	;
    6d46:	0e 93       	cmp	#0,	r14	;r3 As==00
    6d48:	fc 23       	jnz	$-6      	;abs 0x6d42
        ;

    // Set up for start of reception
    UART_SM.isRxBusy = TRUE;
    6d4a:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6d4e:	de 43 06 00 	mov.b	#1,	6(r14)	;r3 As==01
    UART_SM.rxPtr = rxBuf;
    6d52:	8e 4c 08 00 	mov	r12,	8(r14)	;
    UART_SM.rxBytesRemaining = size;
    6d56:	8e 4d 0a 00 	mov	r13,	10(r14)	; 0x000a

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag
    6d5a:	92 c3 dc 05 	bic	#1,	&0x05dc	;r3 As==01

    while (UART_SM.rxBytesRemaining--) {
    6d5e:	1c 4e 0a 00 	mov	10(r14),r12	;0x0000a
    6d62:	0d 4c       	mov	r12,	r13	;
    6d64:	3d 53       	add	#-1,	r13	;r3 As==11
    6d66:	8e 4d 0a 00 	mov	r13,	10(r14)	; 0x000a
    6d6a:	0c 93       	cmp	#0,	r12	;r3 As==00
    6d6c:	18 24       	jz	$+50     	;abs 0x6d9e
        while (!(UCA0IFG & UCRXIFG))
            ; // Wait for byte reception to complete
        UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

        uint8_t rec = UCA0RXBUF; // Read next byte
        *(UART_SM.rxPtr++) = rec; // Store byte
    6d6e:	0c 4e       	mov	r14,	r12	;
    UART_SM.rxBytesRemaining = size;

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

    while (UART_SM.rxBytesRemaining--) {
        while (!(UCA0IFG & UCRXIFG))
    6d70:	92 b3 dc 05 	bit	#1,	&0x05dc	;r3 As==01
    6d74:	fd 27       	jz	$-4      	;abs 0x6d70
            ; // Wait for byte reception to complete
        UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag
    6d76:	92 c3 dc 05 	bic	#1,	&0x05dc	;r3 As==01

        uint8_t rec = UCA0RXBUF; // Read next byte
    6d7a:	1e 42 cc 05 	mov	&0x05cc,r14	;0x05cc
        *(UART_SM.rxPtr++) = rec; // Store byte
    6d7e:	1d 4c 08 00 	mov	8(r12),	r13	;
    6d82:	0f 4d       	mov	r13,	r15	;
    6d84:	1f 53       	inc	r15		;
    6d86:	8c 4f 08 00 	mov	r15,	8(r12)	;
    while (UART_SM.rxBytesRemaining--) {
        while (!(UCA0IFG & UCRXIFG))
            ; // Wait for byte reception to complete
        UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

        uint8_t rec = UCA0RXBUF; // Read next byte
    6d8a:	cd 4e 00 00 	mov.b	r14,	0(r13)	;
    UART_SM.rxPtr = rxBuf;
    UART_SM.rxBytesRemaining = size;

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

    while (UART_SM.rxBytesRemaining--) {
    6d8e:	1d 4c 0a 00 	mov	10(r12),r13	;0x0000a
    6d92:	0e 4d       	mov	r13,	r14	;
    6d94:	3e 53       	add	#-1,	r14	;r3 As==11
    6d96:	8c 4e 0a 00 	mov	r14,	10(r12)	; 0x000a
    6d9a:	0d 93       	cmp	#0,	r13	;r3 As==00
    6d9c:	e9 23       	jnz	$-44     	;abs 0x6d70

        uint8_t rec = UCA0RXBUF; // Read next byte
        *(UART_SM.rxPtr++) = rec; // Store byte
    }

    UART_SM.isRxBusy = FALSE;
    6d9e:	c2 43 28 1c 	mov.b	#0,	&0x1c28	;r3 As==00
}
    6da2:	30 41       	ret			

00006da4 <UART_isRxBusy>:
/**
 * Return true if UART RX module is in the middle of an operation, false if not.
 */
uint8_t UART_isRxBusy() {
    return UART_SM.isRxBusy;
}
    6da4:	5c 42 28 1c 	mov.b	&0x1c28,r12	;0x1c28
    6da8:	30 41       	ret			

00006daa <UART_isRxDone>:
 * Return true if UART RX module is not in the middle of an operation (e.g. done), false if not.
 *
 * Could be used in combination with UART_asyncReceive.
 */
uint8_t UART_isRxDone() {
    return !(UART_SM.isRxBusy);
    6daa:	5c 42 28 1c 	mov.b	&0x1c28,r12	;0x1c28
    6dae:	3c 53       	add	#-1,	r12	;r3 As==11
}
    6db0:	5c 03       	rrum	#1,	r12	;
    6db2:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    6db6:	30 41       	ret			

00006db8 <USCI_A0_ISR>:
#elif defined(__GNUC__)
void __attribute__ ((interrupt(USCI_A0_VECTOR))) USCI_A0_ISR (void)
#else
#error Compiler not supported!
#endif
{
    6db8:	3f 15       	pushm	#4,	r15	;16-bit words
    uint8_t rec;

    switch (__even_in_range(UCA0IV, USCI_UART_UCTXCPTIFG)) {
    6dba:	1c 42 de 05 	mov	&0x05de,r12	;0x05de
    6dbe:	2c 93       	cmp	#2,	r12	;r3 As==10
    6dc0:	03 24       	jz	$+8      	;abs 0x6dc8
    6dc2:	2c 92       	cmp	#4,	r12	;r2 As==10
    6dc4:	1e 24       	jz	$+62     	;abs 0x6e02
    6dc6:	38 3c       	jmp	$+114    	;abs 0x6e38
    case USCI_NONE:
        break;
    case USCI_UART_UCRXIFG:
        if (UART_SM.rxBytesRemaining--) {
    6dc8:	3d 40 22 1c 	mov	#7202,	r13	;#0x1c22
    6dcc:	1c 4d 0a 00 	mov	10(r13),r12	;0x0000a
    6dd0:	0e 4c       	mov	r12,	r14	;
    6dd2:	3e 53       	add	#-1,	r14	;r3 As==11
    6dd4:	8d 4e 0a 00 	mov	r14,	10(r13)	; 0x000a
    6dd8:	0c 93       	cmp	#0,	r12	;r3 As==00
    6dda:	0a 24       	jz	$+22     	;abs 0x6df0
            rec = UCA0RXBUF; // Read next byte
    6ddc:	1e 42 cc 05 	mov	&0x05cc,r14	;0x05cc
            *(UART_SM.rxPtr++) = rec; // Store byte
    6de0:	1c 4d 08 00 	mov	8(r13),	r12	;
    6de4:	0f 4c       	mov	r12,	r15	;
    6de6:	1f 53       	inc	r15		;
    6de8:	8d 4f 08 00 	mov	r15,	8(r13)	;
    switch (__even_in_range(UCA0IV, USCI_UART_UCTXCPTIFG)) {
    case USCI_NONE:
        break;
    case USCI_UART_UCRXIFG:
        if (UART_SM.rxBytesRemaining--) {
            rec = UCA0RXBUF; // Read next byte
    6dec:	cc 4e 00 00 	mov.b	r14,	0(r12)	;
            *(UART_SM.rxPtr++) = rec; // Store byte
        }

        if (0 == UART_SM.rxBytesRemaining) {
    6df0:	1c 42 2c 1c 	mov	&0x1c2c,r12	;0x1c2c
    6df4:	0c 93       	cmp	#0,	r12	;r3 As==00
    6df6:	20 20       	jnz	$+66     	;abs 0x6e38
            UCA0IE &= ~(UCRXIE); // Disable USCI_A0 RX interrupt
    6df8:	92 c3 da 05 	bic	#1,	&0x05da	;r3 As==01
            UART_SM.isRxBusy = FALSE;
    6dfc:	c2 43 28 1c 	mov.b	#0,	&0x1c28	;r3 As==00
    6e00:	1b 3c       	jmp	$+56     	;abs 0x6e38
        }

        break;
    case USCI_UART_UCTXIFG:
        UCA0TXBUF = *(UART_SM.txPtr++); // if interrupt was enabled, there must be bytes
    6e02:	3c 40 22 1c 	mov	#7202,	r12	;#0x1c22
    6e06:	1d 4c 02 00 	mov	2(r12),	r13	;
    6e0a:	0e 4d       	mov	r13,	r14	;
    6e0c:	1e 53       	inc	r14		;
    6e0e:	8c 4e 02 00 	mov	r14,	2(r12)	;
    6e12:	6d 4d       	mov.b	@r13,	r13	;
    6e14:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    6e18:	82 4d ce 05 	mov	r13,	&0x05ce	;
        if (--UART_SM.txBytesRemaining == 0) {
    6e1c:	1d 4c 04 00 	mov	4(r12),	r13	;
    6e20:	3d 53       	add	#-1,	r13	;r3 As==11
    6e22:	8c 4d 04 00 	mov	r13,	4(r12)	;
    6e26:	0d 93       	cmp	#0,	r13	;r3 As==00
    6e28:	07 20       	jnz	$+16     	;abs 0x6e38
            // TODO: actually, this wait should probably happen for blocking version only
            while (UCA0STATW & UCBUSY); // wait for last byte to finish transmitting
    6e2a:	d2 b3 ca 05 	bit.b	#1,	&0x05ca	;r3 As==01
    6e2e:	fd 23       	jnz	$-4      	;abs 0x6e2a
            UCA0IE &= ~(UCTXIE); // Disable USCI_A0 TX interrupt
    6e30:	a2 c3 da 05 	bic	#2,	&0x05da	;r3 As==10
            UART_SM.isTxBusy = FALSE;
    6e34:	c2 43 22 1c 	mov.b	#0,	&0x1c22	;r3 As==00
    case USCI_UART_UCSTTIFG:
        break;
    case USCI_UART_UCTXCPTIFG:
        break;
    }
}
    6e38:	3c 17       	popm	#4,	r15	;16-bit words
    6e3a:	00 13       	reti			

00006e3c <memmove>:
    6e3c:	0a 15       	pushm	#1,	r10	;16-bit words
    6e3e:	0d 9c       	cmp	r12,	r13	;
    6e40:	10 2c       	jc	$+34     	;abs 0x6e62
    6e42:	0b 4d       	mov	r13,	r11	;
    6e44:	0b 5e       	add	r14,	r11	;
    6e46:	0c 9b       	cmp	r11,	r12	;
    6e48:	0c 2c       	jc	$+26     	;abs 0x6e62
    6e4a:	0d 4e       	mov	r14,	r13	;
    6e4c:	3d 53       	add	#-1,	r13	;r3 As==11
    6e4e:	3d 93       	cmp	#-1,	r13	;r3 As==11
    6e50:	13 24       	jz	$+40     	;abs 0x6e78
    6e52:	0f 4d       	mov	r13,	r15	;
    6e54:	0f 8e       	sub	r14,	r15	;
    6e56:	0f 5b       	add	r11,	r15	;
    6e58:	0a 4c       	mov	r12,	r10	;
    6e5a:	0a 5d       	add	r13,	r10	;
    6e5c:	ea 4f 00 00 	mov.b	@r15,	0(r10)	;
    6e60:	f5 3f       	jmp	$-20     	;abs 0x6e4c
    6e62:	0f 43       	clr	r15		;
    6e64:	0f 9e       	cmp	r14,	r15	;
    6e66:	08 24       	jz	$+18     	;abs 0x6e78
    6e68:	0a 4d       	mov	r13,	r10	;
    6e6a:	0a 5f       	add	r15,	r10	;
    6e6c:	0b 4c       	mov	r12,	r11	;
    6e6e:	0b 5f       	add	r15,	r11	;
    6e70:	eb 4a 00 00 	mov.b	@r10,	0(r11)	;
    6e74:	1f 53       	inc	r15		;
    6e76:	f6 3f       	jmp	$-18     	;abs 0x6e64
    6e78:	0a 17       	popm	#1,	r10	;16-bit words
    6e7a:	30 41       	ret			

00006e7c <memset>:
    6e7c:	0f 4c       	mov	r12,	r15	;
    6e7e:	0e 5c       	add	r12,	r14	;
    6e80:	0f 9e       	cmp	r14,	r15	;
    6e82:	04 24       	jz	$+10     	;abs 0x6e8c
    6e84:	cf 4d 00 00 	mov.b	r13,	0(r15)	;
    6e88:	1f 53       	inc	r15		;
    6e8a:	fa 3f       	jmp	$-10     	;abs 0x6e80
    6e8c:	30 41       	ret			

00006e8e <__do_global_ctors_aux>:
    6e8e:	0a 15       	pushm	#1,	r10	;16-bit words
    6e90:	1c 42 f4 44 	mov	&0x44f4,r12	;0x44f4
    6e94:	3c 93       	cmp	#-1,	r12	;r3 As==11
    6e96:	08 24       	jz	$+18     	;abs 0x6ea8
    6e98:	3a 40 f4 44 	mov	#17652,	r10	;#0x44f4
    6e9c:	8c 12       	call	r12		;
    6e9e:	3a 50 fe ff 	add	#65534,	r10	;#0xfffe
    6ea2:	2c 4a       	mov	@r10,	r12	;
    6ea4:	3c 93       	cmp	#-1,	r12	;r3 As==11
    6ea6:	fa 23       	jnz	$-10     	;abs 0x6e9c
    6ea8:	0a 17       	popm	#1,	r10	;16-bit words
    6eaa:	30 41       	ret			

00006eac <call___do_global_ctors_aux>:
    6eac:	30 41       	ret			

00006eae <__msp430_init>:
    6eae:	b0 12 ac 56 	call	#22188		;#0x56ac
    6eb2:	b0 12 8e 6e 	call	#28302		;#0x6e8e
    6eb6:	b0 12 ec 55 	call	#21996		;#0x55ec
    6eba:	b0 12 e0 55 	call	#21984		;#0x55e0
    6ebe:	30 41       	ret			

00006ec0 <__msp430_fini>:
    6ec0:	b0 12 f8 55 	call	#22008		;#0x55f8
    6ec4:	b0 12 5e 56 	call	#22110		;#0x565e
    6ec8:	30 41       	ret			

templog.out:     file format elf32-msp430


Disassembly of section __interrupt_vector_49:

0000fff0 <__interrupt_vector_49>:
    fff0:	b8 6d       	interrupt service routine at 0x6db8

Disassembly of section .text:

000055b0 <__crt0_start>:
    55b0:	31 40 00 24 	mov	#9216,	r1	;#0x2400

000055b4 <__crt0_init_bss>:
    55b4:	3c 40 04 1c 	mov	#7172,	r12	;#0x1c04
    55b8:	0d 43       	clr	r13		;
    55ba:	3e 40 2a 00 	mov	#42,	r14	;#0x002a
    55be:	b0 12 7c 6e 	call	#28284		;#0x6e7c

000055c2 <__crt0_movedata>:
    55c2:	3c 40 00 1c 	mov	#7168,	r12	;#0x1c00
    55c6:	3d 40 aa 55 	mov	#21930,	r13	;#0x55aa
    55ca:	0d 9c       	cmp	r12,	r13	;
    55cc:	04 24       	jz	$+10     	;abs 0x55d6
    55ce:	3e 40 04 00 	mov	#4,	r14	;
    55d2:	b0 12 3c 6e 	call	#28220		;#0x6e3c

000055d6 <__crt0_call_init_then_main>:
    55d6:	b0 12 ae 6e 	call	#28334		;#0x6eae
    55da:	0c 43       	clr	r12		;
    55dc:	b0 12 c0 6b 	call	#27584		;#0x6bc0

000055e0 <_msp430_run_init_array>:
    55e0:	34 40 f0 44 	mov	#17648,	r4	;#0x44f0
    55e4:	35 40 f0 44 	mov	#17648,	r5	;#0x44f0
    55e8:	26 43       	mov	#2,	r6	;r3 As==10
    55ea:	0d 3c       	jmp	$+28     	;abs 0x5606

000055ec <_msp430_run_preinit_array>:
    55ec:	34 40 f0 44 	mov	#17648,	r4	;#0x44f0
    55f0:	35 40 f0 44 	mov	#17648,	r5	;#0x44f0
    55f4:	26 43       	mov	#2,	r6	;r3 As==10
    55f6:	07 3c       	jmp	$+16     	;abs 0x5606

000055f8 <_msp430_run_fini_array>:
    55f8:	34 40 f0 44 	mov	#17648,	r4	;#0x44f0
    55fc:	35 40 f0 44 	mov	#17648,	r5	;#0x44f0
    5600:	36 40 fe ff 	mov	#65534,	r6	;#0xfffe
    5604:	00 3c       	jmp	$+2      	;abs 0x5606

00005606 <_msp430_run_array>:
    5606:	05 94       	cmp	r4,	r5	;
    5608:	05 24       	jz	$+12     	;abs 0x5614
    560a:	27 44       	mov	@r4,	r7	;
    560c:	04 56       	add	r6,	r4	;
    560e:	a7 12       	call	@r7		;
    5610:	10 40 f4 ff 	br	0xfff4		;PC rel. 0x5606

00005614 <_msp430_run_done>:
    5614:	30 41       	ret			

00005616 <deregister_tm_clones>:
    5616:	3c 40 ca 6e 	mov	#28362,	r12	;#0x6eca
    561a:	3c 80 c9 6e 	sub	#28361,	r12	;#0x6ec9
    561e:	2d 43       	mov	#2,	r13	;r3 As==10
    5620:	0d 9c       	cmp	r12,	r13	;
    5622:	07 2c       	jc	$+16     	;abs 0x5632
    5624:	3d 40 00 00 	mov	#0,	r13	;
    5628:	0d 93       	cmp	#0,	r13	;r3 As==00
    562a:	03 24       	jz	$+8      	;abs 0x5632
    562c:	3c 40 ca 6e 	mov	#28362,	r12	;#0x6eca
    5630:	8d 12       	call	r13		;
    5632:	30 41       	ret			

00005634 <register_tm_clones>:
    5634:	3d 40 ca 6e 	mov	#28362,	r13	;#0x6eca
    5638:	3d 80 ca 6e 	sub	#28362,	r13	;#0x6eca
    563c:	0d 11       	rra	r13		;
    563e:	0c 4d       	mov	r13,	r12	;
    5640:	5c 03       	rrum	#1,	r12	;
    5642:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    5646:	0d 5c       	add	r12,	r13	;
    5648:	0d 11       	rra	r13		;
    564a:	0d 93       	cmp	#0,	r13	;r3 As==00
    564c:	07 24       	jz	$+16     	;abs 0x565c
    564e:	3e 40 00 00 	mov	#0,	r14	;
    5652:	0e 93       	cmp	#0,	r14	;r3 As==00
    5654:	03 24       	jz	$+8      	;abs 0x565c
    5656:	3c 40 ca 6e 	mov	#28362,	r12	;#0x6eca
    565a:	8e 12       	call	r14		;
    565c:	30 41       	ret			

0000565e <__do_global_dtors_aux>:
    565e:	0a 15       	pushm	#1,	r10	;16-bit words
    5660:	c2 93 04 1c 	cmp.b	#0,	&0x1c04	;r3 As==00
    5664:	20 20       	jnz	$+66     	;abs 0x56a6
    5666:	1c 42 06 1c 	mov	&0x1c06,r12	;0x1c06
    566a:	3a 40 fa 44 	mov	#17658,	r10	;#0x44fa
    566e:	3a 80 f8 44 	sub	#17656,	r10	;#0x44f8
    5672:	0a 11       	rra	r10		;
    5674:	3a 53       	add	#-1,	r10	;r3 As==11
    5676:	0c 9a       	cmp	r10,	r12	;
    5678:	0b 2c       	jc	$+24     	;abs 0x5690
    567a:	1c 53       	inc	r12		;
    567c:	82 4c 06 1c 	mov	r12,	&0x1c06	;
    5680:	0c 5c       	rla	r12		;
    5682:	1c 4c f8 44 	mov	17656(r12),r12	;0x044f8
    5686:	8c 12       	call	r12		;
    5688:	1c 42 06 1c 	mov	&0x1c06,r12	;0x1c06
    568c:	0c 9a       	cmp	r10,	r12	;
    568e:	f5 2b       	jnc	$-20     	;abs 0x567a
    5690:	b0 12 16 56 	call	#22038		;#0x5616
    5694:	3d 40 00 00 	mov	#0,	r13	;
    5698:	0d 93       	cmp	#0,	r13	;r3 As==00
    569a:	03 24       	jz	$+8      	;abs 0x56a2
    569c:	3c 40 ec 44 	mov	#17644,	r12	;#0x44ec
    56a0:	8d 12       	call	r13		;
    56a2:	d2 43 04 1c 	mov.b	#1,	&0x1c04	;r3 As==01
    56a6:	0a 17       	popm	#1,	r10	;16-bit words
    56a8:	30 41       	ret			

000056aa <call___do_global_dtors_aux>:
    56aa:	30 41       	ret			

000056ac <frame_dummy>:
    56ac:	3e 40 00 00 	mov	#0,	r14	;
    56b0:	0e 93       	cmp	#0,	r14	;r3 As==00
    56b2:	05 24       	jz	$+12     	;abs 0x56be
    56b4:	3c 40 ec 44 	mov	#17644,	r12	;#0x44ec
    56b8:	3d 40 08 1c 	mov	#7176,	r13	;#0x1c08
    56bc:	8e 12       	call	r14		;
    56be:	3c 40 00 1c 	mov	#7168,	r12	;#0x1c00
    56c2:	8c 93 00 00 	cmp	#0,	0(r12)	;r3 As==00
    56c6:	03 20       	jnz	$+8      	;abs 0x56ce
    56c8:	b0 12 34 56 	call	#22068		;#0x5634
    56cc:	30 41       	ret			
    56ce:	3d 40 00 00 	mov	#0,	r13	;
    56d2:	0d 93       	cmp	#0,	r13	;r3 As==00
    56d4:	f9 27       	jz	$-12     	;abs 0x56c8
    56d6:	8d 12       	call	r13		;
    56d8:	f7 3f       	jmp	$-16     	;abs 0x56c8

000056da <call_frame_dummy>:
    56da:	30 41       	ret			

000056dc <TimerB1_ISR>:
    56dc:	04 12       	push	r4		;
    56de:	04 41       	mov	r1,	r4	;
    56e0:	0c 12       	push	r12		;
    56e2:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    56e6:	3c f0 fd ff 	and	#65533,	r12	;#0xfffd
    56ea:	82 4c c0 03 	mov	r12,	&0x03c0	;
    56ee:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    56f2:	0c 93       	cmp	#0,	r12	;r3 As==00
    56f4:	17 24       	jz	$+48     	;abs 0x5724
    56f6:	00 3c       	jmp	$+2      	;abs 0x56f8
    56f8:	1c 42 16 1c 	mov	&0x1c16,r12	;0x1c16
    56fc:	1c 53       	inc	r12		;
    56fe:	82 4c 16 1c 	mov	r12,	&0x1c16	;
    5702:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5706:	2c d2       	bis	#4,	r12	;r2 As==10
    5708:	82 4c c0 03 	mov	r12,	&0x03c0	;
    570c:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5710:	2c d3       	bis	#2,	r12	;r3 As==10
    5712:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5716:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    571a:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    571e:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5722:	00 3c       	jmp	$+2      	;abs 0x5724
    5724:	3c 41       	pop	r12		;
    5726:	34 41       	pop	r4		;
    5728:	00 13       	reti			
	...

0000572c <init>:
    572c:	04 12       	push	r4		;
    572e:	04 41       	mov	r1,	r4	;
    5730:	21 82       	sub	#4,	r1	;r2 As==10
    5732:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5736:	3c f0 ff e6 	and	#59135,	r12	;#0xe6ff
    573a:	82 4c c0 03 	mov	r12,	&0x03c0	;
    573e:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5742:	3c d0 00 02 	bis	#512,	r12	;#0x0200
    5746:	82 4c c0 03 	mov	r12,	&0x03c0	;
    574a:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    574e:	3c d0 c0 00 	bis	#192,	r12	;#0x00c0
    5752:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5756:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    575a:	3c f0 ef ff 	and	#65519,	r12	;#0xffef
    575e:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5762:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5766:	3c d0 20 00 	bis	#32,	r12	;#0x0020
    576a:	82 4c c0 03 	mov	r12,	&0x03c0	;
    576e:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5772:	2c d3       	bis	#2,	r12	;r3 As==10
    5774:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5778:	b0 12 a0 61 	call	#24992		;#0x61a0
    577c:	5c 42 04 02 	mov.b	&0x0204,r12	;0x0204
    5780:	2c d3       	bis	#2,	r12	;r3 As==10
    5782:	4d 4c       	mov.b	r12,	r13	;
    5784:	c2 4d 04 02 	mov.b	r13,	&0x0204	;
    5788:	5c 42 04 02 	mov.b	&0x0204,r12	;0x0204
    578c:	2c d2       	bis	#4,	r12	;r2 As==10
    578e:	4d 4c       	mov.b	r12,	r13	;
    5790:	c2 4d 04 02 	mov.b	r13,	&0x0204	;
    5794:	5c 42 04 02 	mov.b	&0x0204,r12	;0x0204
    5798:	1c d3       	bis	#1,	r12	;r3 As==01
    579a:	4d 4c       	mov.b	r12,	r13	;
    579c:	c2 4d 04 02 	mov.b	r13,	&0x0204	;
    57a0:	b0 12 20 67 	call	#26400		;#0x6720
    57a4:	32 d2       	eint			
    57a6:	03 43       	nop			
    57a8:	0c 41       	mov	r1,	r12	;
    57aa:	bc 40 00 44 	mov	#17408,	0(r12)	;#0x4400
    57ae:	00 00 
    57b0:	b0 12 bc 62 	call	#25276		;#0x62bc
    57b4:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    57b8:	21 52       	add	#4,	r1	;r2 As==10
    57ba:	34 41       	pop	r4		;
    57bc:	30 41       	ret			
	...

000057c0 <task_init>:
    57c0:	04 12       	push	r4		;
    57c2:	04 41       	mov	r1,	r4	;
    57c4:	21 82       	sub	#4,	r1	;r2 As==10
    57c6:	0c 41       	mov	r1,	r12	;
    57c8:	bc 40 00 44 	mov	#17408,	0(r12)	;#0x4400
    57cc:	00 00 
    57ce:	b0 12 bc 62 	call	#25276		;#0x62bc
    57d2:	82 43 f4 46 	mov	#0,	&0x46f4	;r3 As==00
    57d6:	82 43 f6 46 	mov	#0,	&0x46f6	;r3 As==00
    57da:	82 43 f8 46 	mov	#0,	&0x46f8	;r3 As==00
    57de:	82 43 fa 46 	mov	#0,	&0x46fa	;r3 As==00
    57e2:	82 43 fc 46 	mov	#0,	&0x46fc	;r3 As==00
    57e6:	92 43 fe 46 	mov	#1,	&0x46fe	;r3 As==01
    57ea:	3c 40 26 45 	mov	#17702,	r12	;#0x4526
    57ee:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    57f2:	0f 4c       	mov	r12,	r15	;
    57f4:	b0 12 90 68 	call	#26768		;#0x6890
    57f8:	21 52       	add	#4,	r1	;r2 As==10
    57fa:	34 41       	pop	r4		;
    57fc:	30 41       	ret			
	...

00005800 <task_init_dict>:
    5800:	04 12       	push	r4		;
    5802:	04 41       	mov	r1,	r4	;
    5804:	31 80 0a 00 	sub	#10,	r1	;#0x000a
    5808:	1c 42 f8 46 	mov	&0x46f8,r12	;0x46f8
    580c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5810:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5814:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa
    5818:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    581c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5820:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    5824:	3e 40 06 00 	mov	#6,	r14	;
    5828:	0f 4c       	mov	r12,	r15	;
    582a:	b0 12 f0 6b 	call	#27632		;#0x6bf0
    582e:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5832:	8f 4c 04 47 	mov	r12,	18180(r15); 0x4704
    5836:	1c 44 fa ff 	mov	-6(r4),	r12	;
    583a:	8f 4c 02 47 	mov	r12,	18178(r15); 0x4702
    583e:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    5842:	8f 4c 00 47 	mov	r12,	18176(r15); 0x4700
    5846:	1c 44 fe ff 	mov	-2(r4),	r12	;
    584a:	1c 53       	inc	r12		;
    584c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5850:	3c 90 00 01 	cmp	#256,	r12	;#0x0100
    5854:	0d 2c       	jc	$+28     	;abs 0x5870
    5856:	00 3c       	jmp	$+2      	;abs 0x5858
    5858:	3e 40 f8 46 	mov	#18168,	r14	;#0x46f8
    585c:	0f 44       	mov	r4,	r15	;
    585e:	2f 83       	decd	r15		;
    5860:	2d 43       	mov	#2,	r13	;r3 As==10
    5862:	b0 12 f0 69 	call	#27120		;#0x69f0
    5866:	3f 40 26 45 	mov	#17702,	r15	;#0x4526
    586a:	b0 12 90 68 	call	#26768		;#0x6890
    586e:	0f 3c       	jmp	$+32     	;abs 0x588e
    5870:	b2 40 00 01 	mov	#256,	&0x5300	;#0x0100
    5874:	00 53 
    5876:	3e 40 f8 46 	mov	#18168,	r14	;#0x46f8
    587a:	0f 44       	mov	r4,	r15	;
    587c:	2f 83       	decd	r15		;
    587e:	2d 43       	mov	#2,	r13	;r3 As==10
    5880:	b0 12 f0 69 	call	#27120		;#0x69f0
    5884:	3f 40 50 45 	mov	#17744,	r15	;#0x4550
    5888:	b0 12 90 68 	call	#26768		;#0x6890
    588c:	00 3c       	jmp	$+2      	;abs 0x588e
    588e:	31 50 0a 00 	add	#10,	r1	;#0x000a
    5892:	34 41       	pop	r4		;
    5894:	30 41       	ret			
	...

00005898 <task_sample>:
    5898:	04 12       	push	r4		;
    589a:	04 41       	mov	r1,	r4	;
    589c:	21 82       	sub	#4,	r1	;r2 As==10
    589e:	1c 42 fc 46 	mov	&0x46fc,r12	;0x46fc
    58a2:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    58a6:	1c 53       	inc	r12		;
    58a8:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    58ac:	2c 93       	cmp	#2,	r12	;r3 As==10
    58ae:	04 20       	jnz	$+10     	;abs 0x58b8
    58b0:	00 3c       	jmp	$+2      	;abs 0x58b2
    58b2:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    58b6:	00 3c       	jmp	$+2      	;abs 0x58b8
    58b8:	1c 44 fe ff 	mov	-2(r4),	r12	;
    58bc:	0c 93       	cmp	#0,	r12	;r3 As==00
    58be:	11 20       	jnz	$+36     	;abs 0x58e2
    58c0:	00 3c       	jmp	$+2      	;abs 0x58c2
    58c2:	1c 44 fc ff 	mov	-4(r4),	r12	;
    58c6:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    58ca:	3e 40 fc 46 	mov	#18172,	r14	;#0x46fc
    58ce:	0f 44       	mov	r4,	r15	;
    58d0:	2f 83       	decd	r15		;
    58d2:	2d 43       	mov	#2,	r13	;r3 As==10
    58d4:	b0 12 f0 69 	call	#27120		;#0x69f0
    58d8:	3f 40 7a 45 	mov	#17786,	r15	;#0x457a
    58dc:	b0 12 90 68 	call	#26768		;#0x6890
    58e0:	10 3c       	jmp	$+34     	;abs 0x5902
    58e2:	1c 44 fc ff 	mov	-4(r4),	r12	;
    58e6:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    58ea:	3e 40 fc 46 	mov	#18172,	r14	;#0x46fc
    58ee:	0f 44       	mov	r4,	r15	;
    58f0:	2f 83       	decd	r15		;
    58f2:	2d 43       	mov	#2,	r13	;r3 As==10
    58f4:	b0 12 f0 69 	call	#27120		;#0x69f0
    58f8:	3f 40 a4 45 	mov	#17828,	r15	;#0x45a4
    58fc:	b0 12 90 68 	call	#26768		;#0x6890
    5900:	00 3c       	jmp	$+2      	;abs 0x5902
    5902:	21 52       	add	#4,	r1	;r2 As==10
    5904:	34 41       	pop	r4		;
    5906:	30 41       	ret			

00005908 <task_measure_temp>:
    5908:	04 12       	push	r4		;
    590a:	04 41       	mov	r1,	r4	;
    590c:	31 82       	sub	#8,	r1	;r2 As==11
    590e:	3e 40 fa 46 	mov	#18170,	r14	;#0x46fa
    5912:	1c 42 fa 46 	mov	&0x46fa,r12	;0x46fa
    5916:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    591a:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    591e:	0f 4c       	mov	r12,	r15	;
    5920:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    5924:	b0 12 bc 61 	call	#25020		;#0x61bc
    5928:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    592c:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    5930:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    5934:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5938:	82 4c 02 53 	mov	r12,	&0x5302	;
    593c:	0f 44       	mov	r4,	r15	;
    593e:	2f 83       	decd	r15		;
    5940:	2d 43       	mov	#2,	r13	;r3 As==10
    5942:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    5946:	b0 12 f0 69 	call	#27120		;#0x69f0
    594a:	3f 40 a4 45 	mov	#17828,	r15	;#0x45a4
    594e:	b0 12 90 68 	call	#26768		;#0x6890
    5952:	31 52       	add	#8,	r1	;r2 As==11
    5954:	34 41       	pop	r4		;
    5956:	30 41       	ret			

00005958 <task_letterize>:
    5958:	04 12       	push	r4		;
    595a:	04 41       	mov	r1,	r4	;
    595c:	31 80 10 00 	sub	#16,	r1	;#0x0010
    5960:	1c 42 fc 46 	mov	&0x46fc,r12	;0x46fc
    5964:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5968:	0c 93       	cmp	#0,	r12	;r3 As==00
    596a:	04 20       	jnz	$+10     	;abs 0x5974
    596c:	00 3c       	jmp	$+2      	;abs 0x596e
    596e:	a4 43 fe ff 	mov	#2,	-2(r4)	;r3 As==10, 0xfffe
    5972:	06 3c       	jmp	$+14     	;abs 0x5980
    5974:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5978:	3c 53       	add	#-1,	r12	;r3 As==11
    597a:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    597e:	00 3c       	jmp	$+2      	;abs 0x5980
    5980:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5984:	0c 5c       	rla	r12		;
    5986:	0c 5c       	rla	r12		;
    5988:	0c 5c       	rla	r12		;
    598a:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    598e:	1c 42 02 53 	mov	&0x5302,r12	;0x5302
    5992:	5d 44 fc ff 	mov.b	-4(r4),	r13	;
    5996:	3e 40 ff 00 	mov	#255,	r14	;#0x00ff
    599a:	4d 93       	cmp.b	#0,	r13	;r3 As==00
    599c:	4f 4d       	mov.b	r13,	r15	;
    599e:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    59a2:	c4 4d f7 ff 	mov.b	r13,	-9(r4)	; 0xfff7
    59a6:	84 4e f4 ff 	mov	r14,	-12(r4)	; 0xfff4
    59aa:	c4 4f f3 ff 	mov.b	r15,	-13(r4)	; 0xfff3
    59ae:	0b 24       	jz	$+24     	;abs 0x59c6
    59b0:	5c 44 f3 ff 	mov.b	-13(r4),r12	;0xfffffff3
    59b4:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    59b8:	0d 5d       	rla	r13		;
    59ba:	5c 83       	dec.b	r12		;
    59bc:	84 4d f4 ff 	mov	r13,	-12(r4)	; 0xfff4
    59c0:	c4 4c f3 ff 	mov.b	r12,	-13(r4)	; 0xfff3
    59c4:	f5 23       	jnz	$-20     	;abs 0x59b0
    59c6:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    59ca:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    59ce:	0d fc       	and	r12,	r13	;
    59d0:	5e 44 f7 ff 	mov.b	-9(r4),	r14	;
    59d4:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    59d6:	c4 4e f2 ff 	mov.b	r14,	-14(r4)	; 0xfff2
    59da:	84 4d f0 ff 	mov	r13,	-16(r4)	; 0xfff0
    59de:	0c 24       	jz	$+26     	;abs 0x59f8
    59e0:	5c 44 f2 ff 	mov.b	-14(r4),r12	;0xfffffff2
    59e4:	1d 44 f0 ff 	mov	-16(r4),r13	;0xfffffff0
    59e8:	12 c3       	clrc			
    59ea:	0d 10       	rrc	r13		;
    59ec:	5c 83       	dec.b	r12		;
    59ee:	84 4d f0 ff 	mov	r13,	-16(r4)	; 0xfff0
    59f2:	c4 4c f2 ff 	mov.b	r12,	-14(r4)	; 0xfff2
    59f6:	f4 23       	jnz	$-22     	;abs 0x59e0
    59f8:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    59fc:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5a00:	82 4c f8 46 	mov	r12,	&0x46f8	;
    5a04:	3f 40 ce 45 	mov	#17870,	r15	;#0x45ce
    5a08:	b0 12 90 68 	call	#26768		;#0x6890
    5a0c:	31 50 10 00 	add	#16,	r1	;#0x0010
    5a10:	34 41       	pop	r4		;
    5a12:	30 41       	ret			

00005a14 <task_compress>:
    5a14:	04 12       	push	r4		;
    5a16:	04 41       	mov	r1,	r4	;
    5a18:	31 80 0c 00 	sub	#12,	r1	;#0x000c
    5a1c:	3e 40 fe 46 	mov	#18174,	r14	;#0x46fe
    5a20:	1c 42 fe 46 	mov	&0x46fe,r12	;0x46fe
    5a24:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5a28:	1c 42 f4 46 	mov	&0x46f4,r12	;0x46f4
    5a2c:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    5a30:	3d 40 06 00 	mov	#6,	r13	;
    5a34:	0f 4c       	mov	r12,	r15	;
    5a36:	84 4e f4 ff 	mov	r14,	-12(r4)	; 0xfff4
    5a3a:	0e 4d       	mov	r13,	r14	;
    5a3c:	b0 12 f0 6b 	call	#27632		;#0x6bf0
    5a40:	1c 4f 04 47 	mov	18180(r15),r12	;0x04704
    5a44:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5a48:	1c 4f 02 47 	mov	18178(r15),r12	;0x04702
    5a4c:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5a50:	1c 4f 00 47 	mov	18176(r15),r12	;0x04700
    5a54:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5a58:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5a5c:	82 4c 04 53 	mov	r12,	&0x5304	;
    5a60:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5a64:	82 4c 0a 53 	mov	r12,	&0x530a	;
    5a68:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5a6c:	82 4c 08 53 	mov	r12,	&0x5308	;
    5a70:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    5a74:	82 4c 06 53 	mov	r12,	&0x5306	;
    5a78:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    5a7c:	82 4c 0c 53 	mov	r12,	&0x530c	;
    5a80:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5a84:	82 4c 0e 53 	mov	r12,	&0x530e	;
    5a88:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5a8c:	1c 53       	inc	r12		;
    5a8e:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5a92:	0f 44       	mov	r4,	r15	;
    5a94:	2f 83       	decd	r15		;
    5a96:	2d 43       	mov	#2,	r13	;r3 As==10
    5a98:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfffffff4
    5a9c:	b0 12 f0 69 	call	#27120		;#0x69f0
    5aa0:	3f 40 f8 45 	mov	#17912,	r15	;#0x45f8
    5aa4:	b0 12 90 68 	call	#26768		;#0x6890
    5aa8:	31 50 0c 00 	add	#12,	r1	;#0x000c
    5aac:	34 41       	pop	r4		;
    5aae:	30 41       	ret			

00005ab0 <task_find_sibling>:
    5ab0:	04 12       	push	r4		;
    5ab2:	04 41       	mov	r1,	r4	;
    5ab4:	31 82       	sub	#8,	r1	;r2 As==11
    5ab6:	1c 42 04 53 	mov	&0x5304,r12	;0x5304
    5aba:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5abe:	0c 93       	cmp	#0,	r12	;r3 As==00
    5ac0:	41 24       	jz	$+132    	;abs 0x5b44
    5ac2:	00 3c       	jmp	$+2      	;abs 0x5ac4
    5ac4:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5ac8:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5acc:	3e 40 06 00 	mov	#6,	r14	;
    5ad0:	0f 4c       	mov	r12,	r15	;
    5ad2:	b0 12 f0 6b 	call	#27632		;#0x6bf0
    5ad6:	0c 4f       	mov	r15,	r12	;
    5ad8:	3c 50 00 47 	add	#18176,	r12	;#0x4700
    5adc:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5ae0:	1c 4f 00 47 	mov	18176(r15),r12	;0x04700
    5ae4:	1e 42 f8 46 	mov	&0x46f8,r14	;0x46f8
    5ae8:	0c 9e       	cmp	r14,	r12	;
    5aea:	11 20       	jnz	$+36     	;abs 0x5b0e
    5aec:	00 3c       	jmp	$+2      	;abs 0x5aee
    5aee:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5af2:	82 4c f4 46 	mov	r12,	&0x46f4	;
    5af6:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5afa:	0f 44       	mov	r4,	r15	;
    5afc:	2f 83       	decd	r15		;
    5afe:	2d 43       	mov	#2,	r13	;r3 As==10
    5b00:	b0 12 f0 69 	call	#27120		;#0x69f0
    5b04:	3f 40 a4 45 	mov	#17828,	r15	;#0x45a4
    5b08:	b0 12 90 68 	call	#26768		;#0x6890
    5b0c:	1a 3c       	jmp	$+54     	;abs 0x5b42
    5b0e:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5b12:	1c 4c 02 00 	mov	2(r12),	r12	;
    5b16:	0c 93       	cmp	#0,	r12	;r3 As==00
    5b18:	13 24       	jz	$+40     	;abs 0x5b40
    5b1a:	00 3c       	jmp	$+2      	;abs 0x5b1c
    5b1c:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5b20:	1c 4c 02 00 	mov	2(r12),	r12	;
    5b24:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5b28:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5b2c:	0f 44       	mov	r4,	r15	;
    5b2e:	2f 83       	decd	r15		;
    5b30:	2d 43       	mov	#2,	r13	;r3 As==10
    5b32:	b0 12 f0 69 	call	#27120		;#0x69f0
    5b36:	3f 40 f8 45 	mov	#17912,	r15	;#0x45f8
    5b3a:	b0 12 90 68 	call	#26768		;#0x6890
    5b3e:	00 3c       	jmp	$+2      	;abs 0x5b40
    5b40:	00 3c       	jmp	$+2      	;abs 0x5b42
    5b42:	00 3c       	jmp	$+2      	;abs 0x5b44
    5b44:	1c 42 f8 46 	mov	&0x46f8,r12	;0x46f8
    5b48:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5b4c:	82 4c f4 46 	mov	r12,	&0x46f4	;
    5b50:	1c 42 0e 53 	mov	&0x530e,r12	;0x530e
    5b54:	0c 93       	cmp	#0,	r12	;r3 As==00
    5b56:	0d 20       	jnz	$+28     	;abs 0x5b72
    5b58:	00 3c       	jmp	$+2      	;abs 0x5b5a
    5b5a:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5b5e:	0f 44       	mov	r4,	r15	;
    5b60:	2f 83       	decd	r15		;
    5b62:	2d 43       	mov	#2,	r13	;r3 As==10
    5b64:	b0 12 f0 69 	call	#27120		;#0x69f0
    5b68:	3f 40 4c 46 	mov	#17996,	r15	;#0x464c
    5b6c:	b0 12 90 68 	call	#26768		;#0x6890
    5b70:	0c 3c       	jmp	$+26     	;abs 0x5b8a
    5b72:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5b76:	0f 44       	mov	r4,	r15	;
    5b78:	2f 83       	decd	r15		;
    5b7a:	2d 43       	mov	#2,	r13	;r3 As==10
    5b7c:	b0 12 f0 69 	call	#27120		;#0x69f0
    5b80:	3f 40 22 46 	mov	#17954,	r15	;#0x4622
    5b84:	b0 12 90 68 	call	#26768		;#0x6890
    5b88:	00 3c       	jmp	$+2      	;abs 0x5b8a
    5b8a:	31 52       	add	#8,	r1	;r2 As==11
    5b8c:	34 41       	pop	r4		;
    5b8e:	30 41       	ret			

00005b90 <task_add_node>:
    5b90:	04 12       	push	r4		;
    5b92:	04 41       	mov	r1,	r4	;
    5b94:	31 80 0e 00 	sub	#14,	r1	;#0x000e
    5b98:	1c 42 04 53 	mov	&0x5304,r12	;0x5304
    5b9c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5ba0:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5ba4:	3e 40 06 00 	mov	#6,	r14	;
    5ba8:	0f 4c       	mov	r12,	r15	;
    5baa:	b0 12 f0 6b 	call	#27632		;#0x6bf0
    5bae:	0c 4f       	mov	r15,	r12	;
    5bb0:	3c 50 00 47 	add	#18176,	r12	;#0x4700
    5bb4:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5bb8:	1c 4f 02 47 	mov	18178(r15),r12	;0x04702
    5bbc:	0c 93       	cmp	#0,	r12	;r3 As==00
    5bbe:	15 24       	jz	$+44     	;abs 0x5bea
    5bc0:	00 3c       	jmp	$+2      	;abs 0x5bc2
    5bc2:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5bc6:	1c 4c 02 00 	mov	2(r12),	r12	;
    5bca:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5bce:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5bd2:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5bd6:	0f 44       	mov	r4,	r15	;
    5bd8:	2f 83       	decd	r15		;
    5bda:	2d 43       	mov	#2,	r13	;r3 As==10
    5bdc:	b0 12 f0 69 	call	#27120		;#0x69f0
    5be0:	3f 40 22 46 	mov	#17954,	r15	;#0x4622
    5be4:	b0 12 90 68 	call	#26768		;#0x6890
    5be8:	25 3c       	jmp	$+76     	;abs 0x5c34
    5bea:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5bee:	1d 4c 04 00 	mov	4(r12),	r13	;
    5bf2:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    5bf6:	1d 4c 02 00 	mov	2(r12),	r13	;
    5bfa:	84 4d f4 ff 	mov	r13,	-12(r4)	; 0xfff4
    5bfe:	2c 4c       	mov	@r12,	r12	;
    5c00:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    5c04:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    5c08:	82 4c 14 53 	mov	r12,	&0x5314	;
    5c0c:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    5c10:	82 4c 12 53 	mov	r12,	&0x5312	;
    5c14:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    5c18:	82 4c 10 53 	mov	r12,	&0x5310	;
    5c1c:	3e 40 04 53 	mov	#21252,	r14	;#0x5304
    5c20:	0f 44       	mov	r4,	r15	;
    5c22:	2f 83       	decd	r15		;
    5c24:	2d 43       	mov	#2,	r13	;r3 As==10
    5c26:	b0 12 f0 69 	call	#27120		;#0x69f0
    5c2a:	3f 40 4c 46 	mov	#17996,	r15	;#0x464c
    5c2e:	b0 12 90 68 	call	#26768		;#0x6890
    5c32:	00 3c       	jmp	$+2      	;abs 0x5c34
    5c34:	31 50 0e 00 	add	#14,	r1	;#0x000e
    5c38:	34 41       	pop	r4		;
    5c3a:	30 41       	ret			

00005c3c <task_add_insert>:
    5c3c:	04 12       	push	r4		;
    5c3e:	04 41       	mov	r1,	r4	;
    5c40:	31 80 1a 00 	sub	#26,	r1	;#0x001a
    5c44:	1c 42 00 53 	mov	&0x5300,r12	;0x5300
    5c48:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5c4c:	3c 90 00 02 	cmp	#512,	r12	;#0x0200
    5c50:	03 20       	jnz	$+8      	;abs 0x5c58
    5c52:	00 3c       	jmp	$+2      	;abs 0x5c54
    5c54:	00 3c       	jmp	$+2      	;abs 0x5c56
    5c56:	ff 3f       	jmp	$+0      	;abs 0x5c56
    5c58:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5c5c:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5c60:	1c 42 f8 46 	mov	&0x46f8,r12	;0x46f8
    5c64:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    5c68:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8
    5c6c:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa
    5c70:	1c 42 0a 53 	mov	&0x530a,r12	;0x530a
    5c74:	0c 93       	cmp	#0,	r12	;r3 As==00
    5c76:	27 20       	jnz	$+80     	;abs 0x5cc6
    5c78:	00 3c       	jmp	$+2      	;abs 0x5c7a
    5c7a:	1c 42 0a 53 	mov	&0x530a,r12	;0x530a
    5c7e:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    5c82:	1c 42 08 53 	mov	&0x5308,r12	;0x5308
    5c86:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    5c8a:	1c 42 06 53 	mov	&0x5306,r12	;0x5306
    5c8e:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    5c92:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5c96:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    5c9a:	1c 42 0c 53 	mov	&0x530c,r12	;0x530c
    5c9e:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    5ca2:	3e 40 06 00 	mov	#6,	r14	;
    5ca6:	0f 4c       	mov	r12,	r15	;
    5ca8:	b0 12 f0 6b 	call	#27632		;#0x6bf0
    5cac:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    5cb0:	8f 4c 04 47 	mov	r12,	18180(r15); 0x4704
    5cb4:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    5cb8:	8f 4c 02 47 	mov	r12,	18178(r15); 0x4702
    5cbc:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    5cc0:	8f 4c 00 47 	mov	r12,	18176(r15); 0x4700
    5cc4:	27 3c       	jmp	$+80     	;abs 0x5d14
    5cc6:	1c 42 04 53 	mov	&0x5304,r12	;0x5304
    5cca:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    5cce:	1c 42 14 53 	mov	&0x5314,r12	;0x5314
    5cd2:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    5cd6:	1c 42 12 53 	mov	&0x5312,r12	;0x5312
    5cda:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    5cde:	1c 42 10 53 	mov	&0x5310,r12	;0x5310
    5ce2:	84 4c e6 ff 	mov	r12,	-26(r4)	; 0xffe6
    5ce6:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5cea:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    5cee:	1f 44 ec ff 	mov	-20(r4),r15	;0xffffffec
    5cf2:	3e 40 06 00 	mov	#6,	r14	;
    5cf6:	b0 12 f0 6b 	call	#27632		;#0x6bf0
    5cfa:	1c 44 ea ff 	mov	-22(r4),r12	;0xffffffea
    5cfe:	8f 4c 04 47 	mov	r12,	18180(r15); 0x4704
    5d02:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    5d06:	8f 4c 02 47 	mov	r12,	18178(r15); 0x4702
    5d0a:	1c 44 e6 ff 	mov	-26(r4),r12	;0xffffffe6
    5d0e:	8f 4c 00 47 	mov	r12,	18176(r15); 0x4700
    5d12:	00 3c       	jmp	$+2      	;abs 0x5d14
    5d14:	1f 44 fc ff 	mov	-4(r4),	r15	;
    5d18:	3e 40 06 00 	mov	#6,	r14	;
    5d1c:	b0 12 f0 6b 	call	#27632		;#0x6bf0
    5d20:	1e 44 fa ff 	mov	-6(r4),	r14	;
    5d24:	8f 4e 04 47 	mov	r14,	18180(r15); 0x4704
    5d28:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    5d2c:	8f 4e 02 47 	mov	r14,	18178(r15); 0x4702
    5d30:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfffffff6
    5d34:	8f 4e 00 47 	mov	r14,	18176(r15); 0x4700
    5d38:	1e 42 0c 53 	mov	&0x530c,r14	;0x530c
    5d3c:	82 4e 16 53 	mov	r14,	&0x5316	;
    5d40:	1e 44 fe ff 	mov	-2(r4),	r14	;
    5d44:	1e 53       	inc	r14		;
    5d46:	84 4e fe ff 	mov	r14,	-2(r4)	; 0xfffe
    5d4a:	3e 40 00 53 	mov	#21248,	r14	;#0x5300
    5d4e:	0f 44       	mov	r4,	r15	;
    5d50:	2f 83       	decd	r15		;
    5d52:	2d 43       	mov	#2,	r13	;r3 As==10
    5d54:	b0 12 f0 69 	call	#27120		;#0x69f0
    5d58:	3f 40 76 46 	mov	#18038,	r15	;#0x4676
    5d5c:	b0 12 90 68 	call	#26768		;#0x6890
    5d60:	31 50 1a 00 	add	#26,	r1	;#0x001a
    5d64:	34 41       	pop	r4		;
    5d66:	30 41       	ret			

00005d68 <task_append_compressed>:
    5d68:	04 12       	push	r4		;
    5d6a:	04 41       	mov	r1,	r4	;
    5d6c:	31 80 06 00 	sub	#6,	r1	;
    5d70:	1c 42 f6 46 	mov	&0x46f6,r12	;0x46f6
    5d74:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5d78:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5d7c:	1d 42 16 53 	mov	&0x5316,r13	;0x5316
    5d80:	3e 40 06 00 	mov	#6,	r14	;
    5d84:	0f 4c       	mov	r12,	r15	;
    5d86:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    5d8a:	b0 12 f0 6b 	call	#27632		;#0x6bf0
    5d8e:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5d92:	8f 4c 18 53 	mov	r12,	21272(r15); 0x5318
    5d96:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5d9a:	1c 53       	inc	r12		;
    5d9c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5da0:	3c 90 40 00 	cmp	#64,	r12	;#0x0040
    5da4:	0d 20       	jnz	$+28     	;abs 0x5dc0
    5da6:	00 3c       	jmp	$+2      	;abs 0x5da8
    5da8:	3e 40 f6 46 	mov	#18166,	r14	;#0x46f6
    5dac:	0f 44       	mov	r4,	r15	;
    5dae:	2f 83       	decd	r15		;
    5db0:	2d 43       	mov	#2,	r13	;r3 As==10
    5db2:	b0 12 f0 69 	call	#27120		;#0x69f0
    5db6:	3f 40 a0 46 	mov	#18080,	r15	;#0x46a0
    5dba:	b0 12 90 68 	call	#26768		;#0x6890
    5dbe:	0c 3c       	jmp	$+26     	;abs 0x5dd8
    5dc0:	3e 40 f6 46 	mov	#18166,	r14	;#0x46f6
    5dc4:	0f 44       	mov	r4,	r15	;
    5dc6:	2f 83       	decd	r15		;
    5dc8:	2d 43       	mov	#2,	r13	;r3 As==10
    5dca:	b0 12 f0 69 	call	#27120		;#0x69f0
    5dce:	3f 40 50 45 	mov	#17744,	r15	;#0x4550
    5dd2:	b0 12 90 68 	call	#26768		;#0x6890
    5dd6:	00 3c       	jmp	$+2      	;abs 0x5dd8
    5dd8:	31 50 06 00 	add	#6,	r1	;
    5ddc:	34 41       	pop	r4		;
    5dde:	30 41       	ret			

00005de0 <task_print>:
    5de0:	04 12       	push	r4		;
    5de2:	04 41       	mov	r1,	r4	;
    5de4:	31 80 14 00 	sub	#20,	r1	;#0x0014
    5de8:	0c 41       	mov	r1,	r12	;
    5dea:	bc 40 0e 44 	mov	#17422,	0(r12)	;#0x440e
    5dee:	00 00 
    5df0:	b0 12 bc 62 	call	#25276		;#0x62bc
    5df4:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    5df8:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    5dfc:	00 3c       	jmp	$+2      	;abs 0x5dfe
    5dfe:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5e02:	3c 90 40 00 	cmp	#64,	r12	;#0x0040
    5e06:	31 2c       	jc	$+100    	;abs 0x5e6a
    5e08:	00 3c       	jmp	$+2      	;abs 0x5e0a
    5e0a:	1f 44 fe ff 	mov	-2(r4),	r15	;
    5e0e:	3e 40 06 00 	mov	#6,	r14	;
    5e12:	b0 12 f0 6b 	call	#27632		;#0x6bf0
    5e16:	1e 4f 18 53 	mov	21272(r15),r14	;0x05318
    5e1a:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    5e1e:	0f 41       	mov	r1,	r15	;
    5e20:	8f 4e 02 00 	mov	r14,	2(r15)	;
    5e24:	bf 40 22 44 	mov	#17442,	0(r15)	;#0x4422
    5e28:	00 00 
    5e2a:	b0 12 bc 62 	call	#25276		;#0x62bc
    5e2e:	1e 44 fe ff 	mov	-2(r4),	r14	;
    5e32:	0e 93       	cmp	#0,	r14	;r3 As==00
    5e34:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    5e38:	11 24       	jz	$+36     	;abs 0x5e5c
    5e3a:	00 3c       	jmp	$+2      	;abs 0x5e3c
    5e3c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5e40:	1c 53       	inc	r12		;
    5e42:	3c b0 07 00 	bit	#7,	r12	;
    5e46:	0a 20       	jnz	$+22     	;abs 0x5e5c
    5e48:	00 3c       	jmp	$+2      	;abs 0x5e4a
    5e4a:	0c 41       	mov	r1,	r12	;
    5e4c:	bc 40 1f 44 	mov	#17439,	0(r12)	;#0x441f
    5e50:	00 00 
    5e52:	b0 12 bc 62 	call	#25276		;#0x62bc
    5e56:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    5e5a:	00 3c       	jmp	$+2      	;abs 0x5e5c
    5e5c:	00 3c       	jmp	$+2      	;abs 0x5e5e
    5e5e:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5e62:	1c 53       	inc	r12		;
    5e64:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5e68:	ca 3f       	jmp	$-106    	;abs 0x5dfe
    5e6a:	0c 41       	mov	r1,	r12	;
    5e6c:	bc 40 1f 44 	mov	#17439,	0(r12)	;#0x441f
    5e70:	00 00 
    5e72:	b0 12 bc 62 	call	#25276		;#0x62bc
    5e76:	1c 42 fe 46 	mov	&0x46fe,r12	;0x46fe
    5e7a:	0d 41       	mov	r1,	r13	;
    5e7c:	8d 4c 02 00 	mov	r12,	2(r13)	;
    5e80:	bd 40 40 00 	mov	#64,	4(r13)	;#0x0040
    5e84:	04 00 
    5e86:	bd 40 28 44 	mov	#17448,	0(r13)	;#0x4428
    5e8a:	00 00 
    5e8c:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    5e90:	b0 12 bc 62 	call	#25276		;#0x62bc
    5e94:	3c 40 ca 46 	mov	#18122,	r12	;#0x46ca
    5e98:	84 4f f2 ff 	mov	r15,	-14(r4)	; 0xfff2
    5e9c:	0f 4c       	mov	r12,	r15	;
    5e9e:	b0 12 90 68 	call	#26768		;#0x6890
    5ea2:	31 50 14 00 	add	#20,	r1	;#0x0014
    5ea6:	34 41       	pop	r4		;
    5ea8:	30 41       	ret			
	...

00005eac <task_done>:
    5eac:	04 12       	push	r4		;
    5eae:	04 41       	mov	r1,	r4	;
    5eb0:	31 80 32 00 	sub	#50,	r1	;#0x0032
    5eb4:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    5eb8:	0c 41       	mov	r1,	r12	;
    5eba:	bc 40 2a 00 	mov	#42,	4(r12)	;#0x002a
    5ebe:	04 00 
    5ec0:	9c 43 02 00 	mov	#1,	2(r12)	;r3 As==01
    5ec4:	bc 40 45 44 	mov	#17477,	0(r12)	;#0x4445
    5ec8:	00 00 
    5eca:	b0 12 bc 62 	call	#25276		;#0x62bc
    5ece:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5ed2:	3c 50 f8 01 	add	#504,	r12	;#0x01f8
    5ed6:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5eda:	0c 41       	mov	r1,	r12	;
    5edc:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5ee0:	9c 43 02 00 	mov	#1,	2(r12)	;r3 As==01
    5ee4:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5ee8:	00 00 
    5eea:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    5eee:	b0 12 bc 62 	call	#25276		;#0x62bc
    5ef2:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5ef6:	2c 53       	incd	r12		;
    5ef8:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5efc:	0c 41       	mov	r1,	r12	;
    5efe:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5f02:	ac 43 02 00 	mov	#2,	2(r12)	;r3 As==10
    5f06:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5f0a:	00 00 
    5f0c:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    5f10:	b0 12 bc 62 	call	#25276		;#0x62bc
    5f14:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f18:	2c 53       	incd	r12		;
    5f1a:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f1e:	0c 41       	mov	r1,	r12	;
    5f20:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5f24:	bc 40 03 00 	mov	#3,	2(r12)	;
    5f28:	02 00 
    5f2a:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5f2e:	00 00 
    5f30:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    5f34:	b0 12 bc 62 	call	#25276		;#0x62bc
    5f38:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f3c:	2c 53       	incd	r12		;
    5f3e:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f42:	0c 41       	mov	r1,	r12	;
    5f44:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5f48:	ac 42 02 00 	mov	#4,	2(r12)	;r2 As==10
    5f4c:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5f50:	00 00 
    5f52:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    5f56:	b0 12 bc 62 	call	#25276		;#0x62bc
    5f5a:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f5e:	2c 53       	incd	r12		;
    5f60:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f64:	0c 41       	mov	r1,	r12	;
    5f66:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5f6a:	bc 40 05 00 	mov	#5,	2(r12)	;
    5f6e:	02 00 
    5f70:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5f74:	00 00 
    5f76:	84 4f f2 ff 	mov	r15,	-14(r4)	; 0xfff2
    5f7a:	b0 12 bc 62 	call	#25276		;#0x62bc
    5f7e:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f82:	2c 53       	incd	r12		;
    5f84:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f88:	0c 41       	mov	r1,	r12	;
    5f8a:	bc 40 00 0c 	mov	#3072,	4(r12)	;#0x0c00
    5f8e:	04 00 
    5f90:	bc 40 06 00 	mov	#6,	2(r12)	;
    5f94:	02 00 
    5f96:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5f9a:	00 00 
    5f9c:	84 4f f0 ff 	mov	r15,	-16(r4)	; 0xfff0
    5fa0:	b0 12 bc 62 	call	#25276		;#0x62bc
    5fa4:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5fa8:	3c 50 00 0c 	add	#3072,	r12	;#0x0c00
    5fac:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5fb0:	0c 41       	mov	r1,	r12	;
    5fb2:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5fb6:	bc 40 07 00 	mov	#7,	2(r12)	;
    5fba:	02 00 
    5fbc:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5fc0:	00 00 
    5fc2:	84 4f ee ff 	mov	r15,	-18(r4)	; 0xffee
    5fc6:	b0 12 bc 62 	call	#25276		;#0x62bc
    5fca:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5fce:	2c 53       	incd	r12		;
    5fd0:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5fd4:	0c 41       	mov	r1,	r12	;
    5fd6:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5fda:	bc 42 02 00 	mov	#8,	2(r12)	;r2 As==11
    5fde:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    5fe2:	00 00 
    5fe4:	84 4f ec ff 	mov	r15,	-20(r4)	; 0xffec
    5fe8:	b0 12 bc 62 	call	#25276		;#0x62bc
    5fec:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5ff0:	2c 53       	incd	r12		;
    5ff2:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5ff6:	0c 41       	mov	r1,	r12	;
    5ff8:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5ffc:	bc 40 09 00 	mov	#9,	2(r12)	;
    6000:	02 00 
    6002:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    6006:	00 00 
    6008:	84 4f ea ff 	mov	r15,	-22(r4)	; 0xffea
    600c:	b0 12 bc 62 	call	#25276		;#0x62bc
    6010:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6014:	2c 53       	incd	r12		;
    6016:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    601a:	0c 41       	mov	r1,	r12	;
    601c:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    6020:	bc 40 0b 00 	mov	#11,	2(r12)	;#0x000b
    6024:	02 00 
    6026:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    602a:	00 00 
    602c:	84 4f e8 ff 	mov	r15,	-24(r4)	; 0xffe8
    6030:	b0 12 bc 62 	call	#25276		;#0x62bc
    6034:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6038:	2c 53       	incd	r12		;
    603a:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    603e:	0c 41       	mov	r1,	r12	;
    6040:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    6044:	bc 40 0c 00 	mov	#12,	2(r12)	;#0x000c
    6048:	02 00 
    604a:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    604e:	00 00 
    6050:	84 4f e6 ff 	mov	r15,	-26(r4)	; 0xffe6
    6054:	b0 12 bc 62 	call	#25276		;#0x62bc
    6058:	1c 44 fe ff 	mov	-2(r4),	r12	;
    605c:	2c 53       	incd	r12		;
    605e:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    6062:	0c 41       	mov	r1,	r12	;
    6064:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    6068:	bc 40 0d 00 	mov	#13,	2(r12)	;#0x000d
    606c:	02 00 
    606e:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    6072:	00 00 
    6074:	84 4f e4 ff 	mov	r15,	-28(r4)	; 0xffe4
    6078:	b0 12 bc 62 	call	#25276		;#0x62bc
    607c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6080:	2c 53       	incd	r12		;
    6082:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    6086:	0c 41       	mov	r1,	r12	;
    6088:	bc 40 06 00 	mov	#6,	4(r12)	;
    608c:	04 00 
    608e:	bc 40 0e 00 	mov	#14,	2(r12)	;#0x000e
    6092:	02 00 
    6094:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    6098:	00 00 
    609a:	84 4f e2 ff 	mov	r15,	-30(r4)	; 0xffe2
    609e:	b0 12 bc 62 	call	#25276		;#0x62bc
    60a2:	1c 44 fe ff 	mov	-2(r4),	r12	;
    60a6:	3c 50 06 00 	add	#6,	r12	;
    60aa:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    60ae:	0c 41       	mov	r1,	r12	;
    60b0:	bc 40 80 01 	mov	#384,	4(r12)	;#0x0180
    60b4:	04 00 
    60b6:	bc 40 0f 00 	mov	#15,	2(r12)	;#0x000f
    60ba:	02 00 
    60bc:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    60c0:	00 00 
    60c2:	84 4f e0 ff 	mov	r15,	-32(r4)	; 0xffe0
    60c6:	b0 12 bc 62 	call	#25276		;#0x62bc
    60ca:	1c 44 fe ff 	mov	-2(r4),	r12	;
    60ce:	3c 50 80 01 	add	#384,	r12	;#0x0180
    60d2:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    60d6:	0c 41       	mov	r1,	r12	;
    60d8:	bc 40 06 00 	mov	#6,	4(r12)	;
    60dc:	04 00 
    60de:	bc 40 10 00 	mov	#16,	2(r12)	;#0x0010
    60e2:	02 00 
    60e4:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    60e8:	00 00 
    60ea:	84 4f de ff 	mov	r15,	-34(r4)	; 0xffde
    60ee:	b0 12 bc 62 	call	#25276		;#0x62bc
    60f2:	1c 44 fe ff 	mov	-2(r4),	r12	;
    60f6:	3c 50 06 00 	add	#6,	r12	;
    60fa:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    60fe:	0c 41       	mov	r1,	r12	;
    6100:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    6104:	bc 40 11 00 	mov	#17,	2(r12)	;#0x0011
    6108:	02 00 
    610a:	bc 40 5b 44 	mov	#17499,	0(r12)	;#0x445b
    610e:	00 00 
    6110:	84 4f dc ff 	mov	r15,	-36(r4)	; 0xffdc
    6114:	b0 12 bc 62 	call	#25276		;#0x62bc
    6118:	1c 44 fe ff 	mov	-2(r4),	r12	;
    611c:	2c 53       	incd	r12		;
    611e:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    6122:	0c 41       	mov	r1,	r12	;
    6124:	bc 40 42 00 	mov	#66,	2(r12)	;#0x0042
    6128:	02 00 
    612a:	bc 40 74 44 	mov	#17524,	0(r12)	;#0x4474
    612e:	00 00 
    6130:	84 4f da ff 	mov	r15,	-38(r4)	; 0xffda
    6134:	b0 12 bc 62 	call	#25276		;#0x62bc
    6138:	1c 44 fe ff 	mov	-2(r4),	r12	;
    613c:	3c 50 42 00 	add	#66,	r12	;#0x0042
    6140:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    6144:	0c 41       	mov	r1,	r12	;
    6146:	ac 43 02 00 	mov	#2,	2(r12)	;r3 As==10
    614a:	bc 40 8c 44 	mov	#17548,	0(r12)	;#0x448c
    614e:	00 00 
    6150:	84 4f d8 ff 	mov	r15,	-40(r4)	; 0xffd8
    6154:	b0 12 bc 62 	call	#25276		;#0x62bc
    6158:	1c 44 fe ff 	mov	-2(r4),	r12	;
    615c:	2c 53       	incd	r12		;
    615e:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    6162:	0d 41       	mov	r1,	r13	;
    6164:	8d 4c 02 00 	mov	r12,	2(r13)	;
    6168:	bd 40 a8 44 	mov	#17576,	0(r13)	;#0x44a8
    616c:	00 00 
    616e:	84 4f d6 ff 	mov	r15,	-42(r4)	; 0xffd6
    6172:	b0 12 bc 62 	call	#25276		;#0x62bc
    6176:	84 4f d4 ff 	mov	r15,	-44(r4)	; 0xffd4
    617a:	31 50 32 00 	add	#50,	r1	;#0x0032
    617e:	34 41       	pop	r4		;
    6180:	30 41       	ret			
	...

00006184 <_entry_task>:
    6184:	04 12       	push	r4		;
    6186:	04 41       	mov	r1,	r4	;
    6188:	3f 40 fc 44 	mov	#17660,	r15	;#0x44fc
    618c:	b0 12 90 68 	call	#26768		;#0x6890
    6190:	34 41       	pop	r4		;
    6192:	30 41       	ret			

00006194 <_init>:
    6194:	04 12       	push	r4		;
    6196:	04 41       	mov	r1,	r4	;
    6198:	b0 12 2c 57 	call	#22316		;#0x572c
    619c:	34 41       	pop	r4		;
    619e:	30 41       	ret			

000061a0 <init_hw>:
    61a0:	04 12       	push	r4		;
    61a2:	04 41       	mov	r1,	r4	;
    61a4:	b0 12 08 62 	call	#25096		;#0x6208
    61a8:	1c 42 30 01 	mov	&0x0130,r12	;0x0130
    61ac:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    61b0:	82 4c 30 01 	mov	r12,	&0x0130	;
    61b4:	b0 12 9c 62 	call	#25244		;#0x629c
    61b8:	34 41       	pop	r4		;
    61ba:	30 41       	ret			

000061bc <acquire_sample>:
    61bc:	04 12       	push	r4		;
    61be:	04 41       	mov	r1,	r4	;
    61c0:	31 80 06 00 	sub	#6,	r1	;
    61c4:	0c 4f       	mov	r15,	r12	;
    61c6:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    61ca:	1f 53       	inc	r15		;
    61cc:	3f f0 03 00 	and	#3,	r15	;
    61d0:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    61d4:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    61d8:	31 50 06 00 	add	#6,	r1	;
    61dc:	34 41       	pop	r4		;
    61de:	30 41       	ret			

000061e0 <msp_watchdog_enable>:
    61e0:	04 12       	push	r4		;
    61e2:	04 41       	mov	r1,	r4	;
    61e4:	21 83       	decd	r1		;
    61e6:	4c 4f       	mov.b	r15,	r12	;
    61e8:	c4 4c ff ff 	mov.b	r12,	-1(r4)	; 0xffff
    61ec:	5f 44 ff ff 	mov.b	-1(r4),	r15	;
    61f0:	3f d0 08 5a 	bis	#23048,	r15	;#0x5a08
    61f4:	82 4f 5c 01 	mov	r15,	&0x015c	;
    61f8:	5c 44 ff ff 	mov.b	-1(r4),	r12	;
    61fc:	c2 4c 20 1c 	mov.b	r12,	&0x1c20	;
    6200:	21 53       	incd	r1		;
    6202:	34 41       	pop	r4		;
    6204:	30 41       	ret			
	...

00006208 <msp_watchdog_disable>:
    6208:	04 12       	push	r4		;
    620a:	04 41       	mov	r1,	r4	;
    620c:	b2 40 80 5a 	mov	#23168,	&0x015c	;#0x5a80
    6210:	5c 01 
    6212:	34 41       	pop	r4		;
    6214:	30 41       	ret			
	...

00006218 <msp_watchdog_kick>:
    6218:	04 12       	push	r4		;
    621a:	04 41       	mov	r1,	r4	;
    621c:	5c 42 20 1c 	mov.b	&0x1c20,r12	;0x1c20
    6220:	3c d0 08 5a 	bis	#23048,	r12	;#0x5a08
    6224:	82 4c 5c 01 	mov	r12,	&0x015c	;
    6228:	34 41       	pop	r4		;
    622a:	30 41       	ret			

0000622c <memcpy>:
    622c:	04 12       	push	r4		;
    622e:	04 41       	mov	r1,	r4	;
    6230:	0b 12       	push	r11		;
    6232:	0a 12       	push	r10		;
    6234:	31 80 0e 00 	sub	#14,	r1	;#0x000e
    6238:	0c 4d       	mov	r13,	r12	;
    623a:	0b 4e       	mov	r14,	r11	;
    623c:	0a 4f       	mov	r15,	r10	;
    623e:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    6242:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    6246:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    624a:	84 43 f4 ff 	mov	#0,	-12(r4)	;r3 As==00, 0xfff4
    624e:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    6252:	84 4b f0 ff 	mov	r11,	-16(r4)	; 0xfff0
    6256:	84 4a ee ff 	mov	r10,	-18(r4)	; 0xffee
    625a:	00 3c       	jmp	$+2      	;abs 0x625c
    625c:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6260:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    6264:	0c 9d       	cmp	r13,	r12	;
    6266:	12 2c       	jc	$+38     	;abs 0x628c
    6268:	00 3c       	jmp	$+2      	;abs 0x626a
    626a:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    626e:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    6272:	0c 5d       	add	r13,	r12	;
    6274:	6e 4c       	mov.b	@r12,	r14	;
    6276:	1c 44 fa ff 	mov	-6(r4),	r12	;
    627a:	0c 5d       	add	r13,	r12	;
    627c:	cc 4e 00 00 	mov.b	r14,	0(r12)	;
    6280:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6284:	1c 53       	inc	r12		;
    6286:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    628a:	e8 3f       	jmp	$-46     	;abs 0x625c
    628c:	1f 44 fa ff 	mov	-6(r4),	r15	;
    6290:	31 50 0e 00 	add	#14,	r1	;#0x000e
    6294:	3a 41       	pop	r10		;
    6296:	3b 41       	pop	r11		;
    6298:	34 41       	pop	r4		;
    629a:	30 41       	ret			

0000629c <msp_clock_setup>:
    629c:	04 12       	push	r4		;
    629e:	04 41       	mov	r1,	r4	;
    62a0:	f2 40 a5 ff 	mov.b	#65445,	&0x0161	;#0xffa5
    62a4:	61 01 
    62a6:	b2 40 0c 00 	mov	#12,	&0x0162	;#0x000c
    62aa:	62 01 
    62ac:	b2 40 33 00 	mov	#51,	&0x0164	;#0x0033
    62b0:	64 01 
    62b2:	82 43 66 01 	mov	#0,	&0x0166	;r3 As==00
    62b6:	34 41       	pop	r4		;
    62b8:	30 41       	ret			
	...

000062bc <printf>:
    62bc:	04 12       	push	r4		;
    62be:	04 41       	mov	r1,	r4	;
    62c0:	31 80 20 00 	sub	#32,	r1	;#0x0020
    62c4:	1c 44 04 00 	mov	4(r4),	r12	;
    62c8:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    62cc:	0c 44       	mov	r4,	r12	;
    62ce:	3c 50 06 00 	add	#6,	r12	;
    62d2:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    62d6:	00 3c       	jmp	$+2      	;abs 0x62d8
    62d8:	1c 44 fc ff 	mov	-4(r4),	r12	;
    62dc:	0d 4c       	mov	r12,	r13	;
    62de:	1d 53       	inc	r13		;
    62e0:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    62e4:	6e 4c       	mov.b	@r12,	r14	;
    62e6:	c4 4e fb ff 	mov.b	r14,	-5(r4)	; 0xfffb
    62ea:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    62ec:	02 20       	jnz	$+6      	;abs 0x62f2
    62ee:	52 3d       	jmp	$+678    	;abs 0x6594
    62f0:	00 3c       	jmp	$+2      	;abs 0x62f2
    62f2:	5c 44 fb ff 	mov.b	-5(r4),	r12	;
    62f6:	7c 90 25 00 	cmp.b	#37,	r12	;#0x0025
    62fa:	02 24       	jz	$+6      	;abs 0x6300
    62fc:	40 3d       	jmp	$+642    	;abs 0x657e
    62fe:	00 3c       	jmp	$+2      	;abs 0x6300
    6300:	84 43 f2 ff 	mov	#0,	-14(r4)	;r3 As==00, 0xfff2
    6304:	00 3c       	jmp	$+2      	;abs 0x6306
    6306:	1c 44 fc ff 	mov	-4(r4),	r12	;
    630a:	0d 4c       	mov	r12,	r13	;
    630c:	1d 53       	inc	r13		;
    630e:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    6312:	6c 4c       	mov.b	@r12,	r12	;
    6314:	8c 11       	sxt	r12		;
    6316:	4e 4c       	mov.b	r12,	r14	;
    6318:	c4 4e fb ff 	mov.b	r14,	-5(r4)	; 0xfffb
    631c:	0c 93       	cmp	#0,	r12	;r3 As==00
    631e:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    6322:	02 20       	jnz	$+6      	;abs 0x6328
    6324:	27 3d       	jmp	$+592    	;abs 0x6574
    6326:	00 3c       	jmp	$+2      	;abs 0x6328
    6328:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    632c:	3c 90 30 00 	cmp	#48,	r12	;#0x0030
    6330:	02 20       	jnz	$+6      	;abs 0x6336
    6332:	0f 3d       	jmp	$+544    	;abs 0x6552
    6334:	00 3c       	jmp	$+2      	;abs 0x6336
    6336:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    633a:	3c 90 63 00 	cmp	#99,	r12	;#0x0063
    633e:	34 24       	jz	$+106    	;abs 0x63a8
    6340:	00 3c       	jmp	$+2      	;abs 0x6342
    6342:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6346:	3c 90 69 00 	cmp	#105,	r12	;#0x0069
    634a:	3d 24       	jz	$+124    	;abs 0x63c6
    634c:	00 3c       	jmp	$+2      	;abs 0x634e
    634e:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6352:	3c 90 6c 00 	cmp	#108,	r12	;#0x006c
    6356:	66 24       	jz	$+206    	;abs 0x6424
    6358:	00 3c       	jmp	$+2      	;abs 0x635a
    635a:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    635e:	3c 90 6e 00 	cmp	#110,	r12	;#0x006e
    6362:	60 24       	jz	$+194    	;abs 0x6424
    6364:	00 3c       	jmp	$+2      	;abs 0x6366
    6366:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    636a:	3c 90 73 00 	cmp	#115,	r12	;#0x0073
    636e:	0d 24       	jz	$+28     	;abs 0x638a
    6370:	00 3c       	jmp	$+2      	;abs 0x6372
    6372:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6376:	3c 90 75 00 	cmp	#117,	r12	;#0x0075
    637a:	25 24       	jz	$+76     	;abs 0x63c6
    637c:	00 3c       	jmp	$+2      	;abs 0x637e
    637e:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6382:	3c 90 78 00 	cmp	#120,	r12	;#0x0078
    6386:	8a 24       	jz	$+278    	;abs 0x649c
    6388:	f8 3c       	jmp	$+498    	;abs 0x657a
    638a:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    638e:	1c 53       	inc	r12		;
    6390:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    6394:	0d 4c       	mov	r12,	r13	;
    6396:	2d 53       	incd	r13		;
    6398:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    639c:	2f 4c       	mov	@r12,	r15	;
    639e:	b0 12 60 67 	call	#26464		;#0x6760
    63a2:	84 4f ea ff 	mov	r15,	-22(r4)	; 0xffea
    63a6:	ea 3c       	jmp	$+470    	;abs 0x657c
    63a8:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    63ac:	1c 53       	inc	r12		;
    63ae:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    63b2:	0d 4c       	mov	r12,	r13	;
    63b4:	2d 53       	incd	r13		;
    63b6:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    63ba:	2f 4c       	mov	@r12,	r15	;
    63bc:	b0 12 2c 67 	call	#26412		;#0x672c
    63c0:	84 4f e8 ff 	mov	r15,	-24(r4)	; 0xffe8
    63c4:	db 3c       	jmp	$+440    	;abs 0x657c
    63c6:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    63ca:	1c 53       	inc	r12		;
    63cc:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    63d0:	0d 4c       	mov	r12,	r13	;
    63d2:	2d 53       	incd	r13		;
    63d4:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    63d8:	2c 4c       	mov	@r12,	r12	;
    63da:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    63de:	5e 44 fb ff 	mov.b	-5(r4),	r14	;
    63e2:	7e 90 69 00 	cmp.b	#105,	r14	;#0x0069
    63e6:	13 20       	jnz	$+40     	;abs 0x640e
    63e8:	00 3c       	jmp	$+2      	;abs 0x63ea
    63ea:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    63ee:	0c 93       	cmp	#0,	r12	;r3 As==00
    63f0:	0e 34       	jge	$+30     	;abs 0x640e
    63f2:	00 3c       	jmp	$+2      	;abs 0x63f4
    63f4:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    63f8:	0d 43       	clr	r13		;
    63fa:	0d 8c       	sub	r12,	r13	;
    63fc:	84 4d f8 ff 	mov	r13,	-8(r4)	; 0xfff8
    6400:	3f 40 2d 00 	mov	#45,	r15	;#0x002d
    6404:	b0 12 2c 67 	call	#26412		;#0x672c
    6408:	84 4f e6 ff 	mov	r15,	-26(r4)	; 0xffe6
    640c:	00 3c       	jmp	$+2      	;abs 0x640e
    640e:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    6412:	3c 40 14 00 	mov	#20,	r12	;#0x0014
    6416:	3c 50 b4 44 	add	#17588,	r12	;#0x44b4
    641a:	0f 43       	clr	r15		;
    641c:	0d 4c       	mov	r12,	r13	;
    641e:	b0 12 a8 65 	call	#26024		;#0x65a8
    6422:	ac 3c       	jmp	$+346    	;abs 0x657c
    6424:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    6428:	1c 53       	inc	r12		;
    642a:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    642e:	0d 4c       	mov	r12,	r13	;
    6430:	2d 53       	incd	r13		;
    6432:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    6436:	2c 4c       	mov	@r12,	r12	;
    6438:	1d 44 ee ff 	mov	-18(r4),r13	;0xffffffee
    643c:	0e 4d       	mov	r13,	r14	;
    643e:	2e 53       	incd	r14		;
    6440:	84 4e ee ff 	mov	r14,	-18(r4)	; 0xffee
    6444:	2d 4d       	mov	@r13,	r13	;
    6446:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    644a:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    644e:	5f 44 fb ff 	mov.b	-5(r4),	r15	;
    6452:	7f 90 6c 00 	cmp.b	#108,	r15	;#0x006c
    6456:	19 20       	jnz	$+52     	;abs 0x648a
    6458:	00 3c       	jmp	$+2      	;abs 0x645a
    645a:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    645e:	0c 93       	cmp	#0,	r12	;r3 As==00
    6460:	14 34       	jge	$+42     	;abs 0x648a
    6462:	00 3c       	jmp	$+2      	;abs 0x6464
    6464:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6468:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    646c:	0e 43       	clr	r14		;
    646e:	0f 4e       	mov	r14,	r15	;
    6470:	0f 8c       	sub	r12,	r15	;
    6472:	0e 7d       	subc	r13,	r14	;
    6474:	84 4e f6 ff 	mov	r14,	-10(r4)	; 0xfff6
    6478:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    647c:	3f 40 2d 00 	mov	#45,	r15	;#0x002d
    6480:	b0 12 2c 67 	call	#26412		;#0x672c
    6484:	84 4f e4 ff 	mov	r15,	-28(r4)	; 0xffe4
    6488:	00 3c       	jmp	$+2      	;abs 0x648a
    648a:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfffffff6
    648e:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfffffff4
    6492:	3d 40 b4 44 	mov	#17588,	r13	;#0x44b4
    6496:	b0 12 a8 65 	call	#26024		;#0x65a8
    649a:	70 3c       	jmp	$+226    	;abs 0x657c
    649c:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    64a0:	1c 53       	inc	r12		;
    64a2:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    64a6:	0d 4c       	mov	r12,	r13	;
    64a8:	2d 53       	incd	r13		;
    64aa:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    64ae:	2c 4c       	mov	@r12,	r12	;
    64b0:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    64b4:	0c 11       	rra	r12		;
    64b6:	0c 11       	rra	r12		;
    64b8:	0c 11       	rra	r12		;
    64ba:	0c 11       	rra	r12		;
    64bc:	0c 11       	rra	r12		;
    64be:	0c 11       	rra	r12		;
    64c0:	0c 11       	rra	r12		;
    64c2:	0c 11       	rra	r12		;
    64c4:	0c 11       	rra	r12		;
    64c6:	0c 11       	rra	r12		;
    64c8:	0c 11       	rra	r12		;
    64ca:	0c 11       	rra	r12		;
    64cc:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    64d0:	0c 93       	cmp	#0,	r12	;r3 As==00
    64d2:	06 20       	jnz	$+14     	;abs 0x64e0
    64d4:	00 3c       	jmp	$+2      	;abs 0x64d6
    64d6:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    64da:	2c 92       	cmp	#4,	r12	;r2 As==10
    64dc:	06 38       	jl	$+14     	;abs 0x64ea
    64de:	00 3c       	jmp	$+2      	;abs 0x64e0
    64e0:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfffffff0
    64e4:	b0 12 f4 66 	call	#26356		;#0x66f4
    64e8:	00 3c       	jmp	$+2      	;abs 0x64ea
    64ea:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    64ee:	0c 11       	rra	r12		;
    64f0:	0c 11       	rra	r12		;
    64f2:	0c 11       	rra	r12		;
    64f4:	0c 11       	rra	r12		;
    64f6:	0c 11       	rra	r12		;
    64f8:	0c 11       	rra	r12		;
    64fa:	0c 11       	rra	r12		;
    64fc:	0c 11       	rra	r12		;
    64fe:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    6502:	0c 93       	cmp	#0,	r12	;r3 As==00
    6504:	07 20       	jnz	$+16     	;abs 0x6514
    6506:	00 3c       	jmp	$+2      	;abs 0x6508
    6508:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    650c:	3c 90 03 00 	cmp	#3,	r12	;
    6510:	06 38       	jl	$+14     	;abs 0x651e
    6512:	00 3c       	jmp	$+2      	;abs 0x6514
    6514:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfffffff0
    6518:	b0 12 f4 66 	call	#26356		;#0x66f4
    651c:	00 3c       	jmp	$+2      	;abs 0x651e
    651e:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6522:	0c 11       	rra	r12		;
    6524:	0c 11       	rra	r12		;
    6526:	0c 11       	rra	r12		;
    6528:	0c 11       	rra	r12		;
    652a:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    652e:	0c 93       	cmp	#0,	r12	;r3 As==00
    6530:	06 20       	jnz	$+14     	;abs 0x653e
    6532:	00 3c       	jmp	$+2      	;abs 0x6534
    6534:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6538:	2c 93       	cmp	#2,	r12	;r3 As==10
    653a:	06 38       	jl	$+14     	;abs 0x6548
    653c:	00 3c       	jmp	$+2      	;abs 0x653e
    653e:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfffffff0
    6542:	b0 12 f4 66 	call	#26356		;#0x66f4
    6546:	00 3c       	jmp	$+2      	;abs 0x6548
    6548:	1f 44 f8 ff 	mov	-8(r4),	r15	;
    654c:	b0 12 f4 66 	call	#26356		;#0x66f4
    6550:	15 3c       	jmp	$+44     	;abs 0x657c
    6552:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6556:	0d 4c       	mov	r12,	r13	;
    6558:	1d 53       	inc	r13		;
    655a:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    655e:	6e 4c       	mov.b	@r12,	r14	;
    6560:	c4 4e fb ff 	mov.b	r14,	-5(r4)	; 0xfffb
    6564:	5c 44 fb ff 	mov.b	-5(r4),	r12	;
    6568:	8c 11       	sxt	r12		;
    656a:	3c 50 d0 ff 	add	#65488,	r12	;#0xffd0
    656e:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    6572:	c9 3e       	jmp	$-620    	;abs 0x6306
    6574:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    6578:	10 3c       	jmp	$+34     	;abs 0x659a
    657a:	02 3c       	jmp	$+6      	;abs 0x6580
    657c:	0a 3c       	jmp	$+22     	;abs 0x6592
    657e:	00 3c       	jmp	$+2      	;abs 0x6580
    6580:	5c 44 fb ff 	mov.b	-5(r4),	r12	;
    6584:	8c 11       	sxt	r12		;
    6586:	0f 4c       	mov	r12,	r15	;
    6588:	b0 12 2c 67 	call	#26412		;#0x672c
    658c:	84 4f e2 ff 	mov	r15,	-30(r4)	; 0xffe2
    6590:	00 3c       	jmp	$+2      	;abs 0x6592
    6592:	a2 3e       	jmp	$-698    	;abs 0x62d8
    6594:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    6598:	00 3c       	jmp	$+2      	;abs 0x659a
    659a:	1f 44 fe ff 	mov	-2(r4),	r15	;
    659e:	31 50 20 00 	add	#32,	r1	;#0x0020
    65a2:	34 41       	pop	r4		;
    65a4:	30 41       	ret			
	...

000065a8 <xtoa>:
    65a8:	04 12       	push	r4		;
    65aa:	04 41       	mov	r1,	r4	;
    65ac:	0b 12       	push	r11		;
    65ae:	0a 12       	push	r10		;
    65b0:	09 12       	push	r9		;
    65b2:	31 80 22 00 	sub	#34,	r1	;#0x0022
    65b6:	0c 4f       	mov	r15,	r12	;
    65b8:	0b 4e       	mov	r14,	r11	;
    65ba:	0a 4d       	mov	r13,	r10	;
    65bc:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    65c0:	84 4e f4 ff 	mov	r14,	-12(r4)	; 0xfff4
    65c4:	84 4d f2 ff 	mov	r13,	-14(r4)	; 0xfff2
    65c8:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    65cc:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfffffff4
    65d0:	0e dd       	bis	r13,	r14	;
    65d2:	0e 93       	cmp	#0,	r14	;r3 As==00
    65d4:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    65d8:	84 4a e8 ff 	mov	r10,	-24(r4)	; 0xffe8
    65dc:	84 4b e6 ff 	mov	r11,	-26(r4)	; 0xffe6
    65e0:	7a 24       	jz	$+246    	;abs 0x66d6
    65e2:	00 3c       	jmp	$+2      	;abs 0x65e4
    65e4:	00 3c       	jmp	$+2      	;abs 0x65e6
    65e6:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    65ea:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    65ee:	1e 44 f2 ff 	mov	-14(r4),r14	;0xfffffff2
    65f2:	2f 4e       	mov	@r14,	r15	;
    65f4:	1e 4e 02 00 	mov	2(r14),	r14	;
    65f8:	0d 9e       	cmp	r14,	r13	;
    65fa:	0b 42       	mov	r2,	r11	;
    65fc:	1b f3       	and	#1,	r11	;r3 As==01
    65fe:	0c 9f       	cmp	r15,	r12	;
    6600:	0c 42       	mov	r2,	r12	;
    6602:	1c f3       	and	#1,	r12	;r3 As==01
    6604:	0d 9e       	cmp	r14,	r13	;
    6606:	84 4b e4 ff 	mov	r11,	-28(r4)	; 0xffe4
    660a:	84 4c e2 ff 	mov	r12,	-30(r4)	; 0xffe2
    660e:	04 24       	jz	$+10     	;abs 0x6618
    6610:	1c 44 e4 ff 	mov	-28(r4),r12	;0xffffffe4
    6614:	84 4c e2 ff 	mov	r12,	-30(r4)	; 0xffe2
    6618:	1c 44 e2 ff 	mov	-30(r4),r12	;0xffffffe2
    661c:	1c b3       	bit	#1,	r12	;r3 As==01
    661e:	07 20       	jnz	$+16     	;abs 0x662e
    6620:	00 3c       	jmp	$+2      	;abs 0x6622
    6622:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6626:	2c 52       	add	#4,	r12	;r2 As==10
    6628:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    662c:	dc 3f       	jmp	$-70     	;abs 0x65e6
    662e:	00 3c       	jmp	$+2      	;abs 0x6630
    6630:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6634:	0d 4c       	mov	r12,	r13	;
    6636:	2d 52       	add	#4,	r13	;r2 As==10
    6638:	84 4d f2 ff 	mov	r13,	-14(r4)	; 0xfff2
    663c:	2d 4c       	mov	@r12,	r13	;
    663e:	1c 4c 02 00 	mov	2(r12),	r12	;
    6642:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    6646:	84 4d ec ff 	mov	r13,	-20(r4)	; 0xffec
    664a:	f4 40 30 00 	mov.b	#48,	-15(r4)	;#0x0030, 0xfff1
    664e:	f1 ff 
    6650:	00 3c       	jmp	$+2      	;abs 0x6652
    6652:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6656:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    665a:	1e 44 ec ff 	mov	-20(r4),r14	;0xffffffec
    665e:	1f 44 ee ff 	mov	-18(r4),r15	;0xffffffee
    6662:	0d 9f       	cmp	r15,	r13	;
    6664:	0b 42       	mov	r2,	r11	;
    6666:	1a 43       	mov	#1,	r10	;r3 As==01
    6668:	09 4a       	mov	r10,	r9	;
    666a:	09 cb       	bic	r11,	r9	;
    666c:	0c 9e       	cmp	r14,	r12	;
    666e:	0c 42       	mov	r2,	r12	;
    6670:	0a cc       	bic	r12,	r10	;
    6672:	0d 9f       	cmp	r15,	r13	;
    6674:	84 49 e0 ff 	mov	r9,	-32(r4)	; 0xffe0
    6678:	84 4a de ff 	mov	r10,	-34(r4)	; 0xffde
    667c:	04 24       	jz	$+10     	;abs 0x6686
    667e:	1c 44 e0 ff 	mov	-32(r4),r12	;0xffffffe0
    6682:	84 4c de ff 	mov	r12,	-34(r4)	; 0xffde
    6686:	1c 44 de ff 	mov	-34(r4),r12	;0xffffffde
    668a:	1c b3       	bit	#1,	r12	;r3 As==01
    668c:	15 20       	jnz	$+44     	;abs 0x66b8
    668e:	00 3c       	jmp	$+2      	;abs 0x6690
    6690:	5c 44 f1 ff 	mov.b	-15(r4),r12	;0xfffffff1
    6694:	5c 53       	inc.b	r12		;
    6696:	c4 4c f1 ff 	mov.b	r12,	-15(r4)	; 0xfff1
    669a:	1d 44 ec ff 	mov	-20(r4),r13	;0xffffffec
    669e:	1e 44 ee ff 	mov	-18(r4),r14	;0xffffffee
    66a2:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfffffff4
    66a6:	1b 44 f6 ff 	mov	-10(r4),r11	;0xfffffff6
    66aa:	0f 8d       	sub	r13,	r15	;
    66ac:	0b 7e       	subc	r14,	r11	;
    66ae:	84 4b f6 ff 	mov	r11,	-10(r4)	; 0xfff6
    66b2:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    66b6:	cd 3f       	jmp	$-100    	;abs 0x6652
    66b8:	5c 44 f1 ff 	mov.b	-15(r4),r12	;0xfffffff1
    66bc:	8c 11       	sxt	r12		;
    66be:	0f 4c       	mov	r12,	r15	;
    66c0:	b0 12 2c 67 	call	#26412		;#0x672c
    66c4:	84 4f dc ff 	mov	r15,	-36(r4)	; 0xffdc
    66c8:	00 3c       	jmp	$+2      	;abs 0x66ca
    66ca:	5c 44 ec ff 	mov.b	-20(r4),r12	;0xffffffec
    66ce:	5c b3       	bit.b	#1,	r12	;r3 As==01
    66d0:	af 27       	jz	$-160    	;abs 0x6630
    66d2:	00 3c       	jmp	$+2      	;abs 0x66d4
    66d4:	07 3c       	jmp	$+16     	;abs 0x66e4
    66d6:	3f 40 30 00 	mov	#48,	r15	;#0x0030
    66da:	b0 12 2c 67 	call	#26412		;#0x672c
    66de:	84 4f da ff 	mov	r15,	-38(r4)	; 0xffda
    66e2:	00 3c       	jmp	$+2      	;abs 0x66e4
    66e4:	31 50 22 00 	add	#34,	r1	;#0x0022
    66e8:	39 41       	pop	r9		;
    66ea:	3a 41       	pop	r10		;
    66ec:	3b 41       	pop	r11		;
    66ee:	34 41       	pop	r4		;
    66f0:	30 41       	ret			
	...

000066f4 <puth>:
    66f4:	04 12       	push	r4		;
    66f6:	04 41       	mov	r1,	r4	;
    66f8:	31 80 06 00 	sub	#6,	r1	;
    66fc:	0c 4f       	mov	r15,	r12	;
    66fe:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6702:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    6706:	5f 4f dc 44 	mov.b	17628(r15),r15	;0x044dc
    670a:	8f 11       	sxt	r15		;
    670c:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    6710:	b0 12 2c 67 	call	#26412		;#0x672c
    6714:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    6718:	31 50 06 00 	add	#6,	r1	;
    671c:	34 41       	pop	r4		;
    671e:	30 41       	ret			

00006720 <mspconsole_init>:
    6720:	04 12       	push	r4		;
    6722:	04 41       	mov	r1,	r4	;
    6724:	b0 12 fe 6b 	call	#27646		;#0x6bfe
    6728:	34 41       	pop	r4		;
    672a:	30 41       	ret			

0000672c <io_putchar>:
    672c:	04 12       	push	r4		;
    672e:	04 41       	mov	r1,	r4	;
    6730:	31 80 06 00 	sub	#6,	r1	;
    6734:	0c 4f       	mov	r15,	r12	;
    6736:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    673a:	5d 44 fe ff 	mov.b	-2(r4),	r13	;
    673e:	c4 4d fd ff 	mov.b	r13,	-3(r4)	; 0xfffd
    6742:	0f 44       	mov	r4,	r15	;
    6744:	3f 80 03 00 	sub	#3,	r15	;
    6748:	1e 43       	mov	#1,	r14	;r3 As==01
    674a:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    674e:	b0 12 8a 6c 	call	#27786		;#0x6c8a
    6752:	1f 44 fe ff 	mov	-2(r4),	r15	;
    6756:	31 50 06 00 	add	#6,	r1	;
    675a:	34 41       	pop	r4		;
    675c:	30 41       	ret			
	...

00006760 <io_puts_no_newline>:
    6760:	04 12       	push	r4		;
    6762:	04 41       	mov	r1,	r4	;
    6764:	31 82       	sub	#8,	r1	;r2 As==11
    6766:	0c 4f       	mov	r15,	r12	;
    6768:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    676c:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    6770:	1f 44 fe ff 	mov	-2(r4),	r15	;
    6774:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    6778:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    677c:	00 3c       	jmp	$+2      	;abs 0x677e
    677e:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6782:	0d 4c       	mov	r12,	r13	;
    6784:	1d 53       	inc	r13		;
    6786:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    678a:	6e 4c       	mov.b	@r12,	r14	;
    678c:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    678e:	07 24       	jz	$+16     	;abs 0x679e
    6790:	00 3c       	jmp	$+2      	;abs 0x6792
    6792:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6796:	1c 53       	inc	r12		;
    6798:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    679c:	f0 3f       	jmp	$-30     	;abs 0x677e
    679e:	1f 44 fe ff 	mov	-2(r4),	r15	;
    67a2:	1e 44 fc ff 	mov	-4(r4),	r14	;
    67a6:	b0 12 8a 6c 	call	#27786		;#0x6c8a
    67aa:	1f 44 fc ff 	mov	-4(r4),	r15	;
    67ae:	31 52       	add	#8,	r1	;r2 As==11
    67b0:	34 41       	pop	r4		;
    67b2:	30 41       	ret			

000067b4 <io_puts>:
    67b4:	04 12       	push	r4		;
    67b6:	04 41       	mov	r1,	r4	;
    67b8:	31 82       	sub	#8,	r1	;r2 As==11
    67ba:	0c 4f       	mov	r15,	r12	;
    67bc:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    67c0:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    67c4:	b0 12 60 67 	call	#26464		;#0x6760
    67c8:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    67cc:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    67d0:	b0 12 2c 67 	call	#26412		;#0x672c
    67d4:	1c 44 fc ff 	mov	-4(r4),	r12	;
    67d8:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    67dc:	0f 4c       	mov	r12,	r15	;
    67de:	31 52       	add	#8,	r1	;r2 As==11
    67e0:	34 41       	pop	r4		;
    67e2:	30 41       	ret			

000067e4 <task_prologue>:
    67e4:	04 12       	push	r4		;
    67e6:	04 41       	mov	r1,	r4	;
    67e8:	31 80 06 00 	sub	#6,	r1	;
    67ec:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    67f0:	1c 4c 04 00 	mov	4(r12),	r12	;
    67f4:	2c 4c       	mov	@r12,	r12	;
    67f6:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    67fa:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    67fe:	1c 4c 02 00 	mov	2(r12),	r12	;
    6802:	1d 44 fe ff 	mov	-2(r4),	r13	;
    6806:	1d 4d 08 00 	mov	8(r13),	r13	;
    680a:	0c 9d       	cmp	r13,	r12	;
    680c:	3a 24       	jz	$+118    	;abs 0x6882
    680e:	00 3c       	jmp	$+2      	;abs 0x6810
    6810:	00 3c       	jmp	$+2      	;abs 0x6812
    6812:	1c 42 c2 54 	mov	&0x54c2,r12	;0x54c2
    6816:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    681a:	0c 9d       	cmp	r13,	r12	;
    681c:	25 2c       	jc	$+76     	;abs 0x6868
    681e:	00 3c       	jmp	$+2      	;abs 0x6820
    6820:	1c 42 c2 54 	mov	&0x54c2,r12	;0x54c2
    6824:	0c 5c       	rla	r12		;
    6826:	1c 4c e4 54 	mov	21732(r12),r12	;0x054e4
    682a:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    682e:	0c 93       	cmp	#0,	r12	;r3 As==00
    6830:	15 24       	jz	$+44     	;abs 0x685c
    6832:	00 3c       	jmp	$+2      	;abs 0x6834
    6834:	1c 42 c2 54 	mov	&0x54c2,r12	;0x54c2
    6838:	0c 5c       	rla	r12		;
    683a:	1c 4c 26 55 	mov	21798(r12),r12	;0x05526
    683e:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    6842:	1f 44 fc ff 	mov	-4(r4),	r15	;
    6846:	1c 42 c2 54 	mov	&0x54c2,r12	;0x54c2
    684a:	0c 5c       	rla	r12		;
    684c:	3c 50 68 55 	add	#21864,	r12	;#0x5568
    6850:	1d 44 fa ff 	mov	-6(r4),	r13	;
    6854:	0e 4c       	mov	r12,	r14	;
    6856:	b0 12 2c 62 	call	#25132		;#0x622c
    685a:	00 3c       	jmp	$+2      	;abs 0x685c
    685c:	1c 42 c2 54 	mov	&0x54c2,r12	;0x54c2
    6860:	1c 53       	inc	r12		;
    6862:	82 4c c2 54 	mov	r12,	&0x54c2	;
    6866:	d5 3f       	jmp	$-84     	;abs 0x6812
    6868:	82 43 c4 54 	mov	#0,	&0x54c4	;r3 As==00
    686c:	82 43 c2 54 	mov	#0,	&0x54c2	;r3 As==00
    6870:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    6874:	1c 4c 02 00 	mov	2(r12),	r12	;
    6878:	1d 44 fe ff 	mov	-2(r4),	r13	;
    687c:	8d 4c 08 00 	mov	r12,	8(r13)	;
    6880:	03 3c       	jmp	$+8      	;abs 0x6888
    6882:	82 43 c4 54 	mov	#0,	&0x54c4	;r3 As==00
    6886:	00 3c       	jmp	$+2      	;abs 0x6888
    6888:	31 50 06 00 	add	#6,	r1	;
    688c:	34 41       	pop	r4		;
    688e:	30 41       	ret			

00006890 <transition_to>:
    6890:	04 12       	push	r4		;
    6892:	04 41       	mov	r1,	r4	;
    6894:	31 80 0a 00 	sub	#10,	r1	;#0x000a
    6898:	0c 4f       	mov	r15,	r12	;
    689a:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    689e:	1f 42 e0 54 	mov	&0x54e0,r15	;0x54e0
    68a2:	3d 40 da 54 	mov	#21722,	r13	;#0x54da
    68a6:	3e 40 ce 54 	mov	#21710,	r14	;#0x54ce
    68aa:	0f 9d       	cmp	r13,	r15	;
    68ac:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    68b0:	84 4d f8 ff 	mov	r13,	-8(r4)	; 0xfff8
    68b4:	84 4e f6 ff 	mov	r14,	-10(r4)	; 0xfff6
    68b8:	04 24       	jz	$+10     	;abs 0x68c2
    68ba:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    68be:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    68c2:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    68c6:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    68ca:	1d 44 fe ff 	mov	-2(r4),	r13	;
    68ce:	8c 4d 00 00 	mov	r13,	0(r12)	;
    68d2:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    68d6:	1c 4c 02 00 	mov	2(r12),	r12	;
    68da:	1c 53       	inc	r12		;
    68dc:	1d 44 fc ff 	mov	-4(r4),	r13	;
    68e0:	8d 4c 02 00 	mov	r12,	2(r13)	;
    68e4:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    68e8:	1c 4c 02 00 	mov	2(r12),	r12	;
    68ec:	1d 44 fc ff 	mov	-4(r4),	r13	;
    68f0:	1d 4d 04 00 	mov	4(r13),	r13	;
    68f4:	8d 4c 02 00 	mov	r12,	2(r13)	;
    68f8:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    68fc:	2c 4c       	mov	@r12,	r12	;
    68fe:	1d 44 fc ff 	mov	-4(r4),	r13	;
    6902:	1d 4d 04 00 	mov	4(r13),	r13	;
    6906:	8d 4c 00 00 	mov	r12,	0(r13)	;
    690a:	1c 44 fc ff 	mov	-4(r4),	r12	;
    690e:	82 4c e0 54 	mov	r12,	&0x54e0	;
    6912:	b0 12 e4 67 	call	#26596		;#0x67e4
    6916:	1c 44 fe ff 	mov	-2(r4),	r12	;
    691a:	2c 4c       	mov	@r12,	r12	;
    691c:	31 40 00 24 	mov	#9216,	r1	;#0x2400
    6920:	00 4c       	br	r12		;
    6922:	31 50 0a 00 	add	#10,	r1	;#0x000a
    6926:	34 41       	pop	r4		;
    6928:	30 41       	ret			
	...

0000692c <chan_in>:
    692c:	04 12       	push	r4		;
    692e:	04 41       	mov	r1,	r4	;
    6930:	0b 12       	push	r11		;
    6932:	0a 12       	push	r10		;
    6934:	31 80 18 00 	sub	#24,	r1	;#0x0018
    6938:	0c 4d       	mov	r13,	r12	;
    693a:	0b 4e       	mov	r14,	r11	;
    693c:	0a 4f       	mov	r15,	r10	;
    693e:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    6942:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    6946:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    694a:	84 43 f2 ff 	mov	#0,	-14(r4)	;r3 As==00, 0xfff2
    694e:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    6952:	2d 53       	incd	r13		;
    6954:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    6958:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    695c:	84 4d ec ff 	mov	r13,	-20(r4)	; 0xffec
    6960:	1d 44 ee ff 	mov	-18(r4),r13	;0xffffffee
    6964:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfffffff6
    6968:	0d 5e       	add	r14,	r13	;
    696a:	84 4d ea ff 	mov	r13,	-22(r4)	; 0xffea
    696e:	84 4d f0 ff 	mov	r13,	-16(r4)	; 0xfff0
    6972:	0f 4d       	mov	r13,	r15	;
    6974:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    6978:	84 4b e6 ff 	mov	r11,	-26(r4)	; 0xffe6
    697c:	84 4a e4 ff 	mov	r10,	-28(r4)	; 0xffe4
    6980:	31 50 18 00 	add	#24,	r1	;#0x0018
    6984:	3a 41       	pop	r10		;
    6986:	3b 41       	pop	r11		;
    6988:	34 41       	pop	r4		;
    698a:	30 41       	ret			

0000698c <chan_out>:
    698c:	04 12       	push	r4		;
    698e:	04 41       	mov	r1,	r4	;
    6990:	31 80 14 00 	sub	#20,	r1	;#0x0014
    6994:	1c 44 0a 00 	mov	10(r4),	r12	;0x0000a
    6998:	1d 44 08 00 	mov	8(r4),	r13	;
    699c:	1e 44 06 00 	mov	6(r4),	r14	;
    69a0:	1f 44 04 00 	mov	4(r4),	r15	;
    69a4:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    69a8:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    69ac:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    69b0:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    69b4:	1c 44 fa ff 	mov	-6(r4),	r12	;
    69b8:	2c 53       	incd	r12		;
    69ba:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    69be:	1c 44 fa ff 	mov	-6(r4),	r12	;
    69c2:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    69c6:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    69ca:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    69ce:	0c 5d       	add	r13,	r12	;
    69d0:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    69d4:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    69d8:	1e 44 fe ff 	mov	-2(r4),	r14	;
    69dc:	1d 44 fc ff 	mov	-4(r4),	r13	;
    69e0:	0f 4c       	mov	r12,	r15	;
    69e2:	b0 12 2c 62 	call	#25132		;#0x622c
    69e6:	31 50 14 00 	add	#20,	r1	;#0x0014
    69ea:	34 41       	pop	r4		;
    69ec:	30 41       	ret			
	...

000069f0 <write_to_gbuf>:
    69f0:	04 12       	push	r4		;
    69f2:	04 41       	mov	r1,	r4	;
    69f4:	0b 12       	push	r11		;
    69f6:	0a 12       	push	r10		;
    69f8:	31 80 12 00 	sub	#18,	r1	;#0x0012
    69fc:	0c 4d       	mov	r13,	r12	;
    69fe:	0b 4e       	mov	r14,	r11	;
    6a00:	0a 4f       	mov	r15,	r10	;
    6a02:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    6a06:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    6a0a:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    6a0e:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6a12:	0d 5d       	rla	r13		;
    6a14:	3d 50 68 55 	add	#21864,	r13	;#0x5568
    6a18:	1e 44 fa ff 	mov	-6(r4),	r14	;
    6a1c:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfffffff6
    6a20:	84 4f f0 ff 	mov	r15,	-16(r4)	; 0xfff0
    6a24:	0f 4d       	mov	r13,	r15	;
    6a26:	1d 44 f0 ff 	mov	-16(r4),r13	;0xfffffff0
    6a2a:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    6a2e:	84 4b ec ff 	mov	r11,	-20(r4)	; 0xffec
    6a32:	84 4a ea ff 	mov	r10,	-22(r4)	; 0xffea
    6a36:	b0 12 2c 62 	call	#25132		;#0x622c
    6a3a:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6a3e:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6a42:	0d 5d       	rla	r13		;
    6a44:	8d 4c 26 55 	mov	r12,	21798(r13); 0x5526
    6a48:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6a4c:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6a50:	0d 5d       	rla	r13		;
    6a52:	8d 4c e4 54 	mov	r12,	21732(r13); 0x54e4
    6a56:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6a5a:	3c 90 03 00 	cmp	#3,	r12	;
    6a5e:	2a 28       	jnc	$+86     	;abs 0x6ab4
    6a60:	00 3c       	jmp	$+2      	;abs 0x6a62
    6a62:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6a66:	3c 53       	add	#-1,	r12	;r3 As==11
    6a68:	12 c3       	clrc			
    6a6a:	0c 10       	rrc	r12		;
    6a6c:	1c 53       	inc	r12		;
    6a6e:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    6a72:	94 43 f2 ff 	mov	#1,	-14(r4)	;r3 As==01, 0xfff2
    6a76:	00 3c       	jmp	$+2      	;abs 0x6a78
    6a78:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6a7c:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    6a80:	0c 9d       	cmp	r13,	r12	;
    6a82:	10 2c       	jc	$+34     	;abs 0x6aa4
    6a84:	00 3c       	jmp	$+2      	;abs 0x6a86
    6a86:	1c 42 c4 54 	mov	&0x54c4,r12	;0x54c4
    6a8a:	1d 44 f2 ff 	mov	-14(r4),r13	;0xfffffff2
    6a8e:	0c 5d       	add	r13,	r12	;
    6a90:	0c 5c       	rla	r12		;
    6a92:	8c 43 e4 54 	mov	#0,	21732(r12);r3 As==00, 0x54e4
    6a96:	00 3c       	jmp	$+2      	;abs 0x6a98
    6a98:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6a9c:	1c 53       	inc	r12		;
    6a9e:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    6aa2:	ea 3f       	jmp	$-42     	;abs 0x6a78
    6aa4:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6aa8:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6aac:	0d 5c       	add	r12,	r13	;
    6aae:	82 4d c4 54 	mov	r13,	&0x54c4	;
    6ab2:	06 3c       	jmp	$+14     	;abs 0x6ac0
    6ab4:	1c 42 c4 54 	mov	&0x54c4,r12	;0x54c4
    6ab8:	1c 53       	inc	r12		;
    6aba:	82 4c c4 54 	mov	r12,	&0x54c4	;
    6abe:	00 3c       	jmp	$+2      	;abs 0x6ac0
    6ac0:	31 50 12 00 	add	#18,	r1	;#0x0012
    6ac4:	3a 41       	pop	r10		;
    6ac6:	3b 41       	pop	r11		;
    6ac8:	34 41       	pop	r4		;
    6aca:	30 41       	ret			

00006acc <chan_out_gbuf>:
    6acc:	04 12       	push	r4		;
    6ace:	04 41       	mov	r1,	r4	;
    6ad0:	31 80 18 00 	sub	#24,	r1	;#0x0018
    6ad4:	1c 44 0a 00 	mov	10(r4),	r12	;0x0000a
    6ad8:	1d 44 08 00 	mov	8(r4),	r13	;
    6adc:	1e 44 06 00 	mov	6(r4),	r14	;
    6ae0:	1f 44 04 00 	mov	4(r4),	r15	;
    6ae4:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6ae8:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    6aec:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    6af0:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    6af4:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6af8:	2c 53       	incd	r12		;
    6afa:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    6afe:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6b02:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    6b06:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    6b0a:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    6b0e:	0c 5d       	add	r13,	r12	;
    6b10:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    6b14:	1c 42 c4 54 	mov	&0x54c4,r12	;0x54c4
    6b18:	0c 5c       	rla	r12		;
    6b1a:	3c 50 68 55 	add	#21864,	r12	;#0x5568
    6b1e:	1e 44 fe ff 	mov	-2(r4),	r14	;
    6b22:	1d 44 fc ff 	mov	-4(r4),	r13	;
    6b26:	0f 4c       	mov	r12,	r15	;
    6b28:	b0 12 2c 62 	call	#25132		;#0x622c
    6b2c:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6b30:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6b34:	0d 5d       	rla	r13		;
    6b36:	8d 4c 26 55 	mov	r12,	21798(r13); 0x5526
    6b3a:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6b3e:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    6b42:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6b46:	0d 5d       	rla	r13		;
    6b48:	8d 4c e4 54 	mov	r12,	21732(r13); 0x54e4
    6b4c:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6b50:	3c 90 03 00 	cmp	#3,	r12	;
    6b54:	2a 28       	jnc	$+86     	;abs 0x6baa
    6b56:	00 3c       	jmp	$+2      	;abs 0x6b58
    6b58:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6b5c:	3c 53       	add	#-1,	r12	;r3 As==11
    6b5e:	12 c3       	clrc			
    6b60:	0c 10       	rrc	r12		;
    6b62:	1c 53       	inc	r12		;
    6b64:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    6b68:	94 43 e8 ff 	mov	#1,	-24(r4)	;r3 As==01, 0xffe8
    6b6c:	00 3c       	jmp	$+2      	;abs 0x6b6e
    6b6e:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    6b72:	1d 44 ea ff 	mov	-22(r4),r13	;0xffffffea
    6b76:	0c 9d       	cmp	r13,	r12	;
    6b78:	10 2c       	jc	$+34     	;abs 0x6b9a
    6b7a:	00 3c       	jmp	$+2      	;abs 0x6b7c
    6b7c:	1c 42 c4 54 	mov	&0x54c4,r12	;0x54c4
    6b80:	1d 44 e8 ff 	mov	-24(r4),r13	;0xffffffe8
    6b84:	0c 5d       	add	r13,	r12	;
    6b86:	0c 5c       	rla	r12		;
    6b88:	8c 43 e4 54 	mov	#0,	21732(r12);r3 As==00, 0x54e4
    6b8c:	00 3c       	jmp	$+2      	;abs 0x6b8e
    6b8e:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    6b92:	1c 53       	inc	r12		;
    6b94:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    6b98:	ea 3f       	jmp	$-42     	;abs 0x6b6e
    6b9a:	1c 44 ea ff 	mov	-22(r4),r12	;0xffffffea
    6b9e:	1d 42 c4 54 	mov	&0x54c4,r13	;0x54c4
    6ba2:	0d 5c       	add	r12,	r13	;
    6ba4:	82 4d c4 54 	mov	r13,	&0x54c4	;
    6ba8:	06 3c       	jmp	$+14     	;abs 0x6bb6
    6baa:	1c 42 c4 54 	mov	&0x54c4,r12	;0x54c4
    6bae:	1c 53       	inc	r12		;
    6bb0:	82 4c c4 54 	mov	r12,	&0x54c4	;
    6bb4:	00 3c       	jmp	$+2      	;abs 0x6bb6
    6bb6:	31 50 18 00 	add	#24,	r1	;#0x0018
    6bba:	34 41       	pop	r4		;
    6bbc:	30 41       	ret			
	...

00006bc0 <main>:
    6bc0:	04 12       	push	r4		;
    6bc2:	04 41       	mov	r1,	r4	;
    6bc4:	21 83       	decd	r1		;
    6bc6:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    6bca:	b0 12 94 61 	call	#24980		;#0x6194
    6bce:	1c 42 e2 54 	mov	&0x54e2,r12	;0x54e2
    6bd2:	1c 53       	inc	r12		;
    6bd4:	82 4c e2 54 	mov	r12,	&0x54e2	;
    6bd8:	b0 12 e4 67 	call	#26596		;#0x67e4
    6bdc:	1c 42 e0 54 	mov	&0x54e0,r12	;0x54e0
    6be0:	2c 4c       	mov	@r12,	r12	;
    6be2:	2c 4c       	mov	@r12,	r12	;
    6be4:	00 4c       	br	r12		;
    6be6:	0f 43       	clr	r15		;
    6be8:	21 53       	incd	r1		;
    6bea:	34 41       	pop	r4		;
    6bec:	30 41       	ret			
	...

00006bf0 <__mulhi3hw_noint>:
    6bf0:	82 4f c0 04 	mov	r15,	&0x04c0	;
    6bf4:	82 4e c8 04 	mov	r14,	&0x04c8	;
    6bf8:	1f 42 ca 04 	mov	&0x04ca,r15	;0x04ca
    6bfc:	30 41       	ret			

00006bfe <UART_init>:
 * @todo Currently assumes an 8MHz SMCLK. Make robust to clock frequency changes by using 32k ACLK.
 */
void UART_init(void) {

    // Configure USCI_A0 for UART mode
    UCA0CTLW0 = UCSWRST;                      // Put eUSCI in reset
    6bfe:	92 43 c0 05 	mov	#1,	&0x05c0	;r3 As==01
    UCA0CTLW0 |= UCSSEL__SMCLK;               // CLK = SMCLK
    6c02:	b2 d0 80 00 	bis	#128,	&0x05c0	;#0x0080
    6c06:	c0 05 
    UCA0BR1 = 0;
    UCA0MCTLW = UCOS16 | UCBRF_2 | (0xBB << 8);
#endif // UART_BAUDRATE
#elif UART_CLOCK == 8000000
#if UART_BAUDRATE == 115200
    UCA0BR0 = 4;
    6c08:	e2 42 c6 05 	mov.b	#4,	&0x05c6	;r2 As==10
    UCA0BR1 = 0;
    6c0c:	c2 43 c7 05 	mov.b	#0,	&0x05c7	;r3 As==00
    UCA0MCTLW = UCOS16 | UCBRF_4 | (0x55 << 8);
    6c10:	b2 40 41 55 	mov	#21825,	&0x05c8	;#0x5541
    6c14:	c8 05 
#endif // UART_BAUDRATE
#endif // UART_CLOCK

#if defined(__MSP430FR5969__) || defined(__MSP430FR5949__)
    PUART_TXSEL0 &= ~PIN_UART_TX; // TX pin to UART module
    6c16:	d2 c3 0b 02 	bic.b	#1,	&0x020b	;r3 As==01
    PUART_TXSEL1 |= PIN_UART_TX;
    6c1a:	d2 d3 0d 02 	bis.b	#1,	&0x020d	;r3 As==01

    PUART_RXSEL0 &= ~PIN_UART_RX; // RX pin to UART module
    6c1e:	e2 c3 0b 02 	bic.b	#2,	&0x020b	;r3 As==10
    PUART_RXSEL1 |= PIN_UART_RX;
    6c22:	e2 d3 0d 02 	bis.b	#2,	&0x020d	;r3 As==10
    PUART_RXSEL1 &= ~PIN_UART_RX;
#else
#error MCU not supported
#endif

    UCA0CTLW0 &= ~UCSWRST;                    // Initialize eUSCI
    6c26:	92 c3 c0 05 	bic	#1,	&0x05c0	;r3 As==01

    // Initialize module state
    UART_SM.isTxBusy = FALSE;
    6c2a:	3c 40 22 1c 	mov	#7202,	r12	;#0x1c22
    6c2e:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    UART_SM.txBytesRemaining = 0;
    6c32:	8c 43 04 00 	mov	#0,	4(r12)	;r3 As==00
    UART_SM.isRxBusy = FALSE;
    6c36:	cc 43 06 00 	mov.b	#0,	6(r12)	;r3 As==00
    UART_SM.rxBytesRemaining = 0;
    6c3a:	8c 43 0a 00 	mov	#0,	10(r12)	;r3 As==00, 0x000a

}
    6c3e:	30 41       	ret			

00006c40 <UART_teardown>:
void UART_teardown()
{
    // disable UART
    // Not sure how to do this best, but set all UCA0* registers to
    // their default values.  See User's Guide for default values.
    PUART_TXSEL0 &= ~PIN_UART_TX;
    6c40:	d2 c3 0b 02 	bic.b	#1,	&0x020b	;r3 As==01
    PUART_TXSEL1 &= ~PIN_UART_TX;
    6c44:	d2 c3 0d 02 	bic.b	#1,	&0x020d	;r3 As==01
    PUART_RXSEL0 &= ~PIN_UART_RX;
    6c48:	e2 c3 0b 02 	bic.b	#2,	&0x020b	;r3 As==10
    PUART_RXSEL1 &= ~PIN_UART_RX;
    6c4c:	e2 c3 0d 02 	bic.b	#2,	&0x020d	;r3 As==10
    UCA0CTLW0 = 0x0001;
    6c50:	92 43 c0 05 	mov	#1,	&0x05c0	;r3 As==01
    UCA0BR0 = 0x0000;
    6c54:	c2 43 c6 05 	mov.b	#0,	&0x05c6	;r3 As==00
    UCA0MCTLW = 0x0000;
    6c58:	82 43 c8 05 	mov	#0,	&0x05c8	;r3 As==00
    UCA0IE = 0x0000;
    6c5c:	82 43 da 05 	mov	#0,	&0x05da	;r3 As==00
    UCA0IFG = 0x0000;
    6c60:	82 43 dc 05 	mov	#0,	&0x05dc	;r3 As==00
}
    6c64:	30 41       	ret			

00006c66 <UART_asyncSend>:
 * @param size the number of bytes to send
 */
void UART_asyncSend(uint8_t* txBuf, uint16_t size) {

    // Block until prior transmission has completed
    while (UART_SM.isTxBusy)
    6c66:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6c6a:	6e 4f       	mov.b	@r15,	r14	;
    6c6c:	0e 93       	cmp	#0,	r14	;r3 As==00
    6c6e:	fd 23       	jnz	$-4      	;abs 0x6c6a
        ;

    // Set up for start of transmission
    UART_SM.isTxBusy = TRUE;
    6c70:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6c74:	de 43 00 00 	mov.b	#1,	0(r14)	;r3 As==01
    UART_SM.txPtr = txBuf;
    6c78:	8e 4c 02 00 	mov	r12,	2(r14)	;
    UART_SM.txBytesRemaining = size;
    6c7c:	8e 4d 04 00 	mov	r13,	4(r14)	;

    UCA0IFG &= ~(USCI_UART_UCTXIFG); // Clear the 'ready to accept byte' flag
    6c80:	a2 c2 dc 05 	bic	#4,	&0x05dc	;r2 As==10

    UCA0IE |= UCTXIE; // Enable USCI_A0 TX interrupt ('ready to accept byte')
    6c84:	a2 d3 da 05 	bis	#2,	&0x05da	;r3 As==10
    //UCA0TXBUF = *(UART_SM.txPtr++); // Load in first byte

    // The bytes are transmitted in the TX ISR (which is called whenever the
    // UART is ready to accept a byte), and the isBusy flag is cleared when the
    // last byte has *finished* transmitting.
}
    6c88:	30 41       	ret			

00006c8a <UART_send>:
 * @param size the number of bytes to send
 *
 */
void UART_send(uint8_t* txBuf, uint16_t size) {

    UART_asyncSend(txBuf, size);
    6c8a:	b0 12 66 6c 	call	#27750		;#0x6c66

    // Block until complete
    while (UART_SM.isTxBusy)
    6c8e:	3d 40 22 1c 	mov	#7202,	r13	;#0x1c22
    6c92:	6c 4d       	mov.b	@r13,	r12	;
    6c94:	0c 93       	cmp	#0,	r12	;r3 As==00
    6c96:	fd 23       	jnz	$-4      	;abs 0x6c92
        ;
}
    6c98:	30 41       	ret			

00006c9a <UART_critSend>:
 *  and use UART status register polling instead of interrupts.
 */
void UART_critSend(uint8_t* txBuf, uint16_t size) {

    // Block until prior transmission has completed
    while (UART_SM.isTxBusy)
    6c9a:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6c9e:	6e 4f       	mov.b	@r15,	r14	;
    6ca0:	0e 93       	cmp	#0,	r14	;r3 As==00
    6ca2:	fd 23       	jnz	$-4      	;abs 0x6c9e
        ;

    // Set up for start of transmission
    UART_SM.isTxBusy = TRUE;
    6ca4:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6ca8:	de 43 00 00 	mov.b	#1,	0(r14)	;r3 As==01
    UART_SM.txPtr = txBuf;
    6cac:	8e 4c 02 00 	mov	r12,	2(r14)	;
    UART_SM.txBytesRemaining = size;
    6cb0:	8e 4d 04 00 	mov	r13,	4(r14)	;

    UCA0IV &= ~(USCI_UART_UCTXIFG); // Clear byte completion flag
    6cb4:	a2 c2 de 05 	bic	#4,	&0x05de	;r2 As==10

    while (UART_SM.txBytesRemaining--) {
    6cb8:	1c 4e 04 00 	mov	4(r14),	r12	;
    6cbc:	0d 4c       	mov	r12,	r13	;
    6cbe:	3d 53       	add	#-1,	r13	;r3 As==11
    6cc0:	8e 4d 04 00 	mov	r13,	4(r14)	;
    6cc4:	0c 93       	cmp	#0,	r12	;r3 As==00
    6cc6:	19 24       	jz	$+52     	;abs 0x6cfa
        UCA0TXBUF = *(UART_SM.txPtr++); // Load in next byte
    6cc8:	0c 4e       	mov	r14,	r12	;
    6cca:	1d 4c 02 00 	mov	2(r12),	r13	;
    6cce:	0e 4d       	mov	r13,	r14	;
    6cd0:	1e 53       	inc	r14		;
    6cd2:	8c 4e 02 00 	mov	r14,	2(r12)	;
    6cd6:	6d 4d       	mov.b	@r13,	r13	;
    6cd8:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    6cdc:	82 4d ce 05 	mov	r13,	&0x05ce	;
        while (!(UCA0IFG & UCTXIFG))
    6ce0:	a2 b3 dc 05 	bit	#2,	&0x05dc	;r3 As==10
    6ce4:	fd 27       	jz	$-4      	;abs 0x6ce0
            ; // Wait for byte transmission to complete
        UCA0IFG &= ~(UCTXIFG); // Clear byte completion flag
    6ce6:	a2 c3 dc 05 	bic	#2,	&0x05dc	;r3 As==10
    UART_SM.txPtr = txBuf;
    UART_SM.txBytesRemaining = size;

    UCA0IV &= ~(USCI_UART_UCTXIFG); // Clear byte completion flag

    while (UART_SM.txBytesRemaining--) {
    6cea:	1d 4c 04 00 	mov	4(r12),	r13	;
    6cee:	0e 4d       	mov	r13,	r14	;
    6cf0:	3e 53       	add	#-1,	r14	;r3 As==11
    6cf2:	8c 4e 04 00 	mov	r14,	4(r12)	;
    6cf6:	0d 93       	cmp	#0,	r13	;r3 As==00
    6cf8:	e8 23       	jnz	$-46     	;abs 0x6cca
        while (!(UCA0IFG & UCTXIFG))
            ; // Wait for byte transmission to complete
        UCA0IFG &= ~(UCTXIFG); // Clear byte completion flag
    }

    UART_SM.isTxBusy = FALSE;
    6cfa:	c2 43 22 1c 	mov.b	#0,	&0x1c22	;r3 As==00
}
    6cfe:	30 41       	ret			

00006d00 <UART_isTxBusy>:
/**
 * Return true if UART TX module is in the middle of an operation, false if not.
 */
uint8_t UART_isTxBusy() {
    return UART_SM.isTxBusy;
}
    6d00:	5c 42 22 1c 	mov.b	&0x1c22,r12	;0x1c22
    6d04:	30 41       	ret			

00006d06 <UART_asyncReceive>:
 * @param size the number of bytes to receive
 */
void UART_asyncReceive(uint8_t* rxBuf, uint16_t size) {

    // Block until prior reception has completed
    while (UART_SM.isRxBusy)
    6d06:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6d0a:	5e 4f 06 00 	mov.b	6(r15),	r14	;
    6d0e:	0e 93       	cmp	#0,	r14	;r3 As==00
    6d10:	fc 23       	jnz	$-6      	;abs 0x6d0a
        ;

    // Set up for start of reception
    UART_SM.isRxBusy = TRUE;
    6d12:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6d16:	de 43 06 00 	mov.b	#1,	6(r14)	;r3 As==01
    UART_SM.rxPtr = rxBuf;
    6d1a:	8e 4c 08 00 	mov	r12,	8(r14)	;
    UART_SM.rxBytesRemaining = size;
    6d1e:	8e 4d 0a 00 	mov	r13,	10(r14)	; 0x000a

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag
    6d22:	92 c3 dc 05 	bic	#1,	&0x05dc	;r3 As==01

    UCA0IE |= UCRXIE; // Enable USCI_A0 RX interrupt
    6d26:	92 d3 da 05 	bis	#1,	&0x05da	;r3 As==01

    // The rest of the reception will be completed by the RX ISR (which
    //  will wake after each byte has been received), and the isBusy flag
    //  will be cleared when done.
}
    6d2a:	30 41       	ret			

00006d2c <UART_receive>:
 * @param size the number of bytes to receive
 *
 */
void UART_receive(uint8_t* rxBuf, uint16_t size) {

    UART_asyncReceive(rxBuf, size);
    6d2c:	b0 12 06 6d 	call	#27910		;#0x6d06

    // Block until complete
    while (UART_SM.isRxBusy)
    6d30:	3d 40 22 1c 	mov	#7202,	r13	;#0x1c22
    6d34:	5c 4d 06 00 	mov.b	6(r13),	r12	;
    6d38:	0c 93       	cmp	#0,	r12	;r3 As==00
    6d3a:	fc 23       	jnz	$-6      	;abs 0x6d34
        ;
}
    6d3c:	30 41       	ret			

00006d3e <UART_critReceive>:
 *  and use UART status register polling instead of interrupts.
 */
void UART_critReceive(uint8_t* rxBuf, uint16_t size) {

    // Block until prior reception has completed
    while (UART_SM.isRxBusy)
    6d3e:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6d42:	5e 4f 06 00 	mov.b	6(r15),	r14	;
    6d46:	0e 93       	cmp	#0,	r14	;r3 As==00
    6d48:	fc 23       	jnz	$-6      	;abs 0x6d42
        ;

    // Set up for start of reception
    UART_SM.isRxBusy = TRUE;
    6d4a:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6d4e:	de 43 06 00 	mov.b	#1,	6(r14)	;r3 As==01
    UART_SM.rxPtr = rxBuf;
    6d52:	8e 4c 08 00 	mov	r12,	8(r14)	;
    UART_SM.rxBytesRemaining = size;
    6d56:	8e 4d 0a 00 	mov	r13,	10(r14)	; 0x000a

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag
    6d5a:	92 c3 dc 05 	bic	#1,	&0x05dc	;r3 As==01

    while (UART_SM.rxBytesRemaining--) {
    6d5e:	1c 4e 0a 00 	mov	10(r14),r12	;0x0000a
    6d62:	0d 4c       	mov	r12,	r13	;
    6d64:	3d 53       	add	#-1,	r13	;r3 As==11
    6d66:	8e 4d 0a 00 	mov	r13,	10(r14)	; 0x000a
    6d6a:	0c 93       	cmp	#0,	r12	;r3 As==00
    6d6c:	18 24       	jz	$+50     	;abs 0x6d9e
        while (!(UCA0IFG & UCRXIFG))
            ; // Wait for byte reception to complete
        UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

        uint8_t rec = UCA0RXBUF; // Read next byte
        *(UART_SM.rxPtr++) = rec; // Store byte
    6d6e:	0c 4e       	mov	r14,	r12	;
    UART_SM.rxBytesRemaining = size;

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

    while (UART_SM.rxBytesRemaining--) {
        while (!(UCA0IFG & UCRXIFG))
    6d70:	92 b3 dc 05 	bit	#1,	&0x05dc	;r3 As==01
    6d74:	fd 27       	jz	$-4      	;abs 0x6d70
            ; // Wait for byte reception to complete
        UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag
    6d76:	92 c3 dc 05 	bic	#1,	&0x05dc	;r3 As==01

        uint8_t rec = UCA0RXBUF; // Read next byte
    6d7a:	1e 42 cc 05 	mov	&0x05cc,r14	;0x05cc
        *(UART_SM.rxPtr++) = rec; // Store byte
    6d7e:	1d 4c 08 00 	mov	8(r12),	r13	;
    6d82:	0f 4d       	mov	r13,	r15	;
    6d84:	1f 53       	inc	r15		;
    6d86:	8c 4f 08 00 	mov	r15,	8(r12)	;
    while (UART_SM.rxBytesRemaining--) {
        while (!(UCA0IFG & UCRXIFG))
            ; // Wait for byte reception to complete
        UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

        uint8_t rec = UCA0RXBUF; // Read next byte
    6d8a:	cd 4e 00 00 	mov.b	r14,	0(r13)	;
    UART_SM.rxPtr = rxBuf;
    UART_SM.rxBytesRemaining = size;

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

    while (UART_SM.rxBytesRemaining--) {
    6d8e:	1d 4c 0a 00 	mov	10(r12),r13	;0x0000a
    6d92:	0e 4d       	mov	r13,	r14	;
    6d94:	3e 53       	add	#-1,	r14	;r3 As==11
    6d96:	8c 4e 0a 00 	mov	r14,	10(r12)	; 0x000a
    6d9a:	0d 93       	cmp	#0,	r13	;r3 As==00
    6d9c:	e9 23       	jnz	$-44     	;abs 0x6d70

        uint8_t rec = UCA0RXBUF; // Read next byte
        *(UART_SM.rxPtr++) = rec; // Store byte
    }

    UART_SM.isRxBusy = FALSE;
    6d9e:	c2 43 28 1c 	mov.b	#0,	&0x1c28	;r3 As==00
}
    6da2:	30 41       	ret			

00006da4 <UART_isRxBusy>:
/**
 * Return true if UART RX module is in the middle of an operation, false if not.
 */
uint8_t UART_isRxBusy() {
    return UART_SM.isRxBusy;
}
    6da4:	5c 42 28 1c 	mov.b	&0x1c28,r12	;0x1c28
    6da8:	30 41       	ret			

00006daa <UART_isRxDone>:
 * Return true if UART RX module is not in the middle of an operation (e.g. done), false if not.
 *
 * Could be used in combination with UART_asyncReceive.
 */
uint8_t UART_isRxDone() {
    return !(UART_SM.isRxBusy);
    6daa:	5c 42 28 1c 	mov.b	&0x1c28,r12	;0x1c28
    6dae:	3c 53       	add	#-1,	r12	;r3 As==11
}
    6db0:	5c 03       	rrum	#1,	r12	;
    6db2:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    6db6:	30 41       	ret			

00006db8 <USCI_A0_ISR>:
#elif defined(__GNUC__)
void __attribute__ ((interrupt(USCI_A0_VECTOR))) USCI_A0_ISR (void)
#else
#error Compiler not supported!
#endif
{
    6db8:	3f 15       	pushm	#4,	r15	;16-bit words
    uint8_t rec;

    switch (__even_in_range(UCA0IV, USCI_UART_UCTXCPTIFG)) {
    6dba:	1c 42 de 05 	mov	&0x05de,r12	;0x05de
    6dbe:	2c 93       	cmp	#2,	r12	;r3 As==10
    6dc0:	03 24       	jz	$+8      	;abs 0x6dc8
    6dc2:	2c 92       	cmp	#4,	r12	;r2 As==10
    6dc4:	1e 24       	jz	$+62     	;abs 0x6e02
    6dc6:	38 3c       	jmp	$+114    	;abs 0x6e38
    case USCI_NONE:
        break;
    case USCI_UART_UCRXIFG:
        if (UART_SM.rxBytesRemaining--) {
    6dc8:	3d 40 22 1c 	mov	#7202,	r13	;#0x1c22
    6dcc:	1c 4d 0a 00 	mov	10(r13),r12	;0x0000a
    6dd0:	0e 4c       	mov	r12,	r14	;
    6dd2:	3e 53       	add	#-1,	r14	;r3 As==11
    6dd4:	8d 4e 0a 00 	mov	r14,	10(r13)	; 0x000a
    6dd8:	0c 93       	cmp	#0,	r12	;r3 As==00
    6dda:	0a 24       	jz	$+22     	;abs 0x6df0
            rec = UCA0RXBUF; // Read next byte
    6ddc:	1e 42 cc 05 	mov	&0x05cc,r14	;0x05cc
            *(UART_SM.rxPtr++) = rec; // Store byte
    6de0:	1c 4d 08 00 	mov	8(r13),	r12	;
    6de4:	0f 4c       	mov	r12,	r15	;
    6de6:	1f 53       	inc	r15		;
    6de8:	8d 4f 08 00 	mov	r15,	8(r13)	;
    switch (__even_in_range(UCA0IV, USCI_UART_UCTXCPTIFG)) {
    case USCI_NONE:
        break;
    case USCI_UART_UCRXIFG:
        if (UART_SM.rxBytesRemaining--) {
            rec = UCA0RXBUF; // Read next byte
    6dec:	cc 4e 00 00 	mov.b	r14,	0(r12)	;
            *(UART_SM.rxPtr++) = rec; // Store byte
        }

        if (0 == UART_SM.rxBytesRemaining) {
    6df0:	1c 42 2c 1c 	mov	&0x1c2c,r12	;0x1c2c
    6df4:	0c 93       	cmp	#0,	r12	;r3 As==00
    6df6:	20 20       	jnz	$+66     	;abs 0x6e38
            UCA0IE &= ~(UCRXIE); // Disable USCI_A0 RX interrupt
    6df8:	92 c3 da 05 	bic	#1,	&0x05da	;r3 As==01
            UART_SM.isRxBusy = FALSE;
    6dfc:	c2 43 28 1c 	mov.b	#0,	&0x1c28	;r3 As==00
    6e00:	1b 3c       	jmp	$+56     	;abs 0x6e38
        }

        break;
    case USCI_UART_UCTXIFG:
        UCA0TXBUF = *(UART_SM.txPtr++); // if interrupt was enabled, there must be bytes
    6e02:	3c 40 22 1c 	mov	#7202,	r12	;#0x1c22
    6e06:	1d 4c 02 00 	mov	2(r12),	r13	;
    6e0a:	0e 4d       	mov	r13,	r14	;
    6e0c:	1e 53       	inc	r14		;
    6e0e:	8c 4e 02 00 	mov	r14,	2(r12)	;
    6e12:	6d 4d       	mov.b	@r13,	r13	;
    6e14:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    6e18:	82 4d ce 05 	mov	r13,	&0x05ce	;
        if (--UART_SM.txBytesRemaining == 0) {
    6e1c:	1d 4c 04 00 	mov	4(r12),	r13	;
    6e20:	3d 53       	add	#-1,	r13	;r3 As==11
    6e22:	8c 4d 04 00 	mov	r13,	4(r12)	;
    6e26:	0d 93       	cmp	#0,	r13	;r3 As==00
    6e28:	07 20       	jnz	$+16     	;abs 0x6e38
            // TODO: actually, this wait should probably happen for blocking version only
            while (UCA0STATW & UCBUSY); // wait for last byte to finish transmitting
    6e2a:	d2 b3 ca 05 	bit.b	#1,	&0x05ca	;r3 As==01
    6e2e:	fd 23       	jnz	$-4      	;abs 0x6e2a
            UCA0IE &= ~(UCTXIE); // Disable USCI_A0 TX interrupt
    6e30:	a2 c3 da 05 	bic	#2,	&0x05da	;r3 As==10
            UART_SM.isTxBusy = FALSE;
    6e34:	c2 43 22 1c 	mov.b	#0,	&0x1c22	;r3 As==00
    case USCI_UART_UCSTTIFG:
        break;
    case USCI_UART_UCTXCPTIFG:
        break;
    }
}
    6e38:	3c 17       	popm	#4,	r15	;16-bit words
    6e3a:	00 13       	reti			

00006e3c <memmove>:
    6e3c:	0a 15       	pushm	#1,	r10	;16-bit words
    6e3e:	0d 9c       	cmp	r12,	r13	;
    6e40:	10 2c       	jc	$+34     	;abs 0x6e62
    6e42:	0b 4d       	mov	r13,	r11	;
    6e44:	0b 5e       	add	r14,	r11	;
    6e46:	0c 9b       	cmp	r11,	r12	;
    6e48:	0c 2c       	jc	$+26     	;abs 0x6e62
    6e4a:	0d 4e       	mov	r14,	r13	;
    6e4c:	3d 53       	add	#-1,	r13	;r3 As==11
    6e4e:	3d 93       	cmp	#-1,	r13	;r3 As==11
    6e50:	13 24       	jz	$+40     	;abs 0x6e78
    6e52:	0f 4d       	mov	r13,	r15	;
    6e54:	0f 8e       	sub	r14,	r15	;
    6e56:	0f 5b       	add	r11,	r15	;
    6e58:	0a 4c       	mov	r12,	r10	;
    6e5a:	0a 5d       	add	r13,	r10	;
    6e5c:	ea 4f 00 00 	mov.b	@r15,	0(r10)	;
    6e60:	f5 3f       	jmp	$-20     	;abs 0x6e4c
    6e62:	0f 43       	clr	r15		;
    6e64:	0f 9e       	cmp	r14,	r15	;
    6e66:	08 24       	jz	$+18     	;abs 0x6e78
    6e68:	0a 4d       	mov	r13,	r10	;
    6e6a:	0a 5f       	add	r15,	r10	;
    6e6c:	0b 4c       	mov	r12,	r11	;
    6e6e:	0b 5f       	add	r15,	r11	;
    6e70:	eb 4a 00 00 	mov.b	@r10,	0(r11)	;
    6e74:	1f 53       	inc	r15		;
    6e76:	f6 3f       	jmp	$-18     	;abs 0x6e64
    6e78:	0a 17       	popm	#1,	r10	;16-bit words
    6e7a:	30 41       	ret			

00006e7c <memset>:
    6e7c:	0f 4c       	mov	r12,	r15	;
    6e7e:	0e 5c       	add	r12,	r14	;
    6e80:	0f 9e       	cmp	r14,	r15	;
    6e82:	04 24       	jz	$+10     	;abs 0x6e8c
    6e84:	cf 4d 00 00 	mov.b	r13,	0(r15)	;
    6e88:	1f 53       	inc	r15		;
    6e8a:	fa 3f       	jmp	$-10     	;abs 0x6e80
    6e8c:	30 41       	ret			

00006e8e <__do_global_ctors_aux>:
    6e8e:	0a 15       	pushm	#1,	r10	;16-bit words
    6e90:	1c 42 f4 44 	mov	&0x44f4,r12	;0x44f4
    6e94:	3c 93       	cmp	#-1,	r12	;r3 As==11
    6e96:	08 24       	jz	$+18     	;abs 0x6ea8
    6e98:	3a 40 f4 44 	mov	#17652,	r10	;#0x44f4
    6e9c:	8c 12       	call	r12		;
    6e9e:	3a 50 fe ff 	add	#65534,	r10	;#0xfffe
    6ea2:	2c 4a       	mov	@r10,	r12	;
    6ea4:	3c 93       	cmp	#-1,	r12	;r3 As==11
    6ea6:	fa 23       	jnz	$-10     	;abs 0x6e9c
    6ea8:	0a 17       	popm	#1,	r10	;16-bit words
    6eaa:	30 41       	ret			

00006eac <call___do_global_ctors_aux>:
    6eac:	30 41       	ret			

00006eae <__msp430_init>:
    6eae:	b0 12 ac 56 	call	#22188		;#0x56ac
    6eb2:	b0 12 8e 6e 	call	#28302		;#0x6e8e
    6eb6:	b0 12 ec 55 	call	#21996		;#0x55ec
    6eba:	b0 12 e0 55 	call	#21984		;#0x55e0
    6ebe:	30 41       	ret			

00006ec0 <__msp430_fini>:
    6ec0:	b0 12 f8 55 	call	#22008		;#0x55f8
    6ec4:	b0 12 5e 56 	call	#22110		;#0x565e
    6ec8:	30 41       	ret			

templog.out:     file format elf32-msp430


Disassembly of section __interrupt_vector_49:

0000fff0 <__interrupt_vector_49>:
    fff0:	80 6d       	interrupt service routine at 0x6d80

Disassembly of section __reset_vector:

0000fffe <__msp430_resetvec_hook>:
    fffe:	a4 55       	interrupt service routine at 0x55a4

Disassembly of section .rodata:

00004400 <dv-0xa6>:
    4400:	63 6f       	.word	0x6f63;	????
    4402:	6d 70       	subc.b	@r0,	r13	;
    4404:	72 65       	addc.b	@r5+,	r2	;
    4406:	73 73       	.word	0x7373;	????
    4408:	65 64       	addc.b	@r4,	r5	;
    440a:	20 62       	addc	#4,	r0	;r2 As==10
    440c:	6c 6f       	addc.b	@r15,	r12	;
    440e:	63 6b       	.word	0x6b63;	????
    4410:	3a 0d 0a 00 	mova	10(r13),r10	;0x0000a
    4414:	25 30       	jn	$+76     	;abs 0x4460
    4416:	34 78       	subc	@r8+,	r4	;
    4418:	20 00 72 61 	bra	&24946		;0x06172
    441c:	74 65       	addc.b	@r5+,	r4	;
    441e:	3a 20       	jnz	$+118    	;abs 0x4494
    4420:	73 61       	.word	0x6173;	????
    4422:	6d 70       	subc.b	@r0,	r13	;
    4424:	6c 65       	addc.b	@r5,	r12	;
    4426:	73 2f       	jc	$-280    	;abs 0x430e
    4428:	62 6c       	addc.b	@r12,	r2	;
    442a:	6f 63       	addc.b	#2,	r15	;r3 As==10
    442c:	6b 3a       	jl	$-808    	;abs 0x4104
    442e:	20 25       	jz	$+578    	;abs 0x4670
    4430:	75 2f       	jc	$-276    	;abs 0x431c
    4432:	25 75       	subc	@r5,	r5	;
    4434:	0d 0a       	mova	@r10,	r13	;
    4436:	00 53       	add	#0,	r0	;r3 As==00
    4438:	69 7a       	subc.b	@r10,	r9	;
    443a:	65 20       	jnz	$+204    	;abs 0x4506
    443c:	6f 66       	addc.b	@r6,	r15	;
    443e:	20 74       	subc	@r4,	r0	;
    4440:	61 73       	subc.b	#2,	r1	;r3 As==10
    4442:	6b 20       	jnz	$+216    	;abs 0x451a
    4444:	25 75       	subc	@r5,	r5	;
    4446:	3a 20       	jnz	$+118    	;abs 0x44bc
    4448:	25 75       	subc	@r5,	r5	;
    444a:	0d 0a       	mova	@r10,	r13	;
    444c:	00 53       	add	#0,	r0	;r3 As==00
    444e:	69 7a       	subc.b	@r10,	r9	;
    4450:	65 20       	jnz	$+204    	;abs 0x451c
    4452:	6f 66       	addc.b	@r6,	r15	;
    4454:	20 63       	addc	#2,	r0	;r3 As==10
    4456:	68 61       	addc.b	@r1,	r8	;
    4458:	6e 6e       	addc.b	@r14,	r14	;
    445a:	65 6c       	addc.b	@r12,	r5	;
    445c:	20 25       	jz	$+578    	;abs 0x469e
    445e:	75 3a       	jl	$-788    	;abs 0x414a
    4460:	20 25       	jz	$+578    	;abs 0x46a2
    4462:	75 0d 0a 00 	mova	r13,	10(r5)	; 0x0000a
    4466:	53 69       	.word	0x6953;	????
    4468:	7a 65       	addc.b	@r5+,	r10	;
    446a:	20 6f       	addc	@r15,	r0	;
    446c:	66 20       	jnz	$+206    	;abs 0x453a
    446e:	64 69       	addc.b	@r9,	r4	;
    4470:	72 74       	subc.b	@r4+,	r2	;
    4472:	79 5f       	add.b	@r15+,	r9	;
    4474:	67 76       	subc.b	@r6,	r7	;
    4476:	73 3a       	jl	$-792    	;abs 0x415e
    4478:	20 25       	jz	$+578    	;abs 0x46ba
    447a:	75 0d 0a 00 	mova	r13,	10(r5)	; 0x0000a
    447e:	53 69       	.word	0x6953;	????
    4480:	7a 65       	addc.b	@r5+,	r10	;
    4482:	20 6f       	addc	@r15,	r0	;
    4484:	66 20       	jnz	$+206    	;abs 0x4552
    4486:	6e 75       	subc.b	@r5,	r14	;
    4488:	6d 5f       	add.b	@r15,	r13	;
    448a:	64 69       	addc.b	@r9,	r4	;
    448c:	72 74       	subc.b	@r4+,	r2	;
    448e:	79 5f       	add.b	@r15+,	r9	;
    4490:	67 76       	subc.b	@r6,	r7	;
    4492:	73 3a       	jl	$-792    	;abs 0x417a
    4494:	20 25       	jz	$+578    	;abs 0x46d6
    4496:	75 0d 0a 00 	mova	r13,	10(r5)	; 0x0000a
    449a:	54 6f 74 61 	addc.b	24948(r15),r4	;0x06174
    449e:	6c 3a       	jl	$-806    	;abs 0x4178
    44a0:	20 25       	jz	$+578    	;abs 0x46e2
    44a2:	75 0d 0a 00 	mova	r13,	10(r5)	; 0x0000a

000044a6 <dv>:
    44a6:	00 ca       	bic	r10,	r0	;
    44a8:	9a 3b       	jl	$-202    	;abs 0x43de
    44aa:	00 e1       	xor	r1,	r0	;
    44ac:	f5 05       	suba	r5,	r5	;
    44ae:	80 96 98 00 	cmp	r6,	0x0098	; PC rel. 0x4548
    44b2:	40 42       	br	r2		;
    44b4:	0f 00       	mova	@r0,	r15	;
    44b6:	a0 86 01 00 	sub	@r6,	0x0001	; PC rel. 0x44b9
    44ba:	10 27       	jz	$-478    	;abs 0x42dc
    44bc:	00 00       	beq			
    44be:	e8 03       	adda	r3,	r8	;
    44c0:	00 00       	beq			
    44c2:	64 00 00 00 	mova	r0,	&262144	; 0x40000
    44c6:	0a 00       	mova	@r0,	r10	;
    44c8:	00 00       	beq			
    44ca:	01 00       	mova	@r0,	r1	;
	...

000044ce <puth.hex>:
    44ce:	30 31       	jn	$+610    	;abs 0x4730
    44d0:	32 33       	jn	$-410    	;abs 0x4336
    44d2:	34 35       	jge	$+618    	;abs 0x473c
    44d4:	36 37       	jge	$-402    	;abs 0x4342
    44d6:	38 39       	jl	$+626    	;abs 0x4748
    44d8:	41 42       	mov.b	r2,	r1	;
    44da:	43 44       	.word	0x4443;	????
    44dc:	45 46       	mov.b	r6,	r5	;
	...

000044e0 <__EH_FRAME_BEGIN__>:
    44e0:	00 00       	beq			
	...

000044e4 <__fini_array_end>:
    44e4:	00 00       	beq			
	...

000044e8 <__CTOR_LIST__>:
    44e8:	ff ff       	.word	0xffff;	????

000044ea <__CTOR_END__>:
	...

000044ec <__DTOR_LIST__>:
    44ec:	ff ff       	.word	0xffff;	????

000044ee <__DTOR_END__>:
	...

Disassembly of section .nv:

000044f0 <_task_task_init>:
    44f0:	a0 57 02 00 	add	@r7,	0x0002	; PC rel. 0x44f4
    44f4:	00 00       	beq			
    44f6:	01 00       	mova	@r0,	r1	;
    44f8:	00 00       	beq			
    44fa:	74 61       	addc.b	@r1+,	r4	;
    44fc:	73 6b       	.word	0x6b73;	????
    44fe:	5f 69 6e 69 	addc.b	26990(r9),r15	;0x0696e
    4502:	74 00 00 00 	mova	r0,	0(r4)	;
	...

0000451a <_task_task_init_dict>:
    451a:	c8 57 04 00 	add.b	r7,	4(r8)	;
    451e:	00 00       	beq			
    4520:	02 00       	mova	@r0,	r2	;
    4522:	00 00       	beq			
    4524:	74 61       	addc.b	@r1+,	r4	;
    4526:	73 6b       	.word	0x6b73;	????
    4528:	5f 69 6e 69 	addc.b	26990(r9),r15	;0x0696e
    452c:	74 5f       	add.b	@r15+,	r4	;
    452e:	64 69       	addc.b	@r9,	r4	;
    4530:	63 74       	.word	0x7463;	????
	...

00004544 <_task_task_sample>:
    4544:	60 58       	add.b	@r8,	r0	;
    4546:	08 00       	mova	@r0,	r8	;
    4548:	00 00       	beq			
    454a:	03 00       	mova	@r0,	r3	;
    454c:	00 00       	beq			
    454e:	74 61       	addc.b	@r1+,	r4	;
    4550:	73 6b       	.word	0x6b73;	????
    4552:	5f 73       	subc.b	#1,	r15	;r3 As==01
    4554:	61 6d       	addc.b	@r13,	r1	;
    4556:	70 6c       	addc.b	@r12+,	r0	;
    4558:	65 00 00 00 	mova	r0,	&327680	; 0x50000
	...

0000456e <_task_task_measure_temp>:
    456e:	d0 58 10 00 	add.b	16(r8),	0x0000	;0x00010, PC rel. 0x4572
    4572:	00 00 
    4574:	04 00       	mova	@r0,	r4	;
    4576:	00 00       	beq			
    4578:	74 61       	addc.b	@r1+,	r4	;
    457a:	73 6b       	.word	0x6b73;	????
    457c:	5f 6d 65 61 	addc.b	24933(r13),r15	;0x06165
    4580:	73 75       	.word	0x7573;	????
    4582:	72 65       	addc.b	@r5+,	r2	;
    4584:	5f 74 65 6d 	subc.b	28005(r4),r15	;0x06d65
    4588:	70 00 00 00 	mova	r0,	0(r0)	;
	...

00004598 <_task_task_letterize>:
    4598:	20 59       	add	@r9,	r0	;
    459a:	20 00 00 00 	bra	&0		;
    459e:	05 00       	mova	@r0,	r5	;
    45a0:	00 00       	beq			
    45a2:	74 61       	addc.b	@r1+,	r4	;
    45a4:	73 6b       	.word	0x6b73;	????
    45a6:	5f 6c 65 74 	addc.b	29797(r12),r15	;0x07465
    45aa:	74 65       	addc.b	@r5+,	r4	;
    45ac:	72 69       	addc.b	@r9+,	r2	;
    45ae:	7a 65       	addc.b	@r5+,	r10	;
	...

000045c2 <_task_task_compress>:
    45c2:	dc 59 40 00 	add.b	64(r9),	0(r12)	;0x00040
    45c6:	00 00 
    45c8:	06 00       	mova	@r0,	r6	;
    45ca:	00 00       	beq			
    45cc:	74 61       	addc.b	@r1+,	r4	;
    45ce:	73 6b       	.word	0x6b73;	????
    45d0:	5f 63       	addc.b	#1,	r15	;r3 As==01
    45d2:	6f 6d       	addc.b	@r13,	r15	;
    45d4:	70 72       	subc.b	#8,	r0	;r2 As==11
    45d6:	65 73       	subc.b	#2,	r5	;r3 As==10
    45d8:	73 00 00 00 	mova	r0,	0(r3)	;
	...

000045ec <_task_task_find_sibling>:
    45ec:	78 5a       	add.b	@r10+,	r8	;
    45ee:	80 00 00 00 	mova	#0,	r0	;
    45f2:	07 00       	mova	@r0,	r7	;
    45f4:	00 00       	beq			
    45f6:	74 61       	addc.b	@r1+,	r4	;
    45f8:	73 6b       	.word	0x6b73;	????
    45fa:	5f 66 69 6e 	addc.b	28265(r6),r15	;0x06e69
    45fe:	64 5f       	add.b	@r15,	r4	;
    4600:	73 69       	.word	0x6973;	????
    4602:	62 6c       	addc.b	@r12,	r2	;
    4604:	69 6e       	addc.b	@r14,	r9	;
    4606:	67 00 00 00 	mova	r0,	&458752	; 0x70000
	...

00004616 <_task_task_add_node>:
    4616:	58 5b 00 01 	add.b	256(r11),r8	;0x00100
    461a:	00 00       	beq			
    461c:	08 00       	mova	@r0,	r8	;
    461e:	00 00       	beq			
    4620:	74 61       	addc.b	@r1+,	r4	;
    4622:	73 6b       	.word	0x6b73;	????
    4624:	5f 61 64 64 	addc.b	25700(r1),r15	;0x06464
    4628:	5f 6e 6f 64 	addc.b	25711(r14),r15	;0x0646f
    462c:	65 00 00 00 	mova	r0,	&327680	; 0x50000
	...

00004640 <_task_task_add_insert>:
    4640:	04 5c       	add	r12,	r4	;
    4642:	00 02       	bra	@r2		;
    4644:	00 00       	beq			
    4646:	09 00       	mova	@r0,	r9	;
    4648:	00 00       	beq			
    464a:	74 61       	addc.b	@r1+,	r4	;
    464c:	73 6b       	.word	0x6b73;	????
    464e:	5f 61 64 64 	addc.b	25700(r1),r15	;0x06464
    4652:	5f 69 6e 73 	addc.b	29550(r9),r15	;0x0736e
    4656:	65 72       	subc.b	#4,	r5	;r2 As==10
    4658:	74 00 00 00 	mova	r0,	0(r4)	;
	...

0000466a <_task_task_append_compressed>:
    466a:	30 5d       	add	@r13+,	r0	;
    466c:	00 04       	bra	@r4		;
    466e:	00 00       	beq			
    4670:	0a 00       	mova	@r0,	r10	;
    4672:	00 00       	beq			
    4674:	74 61       	addc.b	@r1+,	r4	;
    4676:	73 6b       	.word	0x6b73;	????
    4678:	5f 61 70 70 	addc.b	28784(r1),r15	;0x07070
    467c:	65 6e       	addc.b	@r14,	r5	;
    467e:	64 5f       	add.b	@r15,	r4	;
    4680:	63 6f       	.word	0x6f63;	????
    4682:	6d 70       	subc.b	@r0,	r13	;
    4684:	72 65       	addc.b	@r5+,	r2	;
    4686:	73 73       	.word	0x7373;	????
    4688:	65 64       	addc.b	@r4,	r5	;
	...

00004694 <_task_task_print>:
    4694:	a8 5d 00 08 	add	@r13,	2048(r8); 0x0800
    4698:	00 00       	beq			
    469a:	0b 00       	mova	@r0,	r11	;
    469c:	00 00       	beq			
    469e:	74 61       	addc.b	@r1+,	r4	;
    46a0:	73 6b       	.word	0x6b73;	????
    46a2:	5f 70 72 69 	subc.b	0x6972,	r15	;PC rel. 0xb016
    46a6:	6e 74       	subc.b	@r4,	r14	;
	...

000046be <_task_task_done>:
    46be:	74 5e       	add.b	@r14+,	r4	;
    46c0:	00 10       	rrc	r0		;
    46c2:	00 00       	beq			
    46c4:	0c 00       	mova	@r0,	r12	;
    46c6:	00 00       	beq			
    46c8:	74 61       	addc.b	@r1+,	r4	;
    46ca:	73 6b       	.word	0x6b73;	????
    46cc:	5f 64 6f 6e 	addc.b	28271(r4),r15	;0x06e6f
    46d0:	65 00 00 00 	mova	r0,	&327680	; 0x50000
	...

000046e8 <_global_parent_next>:
	...

000046ea <_global_out_len>:
	...

000046ec <_global_letter>:
	...

000046ee <_global_prev_sample>:
	...

000046f0 <_global_letter_idx>:
	...

000046f2 <_global_sample_count>:
	...

000046f4 <_global_dict>:
	...

000052f4 <_global_node_count>:
	...

000052f6 <_global_sample>:
	...

000052f8 <_global_sibling>:
	...

000052fa <_global_parent_node>:
    52fa:	00 00       	beq			
    52fc:	00 00       	beq			
	...

00005300 <_global_parent>:
	...

00005302 <_global_child>:
	...

00005304 <_global_sibling_node>:
    5304:	00 00       	beq			
    5306:	00 00       	beq			
	...

0000530a <_global_symbol>:
	...

0000530c <_global_compressed_data>:
	...

0000548c <_task__entry_task>:
    548c:	4c 61       	addc.b	r1,	r12	;
    548e:	01 00       	mova	@r0,	r1	;
    5490:	00 00       	beq			
    5492:	00 00       	beq			
    5494:	00 00       	beq			
    5496:	5f 65 6e 74 	addc.b	29806(r5),r15	;0x0746e
    549a:	72 79       	subc.b	@r9+,	r2	;
    549c:	5f 74 61 73 	subc.b	29537(r4),r15	;0x07361
    54a0:	6b 00 00 00 	mova	r0,	&720896	; 0xb0000
	...

000054b6 <gv_index>:
	...

000054b8 <num_dirty_gv>:
	...

000054ba <curtime>:
	...

000054bc <context_3>:
    54bc:	00 00       	beq			
    54be:	00 00       	beq			
	...

000054c2 <context_2>:
    54c2:	8c 54 00 00 	add	r4,	0(r12)	;
    54c6:	bc 54 00 00 	add	@r4+,	0(r12)	;

000054c8 <context_1>:
    54c8:	00 00       	beq			
    54ca:	00 00       	beq			
	...

000054ce <context_0>:
    54ce:	8c 54 00 00 	add	r4,	0(r12)	;
    54d2:	c8 54 ce 54 	add.b	r4,	21710(r8); 0x54ce

000054d4 <curctx>:
    54d4:	ce 54 00 00 	add.b	r4,	0(r14)	;

000054d6 <_numBoots>:
	...

000054d8 <data_dest>:
	...

0000551a <data_size>:
	...

0000555c <data>:
	...

Disassembly of section .data:

00001c00 <__datastart>:
	...

00001c02 <__dso_handle>:
	...

Disassembly of section .upper.data:

00010000 <__high_dataend-0x2>:
   10000:	01 00       	mova	@r0,	r1	;

Disassembly of section .bss:

00001c04 <__bssstart>:
	...

00001c06 <dtor_idx.2763>:
	...

00001c08 <object.2776>:
	...

00001c16 <overflow>:
	...

00001c18 <rcount>:
	...

00001c1a <wcount>:
	...

00001c1c <tcount>:
	...

00001c1e <max_num_dirty_gv>:
	...

00001c20 <watchdog_bits>:
	...

00001c22 <UART_SM>:
	...

Disassembly of section .text:

000055a4 <__crt0_start>:
    55a4:	31 40 00 24 	mov	#9216,	r1	;#0x2400

000055a8 <__crt0_init_bss>:
    55a8:	3c 40 04 1c 	mov	#7172,	r12	;#0x1c04
    55ac:	0d 43       	clr	r13		;
    55ae:	3e 40 2a 00 	mov	#42,	r14	;#0x002a
    55b2:	b0 12 44 6e 	call	#28228		;#0x6e44

000055b6 <__crt0_movedata>:
    55b6:	3c 40 00 1c 	mov	#7168,	r12	;#0x1c00
    55ba:	3d 40 9e 55 	mov	#21918,	r13	;#0x559e
    55be:	0d 9c       	cmp	r12,	r13	;
    55c0:	04 24       	jz	$+10     	;abs 0x55ca
    55c2:	3e 40 04 00 	mov	#4,	r14	;
    55c6:	b0 12 04 6e 	call	#28164		;#0x6e04

000055ca <__crt0_call_init_then_main>:
    55ca:	b0 12 76 6e 	call	#28278		;#0x6e76
    55ce:	0c 43       	clr	r12		;
    55d0:	b0 12 88 6b 	call	#27528		;#0x6b88

000055d4 <_msp430_run_init_array>:
    55d4:	34 40 e4 44 	mov	#17636,	r4	;#0x44e4
    55d8:	35 40 e4 44 	mov	#17636,	r5	;#0x44e4
    55dc:	26 43       	mov	#2,	r6	;r3 As==10
    55de:	0d 3c       	jmp	$+28     	;abs 0x55fa

000055e0 <_msp430_run_preinit_array>:
    55e0:	34 40 e4 44 	mov	#17636,	r4	;#0x44e4
    55e4:	35 40 e4 44 	mov	#17636,	r5	;#0x44e4
    55e8:	26 43       	mov	#2,	r6	;r3 As==10
    55ea:	07 3c       	jmp	$+16     	;abs 0x55fa

000055ec <_msp430_run_fini_array>:
    55ec:	34 40 e4 44 	mov	#17636,	r4	;#0x44e4
    55f0:	35 40 e4 44 	mov	#17636,	r5	;#0x44e4
    55f4:	36 40 fe ff 	mov	#65534,	r6	;#0xfffe
    55f8:	00 3c       	jmp	$+2      	;abs 0x55fa

000055fa <_msp430_run_array>:
    55fa:	05 94       	cmp	r4,	r5	;
    55fc:	05 24       	jz	$+12     	;abs 0x5608
    55fe:	27 44       	mov	@r4,	r7	;
    5600:	04 56       	add	r6,	r4	;
    5602:	a7 12       	call	@r7		;
    5604:	10 40 f4 ff 	br	0xfff4		;PC rel. 0x55fa

00005608 <_msp430_run_done>:
    5608:	30 41       	ret			

0000560a <deregister_tm_clones>:
    560a:	3c 40 92 6e 	mov	#28306,	r12	;#0x6e92
    560e:	3c 80 91 6e 	sub	#28305,	r12	;#0x6e91
    5612:	2d 43       	mov	#2,	r13	;r3 As==10
    5614:	0d 9c       	cmp	r12,	r13	;
    5616:	07 2c       	jc	$+16     	;abs 0x5626
    5618:	3d 40 00 00 	mov	#0,	r13	;
    561c:	0d 93       	cmp	#0,	r13	;r3 As==00
    561e:	03 24       	jz	$+8      	;abs 0x5626
    5620:	3c 40 92 6e 	mov	#28306,	r12	;#0x6e92
    5624:	8d 12       	call	r13		;
    5626:	30 41       	ret			

00005628 <register_tm_clones>:
    5628:	3d 40 92 6e 	mov	#28306,	r13	;#0x6e92
    562c:	3d 80 92 6e 	sub	#28306,	r13	;#0x6e92
    5630:	0d 11       	rra	r13		;
    5632:	0c 4d       	mov	r13,	r12	;
    5634:	5c 03       	rrum	#1,	r12	;
    5636:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    563a:	0d 5c       	add	r12,	r13	;
    563c:	0d 11       	rra	r13		;
    563e:	0d 93       	cmp	#0,	r13	;r3 As==00
    5640:	07 24       	jz	$+16     	;abs 0x5650
    5642:	3e 40 00 00 	mov	#0,	r14	;
    5646:	0e 93       	cmp	#0,	r14	;r3 As==00
    5648:	03 24       	jz	$+8      	;abs 0x5650
    564a:	3c 40 92 6e 	mov	#28306,	r12	;#0x6e92
    564e:	8e 12       	call	r14		;
    5650:	30 41       	ret			

00005652 <__do_global_dtors_aux>:
    5652:	0a 15       	pushm	#1,	r10	;16-bit words
    5654:	c2 93 04 1c 	cmp.b	#0,	&0x1c04	;r3 As==00
    5658:	20 20       	jnz	$+66     	;abs 0x569a
    565a:	1c 42 06 1c 	mov	&0x1c06,r12	;0x1c06
    565e:	3a 40 ee 44 	mov	#17646,	r10	;#0x44ee
    5662:	3a 80 ec 44 	sub	#17644,	r10	;#0x44ec
    5666:	0a 11       	rra	r10		;
    5668:	3a 53       	add	#-1,	r10	;r3 As==11
    566a:	0c 9a       	cmp	r10,	r12	;
    566c:	0b 2c       	jc	$+24     	;abs 0x5684
    566e:	1c 53       	inc	r12		;
    5670:	82 4c 06 1c 	mov	r12,	&0x1c06	;
    5674:	0c 5c       	rla	r12		;
    5676:	1c 4c ec 44 	mov	17644(r12),r12	;0x044ec
    567a:	8c 12       	call	r12		;
    567c:	1c 42 06 1c 	mov	&0x1c06,r12	;0x1c06
    5680:	0c 9a       	cmp	r10,	r12	;
    5682:	f5 2b       	jnc	$-20     	;abs 0x566e
    5684:	b0 12 0a 56 	call	#22026		;#0x560a
    5688:	3d 40 00 00 	mov	#0,	r13	;
    568c:	0d 93       	cmp	#0,	r13	;r3 As==00
    568e:	03 24       	jz	$+8      	;abs 0x5696
    5690:	3c 40 e0 44 	mov	#17632,	r12	;#0x44e0
    5694:	8d 12       	call	r13		;
    5696:	d2 43 04 1c 	mov.b	#1,	&0x1c04	;r3 As==01
    569a:	0a 17       	popm	#1,	r10	;16-bit words
    569c:	30 41       	ret			

0000569e <call___do_global_dtors_aux>:
    569e:	30 41       	ret			

000056a0 <frame_dummy>:
    56a0:	3e 40 00 00 	mov	#0,	r14	;
    56a4:	0e 93       	cmp	#0,	r14	;r3 As==00
    56a6:	05 24       	jz	$+12     	;abs 0x56b2
    56a8:	3c 40 e0 44 	mov	#17632,	r12	;#0x44e0
    56ac:	3d 40 08 1c 	mov	#7176,	r13	;#0x1c08
    56b0:	8e 12       	call	r14		;
    56b2:	3c 40 00 1c 	mov	#7168,	r12	;#0x1c00
    56b6:	8c 93 00 00 	cmp	#0,	0(r12)	;r3 As==00
    56ba:	03 20       	jnz	$+8      	;abs 0x56c2
    56bc:	b0 12 28 56 	call	#22056		;#0x5628
    56c0:	30 41       	ret			
    56c2:	3d 40 00 00 	mov	#0,	r13	;
    56c6:	0d 93       	cmp	#0,	r13	;r3 As==00
    56c8:	f9 27       	jz	$-12     	;abs 0x56bc
    56ca:	8d 12       	call	r13		;
    56cc:	f7 3f       	jmp	$-16     	;abs 0x56bc

000056ce <call_frame_dummy>:
    56ce:	30 41       	ret			

000056d0 <TimerB1_ISR>:
    56d0:	04 12       	push	r4		;
    56d2:	04 41       	mov	r1,	r4	;
    56d4:	0c 12       	push	r12		;
    56d6:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    56da:	3c f0 fd ff 	and	#65533,	r12	;#0xfffd
    56de:	82 4c c0 03 	mov	r12,	&0x03c0	;
    56e2:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    56e6:	0c 93       	cmp	#0,	r12	;r3 As==00
    56e8:	17 24       	jz	$+48     	;abs 0x5718
    56ea:	00 3c       	jmp	$+2      	;abs 0x56ec
    56ec:	1c 42 16 1c 	mov	&0x1c16,r12	;0x1c16
    56f0:	1c 53       	inc	r12		;
    56f2:	82 4c 16 1c 	mov	r12,	&0x1c16	;
    56f6:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    56fa:	2c d2       	bis	#4,	r12	;r2 As==10
    56fc:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5700:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5704:	2c d3       	bis	#2,	r12	;r3 As==10
    5706:	82 4c c0 03 	mov	r12,	&0x03c0	;
    570a:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    570e:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    5712:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5716:	00 3c       	jmp	$+2      	;abs 0x5718
    5718:	3c 41       	pop	r12		;
    571a:	34 41       	pop	r4		;
    571c:	00 13       	reti			
	...

00005720 <init>:
    5720:	04 12       	push	r4		;
    5722:	04 41       	mov	r1,	r4	;
    5724:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5728:	3c f0 ff e6 	and	#59135,	r12	;#0xe6ff
    572c:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5730:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5734:	3c d0 00 02 	bis	#512,	r12	;#0x0200
    5738:	82 4c c0 03 	mov	r12,	&0x03c0	;
    573c:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5740:	3c d0 c0 00 	bis	#192,	r12	;#0x00c0
    5744:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5748:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    574c:	3c f0 ef ff 	and	#65519,	r12	;#0xffef
    5750:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5754:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5758:	3c d0 20 00 	bis	#32,	r12	;#0x0020
    575c:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5760:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5764:	2c d3       	bis	#2,	r12	;r3 As==10
    5766:	82 4c c0 03 	mov	r12,	&0x03c0	;
    576a:	b0 12 68 61 	call	#24936		;#0x6168
    576e:	5c 42 04 02 	mov.b	&0x0204,r12	;0x0204
    5772:	2c d3       	bis	#2,	r12	;r3 As==10
    5774:	4d 4c       	mov.b	r12,	r13	;
    5776:	c2 4d 04 02 	mov.b	r13,	&0x0204	;
    577a:	5c 42 04 02 	mov.b	&0x0204,r12	;0x0204
    577e:	2c d2       	bis	#4,	r12	;r2 As==10
    5780:	4d 4c       	mov.b	r12,	r13	;
    5782:	c2 4d 04 02 	mov.b	r13,	&0x0204	;
    5786:	5c 42 04 02 	mov.b	&0x0204,r12	;0x0204
    578a:	1c d3       	bis	#1,	r12	;r3 As==01
    578c:	4d 4c       	mov.b	r12,	r13	;
    578e:	c2 4d 04 02 	mov.b	r13,	&0x0204	;
    5792:	b0 12 e8 66 	call	#26344		;#0x66e8
    5796:	32 d2       	eint			
    5798:	03 43       	nop			
    579a:	34 41       	pop	r4		;
    579c:	30 41       	ret			
	...

000057a0 <task_init>:
    57a0:	04 12       	push	r4		;
    57a2:	04 41       	mov	r1,	r4	;
    57a4:	82 43 e8 46 	mov	#0,	&0x46e8	;r3 As==00
    57a8:	82 43 ea 46 	mov	#0,	&0x46ea	;r3 As==00
    57ac:	82 43 ec 46 	mov	#0,	&0x46ec	;r3 As==00
    57b0:	82 43 ee 46 	mov	#0,	&0x46ee	;r3 As==00
    57b4:	82 43 f0 46 	mov	#0,	&0x46f0	;r3 As==00
    57b8:	92 43 f2 46 	mov	#1,	&0x46f2	;r3 As==01
    57bc:	3f 40 1a 45 	mov	#17690,	r15	;#0x451a
    57c0:	b0 12 58 68 	call	#26712		;#0x6858
    57c4:	34 41       	pop	r4		;
    57c6:	30 41       	ret			

000057c8 <task_init_dict>:
    57c8:	04 12       	push	r4		;
    57ca:	04 41       	mov	r1,	r4	;
    57cc:	31 80 0a 00 	sub	#10,	r1	;#0x000a
    57d0:	1c 42 ec 46 	mov	&0x46ec,r12	;0x46ec
    57d4:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    57d8:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    57dc:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa
    57e0:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    57e4:	1c 44 fe ff 	mov	-2(r4),	r12	;
    57e8:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    57ec:	3e 40 06 00 	mov	#6,	r14	;
    57f0:	0f 4c       	mov	r12,	r15	;
    57f2:	b0 12 b8 6b 	call	#27576		;#0x6bb8
    57f6:	1c 44 fc ff 	mov	-4(r4),	r12	;
    57fa:	8f 4c f8 46 	mov	r12,	18168(r15); 0x46f8
    57fe:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5802:	8f 4c f6 46 	mov	r12,	18166(r15); 0x46f6
    5806:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    580a:	8f 4c f4 46 	mov	r12,	18164(r15); 0x46f4
    580e:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5812:	1c 53       	inc	r12		;
    5814:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5818:	3c 90 00 01 	cmp	#256,	r12	;#0x0100
    581c:	0d 2c       	jc	$+28     	;abs 0x5838
    581e:	00 3c       	jmp	$+2      	;abs 0x5820
    5820:	3e 40 ec 46 	mov	#18156,	r14	;#0x46ec
    5824:	0f 44       	mov	r4,	r15	;
    5826:	2f 83       	decd	r15		;
    5828:	2d 43       	mov	#2,	r13	;r3 As==10
    582a:	b0 12 b8 69 	call	#27064		;#0x69b8
    582e:	3f 40 1a 45 	mov	#17690,	r15	;#0x451a
    5832:	b0 12 58 68 	call	#26712		;#0x6858
    5836:	0f 3c       	jmp	$+32     	;abs 0x5856
    5838:	b2 40 00 01 	mov	#256,	&0x52f4	;#0x0100
    583c:	f4 52 
    583e:	3e 40 ec 46 	mov	#18156,	r14	;#0x46ec
    5842:	0f 44       	mov	r4,	r15	;
    5844:	2f 83       	decd	r15		;
    5846:	2d 43       	mov	#2,	r13	;r3 As==10
    5848:	b0 12 b8 69 	call	#27064		;#0x69b8
    584c:	3f 40 44 45 	mov	#17732,	r15	;#0x4544
    5850:	b0 12 58 68 	call	#26712		;#0x6858
    5854:	00 3c       	jmp	$+2      	;abs 0x5856
    5856:	31 50 0a 00 	add	#10,	r1	;#0x000a
    585a:	34 41       	pop	r4		;
    585c:	30 41       	ret			
	...

00005860 <task_sample>:
    5860:	04 12       	push	r4		;
    5862:	04 41       	mov	r1,	r4	;
    5864:	21 82       	sub	#4,	r1	;r2 As==10
    5866:	1c 42 f0 46 	mov	&0x46f0,r12	;0x46f0
    586a:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    586e:	1c 53       	inc	r12		;
    5870:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5874:	2c 93       	cmp	#2,	r12	;r3 As==10
    5876:	04 20       	jnz	$+10     	;abs 0x5880
    5878:	00 3c       	jmp	$+2      	;abs 0x587a
    587a:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    587e:	00 3c       	jmp	$+2      	;abs 0x5880
    5880:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5884:	0c 93       	cmp	#0,	r12	;r3 As==00
    5886:	11 20       	jnz	$+36     	;abs 0x58aa
    5888:	00 3c       	jmp	$+2      	;abs 0x588a
    588a:	1c 44 fc ff 	mov	-4(r4),	r12	;
    588e:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5892:	3e 40 f0 46 	mov	#18160,	r14	;#0x46f0
    5896:	0f 44       	mov	r4,	r15	;
    5898:	2f 83       	decd	r15		;
    589a:	2d 43       	mov	#2,	r13	;r3 As==10
    589c:	b0 12 b8 69 	call	#27064		;#0x69b8
    58a0:	3f 40 6e 45 	mov	#17774,	r15	;#0x456e
    58a4:	b0 12 58 68 	call	#26712		;#0x6858
    58a8:	10 3c       	jmp	$+34     	;abs 0x58ca
    58aa:	1c 44 fc ff 	mov	-4(r4),	r12	;
    58ae:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    58b2:	3e 40 f0 46 	mov	#18160,	r14	;#0x46f0
    58b6:	0f 44       	mov	r4,	r15	;
    58b8:	2f 83       	decd	r15		;
    58ba:	2d 43       	mov	#2,	r13	;r3 As==10
    58bc:	b0 12 b8 69 	call	#27064		;#0x69b8
    58c0:	3f 40 98 45 	mov	#17816,	r15	;#0x4598
    58c4:	b0 12 58 68 	call	#26712		;#0x6858
    58c8:	00 3c       	jmp	$+2      	;abs 0x58ca
    58ca:	21 52       	add	#4,	r1	;r2 As==10
    58cc:	34 41       	pop	r4		;
    58ce:	30 41       	ret			

000058d0 <task_measure_temp>:
    58d0:	04 12       	push	r4		;
    58d2:	04 41       	mov	r1,	r4	;
    58d4:	31 82       	sub	#8,	r1	;r2 As==11
    58d6:	3e 40 ee 46 	mov	#18158,	r14	;#0x46ee
    58da:	1c 42 ee 46 	mov	&0x46ee,r12	;0x46ee
    58de:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    58e2:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    58e6:	0f 4c       	mov	r12,	r15	;
    58e8:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    58ec:	b0 12 84 61 	call	#24964		;#0x6184
    58f0:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    58f4:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    58f8:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    58fc:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5900:	82 4c f6 52 	mov	r12,	&0x52f6	;
    5904:	0f 44       	mov	r4,	r15	;
    5906:	2f 83       	decd	r15		;
    5908:	2d 43       	mov	#2,	r13	;r3 As==10
    590a:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    590e:	b0 12 b8 69 	call	#27064		;#0x69b8
    5912:	3f 40 98 45 	mov	#17816,	r15	;#0x4598
    5916:	b0 12 58 68 	call	#26712		;#0x6858
    591a:	31 52       	add	#8,	r1	;r2 As==11
    591c:	34 41       	pop	r4		;
    591e:	30 41       	ret			

00005920 <task_letterize>:
    5920:	04 12       	push	r4		;
    5922:	04 41       	mov	r1,	r4	;
    5924:	31 80 10 00 	sub	#16,	r1	;#0x0010
    5928:	1c 42 f0 46 	mov	&0x46f0,r12	;0x46f0
    592c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5930:	0c 93       	cmp	#0,	r12	;r3 As==00
    5932:	04 20       	jnz	$+10     	;abs 0x593c
    5934:	00 3c       	jmp	$+2      	;abs 0x5936
    5936:	a4 43 fe ff 	mov	#2,	-2(r4)	;r3 As==10, 0xfffe
    593a:	06 3c       	jmp	$+14     	;abs 0x5948
    593c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5940:	3c 53       	add	#-1,	r12	;r3 As==11
    5942:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5946:	00 3c       	jmp	$+2      	;abs 0x5948
    5948:	1c 44 fe ff 	mov	-2(r4),	r12	;
    594c:	0c 5c       	rla	r12		;
    594e:	0c 5c       	rla	r12		;
    5950:	0c 5c       	rla	r12		;
    5952:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5956:	1c 42 f6 52 	mov	&0x52f6,r12	;0x52f6
    595a:	5d 44 fc ff 	mov.b	-4(r4),	r13	;
    595e:	3e 40 ff 00 	mov	#255,	r14	;#0x00ff
    5962:	4d 93       	cmp.b	#0,	r13	;r3 As==00
    5964:	4f 4d       	mov.b	r13,	r15	;
    5966:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    596a:	c4 4d f7 ff 	mov.b	r13,	-9(r4)	; 0xfff7
    596e:	84 4e f4 ff 	mov	r14,	-12(r4)	; 0xfff4
    5972:	c4 4f f3 ff 	mov.b	r15,	-13(r4)	; 0xfff3
    5976:	0b 24       	jz	$+24     	;abs 0x598e
    5978:	5c 44 f3 ff 	mov.b	-13(r4),r12	;0xfffffff3
    597c:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    5980:	0d 5d       	rla	r13		;
    5982:	5c 83       	dec.b	r12		;
    5984:	84 4d f4 ff 	mov	r13,	-12(r4)	; 0xfff4
    5988:	c4 4c f3 ff 	mov.b	r12,	-13(r4)	; 0xfff3
    598c:	f5 23       	jnz	$-20     	;abs 0x5978
    598e:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    5992:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    5996:	0d fc       	and	r12,	r13	;
    5998:	5e 44 f7 ff 	mov.b	-9(r4),	r14	;
    599c:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    599e:	c4 4e f2 ff 	mov.b	r14,	-14(r4)	; 0xfff2
    59a2:	84 4d f0 ff 	mov	r13,	-16(r4)	; 0xfff0
    59a6:	0c 24       	jz	$+26     	;abs 0x59c0
    59a8:	5c 44 f2 ff 	mov.b	-14(r4),r12	;0xfffffff2
    59ac:	1d 44 f0 ff 	mov	-16(r4),r13	;0xfffffff0
    59b0:	12 c3       	clrc			
    59b2:	0d 10       	rrc	r13		;
    59b4:	5c 83       	dec.b	r12		;
    59b6:	84 4d f0 ff 	mov	r13,	-16(r4)	; 0xfff0
    59ba:	c4 4c f2 ff 	mov.b	r12,	-14(r4)	; 0xfff2
    59be:	f4 23       	jnz	$-22     	;abs 0x59a8
    59c0:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    59c4:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    59c8:	82 4c ec 46 	mov	r12,	&0x46ec	;
    59cc:	3f 40 c2 45 	mov	#17858,	r15	;#0x45c2
    59d0:	b0 12 58 68 	call	#26712		;#0x6858
    59d4:	31 50 10 00 	add	#16,	r1	;#0x0010
    59d8:	34 41       	pop	r4		;
    59da:	30 41       	ret			

000059dc <task_compress>:
    59dc:	04 12       	push	r4		;
    59de:	04 41       	mov	r1,	r4	;
    59e0:	31 80 0c 00 	sub	#12,	r1	;#0x000c
    59e4:	3e 40 f2 46 	mov	#18162,	r14	;#0x46f2
    59e8:	1c 42 f2 46 	mov	&0x46f2,r12	;0x46f2
    59ec:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    59f0:	1c 42 e8 46 	mov	&0x46e8,r12	;0x46e8
    59f4:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    59f8:	3d 40 06 00 	mov	#6,	r13	;
    59fc:	0f 4c       	mov	r12,	r15	;
    59fe:	84 4e f4 ff 	mov	r14,	-12(r4)	; 0xfff4
    5a02:	0e 4d       	mov	r13,	r14	;
    5a04:	b0 12 b8 6b 	call	#27576		;#0x6bb8
    5a08:	1c 4f f8 46 	mov	18168(r15),r12	;0x046f8
    5a0c:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5a10:	1c 4f f6 46 	mov	18166(r15),r12	;0x046f6
    5a14:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5a18:	1c 4f f4 46 	mov	18164(r15),r12	;0x046f4
    5a1c:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5a20:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5a24:	82 4c f8 52 	mov	r12,	&0x52f8	;
    5a28:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5a2c:	82 4c fe 52 	mov	r12,	&0x52fe	;
    5a30:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5a34:	82 4c fc 52 	mov	r12,	&0x52fc	;
    5a38:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    5a3c:	82 4c fa 52 	mov	r12,	&0x52fa	;
    5a40:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    5a44:	82 4c 00 53 	mov	r12,	&0x5300	;
    5a48:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5a4c:	82 4c 02 53 	mov	r12,	&0x5302	;
    5a50:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5a54:	1c 53       	inc	r12		;
    5a56:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5a5a:	0f 44       	mov	r4,	r15	;
    5a5c:	2f 83       	decd	r15		;
    5a5e:	2d 43       	mov	#2,	r13	;r3 As==10
    5a60:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfffffff4
    5a64:	b0 12 b8 69 	call	#27064		;#0x69b8
    5a68:	3f 40 ec 45 	mov	#17900,	r15	;#0x45ec
    5a6c:	b0 12 58 68 	call	#26712		;#0x6858
    5a70:	31 50 0c 00 	add	#12,	r1	;#0x000c
    5a74:	34 41       	pop	r4		;
    5a76:	30 41       	ret			

00005a78 <task_find_sibling>:
    5a78:	04 12       	push	r4		;
    5a7a:	04 41       	mov	r1,	r4	;
    5a7c:	31 82       	sub	#8,	r1	;r2 As==11
    5a7e:	1c 42 f8 52 	mov	&0x52f8,r12	;0x52f8
    5a82:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5a86:	0c 93       	cmp	#0,	r12	;r3 As==00
    5a88:	41 24       	jz	$+132    	;abs 0x5b0c
    5a8a:	00 3c       	jmp	$+2      	;abs 0x5a8c
    5a8c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5a90:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5a94:	3e 40 06 00 	mov	#6,	r14	;
    5a98:	0f 4c       	mov	r12,	r15	;
    5a9a:	b0 12 b8 6b 	call	#27576		;#0x6bb8
    5a9e:	0c 4f       	mov	r15,	r12	;
    5aa0:	3c 50 f4 46 	add	#18164,	r12	;#0x46f4
    5aa4:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5aa8:	1c 4f f4 46 	mov	18164(r15),r12	;0x046f4
    5aac:	1e 42 ec 46 	mov	&0x46ec,r14	;0x46ec
    5ab0:	0c 9e       	cmp	r14,	r12	;
    5ab2:	11 20       	jnz	$+36     	;abs 0x5ad6
    5ab4:	00 3c       	jmp	$+2      	;abs 0x5ab6
    5ab6:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5aba:	82 4c e8 46 	mov	r12,	&0x46e8	;
    5abe:	3e 40 f8 52 	mov	#21240,	r14	;#0x52f8
    5ac2:	0f 44       	mov	r4,	r15	;
    5ac4:	2f 83       	decd	r15		;
    5ac6:	2d 43       	mov	#2,	r13	;r3 As==10
    5ac8:	b0 12 b8 69 	call	#27064		;#0x69b8
    5acc:	3f 40 98 45 	mov	#17816,	r15	;#0x4598
    5ad0:	b0 12 58 68 	call	#26712		;#0x6858
    5ad4:	1a 3c       	jmp	$+54     	;abs 0x5b0a
    5ad6:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5ada:	1c 4c 02 00 	mov	2(r12),	r12	;
    5ade:	0c 93       	cmp	#0,	r12	;r3 As==00
    5ae0:	13 24       	jz	$+40     	;abs 0x5b08
    5ae2:	00 3c       	jmp	$+2      	;abs 0x5ae4
    5ae4:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5ae8:	1c 4c 02 00 	mov	2(r12),	r12	;
    5aec:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5af0:	3e 40 f8 52 	mov	#21240,	r14	;#0x52f8
    5af4:	0f 44       	mov	r4,	r15	;
    5af6:	2f 83       	decd	r15		;
    5af8:	2d 43       	mov	#2,	r13	;r3 As==10
    5afa:	b0 12 b8 69 	call	#27064		;#0x69b8
    5afe:	3f 40 ec 45 	mov	#17900,	r15	;#0x45ec
    5b02:	b0 12 58 68 	call	#26712		;#0x6858
    5b06:	00 3c       	jmp	$+2      	;abs 0x5b08
    5b08:	00 3c       	jmp	$+2      	;abs 0x5b0a
    5b0a:	00 3c       	jmp	$+2      	;abs 0x5b0c
    5b0c:	1c 42 ec 46 	mov	&0x46ec,r12	;0x46ec
    5b10:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5b14:	82 4c e8 46 	mov	r12,	&0x46e8	;
    5b18:	1c 42 02 53 	mov	&0x5302,r12	;0x5302
    5b1c:	0c 93       	cmp	#0,	r12	;r3 As==00
    5b1e:	0d 20       	jnz	$+28     	;abs 0x5b3a
    5b20:	00 3c       	jmp	$+2      	;abs 0x5b22
    5b22:	3e 40 f8 52 	mov	#21240,	r14	;#0x52f8
    5b26:	0f 44       	mov	r4,	r15	;
    5b28:	2f 83       	decd	r15		;
    5b2a:	2d 43       	mov	#2,	r13	;r3 As==10
    5b2c:	b0 12 b8 69 	call	#27064		;#0x69b8
    5b30:	3f 40 40 46 	mov	#17984,	r15	;#0x4640
    5b34:	b0 12 58 68 	call	#26712		;#0x6858
    5b38:	0c 3c       	jmp	$+26     	;abs 0x5b52
    5b3a:	3e 40 f8 52 	mov	#21240,	r14	;#0x52f8
    5b3e:	0f 44       	mov	r4,	r15	;
    5b40:	2f 83       	decd	r15		;
    5b42:	2d 43       	mov	#2,	r13	;r3 As==10
    5b44:	b0 12 b8 69 	call	#27064		;#0x69b8
    5b48:	3f 40 16 46 	mov	#17942,	r15	;#0x4616
    5b4c:	b0 12 58 68 	call	#26712		;#0x6858
    5b50:	00 3c       	jmp	$+2      	;abs 0x5b52
    5b52:	31 52       	add	#8,	r1	;r2 As==11
    5b54:	34 41       	pop	r4		;
    5b56:	30 41       	ret			

00005b58 <task_add_node>:
    5b58:	04 12       	push	r4		;
    5b5a:	04 41       	mov	r1,	r4	;
    5b5c:	31 80 0e 00 	sub	#14,	r1	;#0x000e
    5b60:	1c 42 f8 52 	mov	&0x52f8,r12	;0x52f8
    5b64:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5b68:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5b6c:	3e 40 06 00 	mov	#6,	r14	;
    5b70:	0f 4c       	mov	r12,	r15	;
    5b72:	b0 12 b8 6b 	call	#27576		;#0x6bb8
    5b76:	0c 4f       	mov	r15,	r12	;
    5b78:	3c 50 f4 46 	add	#18164,	r12	;#0x46f4
    5b7c:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5b80:	1c 4f f6 46 	mov	18166(r15),r12	;0x046f6
    5b84:	0c 93       	cmp	#0,	r12	;r3 As==00
    5b86:	15 24       	jz	$+44     	;abs 0x5bb2
    5b88:	00 3c       	jmp	$+2      	;abs 0x5b8a
    5b8a:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5b8e:	1c 4c 02 00 	mov	2(r12),	r12	;
    5b92:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5b96:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5b9a:	3e 40 f8 52 	mov	#21240,	r14	;#0x52f8
    5b9e:	0f 44       	mov	r4,	r15	;
    5ba0:	2f 83       	decd	r15		;
    5ba2:	2d 43       	mov	#2,	r13	;r3 As==10
    5ba4:	b0 12 b8 69 	call	#27064		;#0x69b8
    5ba8:	3f 40 16 46 	mov	#17942,	r15	;#0x4616
    5bac:	b0 12 58 68 	call	#26712		;#0x6858
    5bb0:	25 3c       	jmp	$+76     	;abs 0x5bfc
    5bb2:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5bb6:	1d 4c 04 00 	mov	4(r12),	r13	;
    5bba:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    5bbe:	1d 4c 02 00 	mov	2(r12),	r13	;
    5bc2:	84 4d f4 ff 	mov	r13,	-12(r4)	; 0xfff4
    5bc6:	2c 4c       	mov	@r12,	r12	;
    5bc8:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    5bcc:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    5bd0:	82 4c 08 53 	mov	r12,	&0x5308	;
    5bd4:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    5bd8:	82 4c 06 53 	mov	r12,	&0x5306	;
    5bdc:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    5be0:	82 4c 04 53 	mov	r12,	&0x5304	;
    5be4:	3e 40 f8 52 	mov	#21240,	r14	;#0x52f8
    5be8:	0f 44       	mov	r4,	r15	;
    5bea:	2f 83       	decd	r15		;
    5bec:	2d 43       	mov	#2,	r13	;r3 As==10
    5bee:	b0 12 b8 69 	call	#27064		;#0x69b8
    5bf2:	3f 40 40 46 	mov	#17984,	r15	;#0x4640
    5bf6:	b0 12 58 68 	call	#26712		;#0x6858
    5bfa:	00 3c       	jmp	$+2      	;abs 0x5bfc
    5bfc:	31 50 0e 00 	add	#14,	r1	;#0x000e
    5c00:	34 41       	pop	r4		;
    5c02:	30 41       	ret			

00005c04 <task_add_insert>:
    5c04:	04 12       	push	r4		;
    5c06:	04 41       	mov	r1,	r4	;
    5c08:	31 80 1a 00 	sub	#26,	r1	;#0x001a
    5c0c:	1c 42 f4 52 	mov	&0x52f4,r12	;0x52f4
    5c10:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5c14:	3c 90 00 02 	cmp	#512,	r12	;#0x0200
    5c18:	03 20       	jnz	$+8      	;abs 0x5c20
    5c1a:	00 3c       	jmp	$+2      	;abs 0x5c1c
    5c1c:	00 3c       	jmp	$+2      	;abs 0x5c1e
    5c1e:	ff 3f       	jmp	$+0      	;abs 0x5c1e
    5c20:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5c24:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5c28:	1c 42 ec 46 	mov	&0x46ec,r12	;0x46ec
    5c2c:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    5c30:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8
    5c34:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa
    5c38:	1c 42 fe 52 	mov	&0x52fe,r12	;0x52fe
    5c3c:	0c 93       	cmp	#0,	r12	;r3 As==00
    5c3e:	27 20       	jnz	$+80     	;abs 0x5c8e
    5c40:	00 3c       	jmp	$+2      	;abs 0x5c42
    5c42:	1c 42 fe 52 	mov	&0x52fe,r12	;0x52fe
    5c46:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    5c4a:	1c 42 fc 52 	mov	&0x52fc,r12	;0x52fc
    5c4e:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    5c52:	1c 42 fa 52 	mov	&0x52fa,r12	;0x52fa
    5c56:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    5c5a:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5c5e:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    5c62:	1c 42 00 53 	mov	&0x5300,r12	;0x5300
    5c66:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    5c6a:	3e 40 06 00 	mov	#6,	r14	;
    5c6e:	0f 4c       	mov	r12,	r15	;
    5c70:	b0 12 b8 6b 	call	#27576		;#0x6bb8
    5c74:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    5c78:	8f 4c f8 46 	mov	r12,	18168(r15); 0x46f8
    5c7c:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    5c80:	8f 4c f6 46 	mov	r12,	18166(r15); 0x46f6
    5c84:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    5c88:	8f 4c f4 46 	mov	r12,	18164(r15); 0x46f4
    5c8c:	27 3c       	jmp	$+80     	;abs 0x5cdc
    5c8e:	1c 42 f8 52 	mov	&0x52f8,r12	;0x52f8
    5c92:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    5c96:	1c 42 08 53 	mov	&0x5308,r12	;0x5308
    5c9a:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    5c9e:	1c 42 06 53 	mov	&0x5306,r12	;0x5306
    5ca2:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    5ca6:	1c 42 04 53 	mov	&0x5304,r12	;0x5304
    5caa:	84 4c e6 ff 	mov	r12,	-26(r4)	; 0xffe6
    5cae:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5cb2:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    5cb6:	1f 44 ec ff 	mov	-20(r4),r15	;0xffffffec
    5cba:	3e 40 06 00 	mov	#6,	r14	;
    5cbe:	b0 12 b8 6b 	call	#27576		;#0x6bb8
    5cc2:	1c 44 ea ff 	mov	-22(r4),r12	;0xffffffea
    5cc6:	8f 4c f8 46 	mov	r12,	18168(r15); 0x46f8
    5cca:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    5cce:	8f 4c f6 46 	mov	r12,	18166(r15); 0x46f6
    5cd2:	1c 44 e6 ff 	mov	-26(r4),r12	;0xffffffe6
    5cd6:	8f 4c f4 46 	mov	r12,	18164(r15); 0x46f4
    5cda:	00 3c       	jmp	$+2      	;abs 0x5cdc
    5cdc:	1f 44 fc ff 	mov	-4(r4),	r15	;
    5ce0:	3e 40 06 00 	mov	#6,	r14	;
    5ce4:	b0 12 b8 6b 	call	#27576		;#0x6bb8
    5ce8:	1e 44 fa ff 	mov	-6(r4),	r14	;
    5cec:	8f 4e f8 46 	mov	r14,	18168(r15); 0x46f8
    5cf0:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    5cf4:	8f 4e f6 46 	mov	r14,	18166(r15); 0x46f6
    5cf8:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfffffff6
    5cfc:	8f 4e f4 46 	mov	r14,	18164(r15); 0x46f4
    5d00:	1e 42 00 53 	mov	&0x5300,r14	;0x5300
    5d04:	82 4e 0a 53 	mov	r14,	&0x530a	;
    5d08:	1e 44 fe ff 	mov	-2(r4),	r14	;
    5d0c:	1e 53       	inc	r14		;
    5d0e:	84 4e fe ff 	mov	r14,	-2(r4)	; 0xfffe
    5d12:	3e 40 f4 52 	mov	#21236,	r14	;#0x52f4
    5d16:	0f 44       	mov	r4,	r15	;
    5d18:	2f 83       	decd	r15		;
    5d1a:	2d 43       	mov	#2,	r13	;r3 As==10
    5d1c:	b0 12 b8 69 	call	#27064		;#0x69b8
    5d20:	3f 40 6a 46 	mov	#18026,	r15	;#0x466a
    5d24:	b0 12 58 68 	call	#26712		;#0x6858
    5d28:	31 50 1a 00 	add	#26,	r1	;#0x001a
    5d2c:	34 41       	pop	r4		;
    5d2e:	30 41       	ret			

00005d30 <task_append_compressed>:
    5d30:	04 12       	push	r4		;
    5d32:	04 41       	mov	r1,	r4	;
    5d34:	31 80 06 00 	sub	#6,	r1	;
    5d38:	1c 42 ea 46 	mov	&0x46ea,r12	;0x46ea
    5d3c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5d40:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5d44:	1d 42 0a 53 	mov	&0x530a,r13	;0x530a
    5d48:	3e 40 06 00 	mov	#6,	r14	;
    5d4c:	0f 4c       	mov	r12,	r15	;
    5d4e:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    5d52:	b0 12 b8 6b 	call	#27576		;#0x6bb8
    5d56:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5d5a:	8f 4c 0c 53 	mov	r12,	21260(r15); 0x530c
    5d5e:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5d62:	1c 53       	inc	r12		;
    5d64:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5d68:	3c 90 40 00 	cmp	#64,	r12	;#0x0040
    5d6c:	0d 20       	jnz	$+28     	;abs 0x5d88
    5d6e:	00 3c       	jmp	$+2      	;abs 0x5d70
    5d70:	3e 40 ea 46 	mov	#18154,	r14	;#0x46ea
    5d74:	0f 44       	mov	r4,	r15	;
    5d76:	2f 83       	decd	r15		;
    5d78:	2d 43       	mov	#2,	r13	;r3 As==10
    5d7a:	b0 12 b8 69 	call	#27064		;#0x69b8
    5d7e:	3f 40 94 46 	mov	#18068,	r15	;#0x4694
    5d82:	b0 12 58 68 	call	#26712		;#0x6858
    5d86:	0c 3c       	jmp	$+26     	;abs 0x5da0
    5d88:	3e 40 ea 46 	mov	#18154,	r14	;#0x46ea
    5d8c:	0f 44       	mov	r4,	r15	;
    5d8e:	2f 83       	decd	r15		;
    5d90:	2d 43       	mov	#2,	r13	;r3 As==10
    5d92:	b0 12 b8 69 	call	#27064		;#0x69b8
    5d96:	3f 40 44 45 	mov	#17732,	r15	;#0x4544
    5d9a:	b0 12 58 68 	call	#26712		;#0x6858
    5d9e:	00 3c       	jmp	$+2      	;abs 0x5da0
    5da0:	31 50 06 00 	add	#6,	r1	;
    5da4:	34 41       	pop	r4		;
    5da6:	30 41       	ret			

00005da8 <task_print>:
    5da8:	04 12       	push	r4		;
    5daa:	04 41       	mov	r1,	r4	;
    5dac:	31 80 14 00 	sub	#20,	r1	;#0x0014
    5db0:	0c 41       	mov	r1,	r12	;
    5db2:	bc 40 00 44 	mov	#17408,	0(r12)	;#0x4400
    5db6:	00 00 
    5db8:	b0 12 84 62 	call	#25220		;#0x6284
    5dbc:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    5dc0:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    5dc4:	00 3c       	jmp	$+2      	;abs 0x5dc6
    5dc6:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5dca:	3c 90 40 00 	cmp	#64,	r12	;#0x0040
    5dce:	31 2c       	jc	$+100    	;abs 0x5e32
    5dd0:	00 3c       	jmp	$+2      	;abs 0x5dd2
    5dd2:	1f 44 fe ff 	mov	-2(r4),	r15	;
    5dd6:	3e 40 06 00 	mov	#6,	r14	;
    5dda:	b0 12 b8 6b 	call	#27576		;#0x6bb8
    5dde:	1e 4f 0c 53 	mov	21260(r15),r14	;0x0530c
    5de2:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    5de6:	0f 41       	mov	r1,	r15	;
    5de8:	8f 4e 02 00 	mov	r14,	2(r15)	;
    5dec:	bf 40 14 44 	mov	#17428,	0(r15)	;#0x4414
    5df0:	00 00 
    5df2:	b0 12 84 62 	call	#25220		;#0x6284
    5df6:	1e 44 fe ff 	mov	-2(r4),	r14	;
    5dfa:	0e 93       	cmp	#0,	r14	;r3 As==00
    5dfc:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    5e00:	11 24       	jz	$+36     	;abs 0x5e24
    5e02:	00 3c       	jmp	$+2      	;abs 0x5e04
    5e04:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5e08:	1c 53       	inc	r12		;
    5e0a:	3c b0 07 00 	bit	#7,	r12	;
    5e0e:	0a 20       	jnz	$+22     	;abs 0x5e24
    5e10:	00 3c       	jmp	$+2      	;abs 0x5e12
    5e12:	0c 41       	mov	r1,	r12	;
    5e14:	bc 40 11 44 	mov	#17425,	0(r12)	;#0x4411
    5e18:	00 00 
    5e1a:	b0 12 84 62 	call	#25220		;#0x6284
    5e1e:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    5e22:	00 3c       	jmp	$+2      	;abs 0x5e24
    5e24:	00 3c       	jmp	$+2      	;abs 0x5e26
    5e26:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5e2a:	1c 53       	inc	r12		;
    5e2c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5e30:	ca 3f       	jmp	$-106    	;abs 0x5dc6
    5e32:	0c 41       	mov	r1,	r12	;
    5e34:	bc 40 11 44 	mov	#17425,	0(r12)	;#0x4411
    5e38:	00 00 
    5e3a:	b0 12 84 62 	call	#25220		;#0x6284
    5e3e:	1c 42 f2 46 	mov	&0x46f2,r12	;0x46f2
    5e42:	0d 41       	mov	r1,	r13	;
    5e44:	8d 4c 02 00 	mov	r12,	2(r13)	;
    5e48:	bd 40 40 00 	mov	#64,	4(r13)	;#0x0040
    5e4c:	04 00 
    5e4e:	bd 40 1a 44 	mov	#17434,	0(r13)	;#0x441a
    5e52:	00 00 
    5e54:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    5e58:	b0 12 84 62 	call	#25220		;#0x6284
    5e5c:	3c 40 be 46 	mov	#18110,	r12	;#0x46be
    5e60:	84 4f f2 ff 	mov	r15,	-14(r4)	; 0xfff2
    5e64:	0f 4c       	mov	r12,	r15	;
    5e66:	b0 12 58 68 	call	#26712		;#0x6858
    5e6a:	31 50 14 00 	add	#20,	r1	;#0x0014
    5e6e:	34 41       	pop	r4		;
    5e70:	30 41       	ret			
	...

00005e74 <task_done>:
    5e74:	04 12       	push	r4		;
    5e76:	04 41       	mov	r1,	r4	;
    5e78:	31 80 32 00 	sub	#50,	r1	;#0x0032
    5e7c:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    5e80:	0c 41       	mov	r1,	r12	;
    5e82:	bc 40 2a 00 	mov	#42,	4(r12)	;#0x002a
    5e86:	04 00 
    5e88:	9c 43 02 00 	mov	#1,	2(r12)	;r3 As==01
    5e8c:	bc 40 37 44 	mov	#17463,	0(r12)	;#0x4437
    5e90:	00 00 
    5e92:	b0 12 84 62 	call	#25220		;#0x6284
    5e96:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5e9a:	3c 50 f8 01 	add	#504,	r12	;#0x01f8
    5e9e:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5ea2:	0c 41       	mov	r1,	r12	;
    5ea4:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5ea8:	9c 43 02 00 	mov	#1,	2(r12)	;r3 As==01
    5eac:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    5eb0:	00 00 
    5eb2:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    5eb6:	b0 12 84 62 	call	#25220		;#0x6284
    5eba:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5ebe:	2c 53       	incd	r12		;
    5ec0:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5ec4:	0c 41       	mov	r1,	r12	;
    5ec6:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5eca:	ac 43 02 00 	mov	#2,	2(r12)	;r3 As==10
    5ece:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    5ed2:	00 00 
    5ed4:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    5ed8:	b0 12 84 62 	call	#25220		;#0x6284
    5edc:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5ee0:	2c 53       	incd	r12		;
    5ee2:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5ee6:	0c 41       	mov	r1,	r12	;
    5ee8:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5eec:	bc 40 03 00 	mov	#3,	2(r12)	;
    5ef0:	02 00 
    5ef2:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    5ef6:	00 00 
    5ef8:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    5efc:	b0 12 84 62 	call	#25220		;#0x6284
    5f00:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f04:	2c 53       	incd	r12		;
    5f06:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f0a:	0c 41       	mov	r1,	r12	;
    5f0c:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5f10:	ac 42 02 00 	mov	#4,	2(r12)	;r2 As==10
    5f14:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    5f18:	00 00 
    5f1a:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    5f1e:	b0 12 84 62 	call	#25220		;#0x6284
    5f22:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f26:	2c 53       	incd	r12		;
    5f28:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f2c:	0c 41       	mov	r1,	r12	;
    5f2e:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5f32:	bc 40 05 00 	mov	#5,	2(r12)	;
    5f36:	02 00 
    5f38:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    5f3c:	00 00 
    5f3e:	84 4f f2 ff 	mov	r15,	-14(r4)	; 0xfff2
    5f42:	b0 12 84 62 	call	#25220		;#0x6284
    5f46:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f4a:	2c 53       	incd	r12		;
    5f4c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f50:	0c 41       	mov	r1,	r12	;
    5f52:	bc 40 00 0c 	mov	#3072,	4(r12)	;#0x0c00
    5f56:	04 00 
    5f58:	bc 40 06 00 	mov	#6,	2(r12)	;
    5f5c:	02 00 
    5f5e:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    5f62:	00 00 
    5f64:	84 4f f0 ff 	mov	r15,	-16(r4)	; 0xfff0
    5f68:	b0 12 84 62 	call	#25220		;#0x6284
    5f6c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f70:	3c 50 00 0c 	add	#3072,	r12	;#0x0c00
    5f74:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f78:	0c 41       	mov	r1,	r12	;
    5f7a:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5f7e:	bc 40 07 00 	mov	#7,	2(r12)	;
    5f82:	02 00 
    5f84:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    5f88:	00 00 
    5f8a:	84 4f ee ff 	mov	r15,	-18(r4)	; 0xffee
    5f8e:	b0 12 84 62 	call	#25220		;#0x6284
    5f92:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f96:	2c 53       	incd	r12		;
    5f98:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f9c:	0c 41       	mov	r1,	r12	;
    5f9e:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5fa2:	bc 42 02 00 	mov	#8,	2(r12)	;r2 As==11
    5fa6:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    5faa:	00 00 
    5fac:	84 4f ec ff 	mov	r15,	-20(r4)	; 0xffec
    5fb0:	b0 12 84 62 	call	#25220		;#0x6284
    5fb4:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5fb8:	2c 53       	incd	r12		;
    5fba:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5fbe:	0c 41       	mov	r1,	r12	;
    5fc0:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5fc4:	bc 40 09 00 	mov	#9,	2(r12)	;
    5fc8:	02 00 
    5fca:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    5fce:	00 00 
    5fd0:	84 4f ea ff 	mov	r15,	-22(r4)	; 0xffea
    5fd4:	b0 12 84 62 	call	#25220		;#0x6284
    5fd8:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5fdc:	2c 53       	incd	r12		;
    5fde:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5fe2:	0c 41       	mov	r1,	r12	;
    5fe4:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5fe8:	bc 40 0b 00 	mov	#11,	2(r12)	;#0x000b
    5fec:	02 00 
    5fee:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    5ff2:	00 00 
    5ff4:	84 4f e8 ff 	mov	r15,	-24(r4)	; 0xffe8
    5ff8:	b0 12 84 62 	call	#25220		;#0x6284
    5ffc:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6000:	2c 53       	incd	r12		;
    6002:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    6006:	0c 41       	mov	r1,	r12	;
    6008:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    600c:	bc 40 0c 00 	mov	#12,	2(r12)	;#0x000c
    6010:	02 00 
    6012:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    6016:	00 00 
    6018:	84 4f e6 ff 	mov	r15,	-26(r4)	; 0xffe6
    601c:	b0 12 84 62 	call	#25220		;#0x6284
    6020:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6024:	2c 53       	incd	r12		;
    6026:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    602a:	0c 41       	mov	r1,	r12	;
    602c:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    6030:	bc 40 0d 00 	mov	#13,	2(r12)	;#0x000d
    6034:	02 00 
    6036:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    603a:	00 00 
    603c:	84 4f e4 ff 	mov	r15,	-28(r4)	; 0xffe4
    6040:	b0 12 84 62 	call	#25220		;#0x6284
    6044:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6048:	2c 53       	incd	r12		;
    604a:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    604e:	0c 41       	mov	r1,	r12	;
    6050:	bc 40 06 00 	mov	#6,	4(r12)	;
    6054:	04 00 
    6056:	bc 40 0e 00 	mov	#14,	2(r12)	;#0x000e
    605a:	02 00 
    605c:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    6060:	00 00 
    6062:	84 4f e2 ff 	mov	r15,	-30(r4)	; 0xffe2
    6066:	b0 12 84 62 	call	#25220		;#0x6284
    606a:	1c 44 fe ff 	mov	-2(r4),	r12	;
    606e:	3c 50 06 00 	add	#6,	r12	;
    6072:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    6076:	0c 41       	mov	r1,	r12	;
    6078:	bc 40 80 01 	mov	#384,	4(r12)	;#0x0180
    607c:	04 00 
    607e:	bc 40 0f 00 	mov	#15,	2(r12)	;#0x000f
    6082:	02 00 
    6084:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    6088:	00 00 
    608a:	84 4f e0 ff 	mov	r15,	-32(r4)	; 0xffe0
    608e:	b0 12 84 62 	call	#25220		;#0x6284
    6092:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6096:	3c 50 80 01 	add	#384,	r12	;#0x0180
    609a:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    609e:	0c 41       	mov	r1,	r12	;
    60a0:	bc 40 06 00 	mov	#6,	4(r12)	;
    60a4:	04 00 
    60a6:	bc 40 10 00 	mov	#16,	2(r12)	;#0x0010
    60aa:	02 00 
    60ac:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    60b0:	00 00 
    60b2:	84 4f de ff 	mov	r15,	-34(r4)	; 0xffde
    60b6:	b0 12 84 62 	call	#25220		;#0x6284
    60ba:	1c 44 fe ff 	mov	-2(r4),	r12	;
    60be:	3c 50 06 00 	add	#6,	r12	;
    60c2:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    60c6:	0c 41       	mov	r1,	r12	;
    60c8:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    60cc:	bc 40 11 00 	mov	#17,	2(r12)	;#0x0011
    60d0:	02 00 
    60d2:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    60d6:	00 00 
    60d8:	84 4f dc ff 	mov	r15,	-36(r4)	; 0xffdc
    60dc:	b0 12 84 62 	call	#25220		;#0x6284
    60e0:	1c 44 fe ff 	mov	-2(r4),	r12	;
    60e4:	2c 53       	incd	r12		;
    60e6:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    60ea:	0c 41       	mov	r1,	r12	;
    60ec:	bc 40 42 00 	mov	#66,	2(r12)	;#0x0042
    60f0:	02 00 
    60f2:	bc 40 66 44 	mov	#17510,	0(r12)	;#0x4466
    60f6:	00 00 
    60f8:	84 4f da ff 	mov	r15,	-38(r4)	; 0xffda
    60fc:	b0 12 84 62 	call	#25220		;#0x6284
    6100:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6104:	3c 50 42 00 	add	#66,	r12	;#0x0042
    6108:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    610c:	0c 41       	mov	r1,	r12	;
    610e:	ac 43 02 00 	mov	#2,	2(r12)	;r3 As==10
    6112:	bc 40 7e 44 	mov	#17534,	0(r12)	;#0x447e
    6116:	00 00 
    6118:	84 4f d8 ff 	mov	r15,	-40(r4)	; 0xffd8
    611c:	b0 12 84 62 	call	#25220		;#0x6284
    6120:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6124:	2c 53       	incd	r12		;
    6126:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    612a:	0d 41       	mov	r1,	r13	;
    612c:	8d 4c 02 00 	mov	r12,	2(r13)	;
    6130:	bd 40 9a 44 	mov	#17562,	0(r13)	;#0x449a
    6134:	00 00 
    6136:	84 4f d6 ff 	mov	r15,	-42(r4)	; 0xffd6
    613a:	b0 12 84 62 	call	#25220		;#0x6284
    613e:	84 4f d4 ff 	mov	r15,	-44(r4)	; 0xffd4
    6142:	31 50 32 00 	add	#50,	r1	;#0x0032
    6146:	34 41       	pop	r4		;
    6148:	30 41       	ret			
	...

0000614c <_entry_task>:
    614c:	04 12       	push	r4		;
    614e:	04 41       	mov	r1,	r4	;
    6150:	3f 40 f0 44 	mov	#17648,	r15	;#0x44f0
    6154:	b0 12 58 68 	call	#26712		;#0x6858
    6158:	34 41       	pop	r4		;
    615a:	30 41       	ret			

0000615c <_init>:
    615c:	04 12       	push	r4		;
    615e:	04 41       	mov	r1,	r4	;
    6160:	b0 12 20 57 	call	#22304		;#0x5720
    6164:	34 41       	pop	r4		;
    6166:	30 41       	ret			

00006168 <init_hw>:
    6168:	04 12       	push	r4		;
    616a:	04 41       	mov	r1,	r4	;
    616c:	b0 12 d0 61 	call	#25040		;#0x61d0
    6170:	1c 42 30 01 	mov	&0x0130,r12	;0x0130
    6174:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    6178:	82 4c 30 01 	mov	r12,	&0x0130	;
    617c:	b0 12 64 62 	call	#25188		;#0x6264
    6180:	34 41       	pop	r4		;
    6182:	30 41       	ret			

00006184 <acquire_sample>:
    6184:	04 12       	push	r4		;
    6186:	04 41       	mov	r1,	r4	;
    6188:	31 80 06 00 	sub	#6,	r1	;
    618c:	0c 4f       	mov	r15,	r12	;
    618e:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6192:	1f 53       	inc	r15		;
    6194:	3f f0 03 00 	and	#3,	r15	;
    6198:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    619c:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    61a0:	31 50 06 00 	add	#6,	r1	;
    61a4:	34 41       	pop	r4		;
    61a6:	30 41       	ret			

000061a8 <msp_watchdog_enable>:
    61a8:	04 12       	push	r4		;
    61aa:	04 41       	mov	r1,	r4	;
    61ac:	21 83       	decd	r1		;
    61ae:	4c 4f       	mov.b	r15,	r12	;
    61b0:	c4 4c ff ff 	mov.b	r12,	-1(r4)	; 0xffff
    61b4:	5f 44 ff ff 	mov.b	-1(r4),	r15	;
    61b8:	3f d0 08 5a 	bis	#23048,	r15	;#0x5a08
    61bc:	82 4f 5c 01 	mov	r15,	&0x015c	;
    61c0:	5c 44 ff ff 	mov.b	-1(r4),	r12	;
    61c4:	c2 4c 20 1c 	mov.b	r12,	&0x1c20	;
    61c8:	21 53       	incd	r1		;
    61ca:	34 41       	pop	r4		;
    61cc:	30 41       	ret			
	...

000061d0 <msp_watchdog_disable>:
    61d0:	04 12       	push	r4		;
    61d2:	04 41       	mov	r1,	r4	;
    61d4:	b2 40 80 5a 	mov	#23168,	&0x015c	;#0x5a80
    61d8:	5c 01 
    61da:	34 41       	pop	r4		;
    61dc:	30 41       	ret			
	...

000061e0 <msp_watchdog_kick>:
    61e0:	04 12       	push	r4		;
    61e2:	04 41       	mov	r1,	r4	;
    61e4:	5c 42 20 1c 	mov.b	&0x1c20,r12	;0x1c20
    61e8:	3c d0 08 5a 	bis	#23048,	r12	;#0x5a08
    61ec:	82 4c 5c 01 	mov	r12,	&0x015c	;
    61f0:	34 41       	pop	r4		;
    61f2:	30 41       	ret			

000061f4 <memcpy>:
    61f4:	04 12       	push	r4		;
    61f6:	04 41       	mov	r1,	r4	;
    61f8:	0b 12       	push	r11		;
    61fa:	0a 12       	push	r10		;
    61fc:	31 80 0e 00 	sub	#14,	r1	;#0x000e
    6200:	0c 4d       	mov	r13,	r12	;
    6202:	0b 4e       	mov	r14,	r11	;
    6204:	0a 4f       	mov	r15,	r10	;
    6206:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    620a:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    620e:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    6212:	84 43 f4 ff 	mov	#0,	-12(r4)	;r3 As==00, 0xfff4
    6216:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    621a:	84 4b f0 ff 	mov	r11,	-16(r4)	; 0xfff0
    621e:	84 4a ee ff 	mov	r10,	-18(r4)	; 0xffee
    6222:	00 3c       	jmp	$+2      	;abs 0x6224
    6224:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6228:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    622c:	0c 9d       	cmp	r13,	r12	;
    622e:	12 2c       	jc	$+38     	;abs 0x6254
    6230:	00 3c       	jmp	$+2      	;abs 0x6232
    6232:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6236:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    623a:	0c 5d       	add	r13,	r12	;
    623c:	6e 4c       	mov.b	@r12,	r14	;
    623e:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6242:	0c 5d       	add	r13,	r12	;
    6244:	cc 4e 00 00 	mov.b	r14,	0(r12)	;
    6248:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    624c:	1c 53       	inc	r12		;
    624e:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    6252:	e8 3f       	jmp	$-46     	;abs 0x6224
    6254:	1f 44 fa ff 	mov	-6(r4),	r15	;
    6258:	31 50 0e 00 	add	#14,	r1	;#0x000e
    625c:	3a 41       	pop	r10		;
    625e:	3b 41       	pop	r11		;
    6260:	34 41       	pop	r4		;
    6262:	30 41       	ret			

00006264 <msp_clock_setup>:
    6264:	04 12       	push	r4		;
    6266:	04 41       	mov	r1,	r4	;
    6268:	f2 40 a5 ff 	mov.b	#65445,	&0x0161	;#0xffa5
    626c:	61 01 
    626e:	b2 40 0c 00 	mov	#12,	&0x0162	;#0x000c
    6272:	62 01 
    6274:	b2 40 33 00 	mov	#51,	&0x0164	;#0x0033
    6278:	64 01 
    627a:	82 43 66 01 	mov	#0,	&0x0166	;r3 As==00
    627e:	34 41       	pop	r4		;
    6280:	30 41       	ret			
	...

00006284 <printf>:
    6284:	04 12       	push	r4		;
    6286:	04 41       	mov	r1,	r4	;
    6288:	31 80 20 00 	sub	#32,	r1	;#0x0020
    628c:	1c 44 04 00 	mov	4(r4),	r12	;
    6290:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    6294:	0c 44       	mov	r4,	r12	;
    6296:	3c 50 06 00 	add	#6,	r12	;
    629a:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    629e:	00 3c       	jmp	$+2      	;abs 0x62a0
    62a0:	1c 44 fc ff 	mov	-4(r4),	r12	;
    62a4:	0d 4c       	mov	r12,	r13	;
    62a6:	1d 53       	inc	r13		;
    62a8:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    62ac:	6e 4c       	mov.b	@r12,	r14	;
    62ae:	c4 4e fb ff 	mov.b	r14,	-5(r4)	; 0xfffb
    62b2:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    62b4:	02 20       	jnz	$+6      	;abs 0x62ba
    62b6:	52 3d       	jmp	$+678    	;abs 0x655c
    62b8:	00 3c       	jmp	$+2      	;abs 0x62ba
    62ba:	5c 44 fb ff 	mov.b	-5(r4),	r12	;
    62be:	7c 90 25 00 	cmp.b	#37,	r12	;#0x0025
    62c2:	02 24       	jz	$+6      	;abs 0x62c8
    62c4:	40 3d       	jmp	$+642    	;abs 0x6546
    62c6:	00 3c       	jmp	$+2      	;abs 0x62c8
    62c8:	84 43 f2 ff 	mov	#0,	-14(r4)	;r3 As==00, 0xfff2
    62cc:	00 3c       	jmp	$+2      	;abs 0x62ce
    62ce:	1c 44 fc ff 	mov	-4(r4),	r12	;
    62d2:	0d 4c       	mov	r12,	r13	;
    62d4:	1d 53       	inc	r13		;
    62d6:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    62da:	6c 4c       	mov.b	@r12,	r12	;
    62dc:	8c 11       	sxt	r12		;
    62de:	4e 4c       	mov.b	r12,	r14	;
    62e0:	c4 4e fb ff 	mov.b	r14,	-5(r4)	; 0xfffb
    62e4:	0c 93       	cmp	#0,	r12	;r3 As==00
    62e6:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    62ea:	02 20       	jnz	$+6      	;abs 0x62f0
    62ec:	27 3d       	jmp	$+592    	;abs 0x653c
    62ee:	00 3c       	jmp	$+2      	;abs 0x62f0
    62f0:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    62f4:	3c 90 30 00 	cmp	#48,	r12	;#0x0030
    62f8:	02 20       	jnz	$+6      	;abs 0x62fe
    62fa:	0f 3d       	jmp	$+544    	;abs 0x651a
    62fc:	00 3c       	jmp	$+2      	;abs 0x62fe
    62fe:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6302:	3c 90 63 00 	cmp	#99,	r12	;#0x0063
    6306:	34 24       	jz	$+106    	;abs 0x6370
    6308:	00 3c       	jmp	$+2      	;abs 0x630a
    630a:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    630e:	3c 90 69 00 	cmp	#105,	r12	;#0x0069
    6312:	3d 24       	jz	$+124    	;abs 0x638e
    6314:	00 3c       	jmp	$+2      	;abs 0x6316
    6316:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    631a:	3c 90 6c 00 	cmp	#108,	r12	;#0x006c
    631e:	66 24       	jz	$+206    	;abs 0x63ec
    6320:	00 3c       	jmp	$+2      	;abs 0x6322
    6322:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6326:	3c 90 6e 00 	cmp	#110,	r12	;#0x006e
    632a:	60 24       	jz	$+194    	;abs 0x63ec
    632c:	00 3c       	jmp	$+2      	;abs 0x632e
    632e:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6332:	3c 90 73 00 	cmp	#115,	r12	;#0x0073
    6336:	0d 24       	jz	$+28     	;abs 0x6352
    6338:	00 3c       	jmp	$+2      	;abs 0x633a
    633a:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    633e:	3c 90 75 00 	cmp	#117,	r12	;#0x0075
    6342:	25 24       	jz	$+76     	;abs 0x638e
    6344:	00 3c       	jmp	$+2      	;abs 0x6346
    6346:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    634a:	3c 90 78 00 	cmp	#120,	r12	;#0x0078
    634e:	8a 24       	jz	$+278    	;abs 0x6464
    6350:	f8 3c       	jmp	$+498    	;abs 0x6542
    6352:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    6356:	1c 53       	inc	r12		;
    6358:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    635c:	0d 4c       	mov	r12,	r13	;
    635e:	2d 53       	incd	r13		;
    6360:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    6364:	2f 4c       	mov	@r12,	r15	;
    6366:	b0 12 28 67 	call	#26408		;#0x6728
    636a:	84 4f ea ff 	mov	r15,	-22(r4)	; 0xffea
    636e:	ea 3c       	jmp	$+470    	;abs 0x6544
    6370:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    6374:	1c 53       	inc	r12		;
    6376:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    637a:	0d 4c       	mov	r12,	r13	;
    637c:	2d 53       	incd	r13		;
    637e:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    6382:	2f 4c       	mov	@r12,	r15	;
    6384:	b0 12 f4 66 	call	#26356		;#0x66f4
    6388:	84 4f e8 ff 	mov	r15,	-24(r4)	; 0xffe8
    638c:	db 3c       	jmp	$+440    	;abs 0x6544
    638e:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    6392:	1c 53       	inc	r12		;
    6394:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    6398:	0d 4c       	mov	r12,	r13	;
    639a:	2d 53       	incd	r13		;
    639c:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    63a0:	2c 4c       	mov	@r12,	r12	;
    63a2:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    63a6:	5e 44 fb ff 	mov.b	-5(r4),	r14	;
    63aa:	7e 90 69 00 	cmp.b	#105,	r14	;#0x0069
    63ae:	13 20       	jnz	$+40     	;abs 0x63d6
    63b0:	00 3c       	jmp	$+2      	;abs 0x63b2
    63b2:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    63b6:	0c 93       	cmp	#0,	r12	;r3 As==00
    63b8:	0e 34       	jge	$+30     	;abs 0x63d6
    63ba:	00 3c       	jmp	$+2      	;abs 0x63bc
    63bc:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    63c0:	0d 43       	clr	r13		;
    63c2:	0d 8c       	sub	r12,	r13	;
    63c4:	84 4d f8 ff 	mov	r13,	-8(r4)	; 0xfff8
    63c8:	3f 40 2d 00 	mov	#45,	r15	;#0x002d
    63cc:	b0 12 f4 66 	call	#26356		;#0x66f4
    63d0:	84 4f e6 ff 	mov	r15,	-26(r4)	; 0xffe6
    63d4:	00 3c       	jmp	$+2      	;abs 0x63d6
    63d6:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    63da:	3c 40 14 00 	mov	#20,	r12	;#0x0014
    63de:	3c 50 a6 44 	add	#17574,	r12	;#0x44a6
    63e2:	0f 43       	clr	r15		;
    63e4:	0d 4c       	mov	r12,	r13	;
    63e6:	b0 12 70 65 	call	#25968		;#0x6570
    63ea:	ac 3c       	jmp	$+346    	;abs 0x6544
    63ec:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    63f0:	1c 53       	inc	r12		;
    63f2:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    63f6:	0d 4c       	mov	r12,	r13	;
    63f8:	2d 53       	incd	r13		;
    63fa:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    63fe:	2c 4c       	mov	@r12,	r12	;
    6400:	1d 44 ee ff 	mov	-18(r4),r13	;0xffffffee
    6404:	0e 4d       	mov	r13,	r14	;
    6406:	2e 53       	incd	r14		;
    6408:	84 4e ee ff 	mov	r14,	-18(r4)	; 0xffee
    640c:	2d 4d       	mov	@r13,	r13	;
    640e:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    6412:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    6416:	5f 44 fb ff 	mov.b	-5(r4),	r15	;
    641a:	7f 90 6c 00 	cmp.b	#108,	r15	;#0x006c
    641e:	19 20       	jnz	$+52     	;abs 0x6452
    6420:	00 3c       	jmp	$+2      	;abs 0x6422
    6422:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6426:	0c 93       	cmp	#0,	r12	;r3 As==00
    6428:	14 34       	jge	$+42     	;abs 0x6452
    642a:	00 3c       	jmp	$+2      	;abs 0x642c
    642c:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6430:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    6434:	0e 43       	clr	r14		;
    6436:	0f 4e       	mov	r14,	r15	;
    6438:	0f 8c       	sub	r12,	r15	;
    643a:	0e 7d       	subc	r13,	r14	;
    643c:	84 4e f6 ff 	mov	r14,	-10(r4)	; 0xfff6
    6440:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    6444:	3f 40 2d 00 	mov	#45,	r15	;#0x002d
    6448:	b0 12 f4 66 	call	#26356		;#0x66f4
    644c:	84 4f e4 ff 	mov	r15,	-28(r4)	; 0xffe4
    6450:	00 3c       	jmp	$+2      	;abs 0x6452
    6452:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfffffff6
    6456:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfffffff4
    645a:	3d 40 a6 44 	mov	#17574,	r13	;#0x44a6
    645e:	b0 12 70 65 	call	#25968		;#0x6570
    6462:	70 3c       	jmp	$+226    	;abs 0x6544
    6464:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    6468:	1c 53       	inc	r12		;
    646a:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    646e:	0d 4c       	mov	r12,	r13	;
    6470:	2d 53       	incd	r13		;
    6472:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    6476:	2c 4c       	mov	@r12,	r12	;
    6478:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    647c:	0c 11       	rra	r12		;
    647e:	0c 11       	rra	r12		;
    6480:	0c 11       	rra	r12		;
    6482:	0c 11       	rra	r12		;
    6484:	0c 11       	rra	r12		;
    6486:	0c 11       	rra	r12		;
    6488:	0c 11       	rra	r12		;
    648a:	0c 11       	rra	r12		;
    648c:	0c 11       	rra	r12		;
    648e:	0c 11       	rra	r12		;
    6490:	0c 11       	rra	r12		;
    6492:	0c 11       	rra	r12		;
    6494:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    6498:	0c 93       	cmp	#0,	r12	;r3 As==00
    649a:	06 20       	jnz	$+14     	;abs 0x64a8
    649c:	00 3c       	jmp	$+2      	;abs 0x649e
    649e:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    64a2:	2c 92       	cmp	#4,	r12	;r2 As==10
    64a4:	06 38       	jl	$+14     	;abs 0x64b2
    64a6:	00 3c       	jmp	$+2      	;abs 0x64a8
    64a8:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfffffff0
    64ac:	b0 12 bc 66 	call	#26300		;#0x66bc
    64b0:	00 3c       	jmp	$+2      	;abs 0x64b2
    64b2:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    64b6:	0c 11       	rra	r12		;
    64b8:	0c 11       	rra	r12		;
    64ba:	0c 11       	rra	r12		;
    64bc:	0c 11       	rra	r12		;
    64be:	0c 11       	rra	r12		;
    64c0:	0c 11       	rra	r12		;
    64c2:	0c 11       	rra	r12		;
    64c4:	0c 11       	rra	r12		;
    64c6:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    64ca:	0c 93       	cmp	#0,	r12	;r3 As==00
    64cc:	07 20       	jnz	$+16     	;abs 0x64dc
    64ce:	00 3c       	jmp	$+2      	;abs 0x64d0
    64d0:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    64d4:	3c 90 03 00 	cmp	#3,	r12	;
    64d8:	06 38       	jl	$+14     	;abs 0x64e6
    64da:	00 3c       	jmp	$+2      	;abs 0x64dc
    64dc:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfffffff0
    64e0:	b0 12 bc 66 	call	#26300		;#0x66bc
    64e4:	00 3c       	jmp	$+2      	;abs 0x64e6
    64e6:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    64ea:	0c 11       	rra	r12		;
    64ec:	0c 11       	rra	r12		;
    64ee:	0c 11       	rra	r12		;
    64f0:	0c 11       	rra	r12		;
    64f2:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    64f6:	0c 93       	cmp	#0,	r12	;r3 As==00
    64f8:	06 20       	jnz	$+14     	;abs 0x6506
    64fa:	00 3c       	jmp	$+2      	;abs 0x64fc
    64fc:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6500:	2c 93       	cmp	#2,	r12	;r3 As==10
    6502:	06 38       	jl	$+14     	;abs 0x6510
    6504:	00 3c       	jmp	$+2      	;abs 0x6506
    6506:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfffffff0
    650a:	b0 12 bc 66 	call	#26300		;#0x66bc
    650e:	00 3c       	jmp	$+2      	;abs 0x6510
    6510:	1f 44 f8 ff 	mov	-8(r4),	r15	;
    6514:	b0 12 bc 66 	call	#26300		;#0x66bc
    6518:	15 3c       	jmp	$+44     	;abs 0x6544
    651a:	1c 44 fc ff 	mov	-4(r4),	r12	;
    651e:	0d 4c       	mov	r12,	r13	;
    6520:	1d 53       	inc	r13		;
    6522:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    6526:	6e 4c       	mov.b	@r12,	r14	;
    6528:	c4 4e fb ff 	mov.b	r14,	-5(r4)	; 0xfffb
    652c:	5c 44 fb ff 	mov.b	-5(r4),	r12	;
    6530:	8c 11       	sxt	r12		;
    6532:	3c 50 d0 ff 	add	#65488,	r12	;#0xffd0
    6536:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    653a:	c9 3e       	jmp	$-620    	;abs 0x62ce
    653c:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    6540:	10 3c       	jmp	$+34     	;abs 0x6562
    6542:	02 3c       	jmp	$+6      	;abs 0x6548
    6544:	0a 3c       	jmp	$+22     	;abs 0x655a
    6546:	00 3c       	jmp	$+2      	;abs 0x6548
    6548:	5c 44 fb ff 	mov.b	-5(r4),	r12	;
    654c:	8c 11       	sxt	r12		;
    654e:	0f 4c       	mov	r12,	r15	;
    6550:	b0 12 f4 66 	call	#26356		;#0x66f4
    6554:	84 4f e2 ff 	mov	r15,	-30(r4)	; 0xffe2
    6558:	00 3c       	jmp	$+2      	;abs 0x655a
    655a:	a2 3e       	jmp	$-698    	;abs 0x62a0
    655c:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    6560:	00 3c       	jmp	$+2      	;abs 0x6562
    6562:	1f 44 fe ff 	mov	-2(r4),	r15	;
    6566:	31 50 20 00 	add	#32,	r1	;#0x0020
    656a:	34 41       	pop	r4		;
    656c:	30 41       	ret			
	...

00006570 <xtoa>:
    6570:	04 12       	push	r4		;
    6572:	04 41       	mov	r1,	r4	;
    6574:	0b 12       	push	r11		;
    6576:	0a 12       	push	r10		;
    6578:	09 12       	push	r9		;
    657a:	31 80 22 00 	sub	#34,	r1	;#0x0022
    657e:	0c 4f       	mov	r15,	r12	;
    6580:	0b 4e       	mov	r14,	r11	;
    6582:	0a 4d       	mov	r13,	r10	;
    6584:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    6588:	84 4e f4 ff 	mov	r14,	-12(r4)	; 0xfff4
    658c:	84 4d f2 ff 	mov	r13,	-14(r4)	; 0xfff2
    6590:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    6594:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfffffff4
    6598:	0e dd       	bis	r13,	r14	;
    659a:	0e 93       	cmp	#0,	r14	;r3 As==00
    659c:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    65a0:	84 4a e8 ff 	mov	r10,	-24(r4)	; 0xffe8
    65a4:	84 4b e6 ff 	mov	r11,	-26(r4)	; 0xffe6
    65a8:	7a 24       	jz	$+246    	;abs 0x669e
    65aa:	00 3c       	jmp	$+2      	;abs 0x65ac
    65ac:	00 3c       	jmp	$+2      	;abs 0x65ae
    65ae:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    65b2:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    65b6:	1e 44 f2 ff 	mov	-14(r4),r14	;0xfffffff2
    65ba:	2f 4e       	mov	@r14,	r15	;
    65bc:	1e 4e 02 00 	mov	2(r14),	r14	;
    65c0:	0d 9e       	cmp	r14,	r13	;
    65c2:	0b 42       	mov	r2,	r11	;
    65c4:	1b f3       	and	#1,	r11	;r3 As==01
    65c6:	0c 9f       	cmp	r15,	r12	;
    65c8:	0c 42       	mov	r2,	r12	;
    65ca:	1c f3       	and	#1,	r12	;r3 As==01
    65cc:	0d 9e       	cmp	r14,	r13	;
    65ce:	84 4b e4 ff 	mov	r11,	-28(r4)	; 0xffe4
    65d2:	84 4c e2 ff 	mov	r12,	-30(r4)	; 0xffe2
    65d6:	04 24       	jz	$+10     	;abs 0x65e0
    65d8:	1c 44 e4 ff 	mov	-28(r4),r12	;0xffffffe4
    65dc:	84 4c e2 ff 	mov	r12,	-30(r4)	; 0xffe2
    65e0:	1c 44 e2 ff 	mov	-30(r4),r12	;0xffffffe2
    65e4:	1c b3       	bit	#1,	r12	;r3 As==01
    65e6:	07 20       	jnz	$+16     	;abs 0x65f6
    65e8:	00 3c       	jmp	$+2      	;abs 0x65ea
    65ea:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    65ee:	2c 52       	add	#4,	r12	;r2 As==10
    65f0:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    65f4:	dc 3f       	jmp	$-70     	;abs 0x65ae
    65f6:	00 3c       	jmp	$+2      	;abs 0x65f8
    65f8:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    65fc:	0d 4c       	mov	r12,	r13	;
    65fe:	2d 52       	add	#4,	r13	;r2 As==10
    6600:	84 4d f2 ff 	mov	r13,	-14(r4)	; 0xfff2
    6604:	2d 4c       	mov	@r12,	r13	;
    6606:	1c 4c 02 00 	mov	2(r12),	r12	;
    660a:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    660e:	84 4d ec ff 	mov	r13,	-20(r4)	; 0xffec
    6612:	f4 40 30 00 	mov.b	#48,	-15(r4)	;#0x0030, 0xfff1
    6616:	f1 ff 
    6618:	00 3c       	jmp	$+2      	;abs 0x661a
    661a:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    661e:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    6622:	1e 44 ec ff 	mov	-20(r4),r14	;0xffffffec
    6626:	1f 44 ee ff 	mov	-18(r4),r15	;0xffffffee
    662a:	0d 9f       	cmp	r15,	r13	;
    662c:	0b 42       	mov	r2,	r11	;
    662e:	1a 43       	mov	#1,	r10	;r3 As==01
    6630:	09 4a       	mov	r10,	r9	;
    6632:	09 cb       	bic	r11,	r9	;
    6634:	0c 9e       	cmp	r14,	r12	;
    6636:	0c 42       	mov	r2,	r12	;
    6638:	0a cc       	bic	r12,	r10	;
    663a:	0d 9f       	cmp	r15,	r13	;
    663c:	84 49 e0 ff 	mov	r9,	-32(r4)	; 0xffe0
    6640:	84 4a de ff 	mov	r10,	-34(r4)	; 0xffde
    6644:	04 24       	jz	$+10     	;abs 0x664e
    6646:	1c 44 e0 ff 	mov	-32(r4),r12	;0xffffffe0
    664a:	84 4c de ff 	mov	r12,	-34(r4)	; 0xffde
    664e:	1c 44 de ff 	mov	-34(r4),r12	;0xffffffde
    6652:	1c b3       	bit	#1,	r12	;r3 As==01
    6654:	15 20       	jnz	$+44     	;abs 0x6680
    6656:	00 3c       	jmp	$+2      	;abs 0x6658
    6658:	5c 44 f1 ff 	mov.b	-15(r4),r12	;0xfffffff1
    665c:	5c 53       	inc.b	r12		;
    665e:	c4 4c f1 ff 	mov.b	r12,	-15(r4)	; 0xfff1
    6662:	1d 44 ec ff 	mov	-20(r4),r13	;0xffffffec
    6666:	1e 44 ee ff 	mov	-18(r4),r14	;0xffffffee
    666a:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfffffff4
    666e:	1b 44 f6 ff 	mov	-10(r4),r11	;0xfffffff6
    6672:	0f 8d       	sub	r13,	r15	;
    6674:	0b 7e       	subc	r14,	r11	;
    6676:	84 4b f6 ff 	mov	r11,	-10(r4)	; 0xfff6
    667a:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    667e:	cd 3f       	jmp	$-100    	;abs 0x661a
    6680:	5c 44 f1 ff 	mov.b	-15(r4),r12	;0xfffffff1
    6684:	8c 11       	sxt	r12		;
    6686:	0f 4c       	mov	r12,	r15	;
    6688:	b0 12 f4 66 	call	#26356		;#0x66f4
    668c:	84 4f dc ff 	mov	r15,	-36(r4)	; 0xffdc
    6690:	00 3c       	jmp	$+2      	;abs 0x6692
    6692:	5c 44 ec ff 	mov.b	-20(r4),r12	;0xffffffec
    6696:	5c b3       	bit.b	#1,	r12	;r3 As==01
    6698:	af 27       	jz	$-160    	;abs 0x65f8
    669a:	00 3c       	jmp	$+2      	;abs 0x669c
    669c:	07 3c       	jmp	$+16     	;abs 0x66ac
    669e:	3f 40 30 00 	mov	#48,	r15	;#0x0030
    66a2:	b0 12 f4 66 	call	#26356		;#0x66f4
    66a6:	84 4f da ff 	mov	r15,	-38(r4)	; 0xffda
    66aa:	00 3c       	jmp	$+2      	;abs 0x66ac
    66ac:	31 50 22 00 	add	#34,	r1	;#0x0022
    66b0:	39 41       	pop	r9		;
    66b2:	3a 41       	pop	r10		;
    66b4:	3b 41       	pop	r11		;
    66b6:	34 41       	pop	r4		;
    66b8:	30 41       	ret			
	...

000066bc <puth>:
    66bc:	04 12       	push	r4		;
    66be:	04 41       	mov	r1,	r4	;
    66c0:	31 80 06 00 	sub	#6,	r1	;
    66c4:	0c 4f       	mov	r15,	r12	;
    66c6:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    66ca:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    66ce:	5f 4f ce 44 	mov.b	17614(r15),r15	;0x044ce
    66d2:	8f 11       	sxt	r15		;
    66d4:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    66d8:	b0 12 f4 66 	call	#26356		;#0x66f4
    66dc:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    66e0:	31 50 06 00 	add	#6,	r1	;
    66e4:	34 41       	pop	r4		;
    66e6:	30 41       	ret			

000066e8 <mspconsole_init>:
    66e8:	04 12       	push	r4		;
    66ea:	04 41       	mov	r1,	r4	;
    66ec:	b0 12 c6 6b 	call	#27590		;#0x6bc6
    66f0:	34 41       	pop	r4		;
    66f2:	30 41       	ret			

000066f4 <io_putchar>:
    66f4:	04 12       	push	r4		;
    66f6:	04 41       	mov	r1,	r4	;
    66f8:	31 80 06 00 	sub	#6,	r1	;
    66fc:	0c 4f       	mov	r15,	r12	;
    66fe:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6702:	5d 44 fe ff 	mov.b	-2(r4),	r13	;
    6706:	c4 4d fd ff 	mov.b	r13,	-3(r4)	; 0xfffd
    670a:	0f 44       	mov	r4,	r15	;
    670c:	3f 80 03 00 	sub	#3,	r15	;
    6710:	1e 43       	mov	#1,	r14	;r3 As==01
    6712:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    6716:	b0 12 52 6c 	call	#27730		;#0x6c52
    671a:	1f 44 fe ff 	mov	-2(r4),	r15	;
    671e:	31 50 06 00 	add	#6,	r1	;
    6722:	34 41       	pop	r4		;
    6724:	30 41       	ret			
	...

00006728 <io_puts_no_newline>:
    6728:	04 12       	push	r4		;
    672a:	04 41       	mov	r1,	r4	;
    672c:	31 82       	sub	#8,	r1	;r2 As==11
    672e:	0c 4f       	mov	r15,	r12	;
    6730:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6734:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    6738:	1f 44 fe ff 	mov	-2(r4),	r15	;
    673c:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    6740:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    6744:	00 3c       	jmp	$+2      	;abs 0x6746
    6746:	1c 44 fa ff 	mov	-6(r4),	r12	;
    674a:	0d 4c       	mov	r12,	r13	;
    674c:	1d 53       	inc	r13		;
    674e:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    6752:	6e 4c       	mov.b	@r12,	r14	;
    6754:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    6756:	07 24       	jz	$+16     	;abs 0x6766
    6758:	00 3c       	jmp	$+2      	;abs 0x675a
    675a:	1c 44 fc ff 	mov	-4(r4),	r12	;
    675e:	1c 53       	inc	r12		;
    6760:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    6764:	f0 3f       	jmp	$-30     	;abs 0x6746
    6766:	1f 44 fe ff 	mov	-2(r4),	r15	;
    676a:	1e 44 fc ff 	mov	-4(r4),	r14	;
    676e:	b0 12 52 6c 	call	#27730		;#0x6c52
    6772:	1f 44 fc ff 	mov	-4(r4),	r15	;
    6776:	31 52       	add	#8,	r1	;r2 As==11
    6778:	34 41       	pop	r4		;
    677a:	30 41       	ret			

0000677c <io_puts>:
    677c:	04 12       	push	r4		;
    677e:	04 41       	mov	r1,	r4	;
    6780:	31 82       	sub	#8,	r1	;r2 As==11
    6782:	0c 4f       	mov	r15,	r12	;
    6784:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6788:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    678c:	b0 12 28 67 	call	#26408		;#0x6728
    6790:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    6794:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    6798:	b0 12 f4 66 	call	#26356		;#0x66f4
    679c:	1c 44 fc ff 	mov	-4(r4),	r12	;
    67a0:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    67a4:	0f 4c       	mov	r12,	r15	;
    67a6:	31 52       	add	#8,	r1	;r2 As==11
    67a8:	34 41       	pop	r4		;
    67aa:	30 41       	ret			

000067ac <task_prologue>:
    67ac:	04 12       	push	r4		;
    67ae:	04 41       	mov	r1,	r4	;
    67b0:	31 80 06 00 	sub	#6,	r1	;
    67b4:	1c 42 d4 54 	mov	&0x54d4,r12	;0x54d4
    67b8:	1c 4c 04 00 	mov	4(r12),	r12	;
    67bc:	2c 4c       	mov	@r12,	r12	;
    67be:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    67c2:	1c 42 d4 54 	mov	&0x54d4,r12	;0x54d4
    67c6:	1c 4c 02 00 	mov	2(r12),	r12	;
    67ca:	1d 44 fe ff 	mov	-2(r4),	r13	;
    67ce:	1d 4d 08 00 	mov	8(r13),	r13	;
    67d2:	0c 9d       	cmp	r13,	r12	;
    67d4:	3a 24       	jz	$+118    	;abs 0x684a
    67d6:	00 3c       	jmp	$+2      	;abs 0x67d8
    67d8:	00 3c       	jmp	$+2      	;abs 0x67da
    67da:	1c 42 b6 54 	mov	&0x54b6,r12	;0x54b6
    67de:	1d 42 b8 54 	mov	&0x54b8,r13	;0x54b8
    67e2:	0c 9d       	cmp	r13,	r12	;
    67e4:	25 2c       	jc	$+76     	;abs 0x6830
    67e6:	00 3c       	jmp	$+2      	;abs 0x67e8
    67e8:	1c 42 b6 54 	mov	&0x54b6,r12	;0x54b6
    67ec:	0c 5c       	rla	r12		;
    67ee:	1c 4c d8 54 	mov	21720(r12),r12	;0x054d8
    67f2:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    67f6:	0c 93       	cmp	#0,	r12	;r3 As==00
    67f8:	15 24       	jz	$+44     	;abs 0x6824
    67fa:	00 3c       	jmp	$+2      	;abs 0x67fc
    67fc:	1c 42 b6 54 	mov	&0x54b6,r12	;0x54b6
    6800:	0c 5c       	rla	r12		;
    6802:	1c 4c 1a 55 	mov	21786(r12),r12	;0x0551a
    6806:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    680a:	1f 44 fc ff 	mov	-4(r4),	r15	;
    680e:	1c 42 b6 54 	mov	&0x54b6,r12	;0x54b6
    6812:	0c 5c       	rla	r12		;
    6814:	3c 50 5c 55 	add	#21852,	r12	;#0x555c
    6818:	1d 44 fa ff 	mov	-6(r4),	r13	;
    681c:	0e 4c       	mov	r12,	r14	;
    681e:	b0 12 f4 61 	call	#25076		;#0x61f4
    6822:	00 3c       	jmp	$+2      	;abs 0x6824
    6824:	1c 42 b6 54 	mov	&0x54b6,r12	;0x54b6
    6828:	1c 53       	inc	r12		;
    682a:	82 4c b6 54 	mov	r12,	&0x54b6	;
    682e:	d5 3f       	jmp	$-84     	;abs 0x67da
    6830:	82 43 b8 54 	mov	#0,	&0x54b8	;r3 As==00
    6834:	82 43 b6 54 	mov	#0,	&0x54b6	;r3 As==00
    6838:	1c 42 d4 54 	mov	&0x54d4,r12	;0x54d4
    683c:	1c 4c 02 00 	mov	2(r12),	r12	;
    6840:	1d 44 fe ff 	mov	-2(r4),	r13	;
    6844:	8d 4c 08 00 	mov	r12,	8(r13)	;
    6848:	03 3c       	jmp	$+8      	;abs 0x6850
    684a:	82 43 b8 54 	mov	#0,	&0x54b8	;r3 As==00
    684e:	00 3c       	jmp	$+2      	;abs 0x6850
    6850:	31 50 06 00 	add	#6,	r1	;
    6854:	34 41       	pop	r4		;
    6856:	30 41       	ret			

00006858 <transition_to>:
    6858:	04 12       	push	r4		;
    685a:	04 41       	mov	r1,	r4	;
    685c:	31 80 0a 00 	sub	#10,	r1	;#0x000a
    6860:	0c 4f       	mov	r15,	r12	;
    6862:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6866:	1f 42 d4 54 	mov	&0x54d4,r15	;0x54d4
    686a:	3d 40 ce 54 	mov	#21710,	r13	;#0x54ce
    686e:	3e 40 c2 54 	mov	#21698,	r14	;#0x54c2
    6872:	0f 9d       	cmp	r13,	r15	;
    6874:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    6878:	84 4d f8 ff 	mov	r13,	-8(r4)	; 0xfff8
    687c:	84 4e f6 ff 	mov	r14,	-10(r4)	; 0xfff6
    6880:	04 24       	jz	$+10     	;abs 0x688a
    6882:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6886:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    688a:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    688e:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    6892:	1d 44 fe ff 	mov	-2(r4),	r13	;
    6896:	8c 4d 00 00 	mov	r13,	0(r12)	;
    689a:	1c 42 d4 54 	mov	&0x54d4,r12	;0x54d4
    689e:	1c 4c 02 00 	mov	2(r12),	r12	;
    68a2:	1c 53       	inc	r12		;
    68a4:	1d 44 fc ff 	mov	-4(r4),	r13	;
    68a8:	8d 4c 02 00 	mov	r12,	2(r13)	;
    68ac:	1c 42 d4 54 	mov	&0x54d4,r12	;0x54d4
    68b0:	1c 4c 02 00 	mov	2(r12),	r12	;
    68b4:	1d 44 fc ff 	mov	-4(r4),	r13	;
    68b8:	1d 4d 04 00 	mov	4(r13),	r13	;
    68bc:	8d 4c 02 00 	mov	r12,	2(r13)	;
    68c0:	1c 42 d4 54 	mov	&0x54d4,r12	;0x54d4
    68c4:	2c 4c       	mov	@r12,	r12	;
    68c6:	1d 44 fc ff 	mov	-4(r4),	r13	;
    68ca:	1d 4d 04 00 	mov	4(r13),	r13	;
    68ce:	8d 4c 00 00 	mov	r12,	0(r13)	;
    68d2:	1c 44 fc ff 	mov	-4(r4),	r12	;
    68d6:	82 4c d4 54 	mov	r12,	&0x54d4	;
    68da:	b0 12 ac 67 	call	#26540		;#0x67ac
    68de:	1c 44 fe ff 	mov	-2(r4),	r12	;
    68e2:	2c 4c       	mov	@r12,	r12	;
    68e4:	31 40 00 24 	mov	#9216,	r1	;#0x2400
    68e8:	00 4c       	br	r12		;
    68ea:	31 50 0a 00 	add	#10,	r1	;#0x000a
    68ee:	34 41       	pop	r4		;
    68f0:	30 41       	ret			
	...

000068f4 <chan_in>:
    68f4:	04 12       	push	r4		;
    68f6:	04 41       	mov	r1,	r4	;
    68f8:	0b 12       	push	r11		;
    68fa:	0a 12       	push	r10		;
    68fc:	31 80 18 00 	sub	#24,	r1	;#0x0018
    6900:	0c 4d       	mov	r13,	r12	;
    6902:	0b 4e       	mov	r14,	r11	;
    6904:	0a 4f       	mov	r15,	r10	;
    6906:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    690a:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    690e:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    6912:	84 43 f2 ff 	mov	#0,	-14(r4)	;r3 As==00, 0xfff2
    6916:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    691a:	2d 53       	incd	r13		;
    691c:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    6920:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    6924:	84 4d ec ff 	mov	r13,	-20(r4)	; 0xffec
    6928:	1d 44 ee ff 	mov	-18(r4),r13	;0xffffffee
    692c:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfffffff6
    6930:	0d 5e       	add	r14,	r13	;
    6932:	84 4d ea ff 	mov	r13,	-22(r4)	; 0xffea
    6936:	84 4d f0 ff 	mov	r13,	-16(r4)	; 0xfff0
    693a:	0f 4d       	mov	r13,	r15	;
    693c:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    6940:	84 4b e6 ff 	mov	r11,	-26(r4)	; 0xffe6
    6944:	84 4a e4 ff 	mov	r10,	-28(r4)	; 0xffe4
    6948:	31 50 18 00 	add	#24,	r1	;#0x0018
    694c:	3a 41       	pop	r10		;
    694e:	3b 41       	pop	r11		;
    6950:	34 41       	pop	r4		;
    6952:	30 41       	ret			

00006954 <chan_out>:
    6954:	04 12       	push	r4		;
    6956:	04 41       	mov	r1,	r4	;
    6958:	31 80 14 00 	sub	#20,	r1	;#0x0014
    695c:	1c 44 0a 00 	mov	10(r4),	r12	;0x0000a
    6960:	1d 44 08 00 	mov	8(r4),	r13	;
    6964:	1e 44 06 00 	mov	6(r4),	r14	;
    6968:	1f 44 04 00 	mov	4(r4),	r15	;
    696c:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6970:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    6974:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    6978:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    697c:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6980:	2c 53       	incd	r12		;
    6982:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    6986:	1c 44 fa ff 	mov	-6(r4),	r12	;
    698a:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    698e:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    6992:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    6996:	0c 5d       	add	r13,	r12	;
    6998:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    699c:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    69a0:	1e 44 fe ff 	mov	-2(r4),	r14	;
    69a4:	1d 44 fc ff 	mov	-4(r4),	r13	;
    69a8:	0f 4c       	mov	r12,	r15	;
    69aa:	b0 12 f4 61 	call	#25076		;#0x61f4
    69ae:	31 50 14 00 	add	#20,	r1	;#0x0014
    69b2:	34 41       	pop	r4		;
    69b4:	30 41       	ret			
	...

000069b8 <write_to_gbuf>:
    69b8:	04 12       	push	r4		;
    69ba:	04 41       	mov	r1,	r4	;
    69bc:	0b 12       	push	r11		;
    69be:	0a 12       	push	r10		;
    69c0:	31 80 12 00 	sub	#18,	r1	;#0x0012
    69c4:	0c 4d       	mov	r13,	r12	;
    69c6:	0b 4e       	mov	r14,	r11	;
    69c8:	0a 4f       	mov	r15,	r10	;
    69ca:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    69ce:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    69d2:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    69d6:	1d 42 b8 54 	mov	&0x54b8,r13	;0x54b8
    69da:	0d 5d       	rla	r13		;
    69dc:	3d 50 5c 55 	add	#21852,	r13	;#0x555c
    69e0:	1e 44 fa ff 	mov	-6(r4),	r14	;
    69e4:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfffffff6
    69e8:	84 4f f0 ff 	mov	r15,	-16(r4)	; 0xfff0
    69ec:	0f 4d       	mov	r13,	r15	;
    69ee:	1d 44 f0 ff 	mov	-16(r4),r13	;0xfffffff0
    69f2:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    69f6:	84 4b ec ff 	mov	r11,	-20(r4)	; 0xffec
    69fa:	84 4a ea ff 	mov	r10,	-22(r4)	; 0xffea
    69fe:	b0 12 f4 61 	call	#25076		;#0x61f4
    6a02:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6a06:	1d 42 b8 54 	mov	&0x54b8,r13	;0x54b8
    6a0a:	0d 5d       	rla	r13		;
    6a0c:	8d 4c 1a 55 	mov	r12,	21786(r13); 0x551a
    6a10:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6a14:	1d 42 b8 54 	mov	&0x54b8,r13	;0x54b8
    6a18:	0d 5d       	rla	r13		;
    6a1a:	8d 4c d8 54 	mov	r12,	21720(r13); 0x54d8
    6a1e:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6a22:	3c 90 03 00 	cmp	#3,	r12	;
    6a26:	2a 28       	jnc	$+86     	;abs 0x6a7c
    6a28:	00 3c       	jmp	$+2      	;abs 0x6a2a
    6a2a:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6a2e:	3c 53       	add	#-1,	r12	;r3 As==11
    6a30:	12 c3       	clrc			
    6a32:	0c 10       	rrc	r12		;
    6a34:	1c 53       	inc	r12		;
    6a36:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    6a3a:	94 43 f2 ff 	mov	#1,	-14(r4)	;r3 As==01, 0xfff2
    6a3e:	00 3c       	jmp	$+2      	;abs 0x6a40
    6a40:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6a44:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    6a48:	0c 9d       	cmp	r13,	r12	;
    6a4a:	10 2c       	jc	$+34     	;abs 0x6a6c
    6a4c:	00 3c       	jmp	$+2      	;abs 0x6a4e
    6a4e:	1c 42 b8 54 	mov	&0x54b8,r12	;0x54b8
    6a52:	1d 44 f2 ff 	mov	-14(r4),r13	;0xfffffff2
    6a56:	0c 5d       	add	r13,	r12	;
    6a58:	0c 5c       	rla	r12		;
    6a5a:	8c 43 d8 54 	mov	#0,	21720(r12);r3 As==00, 0x54d8
    6a5e:	00 3c       	jmp	$+2      	;abs 0x6a60
    6a60:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6a64:	1c 53       	inc	r12		;
    6a66:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    6a6a:	ea 3f       	jmp	$-42     	;abs 0x6a40
    6a6c:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6a70:	1d 42 b8 54 	mov	&0x54b8,r13	;0x54b8
    6a74:	0d 5c       	add	r12,	r13	;
    6a76:	82 4d b8 54 	mov	r13,	&0x54b8	;
    6a7a:	06 3c       	jmp	$+14     	;abs 0x6a88
    6a7c:	1c 42 b8 54 	mov	&0x54b8,r12	;0x54b8
    6a80:	1c 53       	inc	r12		;
    6a82:	82 4c b8 54 	mov	r12,	&0x54b8	;
    6a86:	00 3c       	jmp	$+2      	;abs 0x6a88
    6a88:	31 50 12 00 	add	#18,	r1	;#0x0012
    6a8c:	3a 41       	pop	r10		;
    6a8e:	3b 41       	pop	r11		;
    6a90:	34 41       	pop	r4		;
    6a92:	30 41       	ret			

00006a94 <chan_out_gbuf>:
    6a94:	04 12       	push	r4		;
    6a96:	04 41       	mov	r1,	r4	;
    6a98:	31 80 18 00 	sub	#24,	r1	;#0x0018
    6a9c:	1c 44 0a 00 	mov	10(r4),	r12	;0x0000a
    6aa0:	1d 44 08 00 	mov	8(r4),	r13	;
    6aa4:	1e 44 06 00 	mov	6(r4),	r14	;
    6aa8:	1f 44 04 00 	mov	4(r4),	r15	;
    6aac:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6ab0:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    6ab4:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    6ab8:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    6abc:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6ac0:	2c 53       	incd	r12		;
    6ac2:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    6ac6:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6aca:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    6ace:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    6ad2:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    6ad6:	0c 5d       	add	r13,	r12	;
    6ad8:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    6adc:	1c 42 b8 54 	mov	&0x54b8,r12	;0x54b8
    6ae0:	0c 5c       	rla	r12		;
    6ae2:	3c 50 5c 55 	add	#21852,	r12	;#0x555c
    6ae6:	1e 44 fe ff 	mov	-2(r4),	r14	;
    6aea:	1d 44 fc ff 	mov	-4(r4),	r13	;
    6aee:	0f 4c       	mov	r12,	r15	;
    6af0:	b0 12 f4 61 	call	#25076		;#0x61f4
    6af4:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6af8:	1d 42 b8 54 	mov	&0x54b8,r13	;0x54b8
    6afc:	0d 5d       	rla	r13		;
    6afe:	8d 4c 1a 55 	mov	r12,	21786(r13); 0x551a
    6b02:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6b06:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    6b0a:	1d 42 b8 54 	mov	&0x54b8,r13	;0x54b8
    6b0e:	0d 5d       	rla	r13		;
    6b10:	8d 4c d8 54 	mov	r12,	21720(r13); 0x54d8
    6b14:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6b18:	3c 90 03 00 	cmp	#3,	r12	;
    6b1c:	2a 28       	jnc	$+86     	;abs 0x6b72
    6b1e:	00 3c       	jmp	$+2      	;abs 0x6b20
    6b20:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6b24:	3c 53       	add	#-1,	r12	;r3 As==11
    6b26:	12 c3       	clrc			
    6b28:	0c 10       	rrc	r12		;
    6b2a:	1c 53       	inc	r12		;
    6b2c:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    6b30:	94 43 e8 ff 	mov	#1,	-24(r4)	;r3 As==01, 0xffe8
    6b34:	00 3c       	jmp	$+2      	;abs 0x6b36
    6b36:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    6b3a:	1d 44 ea ff 	mov	-22(r4),r13	;0xffffffea
    6b3e:	0c 9d       	cmp	r13,	r12	;
    6b40:	10 2c       	jc	$+34     	;abs 0x6b62
    6b42:	00 3c       	jmp	$+2      	;abs 0x6b44
    6b44:	1c 42 b8 54 	mov	&0x54b8,r12	;0x54b8
    6b48:	1d 44 e8 ff 	mov	-24(r4),r13	;0xffffffe8
    6b4c:	0c 5d       	add	r13,	r12	;
    6b4e:	0c 5c       	rla	r12		;
    6b50:	8c 43 d8 54 	mov	#0,	21720(r12);r3 As==00, 0x54d8
    6b54:	00 3c       	jmp	$+2      	;abs 0x6b56
    6b56:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    6b5a:	1c 53       	inc	r12		;
    6b5c:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    6b60:	ea 3f       	jmp	$-42     	;abs 0x6b36
    6b62:	1c 44 ea ff 	mov	-22(r4),r12	;0xffffffea
    6b66:	1d 42 b8 54 	mov	&0x54b8,r13	;0x54b8
    6b6a:	0d 5c       	add	r12,	r13	;
    6b6c:	82 4d b8 54 	mov	r13,	&0x54b8	;
    6b70:	06 3c       	jmp	$+14     	;abs 0x6b7e
    6b72:	1c 42 b8 54 	mov	&0x54b8,r12	;0x54b8
    6b76:	1c 53       	inc	r12		;
    6b78:	82 4c b8 54 	mov	r12,	&0x54b8	;
    6b7c:	00 3c       	jmp	$+2      	;abs 0x6b7e
    6b7e:	31 50 18 00 	add	#24,	r1	;#0x0018
    6b82:	34 41       	pop	r4		;
    6b84:	30 41       	ret			
	...

00006b88 <main>:
    6b88:	04 12       	push	r4		;
    6b8a:	04 41       	mov	r1,	r4	;
    6b8c:	21 83       	decd	r1		;
    6b8e:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    6b92:	b0 12 5c 61 	call	#24924		;#0x615c
    6b96:	1c 42 d6 54 	mov	&0x54d6,r12	;0x54d6
    6b9a:	1c 53       	inc	r12		;
    6b9c:	82 4c d6 54 	mov	r12,	&0x54d6	;
    6ba0:	b0 12 ac 67 	call	#26540		;#0x67ac
    6ba4:	1c 42 d4 54 	mov	&0x54d4,r12	;0x54d4
    6ba8:	2c 4c       	mov	@r12,	r12	;
    6baa:	2c 4c       	mov	@r12,	r12	;
    6bac:	00 4c       	br	r12		;
    6bae:	0f 43       	clr	r15		;
    6bb0:	21 53       	incd	r1		;
    6bb2:	34 41       	pop	r4		;
    6bb4:	30 41       	ret			
	...

00006bb8 <__mulhi3hw_noint>:
    6bb8:	82 4f c0 04 	mov	r15,	&0x04c0	;
    6bbc:	82 4e c8 04 	mov	r14,	&0x04c8	;
    6bc0:	1f 42 ca 04 	mov	&0x04ca,r15	;0x04ca
    6bc4:	30 41       	ret			

00006bc6 <UART_init>:
    6bc6:	92 43 c0 05 	mov	#1,	&0x05c0	;r3 As==01
    6bca:	b2 d0 80 00 	bis	#128,	&0x05c0	;#0x0080
    6bce:	c0 05 
    6bd0:	e2 42 c6 05 	mov.b	#4,	&0x05c6	;r2 As==10
    6bd4:	c2 43 c7 05 	mov.b	#0,	&0x05c7	;r3 As==00
    6bd8:	b2 40 41 55 	mov	#21825,	&0x05c8	;#0x5541
    6bdc:	c8 05 
    6bde:	d2 c3 0b 02 	bic.b	#1,	&0x020b	;r3 As==01
    6be2:	d2 d3 0d 02 	bis.b	#1,	&0x020d	;r3 As==01
    6be6:	e2 c3 0b 02 	bic.b	#2,	&0x020b	;r3 As==10
    6bea:	e2 d3 0d 02 	bis.b	#2,	&0x020d	;r3 As==10
    6bee:	92 c3 c0 05 	bic	#1,	&0x05c0	;r3 As==01
    6bf2:	3c 40 22 1c 	mov	#7202,	r12	;#0x1c22
    6bf6:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    6bfa:	8c 43 04 00 	mov	#0,	4(r12)	;r3 As==00
    6bfe:	cc 43 06 00 	mov.b	#0,	6(r12)	;r3 As==00
    6c02:	8c 43 0a 00 	mov	#0,	10(r12)	;r3 As==00, 0x000a
    6c06:	30 41       	ret			

00006c08 <UART_teardown>:
    6c08:	d2 c3 0b 02 	bic.b	#1,	&0x020b	;r3 As==01
    6c0c:	d2 c3 0d 02 	bic.b	#1,	&0x020d	;r3 As==01
    6c10:	e2 c3 0b 02 	bic.b	#2,	&0x020b	;r3 As==10
    6c14:	e2 c3 0d 02 	bic.b	#2,	&0x020d	;r3 As==10
    6c18:	92 43 c0 05 	mov	#1,	&0x05c0	;r3 As==01
    6c1c:	c2 43 c6 05 	mov.b	#0,	&0x05c6	;r3 As==00
    6c20:	82 43 c8 05 	mov	#0,	&0x05c8	;r3 As==00
    6c24:	82 43 da 05 	mov	#0,	&0x05da	;r3 As==00
    6c28:	82 43 dc 05 	mov	#0,	&0x05dc	;r3 As==00
    6c2c:	30 41       	ret			

00006c2e <UART_asyncSend>:
    6c2e:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6c32:	6e 4f       	mov.b	@r15,	r14	;
    6c34:	0e 93       	cmp	#0,	r14	;r3 As==00
    6c36:	fd 23       	jnz	$-4      	;abs 0x6c32
    6c38:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6c3c:	de 43 00 00 	mov.b	#1,	0(r14)	;r3 As==01
    6c40:	8e 4c 02 00 	mov	r12,	2(r14)	;
    6c44:	8e 4d 04 00 	mov	r13,	4(r14)	;
    6c48:	a2 c2 dc 05 	bic	#4,	&0x05dc	;r2 As==10
    6c4c:	a2 d3 da 05 	bis	#2,	&0x05da	;r3 As==10
    6c50:	30 41       	ret			

00006c52 <UART_send>:
    6c52:	b0 12 2e 6c 	call	#27694		;#0x6c2e
    6c56:	3d 40 22 1c 	mov	#7202,	r13	;#0x1c22
    6c5a:	6c 4d       	mov.b	@r13,	r12	;
    6c5c:	0c 93       	cmp	#0,	r12	;r3 As==00
    6c5e:	fd 23       	jnz	$-4      	;abs 0x6c5a
    6c60:	30 41       	ret			

00006c62 <UART_critSend>:
    6c62:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6c66:	6e 4f       	mov.b	@r15,	r14	;
    6c68:	0e 93       	cmp	#0,	r14	;r3 As==00
    6c6a:	fd 23       	jnz	$-4      	;abs 0x6c66
    6c6c:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6c70:	de 43 00 00 	mov.b	#1,	0(r14)	;r3 As==01
    6c74:	8e 4c 02 00 	mov	r12,	2(r14)	;
    6c78:	8e 4d 04 00 	mov	r13,	4(r14)	;
    6c7c:	a2 c2 de 05 	bic	#4,	&0x05de	;r2 As==10
    6c80:	1c 4e 04 00 	mov	4(r14),	r12	;
    6c84:	0d 4c       	mov	r12,	r13	;
    6c86:	3d 53       	add	#-1,	r13	;r3 As==11
    6c88:	8e 4d 04 00 	mov	r13,	4(r14)	;
    6c8c:	0c 93       	cmp	#0,	r12	;r3 As==00
    6c8e:	19 24       	jz	$+52     	;abs 0x6cc2
    6c90:	0c 4e       	mov	r14,	r12	;
    6c92:	1d 4c 02 00 	mov	2(r12),	r13	;
    6c96:	0e 4d       	mov	r13,	r14	;
    6c98:	1e 53       	inc	r14		;
    6c9a:	8c 4e 02 00 	mov	r14,	2(r12)	;
    6c9e:	6d 4d       	mov.b	@r13,	r13	;
    6ca0:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    6ca4:	82 4d ce 05 	mov	r13,	&0x05ce	;
    6ca8:	a2 b3 dc 05 	bit	#2,	&0x05dc	;r3 As==10
    6cac:	fd 27       	jz	$-4      	;abs 0x6ca8
    6cae:	a2 c3 dc 05 	bic	#2,	&0x05dc	;r3 As==10
    6cb2:	1d 4c 04 00 	mov	4(r12),	r13	;
    6cb6:	0e 4d       	mov	r13,	r14	;
    6cb8:	3e 53       	add	#-1,	r14	;r3 As==11
    6cba:	8c 4e 04 00 	mov	r14,	4(r12)	;
    6cbe:	0d 93       	cmp	#0,	r13	;r3 As==00
    6cc0:	e8 23       	jnz	$-46     	;abs 0x6c92
    6cc2:	c2 43 22 1c 	mov.b	#0,	&0x1c22	;r3 As==00
    6cc6:	30 41       	ret			

00006cc8 <UART_isTxBusy>:
    6cc8:	5c 42 22 1c 	mov.b	&0x1c22,r12	;0x1c22
    6ccc:	30 41       	ret			

00006cce <UART_asyncReceive>:
    6cce:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6cd2:	5e 4f 06 00 	mov.b	6(r15),	r14	;
    6cd6:	0e 93       	cmp	#0,	r14	;r3 As==00
    6cd8:	fc 23       	jnz	$-6      	;abs 0x6cd2
    6cda:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6cde:	de 43 06 00 	mov.b	#1,	6(r14)	;r3 As==01
    6ce2:	8e 4c 08 00 	mov	r12,	8(r14)	;
    6ce6:	8e 4d 0a 00 	mov	r13,	10(r14)	; 0x000a
    6cea:	92 c3 dc 05 	bic	#1,	&0x05dc	;r3 As==01
    6cee:	92 d3 da 05 	bis	#1,	&0x05da	;r3 As==01
    6cf2:	30 41       	ret			

00006cf4 <UART_receive>:
    6cf4:	b0 12 ce 6c 	call	#27854		;#0x6cce
    6cf8:	3d 40 22 1c 	mov	#7202,	r13	;#0x1c22
    6cfc:	5c 4d 06 00 	mov.b	6(r13),	r12	;
    6d00:	0c 93       	cmp	#0,	r12	;r3 As==00
    6d02:	fc 23       	jnz	$-6      	;abs 0x6cfc
    6d04:	30 41       	ret			

00006d06 <UART_critReceive>:
    6d06:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6d0a:	5e 4f 06 00 	mov.b	6(r15),	r14	;
    6d0e:	0e 93       	cmp	#0,	r14	;r3 As==00
    6d10:	fc 23       	jnz	$-6      	;abs 0x6d0a
    6d12:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6d16:	de 43 06 00 	mov.b	#1,	6(r14)	;r3 As==01
    6d1a:	8e 4c 08 00 	mov	r12,	8(r14)	;
    6d1e:	8e 4d 0a 00 	mov	r13,	10(r14)	; 0x000a
    6d22:	92 c3 dc 05 	bic	#1,	&0x05dc	;r3 As==01
    6d26:	1c 4e 0a 00 	mov	10(r14),r12	;0x0000a
    6d2a:	0d 4c       	mov	r12,	r13	;
    6d2c:	3d 53       	add	#-1,	r13	;r3 As==11
    6d2e:	8e 4d 0a 00 	mov	r13,	10(r14)	; 0x000a
    6d32:	0c 93       	cmp	#0,	r12	;r3 As==00
    6d34:	18 24       	jz	$+50     	;abs 0x6d66
    6d36:	0c 4e       	mov	r14,	r12	;
    6d38:	92 b3 dc 05 	bit	#1,	&0x05dc	;r3 As==01
    6d3c:	fd 27       	jz	$-4      	;abs 0x6d38
    6d3e:	92 c3 dc 05 	bic	#1,	&0x05dc	;r3 As==01
    6d42:	1e 42 cc 05 	mov	&0x05cc,r14	;0x05cc
    6d46:	1d 4c 08 00 	mov	8(r12),	r13	;
    6d4a:	0f 4d       	mov	r13,	r15	;
    6d4c:	1f 53       	inc	r15		;
    6d4e:	8c 4f 08 00 	mov	r15,	8(r12)	;
    6d52:	cd 4e 00 00 	mov.b	r14,	0(r13)	;
    6d56:	1d 4c 0a 00 	mov	10(r12),r13	;0x0000a
    6d5a:	0e 4d       	mov	r13,	r14	;
    6d5c:	3e 53       	add	#-1,	r14	;r3 As==11
    6d5e:	8c 4e 0a 00 	mov	r14,	10(r12)	; 0x000a
    6d62:	0d 93       	cmp	#0,	r13	;r3 As==00
    6d64:	e9 23       	jnz	$-44     	;abs 0x6d38
    6d66:	c2 43 28 1c 	mov.b	#0,	&0x1c28	;r3 As==00
    6d6a:	30 41       	ret			

00006d6c <UART_isRxBusy>:
    6d6c:	5c 42 28 1c 	mov.b	&0x1c28,r12	;0x1c28
    6d70:	30 41       	ret			

00006d72 <UART_isRxDone>:
    6d72:	5c 42 28 1c 	mov.b	&0x1c28,r12	;0x1c28
    6d76:	3c 53       	add	#-1,	r12	;r3 As==11
    6d78:	5c 03       	rrum	#1,	r12	;
    6d7a:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    6d7e:	30 41       	ret			

00006d80 <USCI_A0_ISR>:
    6d80:	3f 15       	pushm	#4,	r15	;16-bit words
    6d82:	1c 42 de 05 	mov	&0x05de,r12	;0x05de
    6d86:	2c 93       	cmp	#2,	r12	;r3 As==10
    6d88:	03 24       	jz	$+8      	;abs 0x6d90
    6d8a:	2c 92       	cmp	#4,	r12	;r2 As==10
    6d8c:	1e 24       	jz	$+62     	;abs 0x6dca
    6d8e:	38 3c       	jmp	$+114    	;abs 0x6e00
    6d90:	3d 40 22 1c 	mov	#7202,	r13	;#0x1c22
    6d94:	1c 4d 0a 00 	mov	10(r13),r12	;0x0000a
    6d98:	0e 4c       	mov	r12,	r14	;
    6d9a:	3e 53       	add	#-1,	r14	;r3 As==11
    6d9c:	8d 4e 0a 00 	mov	r14,	10(r13)	; 0x000a
    6da0:	0c 93       	cmp	#0,	r12	;r3 As==00
    6da2:	0a 24       	jz	$+22     	;abs 0x6db8
    6da4:	1e 42 cc 05 	mov	&0x05cc,r14	;0x05cc
    6da8:	1c 4d 08 00 	mov	8(r13),	r12	;
    6dac:	0f 4c       	mov	r12,	r15	;
    6dae:	1f 53       	inc	r15		;
    6db0:	8d 4f 08 00 	mov	r15,	8(r13)	;
    6db4:	cc 4e 00 00 	mov.b	r14,	0(r12)	;
    6db8:	1c 42 2c 1c 	mov	&0x1c2c,r12	;0x1c2c
    6dbc:	0c 93       	cmp	#0,	r12	;r3 As==00
    6dbe:	20 20       	jnz	$+66     	;abs 0x6e00
    6dc0:	92 c3 da 05 	bic	#1,	&0x05da	;r3 As==01
    6dc4:	c2 43 28 1c 	mov.b	#0,	&0x1c28	;r3 As==00
    6dc8:	1b 3c       	jmp	$+56     	;abs 0x6e00
    6dca:	3c 40 22 1c 	mov	#7202,	r12	;#0x1c22
    6dce:	1d 4c 02 00 	mov	2(r12),	r13	;
    6dd2:	0e 4d       	mov	r13,	r14	;
    6dd4:	1e 53       	inc	r14		;
    6dd6:	8c 4e 02 00 	mov	r14,	2(r12)	;
    6dda:	6d 4d       	mov.b	@r13,	r13	;
    6ddc:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    6de0:	82 4d ce 05 	mov	r13,	&0x05ce	;
    6de4:	1d 4c 04 00 	mov	4(r12),	r13	;
    6de8:	3d 53       	add	#-1,	r13	;r3 As==11
    6dea:	8c 4d 04 00 	mov	r13,	4(r12)	;
    6dee:	0d 93       	cmp	#0,	r13	;r3 As==00
    6df0:	07 20       	jnz	$+16     	;abs 0x6e00
    6df2:	d2 b3 ca 05 	bit.b	#1,	&0x05ca	;r3 As==01
    6df6:	fd 23       	jnz	$-4      	;abs 0x6df2
    6df8:	a2 c3 da 05 	bic	#2,	&0x05da	;r3 As==10
    6dfc:	c2 43 22 1c 	mov.b	#0,	&0x1c22	;r3 As==00
    6e00:	3c 17       	popm	#4,	r15	;16-bit words
    6e02:	00 13       	reti			

00006e04 <memmove>:
    6e04:	0a 15       	pushm	#1,	r10	;16-bit words
    6e06:	0d 9c       	cmp	r12,	r13	;
    6e08:	10 2c       	jc	$+34     	;abs 0x6e2a
    6e0a:	0b 4d       	mov	r13,	r11	;
    6e0c:	0b 5e       	add	r14,	r11	;
    6e0e:	0c 9b       	cmp	r11,	r12	;
    6e10:	0c 2c       	jc	$+26     	;abs 0x6e2a
    6e12:	0d 4e       	mov	r14,	r13	;
    6e14:	3d 53       	add	#-1,	r13	;r3 As==11
    6e16:	3d 93       	cmp	#-1,	r13	;r3 As==11
    6e18:	13 24       	jz	$+40     	;abs 0x6e40
    6e1a:	0f 4d       	mov	r13,	r15	;
    6e1c:	0f 8e       	sub	r14,	r15	;
    6e1e:	0f 5b       	add	r11,	r15	;
    6e20:	0a 4c       	mov	r12,	r10	;
    6e22:	0a 5d       	add	r13,	r10	;
    6e24:	ea 4f 00 00 	mov.b	@r15,	0(r10)	;
    6e28:	f5 3f       	jmp	$-20     	;abs 0x6e14
    6e2a:	0f 43       	clr	r15		;
    6e2c:	0f 9e       	cmp	r14,	r15	;
    6e2e:	08 24       	jz	$+18     	;abs 0x6e40
    6e30:	0a 4d       	mov	r13,	r10	;
    6e32:	0a 5f       	add	r15,	r10	;
    6e34:	0b 4c       	mov	r12,	r11	;
    6e36:	0b 5f       	add	r15,	r11	;
    6e38:	eb 4a 00 00 	mov.b	@r10,	0(r11)	;
    6e3c:	1f 53       	inc	r15		;
    6e3e:	f6 3f       	jmp	$-18     	;abs 0x6e2c
    6e40:	0a 17       	popm	#1,	r10	;16-bit words
    6e42:	30 41       	ret			

00006e44 <memset>:
    6e44:	0f 4c       	mov	r12,	r15	;
    6e46:	0e 5c       	add	r12,	r14	;
    6e48:	0f 9e       	cmp	r14,	r15	;
    6e4a:	04 24       	jz	$+10     	;abs 0x6e54
    6e4c:	cf 4d 00 00 	mov.b	r13,	0(r15)	;
    6e50:	1f 53       	inc	r15		;
    6e52:	fa 3f       	jmp	$-10     	;abs 0x6e48
    6e54:	30 41       	ret			

00006e56 <__do_global_ctors_aux>:
    6e56:	0a 15       	pushm	#1,	r10	;16-bit words
    6e58:	1c 42 e8 44 	mov	&0x44e8,r12	;0x44e8
    6e5c:	3c 93       	cmp	#-1,	r12	;r3 As==11
    6e5e:	08 24       	jz	$+18     	;abs 0x6e70
    6e60:	3a 40 e8 44 	mov	#17640,	r10	;#0x44e8
    6e64:	8c 12       	call	r12		;
    6e66:	3a 50 fe ff 	add	#65534,	r10	;#0xfffe
    6e6a:	2c 4a       	mov	@r10,	r12	;
    6e6c:	3c 93       	cmp	#-1,	r12	;r3 As==11
    6e6e:	fa 23       	jnz	$-10     	;abs 0x6e64
    6e70:	0a 17       	popm	#1,	r10	;16-bit words
    6e72:	30 41       	ret			

00006e74 <call___do_global_ctors_aux>:
    6e74:	30 41       	ret			

00006e76 <__msp430_init>:
    6e76:	b0 12 a0 56 	call	#22176		;#0x56a0
    6e7a:	b0 12 56 6e 	call	#28246		;#0x6e56
    6e7e:	b0 12 e0 55 	call	#21984		;#0x55e0
    6e82:	b0 12 d4 55 	call	#21972		;#0x55d4
    6e86:	30 41       	ret			

00006e88 <__msp430_fini>:
    6e88:	b0 12 ec 55 	call	#21996		;#0x55ec
    6e8c:	b0 12 52 56 	call	#22098		;#0x5652
    6e90:	30 41       	ret			

Disassembly of section .MP430.attributes:

00000000 <.MP430.attributes>:
   0:	41 16       	popm.a	#5,	r5	;20-bit words
   2:	00 00       	beq			
   4:	00 6d       	addc	r13,	r0	;
   6:	73 70       	.word	0x7073;	????
   8:	61 62       	addc.b	#4,	r1	;r2 As==10
   a:	69 00 01 0b 	mova	r0,	&592641	; 0x90b01
   e:	00 00       	beq			
  10:	00 04       	bra	@r4		;
  12:	02 06       	mova	@r6,	r2	;
  14:	01 08       	mova	@r8,	r1	;
  16:	01 41       	mov	r1,	r1	;
  18:	16 00       	mova	@r0+,	r6	;
  1a:	00 00       	beq			
  1c:	6d 73       	subc.b	#2,	r13	;r3 As==10
  1e:	70 61       	addc.b	@r1+,	r0	;
  20:	62 69       	addc.b	@r9,	r2	;
  22:	00 01       	bra	@r1		;
  24:	0b 00       	mova	@r0,	r11	;
  26:	00 00       	beq			
  28:	04 02       	mova	@r2,	r4	;
  2a:	06 01       	mova	@r1,	r6	;
  2c:	08 01       	mova	@r1,	r8	;
  2e:	41 16       	popm.a	#5,	r5	;20-bit words
  30:	00 00       	beq			
  32:	00 6d       	addc	r13,	r0	;
  34:	73 70       	.word	0x7073;	????
  36:	61 62       	addc.b	#4,	r1	;r2 As==10
  38:	69 00 01 0b 	mova	r0,	&592641	; 0x90b01
  3c:	00 00       	beq			
  3e:	00 04       	bra	@r4		;
  40:	02 06       	mova	@r6,	r2	;
  42:	01 08       	mova	@r8,	r1	;
  44:	01 41       	mov	r1,	r1	;
  46:	16 00       	mova	@r0+,	r6	;
  48:	00 00       	beq			
  4a:	6d 73       	subc.b	#2,	r13	;r3 As==10
  4c:	70 61       	addc.b	@r1+,	r0	;
  4e:	62 69       	addc.b	@r9,	r2	;
  50:	00 01       	bra	@r1		;
  52:	0b 00       	mova	@r0,	r11	;
  54:	00 00       	beq			
  56:	04 02       	mova	@r2,	r4	;
  58:	06 01       	mova	@r1,	r6	;
  5a:	08 01       	mova	@r1,	r8	;
  5c:	41 16       	popm.a	#5,	r5	;20-bit words
  5e:	00 00       	beq			
  60:	00 6d       	addc	r13,	r0	;
  62:	73 70       	.word	0x7073;	????
  64:	61 62       	addc.b	#4,	r1	;r2 As==10
  66:	69 00 01 0b 	mova	r0,	&592641	; 0x90b01
  6a:	00 00       	beq			
  6c:	00 04       	bra	@r4		;
  6e:	02 06       	mova	@r6,	r2	;
  70:	01 08       	mova	@r8,	r1	;
  72:	01 41       	mov	r1,	r1	;
  74:	16 00       	mova	@r0+,	r6	;
  76:	00 00       	beq			
  78:	6d 73       	subc.b	#2,	r13	;r3 As==10
  7a:	70 61       	addc.b	@r1+,	r0	;
  7c:	62 69       	addc.b	@r9,	r2	;
  7e:	00 01       	bra	@r1		;
  80:	0b 00       	mova	@r0,	r11	;
  82:	00 00       	beq			
  84:	04 02       	mova	@r2,	r4	;
  86:	06 01       	mova	@r1,	r6	;
  88:	08 01       	mova	@r1,	r8	;
  8a:	41 16       	popm.a	#5,	r5	;20-bit words
  8c:	00 00       	beq			
  8e:	00 6d       	addc	r13,	r0	;
  90:	73 70       	.word	0x7073;	????
  92:	61 62       	addc.b	#4,	r1	;r2 As==10
  94:	69 00 01 0b 	mova	r0,	&592641	; 0x90b01
  98:	00 00       	beq			
  9a:	00 04       	bra	@r4		;
  9c:	02 06       	mova	@r6,	r2	;
  9e:	01 08       	mova	@r8,	r1	;
  a0:	01 41       	mov	r1,	r1	;
  a2:	16 00       	mova	@r0+,	r6	;
  a4:	00 00       	beq			
  a6:	6d 73       	subc.b	#2,	r13	;r3 As==10
  a8:	70 61       	addc.b	@r1+,	r0	;
  aa:	62 69       	addc.b	@r9,	r2	;
  ac:	00 01       	bra	@r1		;
  ae:	0b 00       	mova	@r0,	r11	;
  b0:	00 00       	beq			
  b2:	04 02       	mova	@r2,	r4	;
  b4:	06 01       	mova	@r1,	r6	;
  b6:	08 01       	mova	@r1,	r8	;
  b8:	41 16       	popm.a	#5,	r5	;20-bit words
  ba:	00 00       	beq			
  bc:	00 6d       	addc	r13,	r0	;
  be:	73 70       	.word	0x7073;	????
  c0:	61 62       	addc.b	#4,	r1	;r2 As==10
  c2:	69 00 01 0b 	mova	r0,	&592641	; 0x90b01
  c6:	00 00       	beq			
  c8:	00 04       	bra	@r4		;
  ca:	02 06       	mova	@r6,	r2	;
  cc:	01 08       	mova	@r8,	r1	;
  ce:	01 41       	mov	r1,	r1	;
  d0:	16 00       	mova	@r0+,	r6	;
  d2:	00 00       	beq			
  d4:	6d 73       	subc.b	#2,	r13	;r3 As==10
  d6:	70 61       	addc.b	@r1+,	r0	;
  d8:	62 69       	addc.b	@r9,	r2	;
  da:	00 01       	bra	@r1		;
  dc:	0b 00       	mova	@r0,	r11	;
  de:	00 00       	beq			
  e0:	04 02       	mova	@r2,	r4	;
  e2:	06 01       	mova	@r1,	r6	;
  e4:	08 01       	mova	@r1,	r8	;
  e6:	41 16       	popm.a	#5,	r5	;20-bit words
  e8:	00 00       	beq			
  ea:	00 6d       	addc	r13,	r0	;
  ec:	73 70       	.word	0x7073;	????
  ee:	61 62       	addc.b	#4,	r1	;r2 As==10
  f0:	69 00 01 0b 	mova	r0,	&592641	; 0x90b01
  f4:	00 00       	beq			
  f6:	00 04       	bra	@r4		;
  f8:	02 06       	mova	@r6,	r2	;
  fa:	01 08       	mova	@r8,	r1	;
  fc:	01 41       	mov	r1,	r1	;
  fe:	16 00       	mova	@r0+,	r6	;
 100:	00 00       	beq			
 102:	6d 73       	subc.b	#2,	r13	;r3 As==10
 104:	70 61       	addc.b	@r1+,	r0	;
 106:	62 69       	addc.b	@r9,	r2	;
 108:	00 01       	bra	@r1		;
 10a:	0b 00       	mova	@r0,	r11	;
 10c:	00 00       	beq			
 10e:	04 02       	mova	@r2,	r4	;
 110:	06 01       	mova	@r1,	r6	;
 112:	08 01       	mova	@r1,	r8	;

Disassembly of section .comment:

00000000 <.comment>:
   0:	47 43       	clr.b	r7		;
   2:	43 3a       	jl	$-888    	;abs 0xfffffc8a
   4:	20 28       	jnc	$+66     	;abs 0x46
   6:	47 4e       	mov.b	r14,	r7	;
   8:	55 29       	jnc	$+684    	;abs 0x2b4
   a:	20 34       	jge	$+66     	;abs 0x4c
   c:	2e 39       	jl	$+606    	;abs 0x26a
   e:	2e 31       	jn	$+606    	;abs 0x26c
  10:	20 32       	jn	$-958    	;abs 0xfffffc52
  12:	30 31       	jn	$+610    	;abs 0x274
  14:	34 30       	jn	$+106    	;abs 0x7e
  16:	37 30       	jn	$+112    	;abs 0x86
  18:	37 20       	jnz	$+112    	;abs 0x88
  1a:	28 70       	subc	@r0,	r8	;
  1c:	72 65       	addc.b	@r5+,	r2	;
  1e:	72 65       	addc.b	@r5+,	r2	;
  20:	6c 65       	addc.b	@r5,	r12	;
  22:	61 73       	subc.b	#2,	r1	;r3 As==10
  24:	65 20       	jnz	$+204    	;abs 0xf0
  26:	28 6d       	addc	@r13,	r8	;
  28:	73 70       	.word	0x7073;	????
  2a:	34 33       	jn	$-406    	;abs 0xfffffe94
  2c:	30 2d       	jc	$+610    	;abs 0x28e
  2e:	31 34       	jge	$+100    	;abs 0x92
  30:	72 31       	jn	$+742    	;abs 0x316
  32:	2d 33       	jn	$-420    	;abs 0xfffffe8e
  34:	36 34       	jge	$+110    	;abs 0xa2
  36:	29 29       	jnc	$+596    	;abs 0x28a
  38:	20 28       	jnc	$+66     	;abs 0x7a
  3a:	47 4e       	mov.b	r14,	r7	;
  3c:	55 50 72 6f 	add.b	0x6f72,	r5	;PC rel. 0x6fb0
  40:	20 31       	jn	$+578    	;abs 0x282
  42:	34 72       	subc	#8,	r4	;r2 As==11
  44:	31 29       	jnc	$+612    	;abs 0x2a8
  46:	20 28       	jnc	$+66     	;abs 0x88
  48:	42 61       	addc.b	r1,	r2	;
  4a:	73 65       	.word	0x6573;	????
  4c:	64 20       	jnz	$+202    	;abs 0x116
  4e:	6f 6e       	addc.b	@r14,	r15	;
  50:	3a 20       	jnz	$+118    	;abs 0xc6
  52:	47 43       	clr.b	r7		;
  54:	43 20       	jnz	$+136    	;abs 0xdc
  56:	34 2e       	jc	$-918    	;abs 0xfffffcc0
  58:	38 20       	jnz	$+114    	;abs 0xca
  5a:	47 44       	mov.b	r4,	r7	;
  5c:	42 20       	jnz	$+134    	;abs 0xe2
  5e:	37 2e       	jc	$-912    	;abs 0xfffffcce
  60:	37 20       	jnz	$+112    	;abs 0xd0
  62:	42 69       	addc.b	r9,	r2	;
  64:	6e 75       	subc.b	@r5,	r14	;
  66:	74 69       	addc.b	@r9+,	r4	;
  68:	6c 73       	subc.b	#2,	r12	;r3 As==10
  6a:	20 32       	jn	$-958    	;abs 0xfffffcac
  6c:	2e 32       	jn	$-930    	;abs 0xfffffcca
  6e:	34 20       	jnz	$+106    	;abs 0xd8
  70:	4e 65       	addc.b	r5,	r14	;
  72:	77 6c       	addc.b	@r12+,	r7	;
  74:	69 62       	addc.b	#4,	r9	;r2 As==10
  76:	20 32       	jn	$-958    	;abs 0xfffffcb8
  78:	2e 31       	jn	$+606    	;abs 0x2d6
  7a:	29 00 63 6c 	mova	&27747,	r9	;0x06c63
  7e:	61 6e       	addc.b	@r14,	r1	;
  80:	67 20       	jnz	$+208    	;abs 0x150
  82:	76 65       	addc.b	@r5+,	r6	;
  84:	72 73       	subc.b	#-1,	r2	;r3 As==11
  86:	69 6f       	addc.b	@r15,	r9	;
  88:	6e 20       	jnz	$+222    	;abs 0x166
  8a:	33 2e       	jc	$-920    	;abs 0xfffffcf2
  8c:	38 2e       	jc	$-910    	;abs 0xfffffcfe
  8e:	30 20       	jnz	$+98     	;abs 0xf0
  90:	28 68       	addc	@r8,	r8	;
  92:	74 74       	subc.b	@r4+,	r4	;
  94:	70 3a       	jl	$-798    	;abs 0xfffffd76
  96:	2f 2f       	jc	$-416    	;abs 0xfffffef6
  98:	6c 6c       	addc.b	@r12,	r12	;
  9a:	76 6d       	addc.b	@r13+,	r6	;
  9c:	2e 6f       	addc	@r15,	r14	;
  9e:	72 67       	addc.b	@r7+,	r2	;
  a0:	2f 67       	addc	@r7,	r15	;
  a2:	69 74       	subc.b	@r4,	r9	;
  a4:	2f 63       	addc	#2,	r15	;r3 As==10
  a6:	6c 61       	addc.b	@r1,	r12	;
  a8:	6e 67       	addc.b	@r7,	r14	;
  aa:	2e 67       	addc	@r7,	r14	;
  ac:	69 74       	subc.b	@r4,	r9	;
  ae:	20 35       	jge	$+578    	;abs 0x2f0
  b0:	32 65       	addc	@r5+,	r2	;
  b2:	64 35       	jge	$+714    	;abs 0x37c
  b4:	65 63       	addc.b	#2,	r5	;r3 As==10
  b6:	36 33       	jn	$-402    	;abs 0xffffff24
  b8:	31 62       	addc	#8,	r1	;r2 As==11
  ba:	30 62       	addc	#8,	r0	;r2 As==11
  bc:	62 66       	addc.b	@r6,	r2	;
  be:	35 63       	addc	#-1,	r5	;r3 As==11
  c0:	37 31       	jn	$+624    	;abs 0x330
  c2:	34 62       	addc	#8,	r4	;r2 As==11
  c4:	61 61       	addc.b	@r1,	r1	;
  c6:	30 63       	addc	#-1,	r0	;r3 As==11
  c8:	64 38       	jl	$+202    	;abs 0x192
  ca:	33 63       	.word	0x6333;	????
  cc:	33 33       	jn	$-408    	;abs 0xffffff34
  ce:	65 62       	addc.b	#4,	r5	;r2 As==10
  d0:	66 65       	addc.b	@r5,	r6	;
  d2:	30 63       	addc	#-1,	r0	;r3 As==11
  d4:	36 61       	addc	@r1+,	r6	;
  d6:	61 29       	jnc	$+708    	;abs 0x39a
  d8:	20 28       	jnc	$+66     	;abs 0x11a
  da:	68 74       	subc.b	@r4,	r8	;
  dc:	74 70 3a 2f 	subc.b	#12090,	r4	;#0x2f3a
  e0:	2f 6c       	addc	@r12,	r15	;
  e2:	6c 76       	subc.b	@r6,	r12	;
  e4:	6d 2e       	jc	$-804    	;abs 0xfffffdc0
  e6:	6f 72       	subc.b	#4,	r15	;r2 As==10
  e8:	67 2f       	jc	$-304    	;abs 0xffffffb8
  ea:	67 69       	addc.b	@r9,	r7	;
  ec:	74 2f       	jc	$-278    	;abs 0xffffffd6
  ee:	6c 6c       	addc.b	@r12,	r12	;
  f0:	76 6d       	addc.b	@r13+,	r6	;
  f2:	2e 67       	addc	@r7,	r14	;
  f4:	69 74       	subc.b	@r4,	r9	;
  f6:	20 38       	jl	$+66     	;abs 0x138
  f8:	31 33       	jn	$-412    	;abs 0xffffff5c
  fa:	38 36       	jge	$-910    	;abs 0xfffffd6c
  fc:	64 34       	jge	$+202    	;abs 0x1c6
  fe:	62 34       	jge	$+198    	;abs 0x1c4
 100:	66 64       	addc.b	@r4,	r6	;
 102:	64 38       	jl	$+202    	;abs 0x1cc
 104:	30 66       	addc	@r6+,	r0	;
 106:	30 33       	jn	$-414    	;abs 0xffffff68
 108:	38 66       	addc	@r6+,	r8	;
 10a:	64 34       	jge	$+202    	;abs 0x1d4
 10c:	65 62       	addc.b	#4,	r5	;r2 As==10
 10e:	64 64       	addc.b	@r4,	r4	;
 110:	63 35       	jge	$+712    	;abs 0x3d8
 112:	39 36       	jge	$-908    	;abs 0xfffffd86
 114:	31 33       	jn	$-412    	;abs 0xffffff78
 116:	37 37       	jge	$-400    	;abs 0xffffff86
 118:	30 65       	addc	@r5+,	r0	;
 11a:	61 32       	jn	$-828    	;abs 0xfffffdde
 11c:	33 36       	jge	$-920    	;abs 0xfffffd84
 11e:	63 29       	jnc	$+712    	;abs 0x3e6
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	2c 00 00 00 	mova	&0,	r12	;
   4:	02 00       	mova	@r0,	r2	;
   6:	00 00       	beq			
   8:	00 00       	beq			
   a:	04 00       	mova	@r0,	r4	;
   c:	00 00       	beq			
   e:	00 00       	beq			
  10:	a4 55 00 00 	add	@r5,	0(r4)	;
  14:	04 00       	mova	@r0,	r4	;
  16:	00 00       	beq			
  18:	d4 55 00 00 	add.b	0(r5),	60(r4)	; 0x003c
  1c:	3c 00 
  1e:	00 00       	beq			
  20:	88 6e 00 00 	addc	r14,	0(r8)	;
  24:	04 00       	mova	@r0,	r4	;
	...
  2e:	00 00       	beq			
  30:	1c 00       	mova	@r0+,	r12	;
  32:	00 00       	beq			
  34:	02 00       	mova	@r0,	r2	;
  36:	ce 00       	mova	r0,	r14	;
  38:	00 00       	beq			
  3a:	04 00       	mova	@r0,	r4	;
  3c:	00 00       	beq			
  3e:	00 00       	beq			
  40:	c6 6b 00 00 	addc.b	r11,	0(r6)	;
  44:	3e 02 00 00 	mova	0(r2),	r14	;
	...
  50:	1c 00       	mova	@r0+,	r12	;
  52:	00 00       	beq			
  54:	02 00       	mova	@r0,	r2	;
  56:	b1 04 00 00 	suba	#262144,r1	;0x40000
  5a:	04 00       	mova	@r0,	r4	;
  5c:	00 00       	beq			
  5e:	00 00       	beq			
  60:	a8 55 00 00 	add	@r5,	0(r8)	;
  64:	0e 00       	mova	@r0,	r14	;
	...
  6e:	00 00       	beq			
  70:	1c 00       	mova	@r0+,	r12	;
  72:	00 00       	beq			
  74:	02 00       	mova	@r0,	r2	;
  76:	83 05 00 00 	mova	#327680,r3	;0x50000
  7a:	04 00       	mova	@r0,	r4	;
  7c:	00 00       	beq			
  7e:	00 00       	beq			
  80:	b6 55 00 00 	add	@r5+,	0(r6)	;
  84:	14 00       	mova	@r0+,	r4	;
	...
  8e:	00 00       	beq			
  90:	1c 00       	mova	@r0+,	r12	;
  92:	00 00       	beq			
  94:	02 00       	mova	@r0,	r2	;
  96:	55 06       	rlam	#2,	r5	;
  98:	00 00       	beq			
  9a:	04 00       	mova	@r0,	r4	;
  9c:	00 00       	beq			
  9e:	00 00       	beq			
  a0:	ca 55 00 00 	add.b	r5,	0(r10)	;
  a4:	0a 00       	mova	@r0,	r10	;
	...
  ae:	00 00       	beq			
  b0:	1c 00       	mova	@r0+,	r12	;
  b2:	00 00       	beq			
  b4:	02 00       	mova	@r0,	r2	;
  b6:	27 07 00 00 	mova	&458752,r7	;0x70000
  ba:	04 00       	mova	@r0,	r4	;
  bc:	00 00       	beq			
  be:	00 00       	beq			
  c0:	04 6e       	addc	r14,	r4	;
  c2:	00 00       	beq			
  c4:	40 00       	rrcm.a	#1,	r0	;
	...
  ce:	00 00       	beq			
  d0:	1c 00       	mova	@r0+,	r12	;
  d2:	00 00       	beq			
  d4:	02 00       	mova	@r0,	r2	;
  d6:	25 08 00 00 	mova	&524288,r5	;0x80000
  da:	04 00       	mova	@r0,	r4	;
  dc:	00 00       	beq			
  de:	00 00       	beq			
  e0:	44 6e       	addc.b	r14,	r4	;
  e2:	00 00       	beq			
  e4:	12 00       	mova	@r0+,	r2	;
	...
  ee:	00 00       	beq			
  f0:	24 00 00 00 	mova	&0,	r4	;
  f4:	02 00       	mova	@r0,	r2	;
  f6:	f4 08       	suba	r8,	r4	;
  f8:	00 00       	beq			
  fa:	04 00       	mova	@r0,	r4	;
  fc:	00 00       	beq			
  fe:	00 00       	beq			
 100:	7e 6e       	addc.b	@r14+,	r14	;
 102:	00 00       	beq			
 104:	0a 00       	mova	@r0,	r10	;
 106:	00 00       	beq			
 108:	90 6e 00 00 	addc	0(r14),	0x0002	; PC rel. 0x010e
 10c:	02 00 
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	ca 00       	mova	r0,	r10	;
   2:	00 00       	beq			
   4:	02 00       	mova	@r0,	r2	;
   6:	00 00       	beq			
   8:	00 00       	beq			
   a:	04 01       	mova	@r1,	r4	;
	...
  14:	2f 6f       	addc	@r15,	r15	;
  16:	70 74       	subc.b	@r4+,	r0	;
  18:	2f 72       	subc	#4,	r15	;r2 As==10
  1a:	65 64       	addc.b	@r4,	r5	;
  1c:	68 61       	addc.b	@r1,	r8	;
  1e:	74 2f       	jc	$-278    	;abs 0xffffff08
  20:	6d 73       	subc.b	#2,	r13	;r3 As==10
  22:	70 34       	jge	$+226    	;abs 0x104
  24:	33 30       	jn	$+104    	;abs 0x8c
  26:	2d 31       	jn	$+604    	;abs 0x282
  28:	34 72       	subc	#8,	r4	;r2 As==11
  2a:	31 2d       	jc	$+612    	;abs 0x28e
  2c:	33 36       	jge	$-920    	;abs 0xfffffc94
  2e:	34 2f       	jc	$-406    	;abs 0xfffffe98
  30:	73 6f       	.word	0x6f73;	????
  32:	75 72       	subc.b	#8,	r5	;r2 As==11
  34:	63 65       	.word	0x6563;	????
  36:	73 2f       	jc	$-280    	;abs 0xffffff1e
  38:	74 6f       	addc.b	@r15+,	r4	;
  3a:	6f 6c       	addc.b	@r12,	r15	;
  3c:	73 2f       	jc	$-280    	;abs 0xffffff24
  3e:	6c 69       	addc.b	@r9,	r12	;
  40:	62 67       	addc.b	@r7,	r2	;
  42:	6c 6f       	addc.b	@r15,	r12	;
  44:	73 73       	.word	0x7373;	????
  46:	2f 6d       	addc	@r13,	r15	;
  48:	73 70       	.word	0x7073;	????
  4a:	34 33       	jn	$-406    	;abs 0xfffffeb4
  4c:	30 2f       	jc	$-414    	;abs 0xfffffeae
  4e:	63 72       	.word	0x7263;	????
  50:	74 30       	jn	$+234    	;abs 0x13a
  52:	2e 53       	incd	r14		;
  54:	00 2f       	jc	$-510    	;abs 0xfffffe56
  56:	65 73       	subc.b	#2,	r5	;r3 As==10
  58:	2f 62       	addc	#4,	r15	;r2 As==10
  5a:	75 69       	addc.b	@r9+,	r5	;
  5c:	6c 64       	addc.b	@r4,	r12	;
  5e:	2f 6d       	addc	@r13,	r15	;
  60:	73 70       	.word	0x7073;	????
  62:	34 33       	jn	$-406    	;abs 0xfffffecc
  64:	30 2d       	jc	$+610    	;abs 0x2c6
  66:	31 34       	jge	$+100    	;abs 0xca
  68:	72 31       	jn	$+742    	;abs 0x34e
  6a:	2f 33       	jn	$-416    	;abs 0xfffffeca
  6c:	36 34       	jge	$+110    	;abs 0xda
  6e:	2f 69       	addc	@r9,	r15	;
  70:	36 38       	jl	$+110    	;abs 0xde
  72:	36 2d       	jc	$+622    	;abs 0x2e0
  74:	72 65       	addc.b	@r5+,	r2	;
  76:	64 68       	addc.b	@r8,	r4	;
  78:	61 74       	subc.b	@r4,	r1	;
  7a:	2d 6c       	addc	@r12,	r13	;
  7c:	69 6e       	addc.b	@r14,	r9	;
  7e:	75 78       	subc.b	@r8+,	r5	;
  80:	2f 58       	add	@r8,	r15	;
  82:	2d 69       	addc	@r9,	r13	;
  84:	36 38       	jl	$+110    	;abs 0xf2
  86:	36 2d       	jc	$+622    	;abs 0x2f4
  88:	72 65       	addc.b	@r5+,	r2	;
  8a:	64 68       	addc.b	@r8,	r4	;
  8c:	61 74       	subc.b	@r4,	r1	;
  8e:	2d 6c       	addc	@r12,	r13	;
  90:	69 6e       	addc.b	@r14,	r9	;
  92:	75 78       	subc.b	@r8+,	r5	;
  94:	2d 78       	subc	@r8,	r13	;
  96:	2d 6d       	addc	@r13,	r13	;
  98:	73 70       	.word	0x7073;	????
  9a:	34 33       	jn	$-406    	;abs 0xffffff04
  9c:	30 2d       	jc	$+610    	;abs 0x2fe
  9e:	65 6c       	addc.b	@r12,	r5	;
  a0:	66 2f       	jc	$-306    	;abs 0xffffff6e
  a2:	6d 73       	subc.b	#2,	r13	;r3 As==10
  a4:	70 34       	jge	$+226    	;abs 0x186
  a6:	33 30       	jn	$+104    	;abs 0x10e
  a8:	2d 65       	addc	@r5,	r13	;
  aa:	6c 66       	addc.b	@r6,	r12	;
  ac:	2f 6c       	addc	@r12,	r15	;
  ae:	69 62       	addc.b	#4,	r9	;r2 As==10
  b0:	67 6c       	addc.b	@r12,	r7	;
  b2:	6f 73       	subc.b	#2,	r15	;r3 As==10
  b4:	73 2f       	jc	$-280    	;abs 0xffffff9c
  b6:	6d 73       	subc.b	#2,	r13	;r3 As==10
  b8:	70 34       	jge	$+226    	;abs 0x19a
  ba:	33 30       	jn	$+104    	;abs 0x122
  bc:	00 47       	br	r7		;
  be:	4e 55       	add.b	r5,	r14	;
  c0:	20 41       	br	@r1		;
  c2:	53 20       	jnz	$+168    	;abs 0x16a
  c4:	32 2e       	jc	$-922    	;abs 0xfffffd2a
  c6:	32 34       	jge	$+102    	;abs 0x12c
  c8:	2e 35       	jge	$+606    	;abs 0x326
  ca:	31 00 01 80 	mova	-32767(r0),r1	;PC rel. 0xffff80cd
  ce:	df 03       	cmpa	r3,	r15	;
  d0:	00 00       	beq			
  d2:	04 00       	mova	@r0,	r4	;
  d4:	12 00       	mova	@r0+,	r2	;
  d6:	00 00       	beq			
  d8:	04 01       	mova	@r1,	r4	;
  da:	db 01       	cmpa	r1,	r11	;
  dc:	00 00       	beq			
  de:	01 60       	addc	r0,	r1	;
  e0:	00 00       	beq			
  e2:	00 df       	bis	r15,	r0	;
  e4:	00 00       	beq			
  e6:	00 c6       	bic	r6,	r0	;
  e8:	6b 00 00 3e 	mova	r0,	&736768	; 0xb3e00
  ec:	02 00       	mova	@r0,	r2	;
  ee:	00 ff       	and	r15,	r0	;
  f0:	00 00       	beq			
  f2:	00 02       	bra	@r2		;
  f4:	02 07       	mova	@r7,	r2	;
  f6:	79 01 00 00 	mova	r1,	0(r9)	;
  fa:	02 01       	mova	@r1,	r2	;
  fc:	06 59       	add	r9,	r6	;
  fe:	01 00       	mova	@r0,	r1	;
 100:	00 03       	bra	@r3		;
 102:	27 01 00 00 	mova	&65536,	r7	;0x10000
 106:	02 1c 3e 00 	movax	0(r0),	r14	;
 10a:	00 00 
 10c:	02 01       	mova	@r1,	r2	;
 10e:	08 57       	add	r7,	r8	;
 110:	01 00       	mova	@r0,	r1	;
 112:	00 02       	bra	@r2		;
 114:	02 05       	mova	@r5,	r2	;
 116:	26 00 00 00 	mova	&0,	r6	;
 11a:	03 4d       	.word	0x4d03;	????
 11c:	00 00       	beq			
 11e:	00 02       	bra	@r2		;
 120:	26 57       	add	@r7,	r6	;
 122:	00 00       	beq			
 124:	00 02       	bra	@r2		;
 126:	02 07       	mova	@r7,	r2	;
 128:	a7 01 00 00 	adda	#65536,	r7	;0x10000
 12c:	02 04       	mova	@r4,	r2	;
 12e:	05 c6       	bic	r6,	r5	;
 130:	00 00       	beq			
 132:	00 02       	bra	@r2		;
 134:	04 07       	mova	@r7,	r4	;
 136:	74 01 00 00 	mova	r1,	0(r4)	;
 13a:	02 08       	mova	@r8,	r2	;
 13c:	05 c1       	bic	r1,	r5	;
 13e:	00 00       	beq			
 140:	00 02       	bra	@r2		;
 142:	08 07       	mova	@r7,	r8	;
 144:	6f 01 00 00 	mova	r1,	&983040	; 0xf0000
 148:	04 02       	mova	@r2,	r4	;
 14a:	05 69       	addc	r9,	r5	;
 14c:	6e 74       	subc.b	@r4,	r14	;
 14e:	00 03       	bra	@r3		;
 150:	29 01 00 00 	mova	&65536,	r9	;0x10000
 154:	03 2a       	jnc	$-1016   	;abs 0xfffffd5c
 156:	33 00 00 00 	mova	0(r0),	r3	;
 15a:	03 4f       	.word	0x4f03;	????
 15c:	00 00       	beq			
 15e:	00 03       	bra	@r3		;
 160:	36 4c       	mov	@r12+,	r6	;
 162:	00 00       	beq			
 164:	00 05       	bra	@r5		;
 166:	02 81       	sub	r1,	r2	;
 168:	00 00       	beq			
 16a:	00 06       	bra	@r6		;
 16c:	0c 01       	mova	@r1,	r12	;
 16e:	0f ee       	xor	r14,	r15	;
 170:	00 00       	beq			
 172:	00 07       	bra	@r7		;
 174:	05 00       	mova	@r0,	r5	;
 176:	00 00       	beq			
 178:	01 10       	rrc	r1		;
 17a:	81 00 00 00 	mova	#0,	r1	;
 17e:	00 07       	bra	@r7		;
 180:	51 01       	rram	#1,	r1	;
 182:	00 00       	beq			
 184:	01 11       	rra	r1		;
 186:	97 00 00 00 	cmpa	#0,	r7	;
 18a:	02 07       	mova	@r7,	r2	;
 18c:	9d 00 00 00 	cmpa	#0,	r13	;
 190:	01 12       	push	r1		;
 192:	8c 00 00 00 	mova	#0,	r12	;
 196:	04 07       	mova	@r7,	r4	;
 198:	1d 00       	mova	@r0+,	r13	;
 19a:	00 00       	beq			
 19c:	01 14       	pushm.a	#1,	r1	;20-bit words
 19e:	81 00 00 00 	mova	#0,	r1	;
 1a2:	06 07       	mova	@r7,	r6	;
 1a4:	ad 02 00 00 	adda	#131072,r13	;0x20000
 1a8:	01 15       	pushm	#1,	r1	;16-bit words
 1aa:	97 00 00 00 	cmpa	#0,	r7	;
 1ae:	08 07       	mova	@r7,	r8	;
 1b0:	96 01 00 00 	cmpa	#65536,	r6	;0x10000
 1b4:	01 16       	popm.a	#1,	r1	;20-bit words
 1b6:	8c 00 00 00 	mova	#0,	r12	;
 1ba:	0a 00       	mova	@r0,	r10	;
 1bc:	03 0e       	mova	@r14,	r3	;
 1be:	00 00       	beq			
 1c0:	00 01       	bra	@r1		;
 1c2:	17 9d 00 00 	cmp	0(r13),	r7	;
 1c6:	00 08       	bra	@r8		;
 1c8:	89 02 00 00 	mova	#131072,r9	;0x20000
 1cc:	01 20       	jnz	$+4      	;abs 0x1d0
 1ce:	c6 6b 00 00 	addc.b	r11,	0(r6)	;
 1d2:	42 00       	rrcm.a	#1,	r2	;
 1d4:	00 00       	beq			
 1d6:	01 9c       	cmp	r12,	r1	;
 1d8:	08 30       	jn	$+18     	;abs 0x1ea
 1da:	00 00       	beq			
 1dc:	00 01       	bra	@r1		;
 1de:	65 08 6c 00 	mova	r8,	&327788	; 0x5006c
 1e2:	00 26       	.word	0x2600;	????
 1e4:	00 00       	beq			
 1e6:	00 01       	bra	@r1		;
 1e8:	9c 09 3e 00 	cmpa	#589886,r12	;0x9003e
 1ec:	00 00       	beq			
 1ee:	01 7c       	subc	r12,	r1	;
 1f0:	2e 6c       	addc	@r12,	r14	;
 1f2:	00 00       	beq			
 1f4:	24 00 00 00 	mova	&0,	r4	;
 1f8:	01 9c       	cmp	r12,	r1	;
 1fa:	4b 01       	rram.a	#1,	r11	;
 1fc:	00 00       	beq			
 1fe:	0a ae       	dadd	r14,	r10	;
 200:	00 00       	beq			
 202:	00 01       	bra	@r1		;
 204:	7c 97       	cmp.b	@r7+,	r12	;
 206:	00 00       	beq			
 208:	00 01       	bra	@r1		;
 20a:	5c 0a       	rlam	#3,	r12	;
 20c:	ba 02 00 00 	suba	#131072,r10	;0x20000
 210:	01 7c       	subc	r12,	r1	;
 212:	8c 00 00 00 	mova	#0,	r12	;
 216:	01 5d       	add	r13,	r1	;
 218:	00 09       	bra	@r9		;
 21a:	ba 01 00 00 	suba	#65536,	r10	;0x10000
 21e:	01 98       	cmp	r8,	r1	;
 220:	52 6c 00 00 	addc.b	0(r12),	r2	;
 224:	10 00       	bra	@r0+		;
 226:	00 00       	beq			
 228:	01 9c       	cmp	r12,	r1	;
 22a:	97 01 00 00 	cmpa	#65536,	r7	;0x10000
 22e:	0b ae       	dadd	r14,	r11	;
 230:	00 00       	beq			
 232:	00 01       	bra	@r1		;
 234:	98 97 00 00 	cmp	0(r7),	0(r8)	;
 238:	00 00 
 23a:	00 00       	beq			
 23c:	00 0b       	bra	@r11		;
 23e:	ba 02 00 00 	suba	#131072,r10	;0x20000
 242:	01 98       	cmp	r8,	r1	;
 244:	8c 00 00 00 	mova	#0,	r12	;
 248:	21 00 00 00 	mova	&0,	r1	;
 24c:	0c 56       	add	r6,	r12	;
 24e:	6c 00 00 1b 	mova	r0,	&793344	; 0xc1b00
 252:	01 00       	mova	@r0,	r1	;
 254:	00 0d       	bra	@r13		;
 256:	01 5d       	add	r13,	r1	;
 258:	03 f3       	.word	0xf303;	????
 25a:	01 5d       	add	r13,	r1	;
 25c:	0d 01       	mova	@r1,	r13	;
 25e:	5c 03       	rrum	#1,	r12	;
 260:	f3 01       	suba	r1,	r3	;
 262:	5c 00       	rrcm	#1,	r12	;
 264:	00 09       	bra	@r9		;
 266:	77 00 00 00 	mova	r0,	0(r7)	;
 26a:	01 a5       	dadd	r5,	r1	;
 26c:	62 6c       	addc.b	@r12,	r2	;
 26e:	00 00       	beq			
 270:	66 00 00 00 	mova	r0,	&393216	; 0x60000
 274:	01 9c       	cmp	r12,	r1	;
 276:	cb 01       	mova	r1,	r11	;
 278:	00 00       	beq			
 27a:	0b ae       	dadd	r14,	r11	;
 27c:	00 00       	beq			
 27e:	00 01       	bra	@r1		;
 280:	a5 97 00 00 	cmp	@r7,	0(r5)	;
 284:	00 42       	br	r2		;
 286:	00 00       	beq			
 288:	00 0b       	bra	@r11		;
 28a:	ba 02 00 00 	suba	#131072,r10	;0x20000
 28e:	01 a5       	dadd	r5,	r1	;
 290:	8c 00 00 00 	mova	#0,	r12	;
 294:	63 00 00 00 	mova	r0,	&196608	; 0x30000
 298:	00 0e       	bra	@r14		;
 29a:	00 00       	beq			
 29c:	00 00       	beq			
 29e:	01 bf       	bit	r15,	r1	;
 2a0:	81 00 00 00 	mova	#0,	r1	;
 2a4:	c8 6c 00 00 	addc.b	r12,	0(r8)	;
 2a8:	06 00       	mova	@r0,	r6	;
 2aa:	00 00       	beq			
 2ac:	01 9c       	cmp	r12,	r1	;
 2ae:	09 38       	jl	$+20     	;abs 0x2c2
 2b0:	01 00       	mova	@r0,	r1	;
 2b2:	00 01       	bra	@r1		;
 2b4:	c9 ce 6c 00 	bic.b	r14,	108(r9)	; 0x006c
 2b8:	00 26       	.word	0x2600;	????
 2ba:	00 00       	beq			
 2bc:	00 01       	bra	@r1		;
 2be:	9c 10 02 00 	swpb	2(r12)		;
 2c2:	00 0a       	bra	@r10		;
 2c4:	c4 01       	mova	r1,	r4	;
 2c6:	00 00       	beq			
 2c8:	01 c9       	bic	r9,	r1	;
 2ca:	97 00 00 00 	cmpa	#0,	r7	;
 2ce:	01 5c       	add	r12,	r1	;
 2d0:	0a ba       	bit	r10,	r10	;
 2d2:	02 00       	mova	@r0,	r2	;
 2d4:	00 01       	bra	@r1		;
 2d6:	c9 8c 00 00 	sub.b	r12,	0(r9)	;
 2da:	00 01       	bra	@r1		;
 2dc:	5d 00       	rrcm	#1,	r13	;
 2de:	09 b4       	bit	r4,	r9	;
 2e0:	00 00       	beq			
 2e2:	00 01       	bra	@r1		;
 2e4:	e4 f4 6c 00 	and.b	@r4,	108(r4)	; 0x006c
 2e8:	00 12       	push	r0		;
 2ea:	00 00       	beq			
 2ec:	00 01       	bra	@r1		;
 2ee:	9c 5c 02 00 	rla	2(r12)		;
 2f2:	00 0b 
 2f4:	c4 01       	mova	r1,	r4	;
 2f6:	00 00       	beq			
 2f8:	01 e4       	xor	r4,	r1	;
 2fa:	97 00 00 00 	cmpa	#0,	r7	;
 2fe:	93 00 00 00 	cmpa	#0,	r3	;
 302:	0b ba       	bit	r10,	r11	;
 304:	02 00       	mova	@r0,	r2	;
 306:	00 01       	bra	@r1		;
 308:	e4 8c 00 00 	sub.b	@r12,	0(r4)	;
 30c:	00 b4       	bit	r4,	r0	;
 30e:	00 00       	beq			
 310:	00 0c       	bra	@r12		;
 312:	f8 6c 00 00 	addc.b	@r12+,	0(r8)	;
 316:	e0 01       	adda	r1,	r0	;
 318:	00 00       	beq			
 31a:	0d 01       	mova	@r1,	r13	;
 31c:	5d 03       	rrum	#1,	r13	;
 31e:	f3 01       	suba	r1,	r3	;
 320:	5d 0d       	rram	#4,	r13	;
 322:	01 5c       	add	r12,	r1	;
 324:	03 f3       	.word	0xf303;	????
 326:	01 5c       	add	r12,	r1	;
 328:	00 00       	beq			
 32a:	09 f3       	and	#0,	r9	;r3 As==00
 32c:	02 00       	mova	@r0,	r2	;
 32e:	00 01       	bra	@r1		;
 330:	f1 06       	suba	r6,	r1	;
 332:	6d 00 00 66 	mova	r0,	&878080	; 0xd6600
 336:	00 00       	beq			
 338:	00 01       	bra	@r1		;
 33a:	9c aa 02 00 	dadd	2(r10),	2816(r12); 0x0b00
 33e:	00 0b 
 340:	c4 01       	mova	r1,	r4	;
 342:	00 00       	beq			
 344:	01 f1       	and	r1,	r1	;
 346:	97 00 00 00 	cmpa	#0,	r7	;
 34a:	d5 00       	cmpa	r0,	r5	;
 34c:	00 00       	beq			
 34e:	0b ba       	bit	r10,	r11	;
 350:	02 00       	mova	@r0,	r2	;
 352:	00 01       	bra	@r1		;
 354:	f1 8c 00 00 	sub.b	@r12+,	0(r1)	;
 358:	00 f6       	and	r6,	r0	;
 35a:	00 00       	beq			
 35c:	00 0f       	bra	@r15		;
 35e:	36 6d       	addc	@r13+,	r6	;
 360:	00 00       	beq			
 362:	20 00 00 00 	bra	&0		;
 366:	10 72 65 63 	subc	&0x6365,r0	;0x6365
 36a:	00 01       	bra	@r1		;
 36c:	03 01       	mova	@r1,	r3	;
 36e:	81 00 00 00 	mova	#0,	r1	;
 372:	26 01 00 00 	mova	&65536,	r6	;0x10000
 376:	00 00       	beq			
 378:	11 18 00 00 	rpt #2 { beqx			
 37c:	00 01       	bra	@r1		;
 37e:	0d 01       	mova	@r1,	r13	;
 380:	81 00 00 00 	mova	#0,	r1	;
 384:	6c 6d       	addc.b	@r13,	r12	;
 386:	00 00       	beq			
 388:	06 00       	mova	@r0,	r6	;
 38a:	00 00       	beq			
 38c:	01 9c       	cmp	r12,	r1	;
 38e:	11 d9 02 00 	bis	2(r9),	r1	;
 392:	00 01       	bra	@r1		;
 394:	16 01       	mova	@r1+,	r6	;
 396:	81 00 00 00 	mova	#0,	r1	;
 39a:	72 6d       	addc.b	@r13+,	r2	;
 39c:	00 00       	beq			
 39e:	0e 00       	mova	@r0,	r14	;
 3a0:	00 00       	beq			
 3a2:	01 9c       	cmp	r12,	r1	;
 3a4:	12 e7 02 00 	xor	2(r7),	r2	;
 3a8:	00 01       	bra	@r1		;
 3aa:	22 01 80 6d 	mova	&93568,	r2	;0x16d80
 3ae:	00 00       	beq			
 3b0:	84 00 00 00 	mova	#0,	r4	;
 3b4:	01 9c       	cmp	r12,	r1	;
 3b6:	fd 02       	suba	r2,	r13	;
 3b8:	00 00       	beq			
 3ba:	10 72 65 63 	subc	&0x6365,r0	;0x6365
 3be:	00 01       	bra	@r1		;
 3c0:	27 01 81 00 	mova	&65665,	r7	;0x10081
 3c4:	00 00       	beq			
 3c6:	39 01 00 00 	mova	0(r1),	r9	;
 3ca:	00 13       	reti			
 3cc:	58 00       	rrcm	#1,	r8	;
 3ce:	00 00       	beq			
 3d0:	01 19 0e 03 	rpt #2 { movax	@r3,	r14	;
 3d4:	00 00       	beq			
 3d6:	05 03       	mova	@r3,	r5	;
 3d8:	22 1c 00 00 	rpt #3 { beqx			
 3dc:	14 ee 00 00 	xor	0(r14),	r4	;
 3e0:	00 15       	pushm	#1,	r0	;16-bit words
 3e2:	20 03 00 00 	bra	&196608	;0x30000
 3e6:	04 0c       	mova	@r12,	r4	;
 3e8:	0b 8d       	sub	r13,	r11	;
 3ea:	01 00       	mova	@r0,	r1	;
 3ec:	00 23       	jnz	$-510    	;abs 0x1ee
 3ee:	03 00       	mova	@r0,	r3	;
 3f0:	00 14       	pushm.a	#1,	r0	;20-bit words
 3f2:	3e 00 00 00 	mova	0(r0),	r14	;
 3f6:	15 a4 02 00 	dadd	2(r4),	r5	;
 3fa:	00 04       	bra	@r4		;
 3fc:	10 0b       	bra	@r11+		;
 3fe:	cf 00       	mova	r0,	r15	;
 400:	00 00       	beq			
 402:	23 03 00 00 	mova	&196608,r3	;0x30000
 406:	15 65 01 00 	addc	1(r5),	r5	;
 40a:	00 04       	bra	@r4		;
 40c:	09 10       	rrc	r9		;
 40e:	31 01 00 00 	mova	0(r1),	r1	;
 412:	48 03       	rrum.a	#1,	r8	;
 414:	00 00       	beq			
 416:	14 25       	jz	$+554    	;abs 0x640
 418:	00 00       	beq			
 41a:	00 15       	pushm	#1,	r0	;16-bit words
 41c:	ca 01       	mova	r1,	r10	;
 41e:	00 00       	beq			
 420:	04 11       	rra	r4		;
 422:	10 4a 01 00 	br	1(r10)		;
 426:	00 23       	jnz	$-510    	;abs 0x228
 428:	03 00       	mova	@r0,	r3	;
 42a:	00 15       	pushm	#1,	r0	;16-bit words
 42c:	04 03       	mova	@r3,	r4	;
 42e:	00 00       	beq			
 430:	04 12       	push	r4		;
 432:	10 c6 02 00 	bic	2(r6),	r0	;
 436:	00 23       	jnz	$-510    	;abs 0x238
 438:	03 00       	mova	@r0,	r3	;
 43a:	00 15       	pushm	#1,	r0	;16-bit words
 43c:	0e 03       	mova	@r3,	r14	;
 43e:	00 00       	beq			
 440:	04 19 10 d4 	bisx.?	131073(r4),r0	;0x20001, Reserved use of A/L and B/W bits detected
 444:	01 00 
 446:	00 48       	br	r8		;
 448:	03 00       	mova	@r0,	r3	;
 44a:	00 15       	pushm	#1,	r0	;16-bit words
 44c:	8c 00 00 00 	mova	#0,	r12	;
 450:	04 1b 10 82 	subx.?	&0x60002,r0	; Reserved use of A/L and B/W bits detected
 454:	02 00 
 456:	00 23       	jnz	$-510    	;abs 0x258
 458:	03 00       	mova	@r0,	r3	;
 45a:	00 15       	pushm	#1,	r0	;16-bit words
 45c:	cf 02       	mova	r2,	r15	;
 45e:	00 00       	beq			
 460:	04 1f 10 93 	rpt #5 { cmpx.?	#1,	r0	;r3 As==01, Reserved use of A/L and B/W bits detected
 464:	02 00       	mova	@r0,	r2	;
 466:	00 9d       	cmp	r13,	r0	;
 468:	03 00       	mova	@r0,	r3	;
 46a:	00 16       	popm.a	#1,	r0	;20-bit words
 46c:	48 03       	rrum.a	#1,	r8	;
 46e:	00 00       	beq			
 470:	15 9a 02 00 	cmp	2(r10),	r5	;
 474:	00 04       	bra	@r4		;
 476:	23 10       	rrc	#2		;r3 As==10
 478:	86 01 00 00 	mova	#65536,	r6	;0x10000
 47c:	48 03       	rrum.a	#1,	r8	;
 47e:	00 00       	beq			
 480:	15 96 00 00 	cmp	0(r6),	r5	;
 484:	00 04       	bra	@r4		;
 486:	2f 10       	rrc	@r15		;
 488:	b3 02 00 00 	suba	#131072,r3	;0x20000
 48c:	48 03       	rrum.a	#1,	r8	;
 48e:	00 00       	beq			
 490:	15 18 03 00 	rpt #6 { movax	@r0,	r3	;
 494:	00 04       	bra	@r4		;
 496:	33 10       	rrc	#-1		;r3 As==11
 498:	85 00 00 00 	mova	#0,	r5	;
 49c:	48 03       	rrum.a	#1,	r8	;
 49e:	00 00       	beq			
 4a0:	15 d8 00 00 	bis	0(r8),	r5	;
 4a4:	00 04       	bra	@r4		;
 4a6:	35 10       	rrc	@r5+		;
 4a8:	bf 02 00 00 	suba	#131072,r15	;0x20000
 4ac:	48 03       	rrum.a	#1,	r8	;
 4ae:	00 00       	beq			
 4b0:	00 ce       	bic	r14,	r0	;
 4b2:	00 00       	beq			
 4b4:	00 02       	bra	@r2		;
 4b6:	00 67       	addc	r7,	r0	;
 4b8:	01 00       	mova	@r0,	r1	;
 4ba:	00 04       	bra	@r4		;
 4bc:	01 7a       	subc	r10,	r1	;
 4be:	04 00       	mova	@r0,	r4	;
 4c0:	00 a8       	dadd	r8,	r0	;
 4c2:	55 00       	rrcm	#1,	r5	;
 4c4:	00 b6       	bit	r6,	r0	;
 4c6:	55 00       	rrcm	#1,	r5	;
 4c8:	00 2f       	jc	$-510    	;abs 0x2ca
 4ca:	6f 70       	subc.b	@r0,	r15	;
 4cc:	74 2f       	jc	$-278    	;abs 0x3b6
 4ce:	72 65       	addc.b	@r5+,	r2	;
 4d0:	64 68       	addc.b	@r8,	r4	;
 4d2:	61 74       	subc.b	@r4,	r1	;
 4d4:	2f 6d       	addc	@r13,	r15	;
 4d6:	73 70       	.word	0x7073;	????
 4d8:	34 33       	jn	$-406    	;abs 0x342
 4da:	30 2d       	jc	$+610    	;abs 0x73c
 4dc:	31 34       	jge	$+100    	;abs 0x540
 4de:	72 31       	jn	$+742    	;abs 0x7c4
 4e0:	2d 33       	jn	$-420    	;abs 0x33c
 4e2:	36 34       	jge	$+110    	;abs 0x550
 4e4:	2f 73       	subc	#2,	r15	;r3 As==10
 4e6:	6f 75       	subc.b	@r5,	r15	;
 4e8:	72 63       	addc.b	#-1,	r2	;r3 As==11
 4ea:	65 73       	subc.b	#2,	r5	;r3 As==10
 4ec:	2f 74       	subc	@r4,	r15	;
 4ee:	6f 6f       	addc.b	@r15,	r15	;
 4f0:	6c 73       	subc.b	#2,	r12	;r3 As==10
 4f2:	2f 6c       	addc	@r12,	r15	;
 4f4:	69 62       	addc.b	#4,	r9	;r2 As==10
 4f6:	67 6c       	addc.b	@r12,	r7	;
 4f8:	6f 73       	subc.b	#2,	r15	;r3 As==10
 4fa:	73 2f       	jc	$-280    	;abs 0x3e2
 4fc:	6d 73       	subc.b	#2,	r13	;r3 As==10
 4fe:	70 34       	jge	$+226    	;abs 0x5e0
 500:	33 30       	jn	$+104    	;abs 0x568
 502:	2f 63       	addc	#2,	r15	;r3 As==10
 504:	72 74       	subc.b	@r4+,	r2	;
 506:	30 2e       	jc	$-926    	;abs 0x168
 508:	53 00       	rrcm	#1,	r3	;
 50a:	2f 65       	addc	@r5,	r15	;
 50c:	73 2f       	jc	$-280    	;abs 0x3f4
 50e:	62 75       	subc.b	@r5,	r2	;
 510:	69 6c       	addc.b	@r12,	r9	;
 512:	64 2f       	jc	$-310    	;abs 0x3dc
 514:	6d 73       	subc.b	#2,	r13	;r3 As==10
 516:	70 34       	jge	$+226    	;abs 0x5f8
 518:	33 30       	jn	$+104    	;abs 0x580
 51a:	2d 31       	jn	$+604    	;abs 0x776
 51c:	34 72       	subc	#8,	r4	;r2 As==11
 51e:	31 2f       	jc	$-412    	;abs 0x382
 520:	33 36       	jge	$-920    	;abs 0x188
 522:	34 2f       	jc	$-406    	;abs 0x38c
 524:	69 36       	jge	$-812    	;abs 0x1f8
 526:	38 36       	jge	$-910    	;abs 0x198
 528:	2d 72       	subc	#4,	r13	;r2 As==10
 52a:	65 64       	addc.b	@r4,	r5	;
 52c:	68 61       	addc.b	@r1,	r8	;
 52e:	74 2d       	jc	$+746    	;abs 0x818
 530:	6c 69       	addc.b	@r9,	r12	;
 532:	6e 75       	subc.b	@r5,	r14	;
 534:	78 2f       	jc	$-270    	;abs 0x426
 536:	58 2d       	jc	$+690    	;abs 0x7e8
 538:	69 36       	jge	$-812    	;abs 0x20c
 53a:	38 36       	jge	$-910    	;abs 0x1ac
 53c:	2d 72       	subc	#4,	r13	;r2 As==10
 53e:	65 64       	addc.b	@r4,	r5	;
 540:	68 61       	addc.b	@r1,	r8	;
 542:	74 2d       	jc	$+746    	;abs 0x82c
 544:	6c 69       	addc.b	@r9,	r12	;
 546:	6e 75       	subc.b	@r5,	r14	;
 548:	78 2d       	jc	$+754    	;abs 0x83a
 54a:	78 2d       	jc	$+754    	;abs 0x83c
 54c:	6d 73       	subc.b	#2,	r13	;r3 As==10
 54e:	70 34       	jge	$+226    	;abs 0x630
 550:	33 30       	jn	$+104    	;abs 0x5b8
 552:	2d 65       	addc	@r5,	r13	;
 554:	6c 66       	addc.b	@r6,	r12	;
 556:	2f 6d       	addc	@r13,	r15	;
 558:	73 70       	.word	0x7073;	????
 55a:	34 33       	jn	$-406    	;abs 0x3c4
 55c:	30 2d       	jc	$+610    	;abs 0x7be
 55e:	65 6c       	addc.b	@r12,	r5	;
 560:	66 2f       	jc	$-306    	;abs 0x42e
 562:	6c 69       	addc.b	@r9,	r12	;
 564:	62 67       	addc.b	@r7,	r2	;
 566:	6c 6f       	addc.b	@r15,	r12	;
 568:	73 73       	.word	0x7373;	????
 56a:	2f 6d       	addc	@r13,	r15	;
 56c:	73 70       	.word	0x7073;	????
 56e:	34 33       	jn	$-406    	;abs 0x3d8
 570:	30 00 47 4e 	bra	20039(r0)	;PC rel. 0x053b9
 574:	55 20       	jnz	$+172    	;abs 0x620
 576:	41 53       	add.b	#0,	r1	;r3 As==00
 578:	20 32       	jn	$-958    	;abs 0x1ba
 57a:	2e 32       	jn	$-930    	;abs 0x1d8
 57c:	34 2e       	jc	$-918    	;abs 0x1e6
 57e:	35 31       	jn	$+620    	;abs 0x7ea
 580:	00 01       	bra	@r1		;
 582:	80 ce 00 00 	bic	r14,	0x0000	; PC rel. 0x0584
 586:	00 02       	bra	@r2		;
 588:	00 7b       	subc	r11,	r0	;
 58a:	01 00       	mova	@r0,	r1	;
 58c:	00 04       	bra	@r4		;
 58e:	01 fe       	and	r14,	r1	;
 590:	04 00       	mova	@r0,	r4	;
 592:	00 b6       	bit	r6,	r0	;
 594:	55 00       	rrcm	#1,	r5	;
 596:	00 ca       	bic	r10,	r0	;
 598:	55 00       	rrcm	#1,	r5	;
 59a:	00 2f       	jc	$-510    	;abs 0x39c
 59c:	6f 70       	subc.b	@r0,	r15	;
 59e:	74 2f       	jc	$-278    	;abs 0x488
 5a0:	72 65       	addc.b	@r5+,	r2	;
 5a2:	64 68       	addc.b	@r8,	r4	;
 5a4:	61 74       	subc.b	@r4,	r1	;
 5a6:	2f 6d       	addc	@r13,	r15	;
 5a8:	73 70       	.word	0x7073;	????
 5aa:	34 33       	jn	$-406    	;abs 0x414
 5ac:	30 2d       	jc	$+610    	;abs 0x80e
 5ae:	31 34       	jge	$+100    	;abs 0x612
 5b0:	72 31       	jn	$+742    	;abs 0x896
 5b2:	2d 33       	jn	$-420    	;abs 0x40e
 5b4:	36 34       	jge	$+110    	;abs 0x622
 5b6:	2f 73       	subc	#2,	r15	;r3 As==10
 5b8:	6f 75       	subc.b	@r5,	r15	;
 5ba:	72 63       	addc.b	#-1,	r2	;r3 As==11
 5bc:	65 73       	subc.b	#2,	r5	;r3 As==10
 5be:	2f 74       	subc	@r4,	r15	;
 5c0:	6f 6f       	addc.b	@r15,	r15	;
 5c2:	6c 73       	subc.b	#2,	r12	;r3 As==10
 5c4:	2f 6c       	addc	@r12,	r15	;
 5c6:	69 62       	addc.b	#4,	r9	;r2 As==10
 5c8:	67 6c       	addc.b	@r12,	r7	;
 5ca:	6f 73       	subc.b	#2,	r15	;r3 As==10
 5cc:	73 2f       	jc	$-280    	;abs 0x4b4
 5ce:	6d 73       	subc.b	#2,	r13	;r3 As==10
 5d0:	70 34       	jge	$+226    	;abs 0x6b2
 5d2:	33 30       	jn	$+104    	;abs 0x63a
 5d4:	2f 63       	addc	#2,	r15	;r3 As==10
 5d6:	72 74       	subc.b	@r4+,	r2	;
 5d8:	30 2e       	jc	$-926    	;abs 0x23a
 5da:	53 00       	rrcm	#1,	r3	;
 5dc:	2f 65       	addc	@r5,	r15	;
 5de:	73 2f       	jc	$-280    	;abs 0x4c6
 5e0:	62 75       	subc.b	@r5,	r2	;
 5e2:	69 6c       	addc.b	@r12,	r9	;
 5e4:	64 2f       	jc	$-310    	;abs 0x4ae
 5e6:	6d 73       	subc.b	#2,	r13	;r3 As==10
 5e8:	70 34       	jge	$+226    	;abs 0x6ca
 5ea:	33 30       	jn	$+104    	;abs 0x652
 5ec:	2d 31       	jn	$+604    	;abs 0x848
 5ee:	34 72       	subc	#8,	r4	;r2 As==11
 5f0:	31 2f       	jc	$-412    	;abs 0x454
 5f2:	33 36       	jge	$-920    	;abs 0x25a
 5f4:	34 2f       	jc	$-406    	;abs 0x45e
 5f6:	69 36       	jge	$-812    	;abs 0x2ca
 5f8:	38 36       	jge	$-910    	;abs 0x26a
 5fa:	2d 72       	subc	#4,	r13	;r2 As==10
 5fc:	65 64       	addc.b	@r4,	r5	;
 5fe:	68 61       	addc.b	@r1,	r8	;
 600:	74 2d       	jc	$+746    	;abs 0x8ea
 602:	6c 69       	addc.b	@r9,	r12	;
 604:	6e 75       	subc.b	@r5,	r14	;
 606:	78 2f       	jc	$-270    	;abs 0x4f8
 608:	58 2d       	jc	$+690    	;abs 0x8ba
 60a:	69 36       	jge	$-812    	;abs 0x2de
 60c:	38 36       	jge	$-910    	;abs 0x27e
 60e:	2d 72       	subc	#4,	r13	;r2 As==10
 610:	65 64       	addc.b	@r4,	r5	;
 612:	68 61       	addc.b	@r1,	r8	;
 614:	74 2d       	jc	$+746    	;abs 0x8fe
 616:	6c 69       	addc.b	@r9,	r12	;
 618:	6e 75       	subc.b	@r5,	r14	;
 61a:	78 2d       	jc	$+754    	;abs 0x90c
 61c:	78 2d       	jc	$+754    	;abs 0x90e
 61e:	6d 73       	subc.b	#2,	r13	;r3 As==10
 620:	70 34       	jge	$+226    	;abs 0x702
 622:	33 30       	jn	$+104    	;abs 0x68a
 624:	2d 65       	addc	@r5,	r13	;
 626:	6c 66       	addc.b	@r6,	r12	;
 628:	2f 6d       	addc	@r13,	r15	;
 62a:	73 70       	.word	0x7073;	????
 62c:	34 33       	jn	$-406    	;abs 0x496
 62e:	30 2d       	jc	$+610    	;abs 0x890
 630:	65 6c       	addc.b	@r12,	r5	;
 632:	66 2f       	jc	$-306    	;abs 0x500
 634:	6c 69       	addc.b	@r9,	r12	;
 636:	62 67       	addc.b	@r7,	r2	;
 638:	6c 6f       	addc.b	@r15,	r12	;
 63a:	73 73       	.word	0x7373;	????
 63c:	2f 6d       	addc	@r13,	r15	;
 63e:	73 70       	.word	0x7073;	????
 640:	34 33       	jn	$-406    	;abs 0x4aa
 642:	30 00 47 4e 	bra	20039(r0)	;PC rel. 0x0548b
 646:	55 20       	jnz	$+172    	;abs 0x6f2
 648:	41 53       	add.b	#0,	r1	;r3 As==00
 64a:	20 32       	jn	$-958    	;abs 0x28c
 64c:	2e 32       	jn	$-930    	;abs 0x2aa
 64e:	34 2e       	jc	$-918    	;abs 0x2b8
 650:	35 31       	jn	$+620    	;abs 0x8bc
 652:	00 01       	bra	@r1		;
 654:	80 ce 00 00 	bic	r14,	0x0000	; PC rel. 0x0656
 658:	00 02       	bra	@r2		;
 65a:	00 8f       	sub	r15,	r0	;
 65c:	01 00       	mova	@r0,	r1	;
 65e:	00 04       	bra	@r4		;
 660:	01 8e       	sub	r14,	r1	;
 662:	05 00       	mova	@r0,	r5	;
 664:	00 ca       	bic	r10,	r0	;
 666:	55 00       	rrcm	#1,	r5	;
 668:	00 d4       	bis	r4,	r0	;
 66a:	55 00       	rrcm	#1,	r5	;
 66c:	00 2f       	jc	$-510    	;abs 0x46e
 66e:	6f 70       	subc.b	@r0,	r15	;
 670:	74 2f       	jc	$-278    	;abs 0x55a
 672:	72 65       	addc.b	@r5+,	r2	;
 674:	64 68       	addc.b	@r8,	r4	;
 676:	61 74       	subc.b	@r4,	r1	;
 678:	2f 6d       	addc	@r13,	r15	;
 67a:	73 70       	.word	0x7073;	????
 67c:	34 33       	jn	$-406    	;abs 0x4e6
 67e:	30 2d       	jc	$+610    	;abs 0x8e0
 680:	31 34       	jge	$+100    	;abs 0x6e4
 682:	72 31       	jn	$+742    	;abs 0x968
 684:	2d 33       	jn	$-420    	;abs 0x4e0
 686:	36 34       	jge	$+110    	;abs 0x6f4
 688:	2f 73       	subc	#2,	r15	;r3 As==10
 68a:	6f 75       	subc.b	@r5,	r15	;
 68c:	72 63       	addc.b	#-1,	r2	;r3 As==11
 68e:	65 73       	subc.b	#2,	r5	;r3 As==10
 690:	2f 74       	subc	@r4,	r15	;
 692:	6f 6f       	addc.b	@r15,	r15	;
 694:	6c 73       	subc.b	#2,	r12	;r3 As==10
 696:	2f 6c       	addc	@r12,	r15	;
 698:	69 62       	addc.b	#4,	r9	;r2 As==10
 69a:	67 6c       	addc.b	@r12,	r7	;
 69c:	6f 73       	subc.b	#2,	r15	;r3 As==10
 69e:	73 2f       	jc	$-280    	;abs 0x586
 6a0:	6d 73       	subc.b	#2,	r13	;r3 As==10
 6a2:	70 34       	jge	$+226    	;abs 0x784
 6a4:	33 30       	jn	$+104    	;abs 0x70c
 6a6:	2f 63       	addc	#2,	r15	;r3 As==10
 6a8:	72 74       	subc.b	@r4+,	r2	;
 6aa:	30 2e       	jc	$-926    	;abs 0x30c
 6ac:	53 00       	rrcm	#1,	r3	;
 6ae:	2f 65       	addc	@r5,	r15	;
 6b0:	73 2f       	jc	$-280    	;abs 0x598
 6b2:	62 75       	subc.b	@r5,	r2	;
 6b4:	69 6c       	addc.b	@r12,	r9	;
 6b6:	64 2f       	jc	$-310    	;abs 0x580
 6b8:	6d 73       	subc.b	#2,	r13	;r3 As==10
 6ba:	70 34       	jge	$+226    	;abs 0x79c
 6bc:	33 30       	jn	$+104    	;abs 0x724
 6be:	2d 31       	jn	$+604    	;abs 0x91a
 6c0:	34 72       	subc	#8,	r4	;r2 As==11
 6c2:	31 2f       	jc	$-412    	;abs 0x526
 6c4:	33 36       	jge	$-920    	;abs 0x32c
 6c6:	34 2f       	jc	$-406    	;abs 0x530
 6c8:	69 36       	jge	$-812    	;abs 0x39c
 6ca:	38 36       	jge	$-910    	;abs 0x33c
 6cc:	2d 72       	subc	#4,	r13	;r2 As==10
 6ce:	65 64       	addc.b	@r4,	r5	;
 6d0:	68 61       	addc.b	@r1,	r8	;
 6d2:	74 2d       	jc	$+746    	;abs 0x9bc
 6d4:	6c 69       	addc.b	@r9,	r12	;
 6d6:	6e 75       	subc.b	@r5,	r14	;
 6d8:	78 2f       	jc	$-270    	;abs 0x5ca
 6da:	58 2d       	jc	$+690    	;abs 0x98c
 6dc:	69 36       	jge	$-812    	;abs 0x3b0
 6de:	38 36       	jge	$-910    	;abs 0x350
 6e0:	2d 72       	subc	#4,	r13	;r2 As==10
 6e2:	65 64       	addc.b	@r4,	r5	;
 6e4:	68 61       	addc.b	@r1,	r8	;
 6e6:	74 2d       	jc	$+746    	;abs 0x9d0
 6e8:	6c 69       	addc.b	@r9,	r12	;
 6ea:	6e 75       	subc.b	@r5,	r14	;
 6ec:	78 2d       	jc	$+754    	;abs 0x9de
 6ee:	78 2d       	jc	$+754    	;abs 0x9e0
 6f0:	6d 73       	subc.b	#2,	r13	;r3 As==10
 6f2:	70 34       	jge	$+226    	;abs 0x7d4
 6f4:	33 30       	jn	$+104    	;abs 0x75c
 6f6:	2d 65       	addc	@r5,	r13	;
 6f8:	6c 66       	addc.b	@r6,	r12	;
 6fa:	2f 6d       	addc	@r13,	r15	;
 6fc:	73 70       	.word	0x7073;	????
 6fe:	34 33       	jn	$-406    	;abs 0x568
 700:	30 2d       	jc	$+610    	;abs 0x962
 702:	65 6c       	addc.b	@r12,	r5	;
 704:	66 2f       	jc	$-306    	;abs 0x5d2
 706:	6c 69       	addc.b	@r9,	r12	;
 708:	62 67       	addc.b	@r7,	r2	;
 70a:	6c 6f       	addc.b	@r15,	r12	;
 70c:	73 73       	.word	0x7373;	????
 70e:	2f 6d       	addc	@r13,	r15	;
 710:	73 70       	.word	0x7073;	????
 712:	34 33       	jn	$-406    	;abs 0x57c
 714:	30 00 47 4e 	bra	20039(r0)	;PC rel. 0x0555d
 718:	55 20       	jnz	$+172    	;abs 0x7c4
 71a:	41 53       	add.b	#0,	r1	;r3 As==00
 71c:	20 32       	jn	$-958    	;abs 0x35e
 71e:	2e 32       	jn	$-930    	;abs 0x37c
 720:	34 2e       	jc	$-918    	;abs 0x38a
 722:	35 31       	jn	$+620    	;abs 0x98e
 724:	00 01       	bra	@r1		;
 726:	80 fa 00 00 	and	r10,	0x0000	; PC rel. 0x0728
 72a:	00 04       	bra	@r4		;
 72c:	00 a3       	dadc	r0		;
 72e:	01 00       	mova	@r0,	r1	;
 730:	00 04       	bra	@r4		;
 732:	01 98       	cmp	r8,	r1	;
 734:	03 00       	mova	@r0,	r3	;
 736:	00 01       	bra	@r1		;
 738:	51 03       	rrum	#1,	r1	;
 73a:	00 00       	beq			
 73c:	28 00 00 00 	mova	&0,	r8	;
 740:	00 00       	beq			
 742:	00 00       	beq			
 744:	0c 06       	mova	@r6,	r12	;
 746:	00 00       	beq			
 748:	02 02       	mova	@r2,	r2	;
 74a:	05 69       	addc	r9,	r5	;
 74c:	6e 74       	subc.b	@r4,	r14	;
 74e:	00 03       	bra	@r3		;
 750:	31 03 00 00 	mova	0(r3),	r1	;
 754:	02 d4       	bis	r4,	r2	;
 756:	33 00 00 00 	mova	0(r0),	r3	;
 75a:	04 02       	mova	@r2,	r4	;
 75c:	07 79       	subc	r9,	r7	;
 75e:	01 00       	mova	@r0,	r1	;
 760:	00 04       	bra	@r4		;
 762:	04 05       	mova	@r5,	r4	;
 764:	c6 00       	mova	r0,	r6	;
 766:	00 00       	beq			
 768:	04 01       	mova	@r1,	r4	;
 76a:	06 59       	add	r9,	r6	;
 76c:	01 00       	mova	@r0,	r1	;
 76e:	00 04       	bra	@r4		;
 770:	01 08       	mova	@r8,	r1	;
 772:	57 01       	rram	#1,	r7	;
 774:	00 00       	beq			
 776:	04 02       	mova	@r2,	r4	;
 778:	05 26       	jz	$-1012   	;abs 0x384
 77a:	00 00       	beq			
 77c:	00 04       	bra	@r4		;
 77e:	02 07       	mova	@r7,	r2	;
 780:	a7 01 00 00 	adda	#65536,	r7	;0x10000
 784:	04 04       	mova	@r4,	r4	;
 786:	07 74       	subc	r4,	r7	;
 788:	01 00       	mova	@r0,	r1	;
 78a:	00 04       	bra	@r4		;
 78c:	08 05       	mova	@r5,	r8	;
 78e:	c1 00       	mova	r0,	r1	;
 790:	00 00       	beq			
 792:	04 08       	mova	@r8,	r4	;
 794:	07 6f       	addc	r15,	r7	;
 796:	01 00       	mova	@r0,	r1	;
 798:	00 04       	bra	@r4		;
 79a:	02 07       	mova	@r7,	r2	;
 79c:	50 04       	rrcm	#2,	r0	;
 79e:	00 00       	beq			
 7a0:	05 02       	mova	@r2,	r5	;
 7a2:	06 02       	mova	@r2,	r6	;
 7a4:	81 00 00 00 	mova	#0,	r1	;
 7a8:	04 01       	mova	@r1,	r4	;
 7aa:	08 60       	addc	r0,	r8	;
 7ac:	01 00       	mova	@r0,	r1	;
 7ae:	00 06       	bra	@r6		;
 7b0:	02 8e       	sub	r14,	r2	;
 7b2:	00 00       	beq			
 7b4:	00 07       	bra	@r7		;
 7b6:	81 00 00 00 	mova	#0,	r1	;
 7ba:	08 29       	jnc	$+530    	;abs 0x9cc
 7bc:	03 00       	mova	@r0,	r3	;
 7be:	00 03       	bra	@r3		;
 7c0:	18 79 00 00 	subc	0(r9),	r8	;
 7c4:	00 04       	bra	@r4		;
 7c6:	6e 00 00 40 	mova	r0,	&933888	; 0xe4000
 7ca:	00 00       	beq			
 7cc:	00 01       	bra	@r1		;
 7ce:	9c f6 00 00 	and	0(r6),	2304(r12); 0x0900
 7d2:	00 09 
 7d4:	3f 03 00 00 	mova	0(r3),	r15	;
 7d8:	01 3c       	jmp	$+4      	;abs 0x7dc
 7da:	79 00 00 00 	mova	r0,	0(r9)	;
 7de:	01 5c       	add	r12,	r1	;
 7e0:	0a 48       	mov	r8,	r10	;
 7e2:	03 00       	mova	@r0,	r3	;
 7e4:	00 01       	bra	@r1		;
 7e6:	3c f6       	and	@r6+,	r12	;
 7e8:	00 00       	beq			
 7ea:	00 4c       	br	r12		;
 7ec:	01 00       	mova	@r0,	r1	;
 7ee:	00 0a       	bra	@r10		;
 7f0:	38 03 00 00 	mova	0(r3),	r8	;
 7f4:	01 3c       	jmp	$+4      	;abs 0x7f8
 7f6:	28 00 00 00 	mova	&0,	r8	;
 7fa:	86 01 00 00 	mova	#65536,	r6	;0x10000
 7fe:	0b 64       	addc	r4,	r11	;
 800:	73 74       	.word	0x7473;	????
 802:	00 01       	bra	@r1		;
 804:	42 7b       	subc.b	r11,	r2	;
 806:	00 00       	beq			
 808:	00 d0       	bis	r0,	r0	;
 80a:	01 00       	mova	@r0,	r1	;
 80c:	00 0b       	bra	@r11		;
 80e:	73 72       	.word	0x7273;	????
 810:	63 00 01 43 	mova	r0,	&213761	; 0x34301
 814:	88 00 00 00 	mova	#0,	r8	;
 818:	62 02 00 00 	mova	r2,	&131072	; 0x20000
 81c:	00 06       	bra	@r6		;
 81e:	02 fc       	and	r12,	r2	;
 820:	00 00       	beq			
 822:	00 0c       	bra	@r12		;
 824:	00 cb       	bic	r11,	r0	;
 826:	00 00       	beq			
 828:	00 04       	bra	@r4		;
 82a:	00 3d       	jmp	$+514    	;abs 0xa2c
 82c:	02 00       	mova	@r0,	r2	;
 82e:	00 04       	bra	@r4		;
 830:	01 98       	cmp	r8,	r1	;
 832:	03 00       	mova	@r0,	r3	;
 834:	00 01       	bra	@r1		;
 836:	59 04       	rrcm	#2,	r9	;
 838:	00 00       	beq			
 83a:	38 00 00 00 	mova	0(r0),	r8	;
 83e:	00 00       	beq			
 840:	00 00       	beq			
 842:	64 07 00 00 	mova	r7,	&262144	; 0x40000
 846:	02 02       	mova	@r2,	r2	;
 848:	05 69       	addc	r9,	r5	;
 84a:	6e 74       	subc.b	@r4,	r14	;
 84c:	00 03       	bra	@r3		;
 84e:	31 03 00 00 	mova	0(r3),	r1	;
 852:	02 d4       	bis	r4,	r2	;
 854:	33 00 00 00 	mova	0(r0),	r3	;
 858:	04 02       	mova	@r2,	r4	;
 85a:	07 79       	subc	r9,	r7	;
 85c:	01 00       	mova	@r0,	r1	;
 85e:	00 04       	bra	@r4		;
 860:	04 05       	mova	@r5,	r4	;
 862:	c6 00       	mova	r0,	r6	;
 864:	00 00       	beq			
 866:	04 01       	mova	@r1,	r4	;
 868:	06 59       	add	r9,	r6	;
 86a:	01 00       	mova	@r0,	r1	;
 86c:	00 04       	bra	@r4		;
 86e:	01 08       	mova	@r8,	r1	;
 870:	57 01       	rram	#1,	r7	;
 872:	00 00       	beq			
 874:	04 02       	mova	@r2,	r4	;
 876:	05 26       	jz	$-1012   	;abs 0x482
 878:	00 00       	beq			
 87a:	00 04       	bra	@r4		;
 87c:	02 07       	mova	@r7,	r2	;
 87e:	a7 01 00 00 	adda	#65536,	r7	;0x10000
 882:	04 04       	mova	@r4,	r4	;
 884:	07 74       	subc	r4,	r7	;
 886:	01 00       	mova	@r0,	r1	;
 888:	00 04       	bra	@r4		;
 88a:	08 05       	mova	@r5,	r8	;
 88c:	c1 00       	mova	r0,	r1	;
 88e:	00 00       	beq			
 890:	04 08       	mova	@r8,	r4	;
 892:	07 6f       	addc	r15,	r7	;
 894:	01 00       	mova	@r0,	r1	;
 896:	00 04       	bra	@r4		;
 898:	02 07       	mova	@r7,	r2	;
 89a:	50 04       	rrcm	#2,	r0	;
 89c:	00 00       	beq			
 89e:	05 02       	mova	@r2,	r5	;
 8a0:	06 02       	mova	@r2,	r6	;
 8a2:	81 00 00 00 	mova	#0,	r1	;
 8a6:	04 01       	mova	@r1,	r4	;
 8a8:	08 60       	addc	r0,	r8	;
 8aa:	01 00       	mova	@r0,	r1	;
 8ac:	00 07       	bra	@r7		;
 8ae:	9f 04 00 00 	cmpa	#262144,r15	;0x40000
 8b2:	03 19 79 00 	movax	r0,	0(r9)	;
 8b6:	00 00 
 8b8:	44 6e       	addc.b	r14,	r4	;
 8ba:	00 00       	beq			
 8bc:	12 00       	mova	@r0+,	r2	;
 8be:	00 00       	beq			
 8c0:	01 9c       	cmp	r12,	r1	;
 8c2:	08 6d       	addc	r13,	r8	;
 8c4:	00 01       	bra	@r1		;
 8c6:	2d 79       	subc	@r9,	r13	;
 8c8:	00 00       	beq			
 8ca:	00 01       	bra	@r1		;
 8cc:	5c 08       	rrcm	#3,	r12	;
 8ce:	63 00 01 2d 	mova	r0,	&208129	; 0x32d01
 8d2:	21 00 00 00 	mova	&0,	r1	;
 8d6:	01 5d       	add	r13,	r1	;
 8d8:	09 6e       	addc	r14,	r9	;
 8da:	00 01       	bra	@r1		;
 8dc:	2d 28       	jnc	$+92     	;abs 0x938
 8de:	00 00       	beq			
 8e0:	00 f8       	and	r8,	r0	;
 8e2:	02 00       	mova	@r0,	r2	;
 8e4:	00 0a       	bra	@r10		;
 8e6:	73 00 01 32 	mova	r0,	12801(r3); 0x03201
 8ea:	7b 00 00 00 	mova	r0,	0(r11)	;
 8ee:	49 03       	rrum.a	#1,	r9	;
 8f0:	00 00       	beq			
 8f2:	00 00       	beq			
 8f4:	ca 00       	mova	r0,	r10	;
 8f6:	00 00       	beq			
 8f8:	02 00       	mova	@r0,	r2	;
 8fa:	c9 02       	mova	r2,	r9	;
 8fc:	00 00       	beq			
 8fe:	04 01       	mova	@r1,	r4	;
 900:	9d 08 00 00 	cmpa	#524288,r13	;0x80000
 904:	48 00       	rrcm.a	#1,	r8	;
 906:	00 00       	beq			
 908:	2f 6f       	addc	@r15,	r15	;
 90a:	70 74       	subc.b	@r4+,	r0	;
 90c:	2f 72       	subc	#4,	r15	;r2 As==10
 90e:	65 64       	addc.b	@r4,	r5	;
 910:	68 61       	addc.b	@r1,	r8	;
 912:	74 2f       	jc	$-278    	;abs 0x7fc
 914:	6d 73       	subc.b	#2,	r13	;r3 As==10
 916:	70 34       	jge	$+226    	;abs 0x9f8
 918:	33 30       	jn	$+104    	;abs 0x980
 91a:	2d 31       	jn	$+604    	;abs 0xb76
 91c:	34 72       	subc	#8,	r4	;r2 As==11
 91e:	31 2d       	jc	$+612    	;abs 0xb82
 920:	33 36       	jge	$-920    	;abs 0x588
 922:	34 2f       	jc	$-406    	;abs 0x78c
 924:	73 6f       	.word	0x6f73;	????
 926:	75 72       	subc.b	#8,	r5	;r2 As==11
 928:	63 65       	.word	0x6563;	????
 92a:	73 2f       	jc	$-280    	;abs 0x812
 92c:	74 6f       	addc.b	@r15+,	r4	;
 92e:	6f 6c       	addc.b	@r12,	r15	;
 930:	73 2f       	jc	$-280    	;abs 0x818
 932:	6c 69       	addc.b	@r9,	r12	;
 934:	62 67       	addc.b	@r7,	r2	;
 936:	6c 6f       	addc.b	@r15,	r12	;
 938:	73 73       	.word	0x7373;	????
 93a:	2f 6d       	addc	@r13,	r15	;
 93c:	73 70       	.word	0x7073;	????
 93e:	34 33       	jn	$-406    	;abs 0x7a8
 940:	30 2f       	jc	$-414    	;abs 0x7a2
 942:	63 72       	.word	0x7263;	????
 944:	74 6e       	addc.b	@r14+,	r4	;
 946:	2e 53       	incd	r14		;
 948:	00 2f       	jc	$-510    	;abs 0x74a
 94a:	65 73       	subc.b	#2,	r5	;r3 As==10
 94c:	2f 62       	addc	#4,	r15	;r2 As==10
 94e:	75 69       	addc.b	@r9+,	r5	;
 950:	6c 64       	addc.b	@r4,	r12	;
 952:	2f 6d       	addc	@r13,	r15	;
 954:	73 70       	.word	0x7073;	????
 956:	34 33       	jn	$-406    	;abs 0x7c0
 958:	30 2d       	jc	$+610    	;abs 0xbba
 95a:	31 34       	jge	$+100    	;abs 0x9be
 95c:	72 31       	jn	$+742    	;abs 0xc42
 95e:	2f 33       	jn	$-416    	;abs 0x7be
 960:	36 34       	jge	$+110    	;abs 0x9ce
 962:	2f 69       	addc	@r9,	r15	;
 964:	36 38       	jl	$+110    	;abs 0x9d2
 966:	36 2d       	jc	$+622    	;abs 0xbd4
 968:	72 65       	addc.b	@r5+,	r2	;
 96a:	64 68       	addc.b	@r8,	r4	;
 96c:	61 74       	subc.b	@r4,	r1	;
 96e:	2d 6c       	addc	@r12,	r13	;
 970:	69 6e       	addc.b	@r14,	r9	;
 972:	75 78       	subc.b	@r8+,	r5	;
 974:	2f 58       	add	@r8,	r15	;
 976:	2d 69       	addc	@r9,	r13	;
 978:	36 38       	jl	$+110    	;abs 0x9e6
 97a:	36 2d       	jc	$+622    	;abs 0xbe8
 97c:	72 65       	addc.b	@r5+,	r2	;
 97e:	64 68       	addc.b	@r8,	r4	;
 980:	61 74       	subc.b	@r4,	r1	;
 982:	2d 6c       	addc	@r12,	r13	;
 984:	69 6e       	addc.b	@r14,	r9	;
 986:	75 78       	subc.b	@r8+,	r5	;
 988:	2d 78       	subc	@r8,	r13	;
 98a:	2d 6d       	addc	@r13,	r13	;
 98c:	73 70       	.word	0x7073;	????
 98e:	34 33       	jn	$-406    	;abs 0x7f8
 990:	30 2d       	jc	$+610    	;abs 0xbf2
 992:	65 6c       	addc.b	@r12,	r5	;
 994:	66 2f       	jc	$-306    	;abs 0x862
 996:	6d 73       	subc.b	#2,	r13	;r3 As==10
 998:	70 34       	jge	$+226    	;abs 0xa7a
 99a:	33 30       	jn	$+104    	;abs 0xa02
 99c:	2d 65       	addc	@r5,	r13	;
 99e:	6c 66       	addc.b	@r6,	r12	;
 9a0:	2f 6c       	addc	@r12,	r15	;
 9a2:	69 62       	addc.b	#4,	r9	;r2 As==10
 9a4:	67 6c       	addc.b	@r12,	r7	;
 9a6:	6f 73       	subc.b	#2,	r15	;r3 As==10
 9a8:	73 2f       	jc	$-280    	;abs 0x890
 9aa:	6d 73       	subc.b	#2,	r13	;r3 As==10
 9ac:	70 34       	jge	$+226    	;abs 0xa8e
 9ae:	33 30       	jn	$+104    	;abs 0xa16
 9b0:	00 47       	br	r7		;
 9b2:	4e 55       	add.b	r5,	r14	;
 9b4:	20 41       	br	@r1		;
 9b6:	53 20       	jnz	$+168    	;abs 0xa5e
 9b8:	32 2e       	jc	$-922    	;abs 0x61e
 9ba:	32 34       	jge	$+102    	;abs 0xa20
 9bc:	2e 35       	jge	$+606    	;abs 0xc1a
 9be:	31 00 01 80 	mova	-32767(r0),r1	;PC rel. 0xffff89c1

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11       	rra	r1		;
   2:	00 10       	rrc	r0		;
   4:	06 55       	add	r5,	r6	;
   6:	06 03       	mova	@r3,	r6	;
   8:	08 1b 08 25 	rpt #9 { jzx.?	$+530    	;abs 0x21c, Reserved use of A/L and B/W bits detected
   c:	08 13       	reti			;return from interupt
   e:	05 00       	mova	@r0,	r5	;
  10:	00 00       	beq			
  12:	01 11       	rra	r1		;
  14:	01 25       	jz	$+516    	;abs 0x218
  16:	0e 13       	reti			;return from interupt
  18:	0b 03       	mova	@r3,	r11	;
  1a:	0e 1b 0e 11 	rpt #15 { rrax.?	r14		; Reserved use of A/L and B/W bits detected
  1e:	01 12       	push	r1		;
  20:	06 10       	rrc	r6		;
  22:	17 00       	mova	@r0+,	r7	;
  24:	00 02       	bra	@r2		;
  26:	24 00 0b 0b 	mova	&2827,	r4	;0x00b0b
  2a:	3e 0b 03 0e 	mova	3587(r11),r14	;0x00e03
  2e:	00 00       	beq			
  30:	03 16       	popm.a	#1,	r3	;20-bit words
  32:	00 03       	bra	@r3		;
  34:	0e 3a       	jl	$-994    	;abs 0xfffffc52
  36:	0b 3b       	jl	$-488    	;abs 0xfffffe4e
  38:	0b 49       	mov	r9,	r11	;
  3a:	13 00       	mova	@r0+,	r3	;
  3c:	00 04       	bra	@r4		;
  3e:	24 00 0b 0b 	mova	&2827,	r4	;0x00b0b
  42:	3e 0b 03 08 	mova	2051(r11),r14	;0x00803
  46:	00 00       	beq			
  48:	05 0f       	mova	@r15,	r5	;
  4a:	00 0b       	bra	@r11		;
  4c:	0b 49       	mov	r9,	r11	;
  4e:	13 00       	mova	@r0+,	r3	;
  50:	00 06       	bra	@r6		;
  52:	13 01       	mova	@r1+,	r3	;
  54:	0b 0b       	mova	@r11,	r11	;
  56:	3a 0b 3b 0b 	mova	2875(r11),r10	;0x00b3b
  5a:	01 13       	reti			;return from interupt
  5c:	00 00       	beq			
  5e:	07 0d       	mova	@r13,	r7	;
  60:	00 03       	bra	@r3		;
  62:	0e 3a       	jl	$-994    	;abs 0xfffffc80
  64:	0b 3b       	jl	$-488    	;abs 0xfffffe7c
  66:	0b 49       	mov	r9,	r11	;
  68:	13 38       	jl	$+40     	;abs 0x90
  6a:	0b 00       	mova	@r0,	r11	;
  6c:	00 08       	bra	@r8		;
  6e:	2e 00 3f 19 	mova	&6463,	r14	;0x0193f
  72:	03 0e       	mova	@r14,	r3	;
  74:	3a 0b 3b 0b 	mova	2875(r11),r10	;0x00b3b
  78:	27 19 11 01 	rpt #8 { movax	@r1+,	r1	;
  7c:	12 06       	mova	@r6+,	r2	;
  7e:	40 18 97 42 	movx.w	&0x00019,2304(r7); 0x00900
  82:	19 00 00 09 
  86:	2e 01 3f 19 	mova	&71999,	r14	;0x1193f
  8a:	03 0e       	mova	@r14,	r3	;
  8c:	3a 0b 3b 0b 	mova	2875(r11),r10	;0x00b3b
  90:	27 19 11 01 	rpt #8 { movax	@r1+,	r1	;
  94:	12 06       	mova	@r6+,	r2	;
  96:	40 18 97 42 	movx.w	&0x00119,19(r7)	; 0x00013
  9a:	19 01 13 00 
  9e:	00 0a       	bra	@r10		;
  a0:	05 00       	mova	@r0,	r5	;
  a2:	03 0e       	mova	@r14,	r3	;
  a4:	3a 0b 3b 0b 	mova	2875(r11),r10	;0x00b3b
  a8:	49 13       	calla	r9		;
  aa:	02 18 00 00 	rpt #3 { beqx			
  ae:	0b 05       	mova	@r5,	r11	;
  b0:	00 03       	bra	@r3		;
  b2:	0e 3a       	jl	$-994    	;abs 0xfffffcd0
  b4:	0b 3b       	jl	$-488    	;abs 0xfffffecc
  b6:	0b 49       	mov	r9,	r11	;
  b8:	13 02       	mova	@r2+,	r3	;
  ba:	17 00       	mova	@r0+,	r7	;
  bc:	00 0c       	bra	@r12		;
  be:	89 82 01 01 	sub	r2,	257(r9)	; 0x0101
  c2:	11 01       	mova	@r1+,	r1	;
  c4:	31 13       	reti			;return from interupt
  c6:	00 00       	beq			
  c8:	0d 8a       	sub	r10,	r13	;
  ca:	82 01 00 02 	mova	#66048,	r2	;0x10200
  ce:	18 91 42 18 	cmp	6210(r1),r8	;0x01842
  d2:	00 00       	beq			
  d4:	0e 2e       	jc	$-994    	;abs 0xfffffcf2
  d6:	00 3f       	jmp	$-510    	;abs 0xfffffed8
  d8:	19 03       	mova	@r3+,	r9	;
  da:	0e 3a       	jl	$-994    	;abs 0xfffffcf8
  dc:	0b 3b       	jl	$-488    	;abs 0xfffffef4
  de:	0b 49       	mov	r9,	r11	;
  e0:	13 11       	rra	#1		;r3 As==01
  e2:	01 12       	push	r1		;
  e4:	06 40       	mov	r0,	r6	;
  e6:	18 97 42 19 	cmp	6466(r7),r8	;0x01942
  ea:	00 00       	beq			
  ec:	0f 0b       	mova	@r11,	r15	;
  ee:	01 11       	rra	r1		;
  f0:	01 12       	push	r1		;
  f2:	06 00       	mova	@r0,	r6	;
  f4:	00 10       	rrc	r0		;
  f6:	34 00 03 08 	mova	2051(r0),r4	;PC rel. 0x008fb
  fa:	3a 0b 3b 05 	mova	1339(r11),r10	;0x0053b
  fe:	49 13       	calla	r9		;
 100:	02 17       	popm	#1,	r2	;16-bit words
 102:	00 00       	beq			
 104:	11 2e       	jc	$-988    	;abs 0xfffffd28
 106:	00 3f       	jmp	$-510    	;abs 0xffffff08
 108:	19 03       	mova	@r3+,	r9	;
 10a:	0e 3a       	jl	$-994    	;abs 0xfffffd28
 10c:	0b 3b       	jl	$-488    	;abs 0xffffff24
 10e:	05 49       	mov	r9,	r5	;
 110:	13 11       	rra	#1		;r3 As==01
 112:	01 12       	push	r1		;
 114:	06 40       	mov	r0,	r6	;
 116:	18 97 42 19 	cmp	6466(r7),r8	;0x01942
 11a:	00 00       	beq			
 11c:	12 2e       	jc	$-986    	;abs 0xfffffd42
 11e:	01 3f       	jmp	$-508    	;abs 0xffffff22
 120:	19 03       	mova	@r3+,	r9	;
 122:	0e 3a       	jl	$-994    	;abs 0xfffffd40
 124:	0b 3b       	jl	$-488    	;abs 0xffffff3c
 126:	05 27       	jz	$-500    	;abs 0xffffff32
 128:	19 11 01 12 	rra	4609(r9)	;01201
 12c:	06 40       	mov	r0,	r6	;
 12e:	18 97 42 19 	cmp	6466(r7),r8	;0x01942
 132:	01 13       	reti			;return from interupt
 134:	00 00       	beq			
 136:	13 34       	jge	$+40     	;abs 0x15e
 138:	00 03       	bra	@r3		;
 13a:	0e 3a       	jl	$-994    	;abs 0xfffffd58
 13c:	0b 3b       	jl	$-488    	;abs 0xffffff54
 13e:	0b 49       	mov	r9,	r11	;
 140:	13 02       	mova	@r2+,	r3	;
 142:	18 00       	mova	@r0+,	r8	;
 144:	00 14       	pushm.a	#1,	r0	;20-bit words
 146:	35 00 49 13 	mova	4937(r0),r5	;PC rel. 0x01491
 14a:	00 00       	beq			
 14c:	15 34       	jge	$+44     	;abs 0x178
 14e:	00 03       	bra	@r3		;
 150:	0e 3a       	jl	$-994    	;abs 0xfffffd6e
 152:	0b 3b       	jl	$-488    	;abs 0xffffff6a
 154:	05 6e       	addc	r14,	r5	;
 156:	0e 49       	mov	r9,	r14	;
 158:	13 3f       	jmp	$-472    	;abs 0xffffff80
 15a:	19 3c       	jmp	$+52     	;abs 0x18e
 15c:	19 00       	mova	@r0+,	r9	;
 15e:	00 16       	popm.a	#1,	r0	;20-bit words
 160:	26 00 49 13 	mova	&4937,	r6	;0x01349
 164:	00 00       	beq			
 166:	00 01       	bra	@r1		;
 168:	11 00       	mova	@r0+,	r1	;
 16a:	10 06       	bra	@r6+		;
 16c:	11 01       	mova	@r1+,	r1	;
 16e:	12 01       	mova	@r1+,	r2	;
 170:	03 08       	mova	@r8,	r3	;
 172:	1b 08       	mova	@r8+,	r11	;
 174:	25 08 13 05 	mova	&525587,r5	;0x80513
 178:	00 00       	beq			
 17a:	00 01       	bra	@r1		;
 17c:	11 00       	mova	@r0+,	r1	;
 17e:	10 06       	bra	@r6+		;
 180:	11 01       	mova	@r1+,	r1	;
 182:	12 01       	mova	@r1+,	r2	;
 184:	03 08       	mova	@r8,	r3	;
 186:	1b 08       	mova	@r8+,	r11	;
 188:	25 08 13 05 	mova	&525587,r5	;0x80513
 18c:	00 00       	beq			
 18e:	00 01       	bra	@r1		;
 190:	11 00       	mova	@r0+,	r1	;
 192:	10 06       	bra	@r6+		;
 194:	11 01       	mova	@r1+,	r1	;
 196:	12 01       	mova	@r1+,	r2	;
 198:	03 08       	mova	@r8,	r3	;
 19a:	1b 08       	mova	@r8+,	r11	;
 19c:	25 08 13 05 	mova	&525587,r5	;0x80513
 1a0:	00 00       	beq			
 1a2:	00 01       	bra	@r1		;
 1a4:	11 01       	mova	@r1+,	r1	;
 1a6:	25 0e 13 0b 	mova	&920339,r5	;0xe0b13
 1aa:	03 0e       	mova	@r14,	r3	;
 1ac:	55 17       	popm	#6,	r10	;16-bit words
 1ae:	11 01       	mova	@r1+,	r1	;
 1b0:	10 17       	popm	#2,	r1	;16-bit words
 1b2:	00 00       	beq			
 1b4:	02 24       	jz	$+6      	;abs 0x1ba
 1b6:	00 0b       	bra	@r11		;
 1b8:	0b 3e       	jmp	$-1000   	;abs 0xfffffdd0
 1ba:	0b 03       	mova	@r3,	r11	;
 1bc:	08 00       	mova	@r0,	r8	;
 1be:	00 03       	bra	@r3		;
 1c0:	16 00       	mova	@r0+,	r6	;
 1c2:	03 0e       	mova	@r14,	r3	;
 1c4:	3a 0b 3b 0b 	mova	2875(r11),r10	;0x00b3b
 1c8:	49 13       	calla	r9		;
 1ca:	00 00       	beq			
 1cc:	04 24       	jz	$+10     	;abs 0x1d6
 1ce:	00 0b       	bra	@r11		;
 1d0:	0b 3e       	jmp	$-1000   	;abs 0xfffffde8
 1d2:	0b 03       	mova	@r3,	r11	;
 1d4:	0e 00       	mova	@r0,	r14	;
 1d6:	00 05       	bra	@r5		;
 1d8:	0f 00       	mova	@r0,	r15	;
 1da:	0b 0b       	mova	@r11,	r11	;
 1dc:	00 00       	beq			
 1de:	06 0f       	mova	@r15,	r6	;
 1e0:	00 0b       	bra	@r11		;
 1e2:	0b 49       	mov	r9,	r11	;
 1e4:	13 00       	mova	@r0+,	r3	;
 1e6:	00 07       	bra	@r7		;
 1e8:	26 00 49 13 	mova	&4937,	r6	;0x01349
 1ec:	00 00       	beq			
 1ee:	08 2e       	jc	$-1006   	;abs 0xfffffe00
 1f0:	01 3f       	jmp	$-508    	;abs 0xfffffff4
 1f2:	19 03       	mova	@r3+,	r9	;
 1f4:	0e 3a       	jl	$-994    	;abs 0xfffffe12
 1f6:	0b 3b       	jl	$-488    	;abs 0xe
 1f8:	0b 27       	jz	$-488    	;abs 0x10
 1fa:	19 49 13 11 	mov	4371(r9),r9	;0x01113
 1fe:	01 12       	push	r1		;
 200:	06 40       	mov	r0,	r6	;
 202:	18 97 42 19 	cmp	6466(r7),r8	;0x01942
 206:	01 13       	reti			;return from interupt
 208:	00 00       	beq			
 20a:	09 05       	mova	@r5,	r9	;
 20c:	00 03       	bra	@r3		;
 20e:	0e 3a       	jl	$-994    	;abs 0xfffffe2c
 210:	0b 3b       	jl	$-488    	;abs 0x28
 212:	0b 49       	mov	r9,	r11	;
 214:	13 02       	mova	@r2+,	r3	;
 216:	18 00       	mova	@r0+,	r8	;
 218:	00 0a       	bra	@r10		;
 21a:	05 00       	mova	@r0,	r5	;
 21c:	03 0e       	mova	@r14,	r3	;
 21e:	3a 0b 3b 0b 	mova	2875(r11),r10	;0x00b3b
 222:	49 13       	calla	r9		;
 224:	02 17       	popm	#1,	r2	;16-bit words
 226:	00 00       	beq			
 228:	0b 34       	jge	$+24     	;abs 0x240
 22a:	00 03       	bra	@r3		;
 22c:	08 3a       	jl	$-1006   	;abs 0xfffffe3e
 22e:	0b 3b       	jl	$-488    	;abs 0x46
 230:	0b 49       	mov	r9,	r11	;
 232:	13 02       	mova	@r2+,	r3	;
 234:	17 00       	mova	@r0+,	r7	;
 236:	00 0c       	bra	@r12		;
 238:	26 00 00 00 	mova	&0,	r6	;
 23c:	00 01       	bra	@r1		;
 23e:	11 01       	mova	@r1+,	r1	;
 240:	25 0e 13 0b 	mova	&920339,r5	;0xe0b13
 244:	03 0e       	mova	@r14,	r3	;
 246:	55 17       	popm	#6,	r10	;16-bit words
 248:	11 01       	mova	@r1+,	r1	;
 24a:	10 17       	popm	#2,	r1	;16-bit words
 24c:	00 00       	beq			
 24e:	02 24       	jz	$+6      	;abs 0x254
 250:	00 0b       	bra	@r11		;
 252:	0b 3e       	jmp	$-1000   	;abs 0xfffffe6a
 254:	0b 03       	mova	@r3,	r11	;
 256:	08 00       	mova	@r0,	r8	;
 258:	00 03       	bra	@r3		;
 25a:	16 00       	mova	@r0+,	r6	;
 25c:	03 0e       	mova	@r14,	r3	;
 25e:	3a 0b 3b 0b 	mova	2875(r11),r10	;0x00b3b
 262:	49 13       	calla	r9		;
 264:	00 00       	beq			
 266:	04 24       	jz	$+10     	;abs 0x270
 268:	00 0b       	bra	@r11		;
 26a:	0b 3e       	jmp	$-1000   	;abs 0xfffffe82
 26c:	0b 03       	mova	@r3,	r11	;
 26e:	0e 00       	mova	@r0,	r14	;
 270:	00 05       	bra	@r5		;
 272:	0f 00       	mova	@r0,	r15	;
 274:	0b 0b       	mova	@r11,	r11	;
 276:	00 00       	beq			
 278:	06 0f       	mova	@r15,	r6	;
 27a:	00 0b       	bra	@r11		;
 27c:	0b 49       	mov	r9,	r11	;
 27e:	13 00       	mova	@r0+,	r3	;
 280:	00 07       	bra	@r7		;
 282:	2e 01 3f 19 	mova	&71999,	r14	;0x1193f
 286:	03 0e       	mova	@r14,	r3	;
 288:	3a 0b 3b 0b 	mova	2875(r11),r10	;0x00b3b
 28c:	27 19 49 13 	rpt #8 { callax	r9		;
 290:	11 01       	mova	@r1+,	r1	;
 292:	12 06       	mova	@r6+,	r2	;
 294:	40 18 97 42 	movx.w	&0x00019,2048(r7); 0x00800
 298:	19 00 00 08 
 29c:	05 00       	mova	@r0,	r5	;
 29e:	03 08       	mova	@r8,	r3	;
 2a0:	3a 0b 3b 0b 	mova	2875(r11),r10	;0x00b3b
 2a4:	49 13       	calla	r9		;
 2a6:	02 18 00 00 	rpt #3 { beqx			
 2aa:	09 05       	mova	@r5,	r9	;
 2ac:	00 03       	bra	@r3		;
 2ae:	08 3a       	jl	$-1006   	;abs 0xfffffec0
 2b0:	0b 3b       	jl	$-488    	;abs 0xc8
 2b2:	0b 49       	mov	r9,	r11	;
 2b4:	13 02       	mova	@r2+,	r3	;
 2b6:	17 00       	mova	@r0+,	r7	;
 2b8:	00 0a       	bra	@r10		;
 2ba:	34 00 03 08 	mova	2051(r0),r4	;PC rel. 0x00abf
 2be:	3a 0b 3b 0b 	mova	2875(r11),r10	;0x00b3b
 2c2:	49 13       	calla	r9		;
 2c4:	02 17       	popm	#1,	r2	;16-bit words
 2c6:	00 00       	beq			
 2c8:	00 01       	bra	@r1		;
 2ca:	11 00       	mova	@r0+,	r1	;
 2cc:	10 06       	bra	@r6+		;
 2ce:	55 06       	rlam	#2,	r5	;
 2d0:	03 08       	mova	@r8,	r3	;
 2d2:	1b 08       	mova	@r8+,	r11	;
 2d4:	25 08 13 05 	mova	&525587,r5	;0x80513
 2d8:	00 00       	beq			
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	fb 00       	suba	r0,	r11	;
   2:	00 00       	beq			
   4:	02 00       	mova	@r0,	r2	;
   6:	57 00       	rrcm	#1,	r7	;
   8:	00 00       	beq			
   a:	01 01       	mova	@r1,	r1	;
   c:	fb 0e       	suba	r14,	r11	;
   e:	0d 00       	mova	@r0,	r13	;
  10:	01 01       	mova	@r1,	r1	;
  12:	01 01       	mova	@r1,	r1	;
  14:	00 00       	beq			
  16:	00 01       	bra	@r1		;
  18:	00 00       	beq			
  1a:	01 2f       	jc	$-508    	;abs 0xfffffe1e
  1c:	6f 70       	subc.b	@r0,	r15	;
  1e:	74 2f       	jc	$-278    	;abs 0xffffff08
  20:	72 65       	addc.b	@r5+,	r2	;
  22:	64 68       	addc.b	@r8,	r4	;
  24:	61 74       	subc.b	@r4,	r1	;
  26:	2f 6d       	addc	@r13,	r15	;
  28:	73 70       	.word	0x7073;	????
  2a:	34 33       	jn	$-406    	;abs 0xfffffe94
  2c:	30 2d       	jc	$+610    	;abs 0x28e
  2e:	31 34       	jge	$+100    	;abs 0x92
  30:	72 31       	jn	$+742    	;abs 0x316
  32:	2d 33       	jn	$-420    	;abs 0xfffffe8e
  34:	36 34       	jge	$+110    	;abs 0xa2
  36:	2f 73       	subc	#2,	r15	;r3 As==10
  38:	6f 75       	subc.b	@r5,	r15	;
  3a:	72 63       	addc.b	#-1,	r2	;r3 As==11
  3c:	65 73       	subc.b	#2,	r5	;r3 As==10
  3e:	2f 74       	subc	@r4,	r15	;
  40:	6f 6f       	addc.b	@r15,	r15	;
  42:	6c 73       	subc.b	#2,	r12	;r3 As==10
  44:	2f 6c       	addc	@r12,	r15	;
  46:	69 62       	addc.b	#4,	r9	;r2 As==10
  48:	67 6c       	addc.b	@r12,	r7	;
  4a:	6f 73       	subc.b	#2,	r15	;r3 As==10
  4c:	73 2f       	jc	$-280    	;abs 0xffffff34
  4e:	6d 73       	subc.b	#2,	r13	;r3 As==10
  50:	70 34       	jge	$+226    	;abs 0x132
  52:	33 30       	jn	$+104    	;abs 0xba
  54:	00 00       	beq			
  56:	63 72       	.word	0x7263;	????
  58:	74 30       	jn	$+234    	;abs 0x142
  5a:	2e 53       	incd	r14		;
  5c:	00 01       	bra	@r1		;
  5e:	00 00       	beq			
  60:	00 00       	beq			
  62:	05 02       	mova	@r2,	r5	;
  64:	a4 55 00 00 	add	@r5,	0(r4)	;
  68:	03 3d       	jmp	$+520    	;abs 0x270
  6a:	01 09       	mova	@r9,	r1	;
  6c:	04 00       	mova	@r0,	r4	;
  6e:	00 01       	bra	@r1		;
  70:	01 00       	mova	@r0,	r1	;
  72:	05 02       	mova	@r2,	r5	;
  74:	d4 55 00 00 	add.b	0(r5),	-6141(r4); 0xe803
  78:	03 e8 
  7a:	01 01       	mova	@r1,	r1	;
  7c:	03 01       	mova	@r1,	r3	;
  7e:	09 04       	mova	@r4,	r9	;
  80:	00 01       	bra	@r1		;
  82:	03 01       	mova	@r1,	r3	;
  84:	09 04       	mova	@r4,	r9	;
  86:	00 01       	bra	@r1		;
  88:	03 01       	mova	@r1,	r3	;
  8a:	09 02       	mova	@r2,	r9	;
  8c:	00 01       	bra	@r1		;
  8e:	03 05       	mova	@r5,	r3	;
  90:	09 02       	mova	@r2,	r9	;
  92:	00 01       	bra	@r1		;
  94:	03 01       	mova	@r1,	r3	;
  96:	09 04       	mova	@r4,	r9	;
  98:	00 01       	bra	@r1		;
  9a:	03 01       	mova	@r1,	r3	;
  9c:	09 04       	mova	@r4,	r9	;
  9e:	00 01       	bra	@r1		;
  a0:	03 01       	mova	@r1,	r3	;
  a2:	09 02       	mova	@r2,	r9	;
  a4:	00 01       	bra	@r1		;
  a6:	03 05       	mova	@r5,	r3	;
  a8:	09 02       	mova	@r2,	r9	;
  aa:	00 01       	bra	@r1		;
  ac:	03 01       	mova	@r1,	r3	;
  ae:	09 04       	mova	@r4,	r9	;
  b0:	00 01       	bra	@r1		;
  b2:	03 01       	mova	@r1,	r3	;
  b4:	09 04       	mova	@r4,	r9	;
  b6:	00 01       	bra	@r1		;
  b8:	03 01       	mova	@r1,	r3	;
  ba:	09 04       	mova	@r4,	r9	;
  bc:	00 01       	bra	@r1		;
  be:	03 03       	mova	@r3,	r3	;
  c0:	09 02       	mova	@r2,	r9	;
  c2:	00 01       	bra	@r1		;
  c4:	03 01       	mova	@r1,	r3	;
  c6:	09 02       	mova	@r2,	r9	;
  c8:	00 01       	bra	@r1		;
  ca:	03 01       	mova	@r1,	r3	;
  cc:	09 02       	mova	@r2,	r9	;
  ce:	00 01       	bra	@r1		;
  d0:	03 01       	mova	@r1,	r3	;
  d2:	09 02       	mova	@r2,	r9	;
  d4:	00 01       	bra	@r1		;
  d6:	03 01       	mova	@r1,	r3	;
  d8:	09 02       	mova	@r2,	r9	;
  da:	00 01       	bra	@r1		;
  dc:	03 01       	mova	@r1,	r3	;
  de:	09 02       	mova	@r2,	r9	;
  e0:	00 01       	bra	@r1		;
  e2:	03 03       	mova	@r3,	r3	;
  e4:	09 04       	mova	@r4,	r9	;
  e6:	00 01       	bra	@r1		;
  e8:	09 02       	mova	@r2,	r9	;
  ea:	00 00       	beq			
  ec:	01 01       	mova	@r1,	r1	;
  ee:	00 05       	bra	@r5		;
  f0:	02 88       	sub	r8,	r2	;
  f2:	6e 00 00 03 	mova	r0,	&918272	; 0xe0300
  f6:	93 02 01 09 	cmpa	#133377,r3	;0x20901
  fa:	04 00       	mova	@r0,	r4	;
  fc:	00 01       	bra	@r1		;
  fe:	01 77       	subc	r7,	r1	;
 100:	03 00       	mova	@r0,	r3	;
 102:	00 02       	bra	@r2		;
 104:	00 ab       	dadd	r11,	r0	;
 106:	00 00       	beq			
 108:	00 01       	bra	@r1		;
 10a:	01 fb       	and	r11,	r1	;
 10c:	0e 0d       	mova	@r13,	r14	;
 10e:	00 01       	bra	@r1		;
 110:	01 01       	mova	@r1,	r1	;
 112:	01 00       	mova	@r0,	r1	;
 114:	00 00       	beq			
 116:	01 00       	mova	@r0,	r1	;
 118:	00 01       	bra	@r1		;
 11a:	2e 2e       	jc	$-930    	;abs 0xfffffd78
 11c:	2f 2e       	jc	$-928    	;abs 0xfffffd7c
 11e:	2e 2f       	jc	$-418    	;abs 0xffffff7c
 120:	73 72       	.word	0x7273;	????
 122:	63 2f       	jc	$-312    	;abs 0xffffffea
 124:	77 69       	addc.b	@r9+,	r7	;
 126:	72 65       	addc.b	@r5+,	r2	;
 128:	64 00 2f 6f 	mova	r0,	&290607	; 0x46f2f
 12c:	70 74       	subc.b	@r4+,	r0	;
 12e:	2f 74       	subc	@r4,	r15	;
 130:	69 2f       	jc	$-300    	;abs 0x4
 132:	6d 73       	subc.b	#2,	r13	;r3 As==10
 134:	70 67       	addc.b	@r7+,	r0	;
 136:	63 63       	.word	0x6363;	????
 138:	2f 6d       	addc	@r13,	r15	;
 13a:	73 70       	.word	0x7073;	????
 13c:	34 33       	jn	$-406    	;abs 0xffffffa6
 13e:	30 2d       	jc	$+610    	;abs 0x3a0
 140:	65 6c       	addc.b	@r12,	r5	;
 142:	66 2f       	jc	$-306    	;abs 0x10
 144:	69 6e       	addc.b	@r14,	r9	;
 146:	63 6c       	.word	0x6c63;	????
 148:	75 64       	addc.b	@r4+,	r5	;
 14a:	65 2f       	jc	$-308    	;abs 0x16
 14c:	6d 61       	addc.b	@r1,	r13	;
 14e:	63 68       	.word	0x6863;	????
 150:	69 6e       	addc.b	@r14,	r9	;
 152:	65 00 2f 6f 	mova	r0,	&356143	; 0x56f2f
 156:	70 74       	subc.b	@r4+,	r0	;
 158:	2f 74       	subc	@r4,	r15	;
 15a:	69 2f       	jc	$-300    	;abs 0x2e
 15c:	6d 73       	subc.b	#2,	r13	;r3 As==10
 15e:	70 67       	addc.b	@r7+,	r0	;
 160:	63 63       	.word	0x6363;	????
 162:	2f 6d       	addc	@r13,	r15	;
 164:	73 70       	.word	0x7073;	????
 166:	34 33       	jn	$-406    	;abs 0xffffffd0
 168:	30 2d       	jc	$+610    	;abs 0x3ca
 16a:	65 6c       	addc.b	@r12,	r5	;
 16c:	66 2f       	jc	$-306    	;abs 0x3a
 16e:	69 6e       	addc.b	@r14,	r9	;
 170:	63 6c       	.word	0x6c63;	????
 172:	75 64       	addc.b	@r4+,	r5	;
 174:	65 00 00 75 	mova	r0,	&357632	; 0x57500
 178:	61 72       	subc.b	#4,	r1	;r2 As==10
 17a:	74 2e       	jc	$-790    	;abs 0xfffffe64
 17c:	63 00 01 00 	mova	r0,	&196609	; 0x30001
 180:	00 5f       	add	r15,	r0	;
 182:	64 65       	addc.b	@r5,	r4	;
 184:	66 61       	addc.b	@r1,	r6	;
 186:	75 6c       	addc.b	@r12+,	r5	;
 188:	74 5f       	add.b	@r15+,	r4	;
 18a:	74 79       	subc.b	@r9+,	r4	;
 18c:	70 65       	addc.b	@r5+,	r0	;
 18e:	73 2e       	jc	$-792    	;abs 0xfffffe76
 190:	68 00 02 00 	mova	r0,	&524290	; 0x80002
 194:	00 73       	sbc	r0		;
 196:	74 64       	addc.b	@r4+,	r4	;
 198:	69 6e       	addc.b	@r14,	r9	;
 19a:	74 2e       	jc	$-790    	;abs 0xfffffe84
 19c:	68 00 03 00 	mova	r0,	&524291	; 0x80003
 1a0:	00 6d       	addc	r13,	r0	;
 1a2:	73 70       	.word	0x7073;	????
 1a4:	34 33       	jn	$-406    	;abs 0xe
 1a6:	30 66       	addc	@r6+,	r0	;
 1a8:	72 35       	jge	$+742    	;abs 0x48e
 1aa:	39 36       	jge	$-908    	;abs 0xfffffe1e
 1ac:	39 2e       	jc	$-908    	;abs 0xfffffe20
 1ae:	68 00 03 00 	mova	r0,	&524291	; 0x80003
 1b2:	00 00       	beq			
 1b4:	00 05       	bra	@r5		;
 1b6:	02 c6       	bic	r6,	r2	;
 1b8:	6b 00 00 03 	mova	r0,	&721664	; 0xb0300
 1bc:	1f 01       	mova	@r1+,	r15	;
 1be:	03 03       	mova	@r3,	r3	;
 1c0:	09 00       	mova	@r0,	r9	;
 1c2:	00 01       	bra	@r1		;
 1c4:	03 01       	mova	@r1,	r3	;
 1c6:	09 04       	mova	@r4,	r9	;
 1c8:	00 01       	bra	@r1		;
 1ca:	03 21       	jnz	$+520    	;abs 0x3d2
 1cc:	09 06       	mova	@r6,	r9	;
 1ce:	00 01       	bra	@r1		;
 1d0:	03 01       	mova	@r1,	r3	;
 1d2:	09 04       	mova	@r4,	r9	;
 1d4:	00 01       	bra	@r1		;
 1d6:	03 01       	mova	@r1,	r3	;
 1d8:	09 04       	mova	@r4,	r9	;
 1da:	00 01       	bra	@r1		;
 1dc:	03 05       	mova	@r5,	r3	;
 1de:	09 06       	mova	@r6,	r9	;
 1e0:	00 01       	bra	@r1		;
 1e2:	03 01       	mova	@r1,	r3	;
 1e4:	09 04       	mova	@r4,	r9	;
 1e6:	00 01       	bra	@r1		;
 1e8:	03 02       	mova	@r2,	r3	;
 1ea:	09 04       	mova	@r4,	r9	;
 1ec:	00 01       	bra	@r1		;
 1ee:	03 01       	mova	@r1,	r3	;
 1f0:	09 04       	mova	@r4,	r9	;
 1f2:	00 01       	bra	@r1		;
 1f4:	03 0b       	mova	@r11,	r3	;
 1f6:	09 04       	mova	@r4,	r9	;
 1f8:	00 01       	bra	@r1		;
 1fa:	03 03       	mova	@r3,	r3	;
 1fc:	09 04       	mova	@r4,	r9	;
 1fe:	00 01       	bra	@r1		;
 200:	03 01       	mova	@r1,	r3	;
 202:	09 08       	mova	@r8,	r9	;
 204:	00 01       	bra	@r1		;
 206:	03 01       	mova	@r1,	r3	;
 208:	09 04       	mova	@r4,	r9	;
 20a:	00 01       	bra	@r1		;
 20c:	03 01       	mova	@r1,	r3	;
 20e:	09 04       	mova	@r4,	r9	;
 210:	00 01       	bra	@r1		;
 212:	03 02       	mova	@r2,	r3	;
 214:	09 04       	mova	@r4,	r9	;
 216:	00 01       	bra	@r1		;
 218:	03 03       	mova	@r3,	r3	;
 21a:	09 02       	mova	@r2,	r9	;
 21c:	00 01       	bra	@r1		;
 21e:	03 04       	mova	@r4,	r3	;
 220:	09 00       	mova	@r0,	r9	;
 222:	00 01       	bra	@r1		;
 224:	03 01       	mova	@r1,	r3	;
 226:	09 04       	mova	@r4,	r9	;
 228:	00 01       	bra	@r1		;
 22a:	03 01       	mova	@r1,	r3	;
 22c:	09 04       	mova	@r4,	r9	;
 22e:	00 01       	bra	@r1		;
 230:	03 01       	mova	@r1,	r3	;
 232:	09 04       	mova	@r4,	r9	;
 234:	00 01       	bra	@r1		;
 236:	03 01       	mova	@r1,	r3	;
 238:	09 04       	mova	@r4,	r9	;
 23a:	00 01       	bra	@r1		;
 23c:	03 01       	mova	@r1,	r3	;
 23e:	09 04       	mova	@r4,	r9	;
 240:	00 01       	bra	@r1		;
 242:	03 01       	mova	@r1,	r3	;
 244:	09 04       	mova	@r4,	r9	;
 246:	00 01       	bra	@r1		;
 248:	03 01       	mova	@r1,	r3	;
 24a:	09 04       	mova	@r4,	r9	;
 24c:	00 01       	bra	@r1		;
 24e:	03 01       	mova	@r1,	r3	;
 250:	09 04       	mova	@r4,	r9	;
 252:	00 01       	bra	@r1		;
 254:	03 01       	mova	@r1,	r3	;
 256:	09 04       	mova	@r4,	r9	;
 258:	00 01       	bra	@r1		;
 25a:	03 09       	mova	@r9,	r3	;
 25c:	09 02       	mova	@r2,	r9	;
 25e:	00 01       	bra	@r1		;
 260:	03 03       	mova	@r3,	r3	;
 262:	09 00       	mova	@r0,	r9	;
 264:	00 01       	bra	@r1		;
 266:	00 02       	bra	@r2		;
 268:	04 01       	mova	@r1,	r4	;
 26a:	06 03       	mova	@r3,	r6	;
 26c:	00 09       	bra	@r9		;
 26e:	04 00       	mova	@r0,	r4	;
 270:	01 06       	mova	@r6,	r1	;
 272:	03 04       	mova	@r4,	r3	;
 274:	09 06       	mova	@r6,	r9	;
 276:	00 01       	bra	@r1		;
 278:	03 01       	mova	@r1,	r3	;
 27a:	09 08       	mova	@r8,	r9	;
 27c:	00 01       	bra	@r1		;
 27e:	03 01       	mova	@r1,	r3	;
 280:	09 04       	mova	@r4,	r9	;
 282:	00 01       	bra	@r1		;
 284:	03 02       	mova	@r2,	r3	;
 286:	09 04       	mova	@r4,	r9	;
 288:	00 01       	bra	@r1		;
 28a:	03 02       	mova	@r2,	r3	;
 28c:	09 04       	mova	@r4,	r9	;
 28e:	00 01       	bra	@r1		;
 290:	03 06       	mova	@r6,	r3	;
 292:	09 04       	mova	@r4,	r9	;
 294:	00 01       	bra	@r1		;
 296:	03 09       	mova	@r9,	r3	;
 298:	09 02       	mova	@r2,	r9	;
 29a:	00 01       	bra	@r1		;
 29c:	03 02       	mova	@r2,	r3	;
 29e:	09 00       	mova	@r0,	r9	;
 2a0:	00 01       	bra	@r1		;
 2a2:	03 03       	mova	@r3,	r3	;
 2a4:	09 04       	mova	@r4,	r9	;
 2a6:	00 01       	bra	@r1		;
 2a8:	00 02       	bra	@r2		;
 2aa:	04 01       	mova	@r1,	r4	;
 2ac:	06 03       	mova	@r3,	r6	;
 2ae:	00 09       	bra	@r9		;
 2b0:	04 00       	mova	@r0,	r4	;
 2b2:	01 06       	mova	@r6,	r1	;
 2b4:	03 02       	mova	@r2,	r3	;
 2b6:	09 06       	mova	@r6,	r9	;
 2b8:	00 01       	bra	@r1		;
 2ba:	03 06       	mova	@r6,	r3	;
 2bc:	09 02       	mova	@r2,	r9	;
 2be:	00 01       	bra	@r1		;
 2c0:	03 03       	mova	@r3,	r3	;
 2c2:	09 00       	mova	@r0,	r9	;
 2c4:	00 01       	bra	@r1		;
 2c6:	00 02       	bra	@r2		;
 2c8:	04 01       	mova	@r1,	r4	;
 2ca:	06 03       	mova	@r3,	r6	;
 2cc:	00 09       	bra	@r9		;
 2ce:	04 00       	mova	@r0,	r4	;
 2d0:	01 06       	mova	@r6,	r1	;
 2d2:	03 04       	mova	@r4,	r3	;
 2d4:	09 06       	mova	@r6,	r9	;
 2d6:	00 01       	bra	@r1		;
 2d8:	03 01       	mova	@r1,	r3	;
 2da:	09 08       	mova	@r8,	r9	;
 2dc:	00 01       	bra	@r1		;
 2de:	03 01       	mova	@r1,	r3	;
 2e0:	09 04       	mova	@r4,	r9	;
 2e2:	00 01       	bra	@r1		;
 2e4:	03 02       	mova	@r2,	r3	;
 2e6:	09 04       	mova	@r4,	r9	;
 2e8:	00 01       	bra	@r1		;
 2ea:	03 02       	mova	@r2,	r3	;
 2ec:	09 04       	mova	@r4,	r9	;
 2ee:	00 01       	bra	@r1		;
 2f0:	03 01       	mova	@r1,	r3	;
 2f2:	09 10       	rrc	r9		;
 2f4:	00 01       	bra	@r1		;
 2f6:	00 02       	bra	@r2		;
 2f8:	04 01       	mova	@r1,	r4	;
 2fa:	03 01       	mova	@r1,	r3	;
 2fc:	09 18 00 01 	rpt #10 { brax	@r1		;
 300:	03 02       	mova	@r2,	r3	;
 302:	09 06       	mova	@r6,	r9	;
 304:	00 01       	bra	@r1		;
 306:	03 7c       	.word	0x7c03;	????
 308:	09 04       	mova	@r4,	r9	;
 30a:	00 01       	bra	@r1		;
 30c:	03 07       	mova	@r7,	r3	;
 30e:	09 10       	rrc	r9		;
 310:	00 01       	bra	@r1		;
 312:	03 01       	mova	@r1,	r3	;
 314:	09 04       	mova	@r4,	r9	;
 316:	00 01       	bra	@r1		;
 318:	03 05       	mova	@r5,	r3	;
 31a:	09 02       	mova	@r2,	r9	;
 31c:	00 01       	bra	@r1		;
 31e:	03 02       	mova	@r2,	r3	;
 320:	09 00       	mova	@r0,	r9	;
 322:	00 01       	bra	@r1		;
 324:	03 08       	mova	@r8,	r3	;
 326:	09 06       	mova	@r6,	r9	;
 328:	00 01       	bra	@r1		;
 32a:	03 03       	mova	@r3,	r3	;
 32c:	09 00       	mova	@r0,	r9	;
 32e:	00 01       	bra	@r1		;
 330:	00 02       	bra	@r2		;
 332:	04 01       	mova	@r1,	r4	;
 334:	06 03       	mova	@r3,	r6	;
 336:	00 09       	bra	@r9		;
 338:	04 00       	mova	@r0,	r4	;
 33a:	01 06       	mova	@r6,	r1	;
 33c:	03 04       	mova	@r4,	r3	;
 33e:	09 08       	mova	@r8,	r9	;
 340:	00 01       	bra	@r1		;
 342:	03 01       	mova	@r1,	r3	;
 344:	09 08       	mova	@r8,	r9	;
 346:	00 01       	bra	@r1		;
 348:	03 01       	mova	@r1,	r3	;
 34a:	09 04       	mova	@r4,	r9	;
 34c:	00 01       	bra	@r1		;
 34e:	03 02       	mova	@r2,	r3	;
 350:	09 04       	mova	@r4,	r9	;
 352:	00 01       	bra	@r1		;
 354:	03 02       	mova	@r2,	r3	;
 356:	09 04       	mova	@r4,	r9	;
 358:	00 01       	bra	@r1		;
 35a:	03 05       	mova	@r5,	r3	;
 35c:	09 04       	mova	@r4,	r9	;
 35e:	00 01       	bra	@r1		;
 360:	03 09       	mova	@r9,	r3	;
 362:	09 02       	mova	@r2,	r9	;
 364:	00 01       	bra	@r1		;
 366:	03 02       	mova	@r2,	r3	;
 368:	09 00       	mova	@r0,	r9	;
 36a:	00 01       	bra	@r1		;
 36c:	03 03       	mova	@r3,	r3	;
 36e:	09 04       	mova	@r4,	r9	;
 370:	00 01       	bra	@r1		;
 372:	00 02       	bra	@r2		;
 374:	04 01       	mova	@r1,	r4	;
 376:	06 03       	mova	@r3,	r6	;
 378:	00 09       	bra	@r9		;
 37a:	04 00       	mova	@r0,	r4	;
 37c:	01 06       	mova	@r6,	r1	;
 37e:	03 02       	mova	@r2,	r3	;
 380:	09 08       	mova	@r8,	r9	;
 382:	00 01       	bra	@r1		;
 384:	03 06       	mova	@r6,	r3	;
 386:	09 02       	mova	@r2,	r9	;
 388:	00 01       	bra	@r1		;
 38a:	03 03       	mova	@r3,	r3	;
 38c:	09 00       	mova	@r0,	r9	;
 38e:	00 01       	bra	@r1		;
 390:	00 02       	bra	@r2		;
 392:	04 01       	mova	@r1,	r4	;
 394:	06 03       	mova	@r3,	r6	;
 396:	00 09       	bra	@r9		;
 398:	04 00       	mova	@r0,	r4	;
 39a:	01 06       	mova	@r6,	r1	;
 39c:	03 04       	mova	@r4,	r3	;
 39e:	09 08       	mova	@r8,	r9	;
 3a0:	00 01       	bra	@r1		;
 3a2:	03 01       	mova	@r1,	r3	;
 3a4:	09 08       	mova	@r8,	r9	;
 3a6:	00 01       	bra	@r1		;
 3a8:	03 01       	mova	@r1,	r3	;
 3aa:	09 04       	mova	@r4,	r9	;
 3ac:	00 01       	bra	@r1		;
 3ae:	03 02       	mova	@r2,	r3	;
 3b0:	09 04       	mova	@r4,	r9	;
 3b2:	00 01       	bra	@r1		;
 3b4:	03 02       	mova	@r2,	r3	;
 3b6:	09 04       	mova	@r4,	r9	;
 3b8:	00 01       	bra	@r1		;
 3ba:	00 02       	bra	@r2		;
 3bc:	04 01       	mova	@r1,	r4	;
 3be:	03 06       	mova	@r6,	r3	;
 3c0:	09 10       	rrc	r9		;
 3c2:	00 01       	bra	@r1		;
 3c4:	00 02       	bra	@r2		;
 3c6:	04 01       	mova	@r1,	r4	;
 3c8:	03 7b       	.word	0x7b03;	????
 3ca:	09 02       	mova	@r2,	r9	;
 3cc:	00 01       	bra	@r1		;
 3ce:	03 02       	mova	@r2,	r3	;
 3d0:	09 06       	mova	@r6,	r9	;
 3d2:	00 01       	bra	@r1		;
 3d4:	03 02       	mova	@r2,	r3	;
 3d6:	09 04       	mova	@r4,	r9	;
 3d8:	00 01       	bra	@r1		;
 3da:	03 01       	mova	@r1,	r3	;
 3dc:	09 04       	mova	@r4,	r9	;
 3de:	00 01       	bra	@r1		;
 3e0:	03 7f       	.word	0x7f03;	????
 3e2:	09 0c       	mova	@r12,	r9	;
 3e4:	00 01       	bra	@r1		;
 3e6:	03 7b       	.word	0x7b03;	????
 3e8:	09 04       	mova	@r4,	r9	;
 3ea:	00 01       	bra	@r1		;
 3ec:	03 09       	mova	@r9,	r3	;
 3ee:	09 10       	rrc	r9		;
 3f0:	00 01       	bra	@r1		;
 3f2:	03 01       	mova	@r1,	r3	;
 3f4:	09 04       	mova	@r4,	r9	;
 3f6:	00 01       	bra	@r1		;
 3f8:	03 05       	mova	@r5,	r3	;
 3fa:	09 02       	mova	@r2,	r9	;
 3fc:	00 01       	bra	@r1		;
 3fe:	03 02       	mova	@r2,	r3	;
 400:	09 00       	mova	@r0,	r9	;
 402:	00 01       	bra	@r1		;
 404:	03 07       	mova	@r7,	r3	;
 406:	09 06       	mova	@r6,	r9	;
 408:	00 01       	bra	@r1		;
 40a:	03 01       	mova	@r1,	r3	;
 40c:	09 00       	mova	@r0,	r9	;
 40e:	00 01       	bra	@r1		;
 410:	03 01       	mova	@r1,	r3	;
 412:	09 06       	mova	@r6,	r9	;
 414:	00 01       	bra	@r1		;
 416:	03 0e       	mova	@r14,	r3	;
 418:	09 08       	mova	@r8,	r9	;
 41a:	00 01       	bra	@r1		;
 41c:	03 03       	mova	@r3,	r3	;
 41e:	09 02       	mova	@r2,	r9	;
 420:	00 01       	bra	@r1		;
 422:	03 04       	mova	@r4,	r3	;
 424:	09 0e       	mova	@r14,	r9	;
 426:	00 01       	bra	@r1		;
 428:	03 01       	mova	@r1,	r3	;
 42a:	09 14       	pushm.a	#1,	r9	;20-bit words
 42c:	00 01       	bra	@r1		;
 42e:	03 01       	mova	@r1,	r3	;
 430:	09 04       	mova	@r4,	r9	;
 432:	00 01       	bra	@r1		;
 434:	03 7f       	.word	0x7f03;	????
 436:	09 0c       	mova	@r12,	r9	;
 438:	00 01       	bra	@r1		;
 43a:	03 04       	mova	@r4,	r3	;
 43c:	09 04       	mova	@r4,	r9	;
 43e:	00 01       	bra	@r1		;
 440:	03 01       	mova	@r1,	r3	;
 442:	09 08       	mova	@r8,	r9	;
 444:	00 01       	bra	@r1		;
 446:	03 01       	mova	@r1,	r3	;
 448:	09 04       	mova	@r4,	r9	;
 44a:	00 01       	bra	@r1		;
 44c:	03 05       	mova	@r5,	r3	;
 44e:	09 06       	mova	@r6,	r9	;
 450:	00 01       	bra	@r1		;
 452:	03 01       	mova	@r1,	r3	;
 454:	09 1a 00 01 	rpt #10 { brax	@r1		;
 458:	00 02       	bra	@r2		;
 45a:	04 01       	mova	@r1,	r4	;
 45c:	03 02       	mova	@r2,	r3	;
 45e:	09 0e       	mova	@r14,	r9	;
 460:	00 01       	bra	@r1		;
 462:	03 01       	mova	@r1,	r3	;
 464:	09 06       	mova	@r6,	r9	;
 466:	00 01       	bra	@r1		;
 468:	03 01       	mova	@r1,	r3	;
 46a:	09 04       	mova	@r4,	r9	;
 46c:	00 01       	bra	@r1		;
 46e:	03 08       	mova	@r8,	r3	;
 470:	09 04       	mova	@r4,	r9	;
 472:	00 01       	bra	@r1		;
 474:	09 04       	mova	@r4,	r9	;
 476:	00 00       	beq			
 478:	01 01       	mova	@r1,	r1	;
 47a:	80 00 00 00 	mova	#0,	r0	;
 47e:	02 00       	mova	@r0,	r2	;
 480:	57 00       	rrcm	#1,	r7	;
 482:	00 00       	beq			
 484:	01 01       	mova	@r1,	r1	;
 486:	fb 0e       	suba	r14,	r11	;
 488:	0d 00       	mova	@r0,	r13	;
 48a:	01 01       	mova	@r1,	r1	;
 48c:	01 01       	mova	@r1,	r1	;
 48e:	00 00       	beq			
 490:	00 01       	bra	@r1		;
 492:	00 00       	beq			
 494:	01 2f       	jc	$-508    	;abs 0x298
 496:	6f 70       	subc.b	@r0,	r15	;
 498:	74 2f       	jc	$-278    	;abs 0x382
 49a:	72 65       	addc.b	@r5+,	r2	;
 49c:	64 68       	addc.b	@r8,	r4	;
 49e:	61 74       	subc.b	@r4,	r1	;
 4a0:	2f 6d       	addc	@r13,	r15	;
 4a2:	73 70       	.word	0x7073;	????
 4a4:	34 33       	jn	$-406    	;abs 0x30e
 4a6:	30 2d       	jc	$+610    	;abs 0x708
 4a8:	31 34       	jge	$+100    	;abs 0x50c
 4aa:	72 31       	jn	$+742    	;abs 0x790
 4ac:	2d 33       	jn	$-420    	;abs 0x308
 4ae:	36 34       	jge	$+110    	;abs 0x51c
 4b0:	2f 73       	subc	#2,	r15	;r3 As==10
 4b2:	6f 75       	subc.b	@r5,	r15	;
 4b4:	72 63       	addc.b	#-1,	r2	;r3 As==11
 4b6:	65 73       	subc.b	#2,	r5	;r3 As==10
 4b8:	2f 74       	subc	@r4,	r15	;
 4ba:	6f 6f       	addc.b	@r15,	r15	;
 4bc:	6c 73       	subc.b	#2,	r12	;r3 As==10
 4be:	2f 6c       	addc	@r12,	r15	;
 4c0:	69 62       	addc.b	#4,	r9	;r2 As==10
 4c2:	67 6c       	addc.b	@r12,	r7	;
 4c4:	6f 73       	subc.b	#2,	r15	;r3 As==10
 4c6:	73 2f       	jc	$-280    	;abs 0x3ae
 4c8:	6d 73       	subc.b	#2,	r13	;r3 As==10
 4ca:	70 34       	jge	$+226    	;abs 0x5ac
 4cc:	33 30       	jn	$+104    	;abs 0x534
 4ce:	00 00       	beq			
 4d0:	63 72       	.word	0x7263;	????
 4d2:	74 30       	jn	$+234    	;abs 0x5bc
 4d4:	2e 53       	incd	r14		;
 4d6:	00 01       	bra	@r1		;
 4d8:	00 00       	beq			
 4da:	00 00       	beq			
 4dc:	05 02       	mova	@r2,	r5	;
 4de:	a8 55 00 00 	add	@r5,	0(r8)	;
 4e2:	03 cd       	.word	0xcd03;	????
 4e4:	00 01       	bra	@r1		;
 4e6:	03 01       	mova	@r1,	r3	;
 4e8:	09 04       	mova	@r4,	r9	;
 4ea:	00 01       	bra	@r1		;
 4ec:	03 01       	mova	@r1,	r3	;
 4ee:	09 02       	mova	@r2,	r9	;
 4f0:	00 01       	bra	@r1		;
 4f2:	03 04       	mova	@r4,	r3	;
 4f4:	09 04       	mova	@r4,	r9	;
 4f6:	00 01       	bra	@r1		;
 4f8:	09 04       	mova	@r4,	r9	;
 4fa:	00 00       	beq			
 4fc:	01 01       	mova	@r1,	r1	;
 4fe:	8c 00 00 00 	mova	#0,	r12	;
 502:	02 00       	mova	@r0,	r2	;
 504:	57 00       	rrcm	#1,	r7	;
 506:	00 00       	beq			
 508:	01 01       	mova	@r1,	r1	;
 50a:	fb 0e       	suba	r14,	r11	;
 50c:	0d 00       	mova	@r0,	r13	;
 50e:	01 01       	mova	@r1,	r1	;
 510:	01 01       	mova	@r1,	r1	;
 512:	00 00       	beq			
 514:	00 01       	bra	@r1		;
 516:	00 00       	beq			
 518:	01 2f       	jc	$-508    	;abs 0x31c
 51a:	6f 70       	subc.b	@r0,	r15	;
 51c:	74 2f       	jc	$-278    	;abs 0x406
 51e:	72 65       	addc.b	@r5+,	r2	;
 520:	64 68       	addc.b	@r8,	r4	;
 522:	61 74       	subc.b	@r4,	r1	;
 524:	2f 6d       	addc	@r13,	r15	;
 526:	73 70       	.word	0x7073;	????
 528:	34 33       	jn	$-406    	;abs 0x392
 52a:	30 2d       	jc	$+610    	;abs 0x78c
 52c:	31 34       	jge	$+100    	;abs 0x590
 52e:	72 31       	jn	$+742    	;abs 0x814
 530:	2d 33       	jn	$-420    	;abs 0x38c
 532:	36 34       	jge	$+110    	;abs 0x5a0
 534:	2f 73       	subc	#2,	r15	;r3 As==10
 536:	6f 75       	subc.b	@r5,	r15	;
 538:	72 63       	addc.b	#-1,	r2	;r3 As==11
 53a:	65 73       	subc.b	#2,	r5	;r3 As==10
 53c:	2f 74       	subc	@r4,	r15	;
 53e:	6f 6f       	addc.b	@r15,	r15	;
 540:	6c 73       	subc.b	#2,	r12	;r3 As==10
 542:	2f 6c       	addc	@r12,	r15	;
 544:	69 62       	addc.b	#4,	r9	;r2 As==10
 546:	67 6c       	addc.b	@r12,	r7	;
 548:	6f 73       	subc.b	#2,	r15	;r3 As==10
 54a:	73 2f       	jc	$-280    	;abs 0x432
 54c:	6d 73       	subc.b	#2,	r13	;r3 As==10
 54e:	70 34       	jge	$+226    	;abs 0x630
 550:	33 30       	jn	$+104    	;abs 0x5b8
 552:	00 00       	beq			
 554:	63 72       	.word	0x7263;	????
 556:	74 30       	jn	$+234    	;abs 0x640
 558:	2e 53       	incd	r14		;
 55a:	00 01       	bra	@r1		;
 55c:	00 00       	beq			
 55e:	00 00       	beq			
 560:	05 02       	mova	@r2,	r5	;
 562:	b6 55 00 00 	add	@r5+,	0(r6)	;
 566:	03 f9       	.word	0xf903;	????
 568:	00 01       	bra	@r1		;
 56a:	03 01       	mova	@r1,	r3	;
 56c:	09 04       	mova	@r4,	r9	;
 56e:	00 01       	bra	@r1		;
 570:	03 03       	mova	@r3,	r3	;
 572:	09 04       	mova	@r4,	r9	;
 574:	00 01       	bra	@r1		;
 576:	03 01       	mova	@r1,	r3	;
 578:	09 02       	mova	@r2,	r9	;
 57a:	00 01       	bra	@r1		;
 57c:	03 02       	mova	@r2,	r3	;
 57e:	09 02       	mova	@r2,	r9	;
 580:	00 01       	bra	@r1		;
 582:	03 02       	mova	@r2,	r3	;
 584:	09 04       	mova	@r4,	r9	;
 586:	00 01       	bra	@r1		;
 588:	09 04       	mova	@r4,	r9	;
 58a:	00 00       	beq			
 58c:	01 01       	mova	@r1,	r1	;
 58e:	7a 00 00 00 	mova	r0,	0(r10)	;
 592:	02 00       	mova	@r0,	r2	;
 594:	57 00       	rrcm	#1,	r7	;
 596:	00 00       	beq			
 598:	01 01       	mova	@r1,	r1	;
 59a:	fb 0e       	suba	r14,	r11	;
 59c:	0d 00       	mova	@r0,	r13	;
 59e:	01 01       	mova	@r1,	r1	;
 5a0:	01 01       	mova	@r1,	r1	;
 5a2:	00 00       	beq			
 5a4:	00 01       	bra	@r1		;
 5a6:	00 00       	beq			
 5a8:	01 2f       	jc	$-508    	;abs 0x3ac
 5aa:	6f 70       	subc.b	@r0,	r15	;
 5ac:	74 2f       	jc	$-278    	;abs 0x496
 5ae:	72 65       	addc.b	@r5+,	r2	;
 5b0:	64 68       	addc.b	@r8,	r4	;
 5b2:	61 74       	subc.b	@r4,	r1	;
 5b4:	2f 6d       	addc	@r13,	r15	;
 5b6:	73 70       	.word	0x7073;	????
 5b8:	34 33       	jn	$-406    	;abs 0x422
 5ba:	30 2d       	jc	$+610    	;abs 0x81c
 5bc:	31 34       	jge	$+100    	;abs 0x620
 5be:	72 31       	jn	$+742    	;abs 0x8a4
 5c0:	2d 33       	jn	$-420    	;abs 0x41c
 5c2:	36 34       	jge	$+110    	;abs 0x630
 5c4:	2f 73       	subc	#2,	r15	;r3 As==10
 5c6:	6f 75       	subc.b	@r5,	r15	;
 5c8:	72 63       	addc.b	#-1,	r2	;r3 As==11
 5ca:	65 73       	subc.b	#2,	r5	;r3 As==10
 5cc:	2f 74       	subc	@r4,	r15	;
 5ce:	6f 6f       	addc.b	@r15,	r15	;
 5d0:	6c 73       	subc.b	#2,	r12	;r3 As==10
 5d2:	2f 6c       	addc	@r12,	r15	;
 5d4:	69 62       	addc.b	#4,	r9	;r2 As==10
 5d6:	67 6c       	addc.b	@r12,	r7	;
 5d8:	6f 73       	subc.b	#2,	r15	;r3 As==10
 5da:	73 2f       	jc	$-280    	;abs 0x4c2
 5dc:	6d 73       	subc.b	#2,	r13	;r3 As==10
 5de:	70 34       	jge	$+226    	;abs 0x6c0
 5e0:	33 30       	jn	$+104    	;abs 0x648
 5e2:	00 00       	beq			
 5e4:	63 72       	.word	0x7263;	????
 5e6:	74 30       	jn	$+234    	;abs 0x6d0
 5e8:	2e 53       	incd	r14		;
 5ea:	00 01       	bra	@r1		;
 5ec:	00 00       	beq			
 5ee:	00 00       	beq			
 5f0:	05 02       	mova	@r2,	r5	;
 5f2:	ca 55 00 00 	add.b	r5,	0(r10)	;
 5f6:	03 cb       	.word	0xcb03;	????
 5f8:	01 01       	mova	@r1,	r1	;
 5fa:	03 02       	mova	@r2,	r3	;
 5fc:	09 04       	mova	@r4,	r9	;
 5fe:	00 01       	bra	@r1		;
 600:	03 01       	mova	@r1,	r3	;
 602:	09 02       	mova	@r2,	r9	;
 604:	00 01       	bra	@r1		;
 606:	09 04       	mova	@r4,	r9	;
 608:	00 00       	beq			
 60a:	01 01       	mova	@r1,	r1	;
 60c:	54 01       	rram	#1,	r4	;
 60e:	00 00       	beq			
 610:	02 00       	mova	@r0,	r2	;
 612:	0e 01       	mova	@r1,	r14	;
 614:	00 00       	beq			
 616:	01 01       	mova	@r1,	r1	;
 618:	fb 0e       	suba	r14,	r11	;
 61a:	0d 00       	mova	@r0,	r13	;
 61c:	01 01       	mova	@r1,	r1	;
 61e:	01 01       	mova	@r1,	r1	;
 620:	00 00       	beq			
 622:	00 01       	bra	@r1		;
 624:	00 00       	beq			
 626:	01 2f       	jc	$-508    	;abs 0x42a
 628:	6f 70       	subc.b	@r0,	r15	;
 62a:	74 2f       	jc	$-278    	;abs 0x514
 62c:	72 65       	addc.b	@r5+,	r2	;
 62e:	64 68       	addc.b	@r8,	r4	;
 630:	61 74       	subc.b	@r4,	r1	;
 632:	2f 6d       	addc	@r13,	r15	;
 634:	73 70       	.word	0x7073;	????
 636:	34 33       	jn	$-406    	;abs 0x4a0
 638:	30 2d       	jc	$+610    	;abs 0x89a
 63a:	31 34       	jge	$+100    	;abs 0x69e
 63c:	72 31       	jn	$+742    	;abs 0x922
 63e:	2d 33       	jn	$-420    	;abs 0x49a
 640:	36 34       	jge	$+110    	;abs 0x6ae
 642:	2f 73       	subc	#2,	r15	;r3 As==10
 644:	6f 75       	subc.b	@r5,	r15	;
 646:	72 63       	addc.b	#-1,	r2	;r3 As==11
 648:	65 73       	subc.b	#2,	r5	;r3 As==10
 64a:	2f 74       	subc	@r4,	r15	;
 64c:	6f 6f       	addc.b	@r15,	r15	;
 64e:	6c 73       	subc.b	#2,	r12	;r3 As==10
 650:	2f 6e       	addc	@r14,	r15	;
 652:	65 77       	subc.b	@r7,	r5	;
 654:	6c 69       	addc.b	@r9,	r12	;
 656:	62 2f       	jc	$-314    	;abs 0x51c
 658:	6c 69       	addc.b	@r9,	r12	;
 65a:	62 63       	addc.b	#2,	r2	;r3 As==10
 65c:	2f 73       	subc	#2,	r15	;r3 As==10
 65e:	74 72       	subc.b	#8,	r4	;r2 As==11
 660:	69 6e       	addc.b	@r14,	r9	;
 662:	67 00 2f 65 	mova	r0,	&484655	; 0x7652f
 666:	73 2f       	jc	$-280    	;abs 0x54e
 668:	62 75       	subc.b	@r5,	r2	;
 66a:	69 6c       	addc.b	@r12,	r9	;
 66c:	64 2f       	jc	$-310    	;abs 0x536
 66e:	6d 73       	subc.b	#2,	r13	;r3 As==10
 670:	70 34       	jge	$+226    	;abs 0x752
 672:	33 30       	jn	$+104    	;abs 0x6da
 674:	2d 31       	jn	$+604    	;abs 0x8d0
 676:	34 72       	subc	#8,	r4	;r2 As==11
 678:	31 2f       	jc	$-412    	;abs 0x4dc
 67a:	33 36       	jge	$-920    	;abs 0x2e2
 67c:	34 2f       	jc	$-406    	;abs 0x4e6
 67e:	69 36       	jge	$-812    	;abs 0x352
 680:	38 36       	jge	$-910    	;abs 0x2f2
 682:	2d 72       	subc	#4,	r13	;r2 As==10
 684:	65 64       	addc.b	@r4,	r5	;
 686:	68 61       	addc.b	@r1,	r8	;
 688:	74 2d       	jc	$+746    	;abs 0x972
 68a:	6c 69       	addc.b	@r9,	r12	;
 68c:	6e 75       	subc.b	@r5,	r14	;
 68e:	78 2f       	jc	$-270    	;abs 0x580
 690:	58 2d       	jc	$+690    	;abs 0x942
 692:	69 36       	jge	$-812    	;abs 0x366
 694:	38 36       	jge	$-910    	;abs 0x306
 696:	2d 72       	subc	#4,	r13	;r2 As==10
 698:	65 64       	addc.b	@r4,	r5	;
 69a:	68 61       	addc.b	@r1,	r8	;
 69c:	74 2d       	jc	$+746    	;abs 0x986
 69e:	6c 69       	addc.b	@r9,	r12	;
 6a0:	6e 75       	subc.b	@r5,	r14	;
 6a2:	78 2d       	jc	$+754    	;abs 0x994
 6a4:	78 2d       	jc	$+754    	;abs 0x996
 6a6:	6d 73       	subc.b	#2,	r13	;r3 As==10
 6a8:	70 34       	jge	$+226    	;abs 0x78a
 6aa:	33 30       	jn	$+104    	;abs 0x712
 6ac:	2d 65       	addc	@r5,	r13	;
 6ae:	6c 66       	addc.b	@r6,	r12	;
 6b0:	2f 2e       	jc	$-928    	;abs 0x310
 6b2:	2f 67       	addc	@r7,	r15	;
 6b4:	63 63       	.word	0x6363;	????
 6b6:	2f 69       	addc	@r9,	r15	;
 6b8:	6e 63       	addc.b	#2,	r14	;r3 As==10
 6ba:	6c 75       	subc.b	@r5,	r12	;
 6bc:	64 65       	addc.b	@r5,	r4	;
 6be:	00 2f       	jc	$-510    	;abs 0x4c0
 6c0:	6f 70       	subc.b	@r0,	r15	;
 6c2:	74 2f       	jc	$-278    	;abs 0x5ac
 6c4:	72 65       	addc.b	@r5+,	r2	;
 6c6:	64 68       	addc.b	@r8,	r4	;
 6c8:	61 74       	subc.b	@r4,	r1	;
 6ca:	2f 6d       	addc	@r13,	r15	;
 6cc:	73 70       	.word	0x7073;	????
 6ce:	34 33       	jn	$-406    	;abs 0x538
 6d0:	30 2d       	jc	$+610    	;abs 0x932
 6d2:	31 34       	jge	$+100    	;abs 0x736
 6d4:	72 31       	jn	$+742    	;abs 0x9ba
 6d6:	2d 33       	jn	$-420    	;abs 0x532
 6d8:	36 34       	jge	$+110    	;abs 0x746
 6da:	2f 73       	subc	#2,	r15	;r3 As==10
 6dc:	6f 75       	subc.b	@r5,	r15	;
 6de:	72 63       	addc.b	#-1,	r2	;r3 As==11
 6e0:	65 73       	subc.b	#2,	r5	;r3 As==10
 6e2:	2f 74       	subc	@r4,	r15	;
 6e4:	6f 6f       	addc.b	@r15,	r15	;
 6e6:	6c 73       	subc.b	#2,	r12	;r3 As==10
 6e8:	2f 6e       	addc	@r14,	r15	;
 6ea:	65 77       	subc.b	@r7,	r5	;
 6ec:	6c 69       	addc.b	@r9,	r12	;
 6ee:	62 2f       	jc	$-314    	;abs 0x5b4
 6f0:	6c 69       	addc.b	@r9,	r12	;
 6f2:	62 63       	addc.b	#2,	r2	;r3 As==10
 6f4:	2f 69       	addc	@r9,	r15	;
 6f6:	6e 63       	addc.b	#2,	r14	;r3 As==10
 6f8:	6c 75       	subc.b	@r5,	r12	;
 6fa:	64 65       	addc.b	@r5,	r4	;
 6fc:	00 00       	beq			
 6fe:	6d 65       	addc.b	@r5,	r13	;
 700:	6d 6d       	addc.b	@r13,	r13	;
 702:	6f 76       	subc.b	@r6,	r15	;
 704:	65 2e       	jc	$-820    	;abs 0x3d0
 706:	63 00 01 00 	mova	r0,	&196609	; 0x30001
 70a:	00 73       	sbc	r0		;
 70c:	74 64       	addc.b	@r4+,	r4	;
 70e:	64 65       	addc.b	@r5,	r4	;
 710:	66 2e       	jc	$-818    	;abs 0x3de
 712:	68 00 02 00 	mova	r0,	&524290	; 0x80002
 716:	00 73       	sbc	r0		;
 718:	74 72       	subc.b	#8,	r4	;r2 As==11
 71a:	69 6e       	addc.b	@r14,	r9	;
 71c:	67 2e       	jc	$-816    	;abs 0x3ec
 71e:	68 00 03 00 	mova	r0,	&524291	; 0x80003
 722:	00 00       	beq			
 724:	00 05       	bra	@r5		;
 726:	02 04       	mova	@r4,	r2	;
 728:	6e 00 00 03 	mova	r0,	&918272	; 0xe0300
 72c:	3f 01 03 05 	mova	1283(r1),r15	;0x00503
 730:	09 02       	mova	@r2,	r9	;
 732:	00 01       	bra	@r1		;
 734:	00 02       	bra	@r2		;
 736:	04 01       	mova	@r1,	r4	;
 738:	06 03       	mova	@r3,	r6	;
 73a:	00 09       	bra	@r9		;
 73c:	04 00       	mova	@r0,	r4	;
 73e:	01 06       	mova	@r6,	r1	;
 740:	03 05       	mova	@r5,	r3	;
 742:	09 08       	mova	@r8,	r9	;
 744:	00 01       	bra	@r1		;
 746:	03 02       	mova	@r2,	r3	;
 748:	09 12       	push	r9		;
 74a:	00 01       	bra	@r1		;
 74c:	03 05       	mova	@r5,	r3	;
 74e:	09 08       	mova	@r8,	r9	;
 750:	00 01       	bra	@r1		;
 752:	03 02       	mova	@r2,	r3	;
 754:	09 0c       	mova	@r12,	r9	;
 756:	00 01       	bra	@r1		;
 758:	03 3d       	jmp	$+520    	;abs 0x960
 75a:	09 08       	mova	@r8,	r9	;
 75c:	00 01       	bra	@r1		;
 75e:	09 04       	mova	@r4,	r9	;
 760:	00 00       	beq			
 762:	01 01       	mova	@r1,	r1	;
 764:	35 01 00 00 	mova	0(r1),	r5	;
 768:	02 00       	mova	@r0,	r2	;
 76a:	0d 01       	mova	@r1,	r13	;
 76c:	00 00       	beq			
 76e:	01 01       	mova	@r1,	r1	;
 770:	fb 0e       	suba	r14,	r11	;
 772:	0d 00       	mova	@r0,	r13	;
 774:	01 01       	mova	@r1,	r1	;
 776:	01 01       	mova	@r1,	r1	;
 778:	00 00       	beq			
 77a:	00 01       	bra	@r1		;
 77c:	00 00       	beq			
 77e:	01 2f       	jc	$-508    	;abs 0x582
 780:	6f 70       	subc.b	@r0,	r15	;
 782:	74 2f       	jc	$-278    	;abs 0x66c
 784:	72 65       	addc.b	@r5+,	r2	;
 786:	64 68       	addc.b	@r8,	r4	;
 788:	61 74       	subc.b	@r4,	r1	;
 78a:	2f 6d       	addc	@r13,	r15	;
 78c:	73 70       	.word	0x7073;	????
 78e:	34 33       	jn	$-406    	;abs 0x5f8
 790:	30 2d       	jc	$+610    	;abs 0x9f2
 792:	31 34       	jge	$+100    	;abs 0x7f6
 794:	72 31       	jn	$+742    	;abs 0xa7a
 796:	2d 33       	jn	$-420    	;abs 0x5f2
 798:	36 34       	jge	$+110    	;abs 0x806
 79a:	2f 73       	subc	#2,	r15	;r3 As==10
 79c:	6f 75       	subc.b	@r5,	r15	;
 79e:	72 63       	addc.b	#-1,	r2	;r3 As==11
 7a0:	65 73       	subc.b	#2,	r5	;r3 As==10
 7a2:	2f 74       	subc	@r4,	r15	;
 7a4:	6f 6f       	addc.b	@r15,	r15	;
 7a6:	6c 73       	subc.b	#2,	r12	;r3 As==10
 7a8:	2f 6e       	addc	@r14,	r15	;
 7aa:	65 77       	subc.b	@r7,	r5	;
 7ac:	6c 69       	addc.b	@r9,	r12	;
 7ae:	62 2f       	jc	$-314    	;abs 0x674
 7b0:	6c 69       	addc.b	@r9,	r12	;
 7b2:	62 63       	addc.b	#2,	r2	;r3 As==10
 7b4:	2f 73       	subc	#2,	r15	;r3 As==10
 7b6:	74 72       	subc.b	#8,	r4	;r2 As==11
 7b8:	69 6e       	addc.b	@r14,	r9	;
 7ba:	67 00 2f 65 	mova	r0,	&484655	; 0x7652f
 7be:	73 2f       	jc	$-280    	;abs 0x6a6
 7c0:	62 75       	subc.b	@r5,	r2	;
 7c2:	69 6c       	addc.b	@r12,	r9	;
 7c4:	64 2f       	jc	$-310    	;abs 0x68e
 7c6:	6d 73       	subc.b	#2,	r13	;r3 As==10
 7c8:	70 34       	jge	$+226    	;abs 0x8aa
 7ca:	33 30       	jn	$+104    	;abs 0x832
 7cc:	2d 31       	jn	$+604    	;abs 0xa28
 7ce:	34 72       	subc	#8,	r4	;r2 As==11
 7d0:	31 2f       	jc	$-412    	;abs 0x634
 7d2:	33 36       	jge	$-920    	;abs 0x43a
 7d4:	34 2f       	jc	$-406    	;abs 0x63e
 7d6:	69 36       	jge	$-812    	;abs 0x4aa
 7d8:	38 36       	jge	$-910    	;abs 0x44a
 7da:	2d 72       	subc	#4,	r13	;r2 As==10
 7dc:	65 64       	addc.b	@r4,	r5	;
 7de:	68 61       	addc.b	@r1,	r8	;
 7e0:	74 2d       	jc	$+746    	;abs 0xaca
 7e2:	6c 69       	addc.b	@r9,	r12	;
 7e4:	6e 75       	subc.b	@r5,	r14	;
 7e6:	78 2f       	jc	$-270    	;abs 0x6d8
 7e8:	58 2d       	jc	$+690    	;abs 0xa9a
 7ea:	69 36       	jge	$-812    	;abs 0x4be
 7ec:	38 36       	jge	$-910    	;abs 0x45e
 7ee:	2d 72       	subc	#4,	r13	;r2 As==10
 7f0:	65 64       	addc.b	@r4,	r5	;
 7f2:	68 61       	addc.b	@r1,	r8	;
 7f4:	74 2d       	jc	$+746    	;abs 0xade
 7f6:	6c 69       	addc.b	@r9,	r12	;
 7f8:	6e 75       	subc.b	@r5,	r14	;
 7fa:	78 2d       	jc	$+754    	;abs 0xaec
 7fc:	78 2d       	jc	$+754    	;abs 0xaee
 7fe:	6d 73       	subc.b	#2,	r13	;r3 As==10
 800:	70 34       	jge	$+226    	;abs 0x8e2
 802:	33 30       	jn	$+104    	;abs 0x86a
 804:	2d 65       	addc	@r5,	r13	;
 806:	6c 66       	addc.b	@r6,	r12	;
 808:	2f 2e       	jc	$-928    	;abs 0x468
 80a:	2f 67       	addc	@r7,	r15	;
 80c:	63 63       	.word	0x6363;	????
 80e:	2f 69       	addc	@r9,	r15	;
 810:	6e 63       	addc.b	#2,	r14	;r3 As==10
 812:	6c 75       	subc.b	@r5,	r12	;
 814:	64 65       	addc.b	@r5,	r4	;
 816:	00 2f       	jc	$-510    	;abs 0x618
 818:	6f 70       	subc.b	@r0,	r15	;
 81a:	74 2f       	jc	$-278    	;abs 0x704
 81c:	72 65       	addc.b	@r5+,	r2	;
 81e:	64 68       	addc.b	@r8,	r4	;
 820:	61 74       	subc.b	@r4,	r1	;
 822:	2f 6d       	addc	@r13,	r15	;
 824:	73 70       	.word	0x7073;	????
 826:	34 33       	jn	$-406    	;abs 0x690
 828:	30 2d       	jc	$+610    	;abs 0xa8a
 82a:	31 34       	jge	$+100    	;abs 0x88e
 82c:	72 31       	jn	$+742    	;abs 0xb12
 82e:	2d 33       	jn	$-420    	;abs 0x68a
 830:	36 34       	jge	$+110    	;abs 0x89e
 832:	2f 73       	subc	#2,	r15	;r3 As==10
 834:	6f 75       	subc.b	@r5,	r15	;
 836:	72 63       	addc.b	#-1,	r2	;r3 As==11
 838:	65 73       	subc.b	#2,	r5	;r3 As==10
 83a:	2f 74       	subc	@r4,	r15	;
 83c:	6f 6f       	addc.b	@r15,	r15	;
 83e:	6c 73       	subc.b	#2,	r12	;r3 As==10
 840:	2f 6e       	addc	@r14,	r15	;
 842:	65 77       	subc.b	@r7,	r5	;
 844:	6c 69       	addc.b	@r9,	r12	;
 846:	62 2f       	jc	$-314    	;abs 0x70c
 848:	6c 69       	addc.b	@r9,	r12	;
 84a:	62 63       	addc.b	#2,	r2	;r3 As==10
 84c:	2f 69       	addc	@r9,	r15	;
 84e:	6e 63       	addc.b	#2,	r14	;r3 As==10
 850:	6c 75       	subc.b	@r5,	r12	;
 852:	64 65       	addc.b	@r5,	r4	;
 854:	00 00       	beq			
 856:	6d 65       	addc.b	@r5,	r13	;
 858:	6d 73       	subc.b	#2,	r13	;r3 As==10
 85a:	65 74       	subc.b	@r4,	r5	;
 85c:	2e 63       	addc	#2,	r14	;r3 As==10
 85e:	00 01       	bra	@r1		;
 860:	00 00       	beq			
 862:	73 74       	.word	0x7473;	????
 864:	64 64       	addc.b	@r4,	r4	;
 866:	65 66       	addc.b	@r6,	r5	;
 868:	2e 68       	addc	@r8,	r14	;
 86a:	00 02       	bra	@r2		;
 86c:	00 00       	beq			
 86e:	73 74       	.word	0x7473;	????
 870:	72 69       	addc.b	@r9+,	r2	;
 872:	6e 67       	addc.b	@r7,	r14	;
 874:	2e 68       	addc	@r8,	r14	;
 876:	00 03       	bra	@r3		;
 878:	00 00       	beq			
 87a:	00 00       	beq			
 87c:	05 02       	mova	@r2,	r5	;
 87e:	44 6e       	addc.b	r14,	r4	;
 880:	00 00       	beq			
 882:	03 30       	jn	$+8      	;abs 0x88a
 884:	01 03       	mova	@r3,	r1	;
 886:	33 09 04 00 	mova	4(r9),	r3	;
 88a:	01 03       	mova	@r3,	r1	;
 88c:	01 09       	mova	@r9,	r1	;
 88e:	04 00       	mova	@r0,	r4	;
 890:	01 03       	mova	@r3,	r1	;
 892:	03 09       	mova	@r9,	r3	;
 894:	08 00       	mova	@r0,	r8	;
 896:	01 09       	mova	@r9,	r1	;
 898:	02 00       	mova	@r0,	r2	;
 89a:	00 01       	bra	@r1		;
 89c:	01 89       	sub	r9,	r1	;
 89e:	00 00       	beq			
 8a0:	00 02       	bra	@r2		;
 8a2:	00 57       	add	r7,	r0	;
 8a4:	00 00       	beq			
 8a6:	00 01       	bra	@r1		;
 8a8:	01 fb       	and	r11,	r1	;
 8aa:	0e 0d       	mova	@r13,	r14	;
 8ac:	00 01       	bra	@r1		;
 8ae:	01 01       	mova	@r1,	r1	;
 8b0:	01 00       	mova	@r0,	r1	;
 8b2:	00 00       	beq			
 8b4:	01 00       	mova	@r0,	r1	;
 8b6:	00 01       	bra	@r1		;
 8b8:	2f 6f       	addc	@r15,	r15	;
 8ba:	70 74       	subc.b	@r4+,	r0	;
 8bc:	2f 72       	subc	#4,	r15	;r2 As==10
 8be:	65 64       	addc.b	@r4,	r5	;
 8c0:	68 61       	addc.b	@r1,	r8	;
 8c2:	74 2f       	jc	$-278    	;abs 0x7ac
 8c4:	6d 73       	subc.b	#2,	r13	;r3 As==10
 8c6:	70 34       	jge	$+226    	;abs 0x9a8
 8c8:	33 30       	jn	$+104    	;abs 0x930
 8ca:	2d 31       	jn	$+604    	;abs 0xb26
 8cc:	34 72       	subc	#8,	r4	;r2 As==11
 8ce:	31 2d       	jc	$+612    	;abs 0xb32
 8d0:	33 36       	jge	$-920    	;abs 0x538
 8d2:	34 2f       	jc	$-406    	;abs 0x73c
 8d4:	73 6f       	.word	0x6f73;	????
 8d6:	75 72       	subc.b	#8,	r5	;r2 As==11
 8d8:	63 65       	.word	0x6563;	????
 8da:	73 2f       	jc	$-280    	;abs 0x7c2
 8dc:	74 6f       	addc.b	@r15+,	r4	;
 8de:	6f 6c       	addc.b	@r12,	r15	;
 8e0:	73 2f       	jc	$-280    	;abs 0x7c8
 8e2:	6c 69       	addc.b	@r9,	r12	;
 8e4:	62 67       	addc.b	@r7,	r2	;
 8e6:	6c 6f       	addc.b	@r15,	r12	;
 8e8:	73 73       	.word	0x7373;	????
 8ea:	2f 6d       	addc	@r13,	r15	;
 8ec:	73 70       	.word	0x7073;	????
 8ee:	34 33       	jn	$-406    	;abs 0x758
 8f0:	30 00 00 63 	bra	25344(r0)	;PC rel. 0x06bf2
 8f4:	72 74       	subc.b	@r4+,	r2	;
 8f6:	6e 2e       	jc	$-802    	;abs 0x5d4
 8f8:	53 00       	rrcm	#1,	r3	;
 8fa:	01 00       	mova	@r0,	r1	;
 8fc:	00 00       	beq			
 8fe:	00 05       	bra	@r5		;
 900:	02 7e       	subc	r14,	r2	;
 902:	6e 00 00 03 	mova	r0,	&918272	; 0xe0300
 906:	11 01       	mova	@r1+,	r1	;
 908:	03 01       	mova	@r1,	r3	;
 90a:	09 04       	mova	@r4,	r9	;
 90c:	00 01       	bra	@r1		;
 90e:	03 01       	mova	@r1,	r3	;
 910:	09 04       	mova	@r4,	r9	;
 912:	00 01       	bra	@r1		;
 914:	09 02       	mova	@r2,	r9	;
 916:	00 00       	beq			
 918:	01 01       	mova	@r1,	r1	;
 91a:	00 05       	bra	@r5		;
 91c:	02 90       	cmp	r0,	r2	;
 91e:	6e 00 00 03 	mova	r0,	&918272	; 0xe0300
 922:	19 01       	mova	@r1+,	r9	;
 924:	09 02       	mova	@r2,	r9	;
 926:	00 00       	beq			
 928:	01 01       	mova	@r1,	r1	;

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	10 00       	bra	@r0+		;
   2:	00 00       	beq			
   4:	ff ff       	.word	0xffff;	????
   6:	ff ff       	.word	0xffff;	????
   8:	03 00       	mova	@r0,	r3	;
   a:	01 7e       	subc	r14,	r1	;
   c:	00 0c       	bra	@r12		;
   e:	01 02       	mova	@r2,	r1	;
  10:	80 01 00 00 	mova	#65536,	r0	;0x10000
  14:	0c 00       	mova	@r0,	r12	;
  16:	00 00       	beq			
  18:	00 00       	beq			
  1a:	00 00       	beq			
  1c:	c6 6b 00 00 	addc.b	r11,	0(r6)	;
  20:	42 00       	rrcm.a	#1,	r2	;
  22:	00 00       	beq			
  24:	0c 00       	mova	@r0,	r12	;
  26:	00 00       	beq			
  28:	00 00       	beq			
  2a:	00 00       	beq			
  2c:	08 6c       	addc	r12,	r8	;
  2e:	00 00       	beq			
  30:	26 00 00 00 	mova	&0,	r6	;
  34:	0c 00       	mova	@r0,	r12	;
  36:	00 00       	beq			
  38:	00 00       	beq			
  3a:	00 00       	beq			
  3c:	2e 6c       	addc	@r12,	r14	;
  3e:	00 00       	beq			
  40:	24 00 00 00 	mova	&0,	r4	;
  44:	0c 00       	mova	@r0,	r12	;
  46:	00 00       	beq			
  48:	00 00       	beq			
  4a:	00 00       	beq			
  4c:	52 6c 00 00 	addc.b	0(r12),	r2	;
  50:	10 00       	bra	@r0+		;
  52:	00 00       	beq			
  54:	0c 00       	mova	@r0,	r12	;
  56:	00 00       	beq			
  58:	00 00       	beq			
  5a:	00 00       	beq			
  5c:	62 6c       	addc.b	@r12,	r2	;
  5e:	00 00       	beq			
  60:	66 00 00 00 	mova	r0,	&393216	; 0x60000
  64:	0c 00       	mova	@r0,	r12	;
  66:	00 00       	beq			
  68:	00 00       	beq			
  6a:	00 00       	beq			
  6c:	c8 6c 00 00 	addc.b	r12,	0(r8)	;
  70:	06 00       	mova	@r0,	r6	;
  72:	00 00       	beq			
  74:	0c 00       	mova	@r0,	r12	;
  76:	00 00       	beq			
  78:	00 00       	beq			
  7a:	00 00       	beq			
  7c:	ce 6c 00 00 	addc.b	r12,	0(r14)	;
  80:	26 00 00 00 	mova	&0,	r6	;
  84:	0c 00       	mova	@r0,	r12	;
  86:	00 00       	beq			
  88:	00 00       	beq			
  8a:	00 00       	beq			
  8c:	f4 6c 00 00 	addc.b	@r12+,	0(r4)	;
  90:	12 00       	mova	@r0+,	r2	;
  92:	00 00       	beq			
  94:	0c 00       	mova	@r0,	r12	;
  96:	00 00       	beq			
  98:	00 00       	beq			
  9a:	00 00       	beq			
  9c:	06 6d       	addc	r13,	r6	;
  9e:	00 00       	beq			
  a0:	66 00 00 00 	mova	r0,	&393216	; 0x60000
  a4:	0c 00       	mova	@r0,	r12	;
  a6:	00 00       	beq			
  a8:	00 00       	beq			
  aa:	00 00       	beq			
  ac:	6c 6d       	addc.b	@r13,	r12	;
  ae:	00 00       	beq			
  b0:	06 00       	mova	@r0,	r6	;
  b2:	00 00       	beq			
  b4:	0c 00       	mova	@r0,	r12	;
  b6:	00 00       	beq			
  b8:	00 00       	beq			
  ba:	00 00       	beq			
  bc:	72 6d       	addc.b	@r13+,	r2	;
  be:	00 00       	beq			
  c0:	0e 00       	mova	@r0,	r14	;
  c2:	00 00       	beq			
  c4:	1c 00       	mova	@r0+,	r12	;
  c6:	00 00       	beq			
  c8:	00 00       	beq			
  ca:	00 00       	beq			
  cc:	80 6d 00 00 	addc	r13,	0x0000	; PC rel. 0x00ce
  d0:	84 00 00 00 	mova	#0,	r4	;
  d4:	04 02       	mova	@r2,	r4	;
  d6:	00 00       	beq			
  d8:	00 0e       	bra	@r14		;
  da:	0a 8f       	sub	r15,	r10	;
  dc:	02 8e       	sub	r14,	r2	;
  de:	03 8d       	.word	0x8d03;	????
  e0:	04 8c       	sub	r12,	r4	;
  e2:	05 00       	mova	@r0,	r5	;
  e4:	10 00       	bra	@r0+		;
  e6:	00 00       	beq			
  e8:	ff ff       	.word	0xffff;	????
  ea:	ff ff       	.word	0xffff;	????
  ec:	03 00       	mova	@r0,	r3	;
  ee:	01 7e       	subc	r14,	r1	;
  f0:	00 0c       	bra	@r12		;
  f2:	01 02       	mova	@r2,	r1	;
  f4:	80 01 00 00 	mova	#65536,	r0	;0x10000
  f8:	18 00       	mova	@r0+,	r8	;
  fa:	00 00       	beq			
  fc:	e4 00       	adda	r0,	r4	;
  fe:	00 00       	beq			
 100:	04 6e       	addc	r14,	r4	;
 102:	00 00       	beq			
 104:	40 00       	rrcm.a	#1,	r0	;
 106:	00 00       	beq			
 108:	04 02       	mova	@r2,	r4	;
 10a:	00 00       	beq			
 10c:	00 0e       	bra	@r14		;
 10e:	04 8a       	sub	r10,	r4	;
 110:	02 00       	mova	@r0,	r2	;
 112:	00 00       	beq			
 114:	10 00       	bra	@r0+		;
 116:	00 00       	beq			
 118:	ff ff       	.word	0xffff;	????
 11a:	ff ff       	.word	0xffff;	????
 11c:	03 00       	mova	@r0,	r3	;
 11e:	01 7e       	subc	r14,	r1	;
 120:	00 0c       	bra	@r12		;
 122:	01 02       	mova	@r2,	r1	;
 124:	80 01 00 00 	mova	#65536,	r0	;0x10000
 128:	0c 00       	mova	@r0,	r12	;
 12a:	00 00       	beq			
 12c:	14 01       	mova	@r1+,	r4	;
 12e:	00 00       	beq			
 130:	44 6e       	addc.b	r14,	r4	;
 132:	00 00       	beq			
 134:	12 00       	mova	@r0+,	r2	;
	...

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	55 41 52 54 	mov.b	21586(r1),r5	;0x05452
   4:	5f 69 73 54 	addc.b	21619(r9),r15	;0x05473
   8:	78 42       	mov.b	#8,	r8	;r2 As==11
   a:	75 73       	subc.b	#-1,	r5	;r3 As==11
   c:	79 00 75 61 	mova	r0,	24949(r9); 0x06175
  10:	72 74       	subc.b	@r4+,	r2	;
  12:	5f 73       	subc.b	#1,	r15	;r3 As==01
  14:	6d 5f       	add.b	@r15,	r13	;
  16:	74 00 55 41 	mova	r0,	16725(r4); 0x04155
  1a:	52 54 5f 69 	add.b	26975(r4),r2	;0x0695f
  1e:	73 52       	.word	0x5273;	????
  20:	78 42       	mov.b	#8,	r8	;r2 As==11
  22:	75 73       	subc.b	#-1,	r5	;r3 As==11
  24:	79 00 73 68 	mova	r0,	26739(r9); 0x06873
  28:	6f 72       	subc.b	#4,	r15	;r2 As==10
  2a:	74 20       	jnz	$+234    	;abs 0x114
  2c:	69 6e       	addc.b	@r14,	r9	;
  2e:	74 00 55 41 	mova	r0,	16725(r4); 0x04155
  32:	52 54 5f 74 	add.b	29791(r4),r2	;0x0745f
  36:	65 61       	addc.b	@r1,	r5	;
  38:	72 64       	addc.b	@r4+,	r2	;
  3a:	6f 77       	subc.b	@r7,	r15	;
  3c:	6e 00 55 41 	mova	r0,	&934229	; 0xe4155
  40:	52 54 5f 61 	add.b	24927(r4),r2	;0x0615f
  44:	73 79       	.word	0x7973;	????
  46:	6e 63       	addc.b	#2,	r14	;r3 As==10
  48:	53 65       	.word	0x6553;	????
  4a:	6e 64       	addc.b	@r4,	r14	;
  4c:	00 5f       	add	r15,	r0	;
  4e:	5f 75 69 6e 	subc.b	28265(r5),r15	;0x06e69
  52:	74 31       	jn	$+746    	;abs 0x33c
  54:	36 5f       	add	@r15+,	r6	;
  56:	74 00 55 41 	mova	r0,	16725(r4); 0x04155
  5a:	52 54 5f 53 	add.b	21343(r4),r2	;0x0535f
  5e:	4d 00       	rrcm.a	#1,	r13	;
  60:	2e 2e       	jc	$-930    	;abs 0xfffffcbe
  62:	2f 2e       	jc	$-928    	;abs 0xfffffcc2
  64:	2e 2f       	jc	$-418    	;abs 0xfffffec2
  66:	73 72       	.word	0x7273;	????
  68:	63 2f       	jc	$-312    	;abs 0xffffff30
  6a:	77 69       	addc.b	@r9+,	r7	;
  6c:	72 65       	addc.b	@r5+,	r2	;
  6e:	64 2f       	jc	$-310    	;abs 0xffffff38
  70:	75 61       	addc.b	@r1+,	r5	;
  72:	72 74       	subc.b	@r4+,	r2	;
  74:	2e 63       	addc	#2,	r14	;r3 As==10
  76:	00 55       	add	r5,	r0	;
  78:	41 52       	add.b	r2,	r1	;
  7a:	54 5f 63 72 	add.b	29283(r15),r4	;0x07263
  7e:	69 74       	subc.b	@r4,	r9	;
  80:	53 65       	.word	0x6553;	????
  82:	6e 64       	addc.b	@r4,	r14	;
  84:	00 30       	jn	$+2      	;abs 0x86
  86:	78 30       	jn	$+242    	;abs 0x178
  88:	35 44       	mov	@r4+,	r5	;
  8a:	43 00       	rrcm.a	#1,	r3	;
  8c:	55 43       	mov.b	#1,	r5	;r3 As==01
  8e:	41 30       	jn	$+132    	;abs 0x112
  90:	53 54       	.word	0x5453;	????
  92:	41 54       	add.b	r4,	r1	;
  94:	57 00       	rrcm	#1,	r7	;
  96:	55 43       	mov.b	#1,	r5	;r3 As==01
  98:	41 30       	jn	$+132    	;abs 0x11c
  9a:	49 45       	mov.b	r5,	r9	;
  9c:	00 74       	subc	r4,	r0	;
  9e:	78 42       	mov.b	#8,	r8	;r2 As==11
  a0:	79 74       	subc.b	@r4+,	r9	;
  a2:	65 73       	subc.b	#2,	r5	;r3 As==10
  a4:	52 65 6d 61 	addc.b	24941(r5),r2	;0x0616d
  a8:	69 6e       	addc.b	@r14,	r9	;
  aa:	69 6e       	addc.b	@r14,	r9	;
  ac:	67 00 74 78 	mova	r0,	&489588	; 0x77874
  b0:	42 75       	subc.b	r5,	r2	;
  b2:	66 00 55 41 	mova	r0,	&409941	; 0x64155
  b6:	52 54 5f 72 	add.b	29279(r4),r2	;0x0725f
  ba:	65 63       	addc.b	#2,	r5	;r3 As==10
  bc:	65 69       	addc.b	@r9,	r5	;
  be:	76 65       	addc.b	@r5+,	r6	;
  c0:	00 6c       	addc	r12,	r0	;
  c2:	6f 6e       	addc.b	@r14,	r15	;
  c4:	67 20       	jnz	$+208    	;abs 0x194
  c6:	6c 6f       	addc.b	@r15,	r12	;
  c8:	6e 67       	addc.b	@r7,	r14	;
  ca:	20 69       	addc	@r9,	r0	;
  cc:	6e 74       	subc.b	@r4,	r14	;
  ce:	00 30       	jn	$+2      	;abs 0xd0
  d0:	78 30       	jn	$+242    	;abs 0x1c2
  d2:	32 30       	jn	$+102    	;abs 0x138
  d4:	43 2b       	jnc	$-376    	;abs 0xffffff5c
  d6:	31 00 55 43 	mova	17237(r0),r1	;PC rel. 0x0442d
  da:	41 30       	jn	$+132    	;abs 0x15e
  dc:	49 56       	add.b	r6,	r9	;
  de:	00 2f       	jc	$-510    	;abs 0xfffffee0
  e0:	68 6f       	addc.b	@r15,	r8	;
  e2:	6d 65       	addc.b	@r5,	r13	;
  e4:	2f 72       	subc	#4,	r15	;r2 As==10
  e6:	65 76       	subc.b	@r6,	r5	;
  e8:	69 65       	addc.b	@r5,	r9	;
  ea:	77 65       	addc.b	@r5+,	r7	;
  ec:	72 2f       	jc	$-282    	;abs 0xffffffd2
  ee:	73 72       	.word	0x7273;	????
  f0:	63 2f       	jc	$-312    	;abs 0xffffffb8
  f2:	61 70       	subc.b	@r0,	r1	;
  f4:	70 73       	subc.b	#-1,	r0	;r3 As==11
  f6:	2f 61       	addc	@r1,	r15	;
  f8:	70 70 2d 74 	subc.b	#29741,	r0	;#0x742d
  fc:	65 6d       	addc.b	@r13,	r5	;
  fe:	70 2d       	jc	$+738    	;abs 0x3e0
 100:	6c 6f       	addc.b	@r15,	r12	;
 102:	67 2d       	jc	$+720    	;abs 0x3d2
 104:	61 6c       	addc.b	@r12,	r1	;
 106:	70 61       	addc.b	@r1+,	r0	;
 108:	63 61       	.word	0x6163;	????
 10a:	2d 6e       	addc	@r14,	r13	;
 10c:	65 77       	subc.b	@r7,	r5	;
 10e:	2f 65       	addc	@r5,	r15	;
 110:	78 74       	subc.b	@r4+,	r8	;
 112:	2f 6c       	addc	@r12,	r15	;
 114:	69 62       	addc.b	#4,	r9	;r2 As==10
 116:	77 69       	addc.b	@r9+,	r7	;
 118:	73 70       	.word	0x7073;	????
 11a:	62 61       	addc.b	@r1,	r2	;
 11c:	73 65       	.word	0x6573;	????
 11e:	2f 62       	addc	#4,	r15	;r2 As==10
 120:	6c 64       	addc.b	@r4,	r12	;
 122:	2f 67       	addc	@r7,	r15	;
 124:	63 63       	.word	0x6363;	????
 126:	00 5f       	add	r15,	r0	;
 128:	5f 75 69 6e 	subc.b	28265(r5),r15	;0x06e69
 12c:	74 38       	jl	$+234    	;abs 0x216
 12e:	5f 74 00 30 	subc.b	12288(r4),r15	;0x03000
 132:	78 30       	jn	$+242    	;abs 0x224
 134:	35 43       	mov	#-1,	r5	;r3 As==11
 136:	30 00 55 41 	bra	16725(r0)	;PC rel. 0x0428d
 13a:	52 54 5f 61 	add.b	24927(r4),r2	;0x0615f
 13e:	73 79       	.word	0x7973;	????
 140:	6e 63       	addc.b	#2,	r14	;r3 As==10
 142:	52 65 63 65 	addc.b	25955(r5),r2	;0x06563
 146:	69 76       	subc.b	@r6,	r9	;
 148:	65 00 30 78 	mova	r0,	&358448	; 0x57830
 14c:	30 35       	jge	$+610    	;abs 0x3ae
 14e:	43 36       	jge	$-888    	;abs 0xfffffdd6
 150:	00 74       	subc	r4,	r0	;
 152:	78 50 74 72 	add.b	#29300,	r8	;#0x7274
 156:	00 75       	subc	r5,	r0	;
 158:	6e 73       	subc.b	#2,	r14	;r3 As==10
 15a:	69 67       	addc.b	@r7,	r9	;
 15c:	6e 65       	addc.b	@r5,	r14	;
 15e:	64 20       	jnz	$+202    	;abs 0x228
 160:	63 68       	.word	0x6863;	????
 162:	61 72       	subc.b	#4,	r1	;r2 As==10
 164:	00 55       	add	r5,	r0	;
 166:	43 41       	.word	0x4143;	????
 168:	30 43       	br	#-1		;r3 As==11
 16a:	54 4c 57 30 	mov.b	12375(r12),r4	;0x03057
 16e:	00 6c       	addc	r12,	r0	;
 170:	6f 6e       	addc.b	@r14,	r15	;
 172:	67 20       	jnz	$+208    	;abs 0x242
 174:	6c 6f       	addc.b	@r15,	r12	;
 176:	6e 67       	addc.b	@r7,	r14	;
 178:	20 75       	subc	@r5,	r0	;
 17a:	6e 73       	subc.b	#2,	r14	;r3 As==10
 17c:	69 67       	addc.b	@r7,	r9	;
 17e:	6e 65       	addc.b	@r5,	r14	;
 180:	64 20       	jnz	$+202    	;abs 0x24a
 182:	69 6e       	addc.b	@r14,	r9	;
 184:	74 00 30 78 	mova	r0,	30768(r4); 0x07830
 188:	30 35       	jge	$+610    	;abs 0x3ea
 18a:	43 45       	.word	0x4543;	????
 18c:	00 30       	jn	$+2      	;abs 0x18e
 18e:	78 30       	jn	$+242    	;abs 0x280
 190:	32 30       	jn	$+102    	;abs 0x1f6
 192:	41 2b       	jnc	$-380    	;abs 0x16
 194:	31 00 72 78 	mova	30834(r0),r1	;PC rel. 0x07a08
 198:	42 79       	subc.b	r9,	r2	;
 19a:	74 65       	addc.b	@r5+,	r4	;
 19c:	73 52       	.word	0x5273;	????
 19e:	65 6d       	addc.b	@r13,	r5	;
 1a0:	61 69       	addc.b	@r9,	r1	;
 1a2:	6e 69       	addc.b	@r9,	r14	;
 1a4:	6e 67       	addc.b	@r7,	r14	;
 1a6:	00 73       	sbc	r0		;
 1a8:	68 6f       	addc.b	@r15,	r8	;
 1aa:	72 74       	subc.b	@r4+,	r2	;
 1ac:	20 75       	subc	@r5,	r0	;
 1ae:	6e 73       	subc.b	#2,	r14	;r3 As==10
 1b0:	69 67       	addc.b	@r7,	r9	;
 1b2:	6e 65       	addc.b	@r5,	r14	;
 1b4:	64 20       	jnz	$+202    	;abs 0x27e
 1b6:	69 6e       	addc.b	@r14,	r9	;
 1b8:	74 00 55 41 	mova	r0,	16725(r4); 0x04155
 1bc:	52 54 5f 73 	add.b	29535(r4),r2	;0x0735f
 1c0:	65 6e       	addc.b	@r14,	r5	;
 1c2:	64 00 72 78 	mova	r0,	&292978	; 0x47872
 1c6:	42 75       	subc.b	r5,	r2	;
 1c8:	66 00 55 43 	mova	r0,	&410453	; 0x64355
 1cc:	41 30       	jn	$+132    	;abs 0x250
 1ce:	42 52       	rla.b	r2		;
 1d0:	57 5f 4c 00 	add.b	76(r15),r7	;0x0004c
 1d4:	30 78       	subc	@r8+,	r0	;
 1d6:	30 35       	jge	$+610    	;abs 0x438
 1d8:	43 38       	jl	$+136    	;abs 0x260
 1da:	00 47       	br	r7		;
 1dc:	4e 55       	add.b	r5,	r14	;
 1de:	20 43       	br	#2		;r3 As==10
 1e0:	20 34       	jge	$+66     	;abs 0x222
 1e2:	2e 39       	jl	$+606    	;abs 0x440
 1e4:	2e 31       	jn	$+606    	;abs 0x442
 1e6:	20 32       	jn	$-958    	;abs 0xfffffe28
 1e8:	30 31       	jn	$+610    	;abs 0x44a
 1ea:	34 30       	jn	$+106    	;abs 0x254
 1ec:	37 30       	jn	$+112    	;abs 0x25c
 1ee:	37 20       	jnz	$+112    	;abs 0x25e
 1f0:	28 70       	subc	@r0,	r8	;
 1f2:	72 65       	addc.b	@r5+,	r2	;
 1f4:	72 65       	addc.b	@r5+,	r2	;
 1f6:	6c 65       	addc.b	@r5,	r12	;
 1f8:	61 73       	subc.b	#2,	r1	;r3 As==10
 1fa:	65 20       	jnz	$+204    	;abs 0x2c6
 1fc:	28 6d       	addc	@r13,	r8	;
 1fe:	73 70       	.word	0x7073;	????
 200:	34 33       	jn	$-406    	;abs 0x6a
 202:	30 2d       	jc	$+610    	;abs 0x464
 204:	31 34       	jge	$+100    	;abs 0x268
 206:	72 31       	jn	$+742    	;abs 0x4ec
 208:	2d 33       	jn	$-420    	;abs 0x64
 20a:	36 34       	jge	$+110    	;abs 0x278
 20c:	29 29       	jnc	$+596    	;abs 0x460
 20e:	20 28       	jnc	$+66     	;abs 0x250
 210:	47 4e       	mov.b	r14,	r7	;
 212:	55 50 72 6f 	add.b	0x6f72,	r5	;PC rel. 0x7186
 216:	20 31       	jn	$+578    	;abs 0x458
 218:	34 72       	subc	#8,	r4	;r2 As==11
 21a:	31 29       	jnc	$+612    	;abs 0x47e
 21c:	20 28       	jnc	$+66     	;abs 0x25e
 21e:	42 61       	addc.b	r1,	r2	;
 220:	73 65       	.word	0x6573;	????
 222:	64 20       	jnz	$+202    	;abs 0x2ec
 224:	6f 6e       	addc.b	@r14,	r15	;
 226:	3a 20       	jnz	$+118    	;abs 0x29c
 228:	47 43       	clr.b	r7		;
 22a:	43 20       	jnz	$+136    	;abs 0x2b2
 22c:	34 2e       	jc	$-918    	;abs 0xfffffe96
 22e:	38 20       	jnz	$+114    	;abs 0x2a0
 230:	47 44       	mov.b	r4,	r7	;
 232:	42 20       	jnz	$+134    	;abs 0x2b8
 234:	37 2e       	jc	$-912    	;abs 0xfffffea4
 236:	37 20       	jnz	$+112    	;abs 0x2a6
 238:	42 69       	addc.b	r9,	r2	;
 23a:	6e 75       	subc.b	@r5,	r14	;
 23c:	74 69       	addc.b	@r9+,	r4	;
 23e:	6c 73       	subc.b	#2,	r12	;r3 As==10
 240:	20 32       	jn	$-958    	;abs 0xfffffe82
 242:	2e 32       	jn	$-930    	;abs 0xfffffea0
 244:	34 20       	jnz	$+106    	;abs 0x2ae
 246:	4e 65       	addc.b	r5,	r14	;
 248:	77 6c       	addc.b	@r12+,	r7	;
 24a:	69 62       	addc.b	#4,	r9	;r2 As==10
 24c:	20 32       	jn	$-958    	;abs 0xfffffe8e
 24e:	2e 31       	jn	$+606    	;abs 0x4ac
 250:	29 20       	jnz	$+84     	;abs 0x2a4
 252:	2d 6d       	addc	@r13,	r13	;
 254:	6d 63       	addc.b	#2,	r13	;r3 As==10
 256:	75 3d       	jmp	$+748    	;abs 0x542
 258:	6d 73       	subc.b	#2,	r13	;r3 As==10
 25a:	70 34       	jge	$+226    	;abs 0x33c
 25c:	33 30       	jn	$+104    	;abs 0x2c4
 25e:	66 72       	subc.b	#4,	r6	;r2 As==10
 260:	35 39       	jl	$+620    	;abs 0x4cc
 262:	36 39       	jl	$+622    	;abs 0x4d0
 264:	20 2d       	jc	$+578    	;abs 0x4a6
 266:	67 20       	jnz	$+208    	;abs 0x336
 268:	2d 4f       	mov	@r15,	r13	;
 26a:	31 20       	jnz	$+100    	;abs 0x2ce
 26c:	2d 73       	subc	#2,	r13	;r3 As==10
 26e:	74 64       	addc.b	@r4+,	r4	;
 270:	3d 63       	addc	#-1,	r13	;r3 As==11
 272:	39 39       	jl	$+628    	;abs 0x4e6
 274:	20 2d       	jc	$+578    	;abs 0x4b6
 276:	66 6e       	addc.b	@r14,	r6	;
 278:	6f 2d       	jc	$+736    	;abs 0x558
 27a:	62 75       	subc.b	@r5,	r2	;
 27c:	69 6c       	addc.b	@r12,	r9	;
 27e:	74 69       	addc.b	@r9+,	r4	;
 280:	6e 00 30 78 	mova	r0,	&948272	; 0xe7830
 284:	30 35       	jge	$+610    	;abs 0x4e6
 286:	43 41       	.word	0x4143;	????
 288:	00 55       	add	r5,	r0	;
 28a:	41 52       	add.b	r2,	r1	;
 28c:	54 5f 69 6e 	add.b	28265(r15),r4	;0x06e69
 290:	69 74       	subc.b	@r4,	r9	;
 292:	00 30       	jn	$+2      	;abs 0x294
 294:	78 30       	jn	$+242    	;abs 0x386
 296:	35 43       	mov	#-1,	r5	;r3 As==11
 298:	43 00       	rrcm.a	#1,	r3	;
 29a:	55 43       	mov.b	#1,	r5	;r3 As==01
 29c:	41 30       	jn	$+132    	;abs 0x320
 29e:	54 58 42 55 	add.b	21826(r8),r4	;0x05542
 2a2:	46 00       	rrcm.a	#1,	r6	;
 2a4:	50 41 53 45 	br	17747(r1)		;
 2a8:	4c 31       	jn	$+666    	;abs 0x542
 2aa:	5f 48 00 72 	mov.b	29184(r8),r15	;0x07200
 2ae:	78 50 74 72 	add.b	#29300,	r8	;#0x7274
 2b2:	00 30       	jn	$+2      	;abs 0x2b4
 2b4:	78 30       	jn	$+242    	;abs 0x3a6
 2b6:	35 44       	mov	@r4+,	r5	;
 2b8:	41 00       	rrcm.a	#1,	r1	;
 2ba:	73 69       	.word	0x6973;	????
 2bc:	7a 65       	addc.b	@r5+,	r10	;
 2be:	00 30       	jn	$+2      	;abs 0x2c0
 2c0:	78 30       	jn	$+242    	;abs 0x3b2
 2c2:	35 44       	mov	@r4+,	r5	;
 2c4:	45 00       	rrcm.a	#1,	r5	;
 2c6:	30 78       	subc	@r8+,	r0	;
 2c8:	30 35       	jge	$+610    	;abs 0x52a
 2ca:	43 36       	jge	$-888    	;abs 0xffffff52
 2cc:	2b 31       	jn	$+600    	;abs 0x524
 2ce:	00 55       	add	r5,	r0	;
 2d0:	43 41       	.word	0x4143;	????
 2d2:	30 52       	add	#8,	r0	;r2 As==11
 2d4:	58 42 55 46 	mov.b	&0x4655,r8	;0x4655
 2d8:	00 55       	add	r5,	r0	;
 2da:	41 52       	add.b	r2,	r1	;
 2dc:	54 5f 69 73 	add.b	29545(r15),r4	;0x07369
 2e0:	52 78 44 6f 	subc.b	28484(r8),r2	;0x06f44
 2e4:	6e 65       	addc.b	@r5,	r14	;
 2e6:	00 55       	add	r5,	r0	;
 2e8:	53 43       	.word	0x4353;	????
 2ea:	49 5f       	add.b	r15,	r9	;
 2ec:	41 30       	jn	$+132    	;abs 0x370
 2ee:	5f 49 53 52 	mov.b	21075(r9),r15	;0x05253
 2f2:	00 55       	add	r5,	r0	;
 2f4:	41 52       	add.b	r2,	r1	;
 2f6:	54 5f 63 72 	add.b	29283(r15),r4	;0x07263
 2fa:	69 74       	subc.b	@r4,	r9	;
 2fc:	52 65 63 65 	addc.b	25955(r5),r2	;0x06563
 300:	69 76       	subc.b	@r6,	r9	;
 302:	65 00 55 43 	mova	r0,	&344917	; 0x54355
 306:	41 30       	jn	$+132    	;abs 0x38a
 308:	42 52       	rla.b	r2		;
 30a:	57 5f 48 00 	add.b	72(r15),r7	;0x00048
 30e:	55 43       	mov.b	#1,	r5	;r3 As==01
 310:	41 30       	jn	$+132    	;abs 0x394
 312:	4d 43       	clr.b	r13		;
 314:	54 4c 57 00 	mov.b	87(r12),r4	;0x00057
 318:	55 43       	mov.b	#1,	r5	;r3 As==01
 31a:	41 30       	jn	$+132    	;abs 0x39e
 31c:	49 46       	mov.b	r6,	r9	;
 31e:	47 00       	rrcm.a	#1,	r7	;
 320:	50 41 53 45 	br	17747(r1)		;
 324:	4c 30       	jn	$+154    	;abs 0x3be
 326:	5f 48 00 6d 	mov.b	27904(r8),r15	;0x06d00
 32a:	65 6d       	addc.b	@r13,	r5	;
 32c:	6d 6f       	addc.b	@r15,	r13	;
 32e:	76 65       	addc.b	@r5+,	r6	;
 330:	00 73       	sbc	r0		;
 332:	69 7a       	subc.b	@r10,	r9	;
 334:	65 5f       	add.b	@r15,	r5	;
 336:	74 00 6c 65 	mova	r0,	25964(r4); 0x0656c
 33a:	6e 67       	addc.b	@r7,	r14	;
 33c:	74 68       	addc.b	@r8+,	r4	;
 33e:	00 64       	addc	r4,	r0	;
 340:	73 74       	.word	0x7473;	????
 342:	5f 76 6f 69 	subc.b	26991(r6),r15	;0x0696f
 346:	64 00 73 72 	mova	r0,	&291443	; 0x47273
 34a:	63 5f       	.word	0x5f63;	????
 34c:	76 6f       	addc.b	@r15+,	r6	;
 34e:	69 64       	addc.b	@r4,	r9	;
 350:	00 2f       	jc	$-510    	;abs 0x152
 352:	6f 70       	subc.b	@r0,	r15	;
 354:	74 2f       	jc	$-278    	;abs 0x23e
 356:	72 65       	addc.b	@r5+,	r2	;
 358:	64 68       	addc.b	@r8,	r4	;
 35a:	61 74       	subc.b	@r4,	r1	;
 35c:	2f 6d       	addc	@r13,	r15	;
 35e:	73 70       	.word	0x7073;	????
 360:	34 33       	jn	$-406    	;abs 0x1ca
 362:	30 2d       	jc	$+610    	;abs 0x5c4
 364:	31 34       	jge	$+100    	;abs 0x3c8
 366:	72 31       	jn	$+742    	;abs 0x64c
 368:	2d 33       	jn	$-420    	;abs 0x1c4
 36a:	36 34       	jge	$+110    	;abs 0x3d8
 36c:	2f 73       	subc	#2,	r15	;r3 As==10
 36e:	6f 75       	subc.b	@r5,	r15	;
 370:	72 63       	addc.b	#-1,	r2	;r3 As==11
 372:	65 73       	subc.b	#2,	r5	;r3 As==10
 374:	2f 74       	subc	@r4,	r15	;
 376:	6f 6f       	addc.b	@r15,	r15	;
 378:	6c 73       	subc.b	#2,	r12	;r3 As==10
 37a:	2f 6e       	addc	@r14,	r15	;
 37c:	65 77       	subc.b	@r7,	r5	;
 37e:	6c 69       	addc.b	@r9,	r12	;
 380:	62 2f       	jc	$-314    	;abs 0x246
 382:	6c 69       	addc.b	@r9,	r12	;
 384:	62 63       	addc.b	#2,	r2	;r3 As==10
 386:	2f 73       	subc	#2,	r15	;r3 As==10
 388:	74 72       	subc.b	#8,	r4	;r2 As==11
 38a:	69 6e       	addc.b	@r14,	r9	;
 38c:	67 2f       	jc	$-304    	;abs 0x25c
 38e:	6d 65       	addc.b	@r5,	r13	;
 390:	6d 6d       	addc.b	@r13,	r13	;
 392:	6f 76       	subc.b	@r6,	r15	;
 394:	65 2e       	jc	$-820    	;abs 0x60
 396:	63 00 47 4e 	mova	r0,	&216647	; 0x34e47
 39a:	55 20       	jnz	$+172    	;abs 0x446
 39c:	43 20       	jnz	$+136    	;abs 0x424
 39e:	34 2e       	jc	$-918    	;abs 0x8
 3a0:	39 2e       	jc	$-908    	;abs 0x14
 3a2:	31 20       	jnz	$+100    	;abs 0x406
 3a4:	32 30       	jn	$+102    	;abs 0x40a
 3a6:	31 34       	jge	$+100    	;abs 0x40a
 3a8:	30 37       	jge	$-414    	;abs 0x20a
 3aa:	30 37       	jge	$-414    	;abs 0x20c
 3ac:	20 28       	jnc	$+66     	;abs 0x3ee
 3ae:	70 72       	subc.b	#8,	r0	;r2 As==11
 3b0:	65 72       	subc.b	#4,	r5	;r2 As==10
 3b2:	65 6c       	addc.b	@r12,	r5	;
 3b4:	65 61       	addc.b	@r1,	r5	;
 3b6:	73 65       	.word	0x6573;	????
 3b8:	20 28       	jnc	$+66     	;abs 0x3fa
 3ba:	6d 73       	subc.b	#2,	r13	;r3 As==10
 3bc:	70 34       	jge	$+226    	;abs 0x49e
 3be:	33 30       	jn	$+104    	;abs 0x426
 3c0:	2d 31       	jn	$+604    	;abs 0x61c
 3c2:	34 72       	subc	#8,	r4	;r2 As==11
 3c4:	31 2d       	jc	$+612    	;abs 0x628
 3c6:	33 36       	jge	$-920    	;abs 0x2e
 3c8:	34 29       	jnc	$+618    	;abs 0x632
 3ca:	29 20       	jnz	$+84     	;abs 0x41e
 3cc:	28 47       	mov	@r7,	r8	;
 3ce:	4e 55       	add.b	r5,	r14	;
 3d0:	50 72 6f 20 	subc.b	&0x206f,r0	;0x206f
 3d4:	31 34       	jge	$+100    	;abs 0x438
 3d6:	72 31       	jn	$+742    	;abs 0x6bc
 3d8:	29 20       	jnz	$+84     	;abs 0x42c
 3da:	28 42       	mov	#4,	r8	;r2 As==10
 3dc:	61 73       	subc.b	#2,	r1	;r3 As==10
 3de:	65 64       	addc.b	@r4,	r5	;
 3e0:	20 6f       	addc	@r15,	r0	;
 3e2:	6e 3a       	jl	$-802    	;abs 0xc0
 3e4:	20 47       	br	@r7		;
 3e6:	43 43       	clr.b	r3		;
 3e8:	20 34       	jge	$+66     	;abs 0x42a
 3ea:	2e 38       	jl	$+94     	;abs 0x448
 3ec:	20 47       	br	@r7		;
 3ee:	44 42       	mov.b	r2,	r4	;
 3f0:	20 37       	jge	$-446    	;abs 0x232
 3f2:	2e 37       	jge	$-418    	;abs 0x250
 3f4:	20 42       	br	#4		;r2 As==10
 3f6:	69 6e       	addc.b	@r14,	r9	;
 3f8:	75 74       	subc.b	@r4+,	r5	;
 3fa:	69 6c       	addc.b	@r12,	r9	;
 3fc:	73 20       	jnz	$+232    	;abs 0x4e4
 3fe:	32 2e       	jc	$-922    	;abs 0x64
 400:	32 34       	jge	$+102    	;abs 0x466
 402:	20 4e       	br	@r14		;
 404:	65 77       	subc.b	@r7,	r5	;
 406:	6c 69       	addc.b	@r9,	r12	;
 408:	62 20       	jnz	$+198    	;abs 0x4ce
 40a:	32 2e       	jc	$-922    	;abs 0x70
 40c:	31 29       	jnc	$+612    	;abs 0x670
 40e:	20 2d       	jc	$+578    	;abs 0x650
 410:	6d 4f       	mov.b	@r15,	r13	;
 412:	73 20       	jnz	$+232    	;abs 0x4fa
 414:	2d 67       	addc	@r7,	r13	;
 416:	20 2d       	jc	$+578    	;abs 0x658
 418:	4f 73       	sbc.b	r15		;
 41a:	20 2d       	jc	$+578    	;abs 0x65c
 41c:	4f 32       	jn	$-864    	;abs 0xbc
 41e:	20 2d       	jc	$+578    	;abs 0x660
 420:	66 66       	addc.b	@r6,	r6	;
 422:	75 6e       	addc.b	@r14+,	r5	;
 424:	63 74       	.word	0x7463;	????
 426:	69 6f       	addc.b	@r15,	r9	;
 428:	6e 2d       	jc	$+734    	;abs 0x706
 42a:	73 65       	.word	0x6573;	????
 42c:	63 74       	.word	0x7463;	????
 42e:	69 6f       	addc.b	@r15,	r9	;
 430:	6e 73       	subc.b	#2,	r14	;r3 As==10
 432:	20 2d       	jc	$+578    	;abs 0x674
 434:	66 64       	addc.b	@r4,	r6	;
 436:	61 74       	subc.b	@r4,	r1	;
 438:	61 2d       	jc	$+708    	;abs 0x6fc
 43a:	73 65       	.word	0x6573;	????
 43c:	63 74       	.word	0x7463;	????
 43e:	69 6f       	addc.b	@r15,	r9	;
 440:	6e 73       	subc.b	#2,	r14	;r3 As==10
 442:	20 2d       	jc	$+578    	;abs 0x684
 444:	66 6e       	addc.b	@r14,	r6	;
 446:	6f 2d       	jc	$+736    	;abs 0x726
 448:	62 75       	subc.b	@r5,	r2	;
 44a:	69 6c       	addc.b	@r12,	r9	;
 44c:	74 69       	addc.b	@r9+,	r4	;
 44e:	6e 00 73 69 	mova	r0,	&944499	; 0xe6973
 452:	7a 65       	addc.b	@r5+,	r10	;
 454:	74 79       	subc.b	@r9+,	r4	;
 456:	70 65       	addc.b	@r5+,	r0	;
 458:	00 2f       	jc	$-510    	;abs 0x25a
 45a:	6f 70       	subc.b	@r0,	r15	;
 45c:	74 2f       	jc	$-278    	;abs 0x346
 45e:	72 65       	addc.b	@r5+,	r2	;
 460:	64 68       	addc.b	@r8,	r4	;
 462:	61 74       	subc.b	@r4,	r1	;
 464:	2f 6d       	addc	@r13,	r15	;
 466:	73 70       	.word	0x7073;	????
 468:	34 33       	jn	$-406    	;abs 0x2d2
 46a:	30 2d       	jc	$+610    	;abs 0x6cc
 46c:	31 34       	jge	$+100    	;abs 0x4d0
 46e:	72 31       	jn	$+742    	;abs 0x754
 470:	2d 33       	jn	$-420    	;abs 0x2cc
 472:	36 34       	jge	$+110    	;abs 0x4e0
 474:	2f 73       	subc	#2,	r15	;r3 As==10
 476:	6f 75       	subc.b	@r5,	r15	;
 478:	72 63       	addc.b	#-1,	r2	;r3 As==11
 47a:	65 73       	subc.b	#2,	r5	;r3 As==10
 47c:	2f 74       	subc	@r4,	r15	;
 47e:	6f 6f       	addc.b	@r15,	r15	;
 480:	6c 73       	subc.b	#2,	r12	;r3 As==10
 482:	2f 6e       	addc	@r14,	r15	;
 484:	65 77       	subc.b	@r7,	r5	;
 486:	6c 69       	addc.b	@r9,	r12	;
 488:	62 2f       	jc	$-314    	;abs 0x34e
 48a:	6c 69       	addc.b	@r9,	r12	;
 48c:	62 63       	addc.b	#2,	r2	;r3 As==10
 48e:	2f 73       	subc	#2,	r15	;r3 As==10
 490:	74 72       	subc.b	#8,	r4	;r2 As==11
 492:	69 6e       	addc.b	@r14,	r9	;
 494:	67 2f       	jc	$-304    	;abs 0x364
 496:	6d 65       	addc.b	@r5,	r13	;
 498:	6d 73       	subc.b	#2,	r13	;r3 As==10
 49a:	65 74       	subc.b	@r4,	r5	;
 49c:	2e 63       	addc	#2,	r14	;r3 As==10
 49e:	00 6d       	addc	r13,	r0	;
 4a0:	65 6d       	addc.b	@r13,	r5	;
 4a2:	73 65       	.word	0x6573;	????
 4a4:	74 00 30 2d 	Address 0x000004a6 is out of bounds.
mova	r0,	-1(r4)	; 0xffffffff

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
   0:	8c 00 00 00 	mova	#0,	r12	;
   4:	8f 00 00 00 	mova	#0,	r15	;
   8:	01 00       	mova	@r0,	r1	;
   a:	5c 8f 00 00 	sub.b	0(r15),	r12	;
   e:	00 9c       	cmp	r12,	r0	;
  10:	00 00       	beq			
  12:	00 04       	bra	@r4		;
  14:	00 f3       	and	#0,	r0	;r3 As==00
  16:	01 5c       	add	r12,	r1	;
  18:	9f 00 00 00 	cmpa	#0,	r15	;
  1c:	00 00       	beq			
  1e:	00 00       	beq			
  20:	00 8c       	sub	r12,	r0	;
  22:	00 00       	beq			
  24:	00 8f       	sub	r15,	r0	;
  26:	00 00       	beq			
  28:	00 01       	bra	@r1		;
  2a:	00 5d       	add	r13,	r0	;
  2c:	8f 00 00 00 	mova	#0,	r15	;
  30:	9c 00 00 00 	cmpa	#0,	r12	;
  34:	04 00       	mova	@r0,	r4	;
  36:	f3 01       	suba	r1,	r3	;
  38:	5d 9f 00 00 	cmp.b	0(r15),	r13	;
  3c:	00 00       	beq			
  3e:	00 00       	beq			
  40:	00 00       	beq			
  42:	9c 00 00 00 	cmpa	#0,	r12	;
  46:	be 00 00 00 	suba	#0,	r14	;
  4a:	01 00       	mova	@r0,	r1	;
  4c:	5c be 00 00 	bit.b	0(r14),	r12	;
  50:	00 02       	bra	@r2		;
  52:	01 00       	mova	@r0,	r1	;
  54:	00 04       	bra	@r4		;
  56:	00 f3       	and	#0,	r0	;r3 As==00
  58:	01 5c       	add	r12,	r1	;
  5a:	9f 00 00 00 	cmpa	#0,	r15	;
  5e:	00 00       	beq			
  60:	00 00       	beq			
  62:	00 9c       	cmp	r12,	r0	;
  64:	00 00       	beq			
  66:	00 c0       	bic	r0,	r0	;
  68:	00 00       	beq			
  6a:	00 01       	bra	@r1		;
  6c:	00 5d       	add	r13,	r0	;
  6e:	c0 00       	mova	r0,	r0	;
  70:	00 00       	beq			
  72:	c6 00       	mova	r0,	r6	;
  74:	00 00       	beq			
  76:	05 00       	mova	@r0,	r5	;
  78:	03 26       	jz	$-1016   	;abs 0xfffffc80
  7a:	1c 00       	mova	@r0+,	r12	;
  7c:	00 c6       	bic	r6,	r0	;
  7e:	00 00       	beq			
  80:	00 02       	bra	@r2		;
  82:	01 00       	mova	@r0,	r1	;
  84:	00 04       	bra	@r4		;
  86:	00 f3       	and	#0,	r0	;r3 As==00
  88:	01 5d       	add	r13,	r1	;
  8a:	9f 00 00 00 	cmpa	#0,	r15	;
  8e:	00 00       	beq			
  90:	00 00       	beq			
  92:	00 2e       	.word	0x2e00;	????
  94:	01 00       	mova	@r0,	r1	;
  96:	00 31       	jn	$+514    	;abs 0x298
  98:	01 00       	mova	@r0,	r1	;
  9a:	00 01       	bra	@r1		;
  9c:	00 5c       	add	r12,	r0	;
  9e:	31 01 00 00 	mova	0(r1),	r1	;
  a2:	40 01       	rram.a	#1,	r0	;
  a4:	00 00       	beq			
  a6:	04 00       	mova	@r0,	r4	;
  a8:	f3 01       	suba	r1,	r3	;
  aa:	5c 9f 00 00 	cmp.b	0(r15),	r12	;
  ae:	00 00       	beq			
  b0:	00 00       	beq			
  b2:	00 00       	beq			
  b4:	2e 01 00 00 	mova	&65536,	r14	;0x10000
  b8:	31 01 00 00 	mova	0(r1),	r1	;
  bc:	01 00       	mova	@r0,	r1	;
  be:	5d 31       	jn	$+700    	;abs 0x37a
  c0:	01 00       	mova	@r0,	r1	;
  c2:	00 40       	br	r0		;
  c4:	01 00       	mova	@r0,	r1	;
  c6:	00 04       	bra	@r4		;
  c8:	00 f3       	and	#0,	r0	;r3 As==00
  ca:	01 5d       	add	r13,	r1	;
  cc:	9f 00 00 00 	cmpa	#0,	r15	;
  d0:	00 00       	beq			
  d2:	00 00       	beq			
  d4:	00 40       	br	r0		;
  d6:	01 00       	mova	@r0,	r1	;
  d8:	00 64       	addc	r4,	r0	;
  da:	01 00       	mova	@r0,	r1	;
  dc:	00 01       	bra	@r1		;
  de:	00 5c       	add	r12,	r0	;
  e0:	64 01 00 00 	mova	r1,	&262144	; 0x40000
  e4:	a6 01 00 00 	adda	#65536,	r6	;0x10000
  e8:	04 00       	mova	@r0,	r4	;
  ea:	f3 01       	suba	r1,	r3	;
  ec:	5c 9f 00 00 	cmp.b	0(r15),	r12	;
  f0:	00 00       	beq			
  f2:	00 00       	beq			
  f4:	00 00       	beq			
  f6:	40 01       	rram.a	#1,	r0	;
  f8:	00 00       	beq			
  fa:	66 01 00 00 	mova	r1,	&393216	; 0x60000
  fe:	01 00       	mova	@r0,	r1	;
 100:	5d 66 01 00 	addc.b	1(r6),	r13	;
 104:	00 6c       	addc	r12,	r0	;
 106:	01 00       	mova	@r0,	r1	;
 108:	00 05       	bra	@r5		;
 10a:	00 03       	bra	@r3		;
 10c:	2c 1c 00 00 	rpt #13 { beqx			
 110:	6c 01 00 00 	mova	r1,	&786432	; 0xc0000
 114:	a6 01 00 00 	adda	#65536,	r6	;0x10000
 118:	04 00       	mova	@r0,	r4	;
 11a:	f3 01       	suba	r1,	r3	;
 11c:	5d 9f 00 00 	cmp.b	0(r15),	r13	;
 120:	00 00       	beq			
 122:	00 00       	beq			
 124:	00 00       	beq			
 126:	80 01 00 00 	mova	#65536,	r0	;0x10000
 12a:	96 01 00 00 	cmpa	#65536,	r6	;0x10000
 12e:	01 00       	mova	@r0,	r1	;
 130:	5e 00       	rrcm	#1,	r14	;
 132:	00 00       	beq			
 134:	00 00       	beq			
 136:	00 00       	beq			
 138:	00 e2       	xor	r2,	r0	;
 13a:	01 00       	mova	@r0,	r1	;
 13c:	00 f2       	and	r2,	r0	;
 13e:	01 00       	mova	@r0,	r1	;
 140:	00 01       	bra	@r1		;
 142:	00 5e       	add	r14,	r0	;
	...
 14c:	04 6e       	addc	r14,	r4	;
 14e:	00 00       	beq			
 150:	14 6e 00 00 	addc	0(r14),	r4	;
 154:	01 00       	mova	@r0,	r1	;
 156:	5d 14       	pushm.a	#6,	r13	;20-bit words
 158:	6e 00 00 2a 	mova	r0,	&928256	; 0xe2a00
 15c:	6e 00 00 04 	mova	r0,	&918528	; 0xe0400
 160:	00 f3       	and	#0,	r0	;r3 As==00
 162:	01 5d       	add	r13,	r1	;
 164:	9f 2a       	jnc	$-704    	;abs 0xfffffea4
 166:	6e 00 00 40 	mova	r0,	&933888	; 0xe4000
 16a:	6e 00 00 01 	mova	r0,	&917760	; 0xe0100
 16e:	00 5d       	add	r13,	r0	;
 170:	40 6e       	addc.b	r14,	r0	;
 172:	00 00       	beq			
 174:	44 6e       	addc.b	r14,	r4	;
 176:	00 00       	beq			
 178:	04 00       	mova	@r0,	r4	;
 17a:	f3 01       	suba	r1,	r3	;
 17c:	5d 9f 00 00 	cmp.b	0(r15),	r13	;
 180:	00 00       	beq			
 182:	00 00       	beq			
 184:	00 00       	beq			
 186:	04 6e       	addc	r14,	r4	;
 188:	00 00       	beq			
 18a:	14 6e 00 00 	addc	0(r14),	r4	;
 18e:	01 00       	mova	@r0,	r1	;
 190:	5e 14       	pushm.a	#6,	r14	;20-bit words
 192:	6e 00 00 2a 	mova	r0,	&928256	; 0xe2a00
 196:	6e 00 00 01 	mova	r0,	&917760	; 0xe0100
 19a:	00 5d       	add	r13,	r0	;
 19c:	2a 6e       	addc	@r14,	r10	;
 19e:	00 00       	beq			
 1a0:	2c 6e       	addc	@r14,	r12	;
 1a2:	00 00       	beq			
 1a4:	01 00       	mova	@r0,	r1	;
 1a6:	5e 2c       	jc	$+190    	;abs 0x264
 1a8:	6e 00 00 3e 	mova	r0,	&933376	; 0xe3e00
 1ac:	6e 00 00 07 	mova	r0,	&919296	; 0xe0700
 1b0:	00 7f       	subc	r15,	r0	;
 1b2:	00 20       	jnz	$+2      	;abs 0x1b4
 1b4:	7e 00 22 9f 	mova	r0,	-24798(r14); 0xffff9f22
 1b8:	3e 6e       	addc	@r14+,	r14	;
 1ba:	00 00       	beq			
 1bc:	40 6e       	addc.b	r14,	r0	;
 1be:	00 00       	beq			
 1c0:	06 00       	mova	@r0,	r6	;
 1c2:	7e 00 7f 00 	mova	r0,	127(r14); 0x0007f
 1c6:	1c 9f 00 00 	cmp	0(r15),	r12	;
 1ca:	00 00       	beq			
 1cc:	00 00       	beq			
 1ce:	00 00       	beq			
 1d0:	06 6e       	addc	r14,	r6	;
 1d2:	00 00       	beq			
 1d4:	12 6e 00 00 	addc	0(r14),	r2	;
 1d8:	01 00       	mova	@r0,	r1	;
 1da:	5c 12 6e 00 	push.b	110(r12)	;0006e
 1de:	00 14       	pushm.a	#1,	r0	;20-bit words
 1e0:	6e 00 00 06 	mova	r0,	&919040	; 0xe0600
 1e4:	00 7c       	subc	r12,	r0	;
 1e6:	00 7e       	subc	r14,	r0	;
 1e8:	00 22       	.word	0x2200;	????
 1ea:	9f 14       	pushm.a	#10,	r15	;20-bit words
 1ec:	6e 00 00 16 	mova	r0,	&923136	; 0xe1600
 1f0:	6e 00 00 06 	mova	r0,	&919040	; 0xe0600
 1f4:	00 7c       	subc	r12,	r0	;
 1f6:	00 7d       	subc	r13,	r0	;
 1f8:	00 22       	.word	0x2200;	????
 1fa:	9f 16       	popm.a	#10,	r24	;20-bit words
 1fc:	6e 00 00 1a 	mova	r0,	&924160	; 0xe1a00
 200:	6e 00 00 08 	mova	r0,	&919552	; 0xe0800
 204:	00 7c       	subc	r12,	r0	;
 206:	00 7d       	subc	r13,	r0	;
 208:	00 22       	.word	0x2200;	????
 20a:	23 01 9f 1a 	mova	&72351,	r3	;0x11a9f
 20e:	6e 00 00 2a 	mova	r0,	&928256	; 0xe2a00
 212:	6e 00 00 06 	mova	r0,	&919040	; 0xe0600
 216:	00 7c       	subc	r12,	r0	;
 218:	00 7d       	subc	r13,	r0	;
 21a:	00 22       	.word	0x2200;	????
 21c:	9f 2a       	jnc	$-704    	;abs 0xffffff5c
 21e:	6e 00 00 2c 	mova	r0,	&928768	; 0xe2c00
 222:	6e 00 00 01 	mova	r0,	&917760	; 0xe0100
 226:	00 5c       	add	r12,	r0	;
 228:	2c 6e       	addc	@r14,	r12	;
 22a:	00 00       	beq			
 22c:	30 6e       	addc	@r14+,	r0	;
 22e:	00 00       	beq			
 230:	06 00       	mova	@r0,	r6	;
 232:	7c 00 7f 00 	mova	r0,	127(r12); 0x0007f
 236:	22 9f       	cmp	@r15,	r2	;
 238:	30 6e       	addc	@r14+,	r0	;
 23a:	00 00       	beq			
 23c:	3e 6e       	addc	@r14+,	r14	;
 23e:	00 00       	beq			
 240:	08 00       	mova	@r0,	r8	;
 242:	7c 00 7f 00 	mova	r0,	127(r12); 0x0007f
 246:	22 23       	jnz	$-442    	;abs 0x8c
 248:	01 9f       	cmp	r15,	r1	;
 24a:	3e 6e       	addc	@r14+,	r14	;
 24c:	00 00       	beq			
 24e:	40 6e       	addc.b	r14,	r0	;
 250:	00 00       	beq			
 252:	06 00       	mova	@r0,	r6	;
 254:	7c 00 7f 00 	mova	r0,	127(r12); 0x0007f
 258:	22 9f       	cmp	@r15,	r2	;
	...
 262:	06 6e       	addc	r14,	r6	;
 264:	00 00       	beq			
 266:	12 6e 00 00 	addc	0(r14),	r2	;
 26a:	01 00       	mova	@r0,	r1	;
 26c:	5d 12 6e 00 	push.b	110(r13)	;0006e
 270:	00 14       	pushm.a	#1,	r0	;20-bit words
 272:	6e 00 00 01 	mova	r0,	&917760	; 0xe0100
 276:	00 5b       	add	r11,	r0	;
 278:	14 6e 00 00 	addc	0(r14),	r4	;
 27c:	16 6e 00 00 	addc	0(r14),	r6	;
 280:	09 00       	mova	@r0,	r9	;
 282:	7b 00 7d 00 	mova	r0,	125(r11); 0x0007d
 286:	22 7e       	subc	@r14,	r2	;
 288:	00 1c 9f 16 	popmx.a	#10,	r24	;20-bit words
 28c:	6e 00 00 1a 	mova	r0,	&924160	; 0xe1a00
 290:	6e 00 00 0b 	mova	r0,	&920320	; 0xe0b00
 294:	00 7b       	subc	r11,	r0	;
 296:	00 7d       	subc	r13,	r0	;
 298:	00 22       	.word	0x2200;	????
 29a:	7e 00 1c 23 	mova	r0,	8988(r14); 0x0231c
 29e:	01 9f       	cmp	r15,	r1	;
 2a0:	1a 6e 00 00 	addc	0(r14),	r10	;
 2a4:	2a 6e       	addc	@r14,	r10	;
 2a6:	00 00       	beq			
 2a8:	09 00       	mova	@r0,	r9	;
 2aa:	7b 00 7d 00 	mova	r0,	125(r11); 0x0007d
 2ae:	22 7e       	subc	@r14,	r2	;
 2b0:	00 1c 9f 2a 	jncx.?	$-704    	;abs 0xfffffff2, Reserved use of A/L and B/W bits detected
 2b4:	6e 00 00 2c 	mova	r0,	&928768	; 0xe2c00
 2b8:	6e 00 00 01 	mova	r0,	&917760	; 0xe0100
 2bc:	00 5d       	add	r13,	r0	;
 2be:	2c 6e       	addc	@r14,	r12	;
 2c0:	00 00       	beq			
 2c2:	30 6e       	addc	@r14+,	r0	;
 2c4:	00 00       	beq			
 2c6:	06 00       	mova	@r0,	r6	;
 2c8:	7d 00 7f 00 	mova	r0,	127(r13); 0x0007f
 2cc:	22 9f       	cmp	@r15,	r2	;
 2ce:	30 6e       	addc	@r14+,	r0	;
 2d0:	00 00       	beq			
 2d2:	3e 6e       	addc	@r14+,	r14	;
 2d4:	00 00       	beq			
 2d6:	08 00       	mova	@r0,	r8	;
 2d8:	7d 00 7f 00 	mova	r0,	127(r13); 0x0007f
 2dc:	22 23       	jnz	$-442    	;abs 0x122
 2de:	01 9f       	cmp	r15,	r1	;
 2e0:	3e 6e       	addc	@r14+,	r14	;
 2e2:	00 00       	beq			
 2e4:	40 6e       	addc.b	r14,	r0	;
 2e6:	00 00       	beq			
 2e8:	06 00       	mova	@r0,	r6	;
 2ea:	7d 00 7f 00 	mova	r0,	127(r13); 0x0007f
 2ee:	22 9f       	cmp	@r15,	r2	;
	...
 2f8:	44 6e       	addc.b	r14,	r4	;
 2fa:	00 00       	beq			
 2fc:	48 6e       	addc.b	r14,	r8	;
 2fe:	00 00       	beq			
 300:	01 00       	mova	@r0,	r1	;
 302:	5e 48 6e 00 	mov.b	110(r8),r14	;0x0006e
 306:	00 52       	add	r2,	r0	;
 308:	6e 00 00 0b 	mova	r0,	&920320	; 0xe0b00
 30c:	00 7f       	subc	r15,	r0	;
 30e:	00 20       	jnz	$+2      	;abs 0x310
 310:	f3 01       	suba	r1,	r3	;
 312:	5e 22       	jnz	$-834    	;abs 0xffffffd0
 314:	7c 00 22 9f 	mova	r0,	-24798(r12); 0xffff9f22
 318:	52 6e 00 00 	addc.b	0(r14),	r2	;
 31c:	54 6e 00 00 	addc.b	0(r14),	r4	;
 320:	0a 00       	mova	@r0,	r10	;
 322:	7c 00 7f 00 	mova	r0,	127(r12); 0x0007f
 326:	1c f3       	and	#1,	r12	;r3 As==01
 328:	01 5e       	add	r14,	r1	;
 32a:	22 9f       	cmp	@r15,	r2	;
 32c:	54 6e 00 00 	addc.b	0(r14),	r4	;
 330:	56 6e 00 00 	addc.b	0(r14),	r6	;
 334:	0b 00       	mova	@r0,	r11	;
 336:	7f 00 20 f3 	mova	r0,	-3296(r15); 0xfffff320
 33a:	01 5e       	add	r14,	r1	;
 33c:	22 7c       	subc	@r12,	r2	;
 33e:	00 22       	.word	0x2200;	????
 340:	9f 00 00 00 	cmpa	#0,	r15	;
 344:	00 00       	beq			
 346:	00 00       	beq			
 348:	00 44       	br	r4		;
 34a:	6e 00 00 48 	mova	r0,	&935936	; 0xe4800
 34e:	6e 00 00 01 	mova	r0,	&917760	; 0xe0100
 352:	00 5c       	add	r12,	r0	;
 354:	48 6e       	addc.b	r14,	r8	;
 356:	00 00       	beq			
 358:	4c 6e       	addc.b	r14,	r12	;
 35a:	00 00       	beq			
 35c:	01 00       	mova	@r0,	r1	;
 35e:	5f 4c 6e 00 	mov.b	110(r12),r15	;0x0006e
 362:	00 52       	add	r2,	r0	;
 364:	6e 00 00 03 	mova	r0,	&918272	; 0xe0300
 368:	00 7f       	subc	r15,	r0	;
 36a:	01 9f       	cmp	r15,	r1	;
 36c:	52 6e 00 00 	addc.b	0(r14),	r2	;
 370:	56 6e 00 00 	addc.b	0(r14),	r6	;
 374:	01 00       	mova	@r0,	r1	;
 376:	5f 00       	rrcm	#1,	r15	;
 378:	00 00       	beq			
 37a:	00 00       	beq			
 37c:	00 00       	beq			
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	ff ff       	.word	0xffff;	????
   2:	ff ff       	.word	0xffff;	????
   4:	00 00       	beq			
   6:	00 00       	beq			
   8:	a4 55 00 00 	add	@r5,	0(r4)	;
   c:	a8 55 00 00 	add	@r5,	0(r8)	;
  10:	d4 55 00 00 	add.b	0(r5),	22032(r4); 0x5610
  14:	10 56 
  16:	00 00       	beq			
  18:	88 6e 00 00 	addc	r14,	0(r8)	;
  1c:	8c 6e 00 00 	addc	r14,	0(r12)	;
	...
  28:	04 6e       	addc	r14,	r4	;
  2a:	00 00       	beq			
  2c:	44 6e       	addc.b	r14,	r4	;
	...
  36:	00 00       	beq			
  38:	44 6e       	addc.b	r14,	r4	;
  3a:	00 00       	beq			
  3c:	56 6e 00 00 	addc.b	0(r14),	r6	;
	...
  48:	ff ff       	.word	0xffff;	????
  4a:	ff ff       	.word	0xffff;	????
  4c:	00 00       	beq			
  4e:	00 00       	beq			
  50:	7e 6e       	addc.b	@r14+,	r14	;
  52:	00 00       	beq			
  54:	88 6e 00 00 	addc	r14,	0(r8)	;
  58:	90 6e 00 00 	addc	0(r14),	0x6e92	; PC rel. 0x6eee
  5c:	92 6e 
	...

templog.out:     file format elf32-msp430


Disassembly of section __interrupt_vector_49:

0000fff0 <__interrupt_vector_49>:
    fff0:	80 6d       	interrupt service routine at 0x6d80

Disassembly of section .text:

000055a4 <__crt0_start>:
    55a4:	31 40 00 24 	mov	#9216,	r1	;#0x2400

000055a8 <__crt0_init_bss>:
    55a8:	3c 40 04 1c 	mov	#7172,	r12	;#0x1c04
    55ac:	0d 43       	clr	r13		;
    55ae:	3e 40 2a 00 	mov	#42,	r14	;#0x002a
    55b2:	b0 12 44 6e 	call	#28228		;#0x6e44

000055b6 <__crt0_movedata>:
    55b6:	3c 40 00 1c 	mov	#7168,	r12	;#0x1c00
    55ba:	3d 40 9e 55 	mov	#21918,	r13	;#0x559e
    55be:	0d 9c       	cmp	r12,	r13	;
    55c0:	04 24       	jz	$+10     	;abs 0x55ca
    55c2:	3e 40 04 00 	mov	#4,	r14	;
    55c6:	b0 12 04 6e 	call	#28164		;#0x6e04

000055ca <__crt0_call_init_then_main>:
    55ca:	b0 12 76 6e 	call	#28278		;#0x6e76
    55ce:	0c 43       	clr	r12		;
    55d0:	b0 12 88 6b 	call	#27528		;#0x6b88

000055d4 <_msp430_run_init_array>:
    55d4:	34 40 e4 44 	mov	#17636,	r4	;#0x44e4
    55d8:	35 40 e4 44 	mov	#17636,	r5	;#0x44e4
    55dc:	26 43       	mov	#2,	r6	;r3 As==10
    55de:	0d 3c       	jmp	$+28     	;abs 0x55fa

000055e0 <_msp430_run_preinit_array>:
    55e0:	34 40 e4 44 	mov	#17636,	r4	;#0x44e4
    55e4:	35 40 e4 44 	mov	#17636,	r5	;#0x44e4
    55e8:	26 43       	mov	#2,	r6	;r3 As==10
    55ea:	07 3c       	jmp	$+16     	;abs 0x55fa

000055ec <_msp430_run_fini_array>:
    55ec:	34 40 e4 44 	mov	#17636,	r4	;#0x44e4
    55f0:	35 40 e4 44 	mov	#17636,	r5	;#0x44e4
    55f4:	36 40 fe ff 	mov	#65534,	r6	;#0xfffe
    55f8:	00 3c       	jmp	$+2      	;abs 0x55fa

000055fa <_msp430_run_array>:
    55fa:	05 94       	cmp	r4,	r5	;
    55fc:	05 24       	jz	$+12     	;abs 0x5608
    55fe:	27 44       	mov	@r4,	r7	;
    5600:	04 56       	add	r6,	r4	;
    5602:	a7 12       	call	@r7		;
    5604:	10 40 f4 ff 	br	0xfff4		;PC rel. 0x55fa

00005608 <_msp430_run_done>:
    5608:	30 41       	ret			

0000560a <deregister_tm_clones>:
    560a:	3c 40 92 6e 	mov	#28306,	r12	;#0x6e92
    560e:	3c 80 91 6e 	sub	#28305,	r12	;#0x6e91
    5612:	2d 43       	mov	#2,	r13	;r3 As==10
    5614:	0d 9c       	cmp	r12,	r13	;
    5616:	07 2c       	jc	$+16     	;abs 0x5626
    5618:	3d 40 00 00 	mov	#0,	r13	;
    561c:	0d 93       	cmp	#0,	r13	;r3 As==00
    561e:	03 24       	jz	$+8      	;abs 0x5626
    5620:	3c 40 92 6e 	mov	#28306,	r12	;#0x6e92
    5624:	8d 12       	call	r13		;
    5626:	30 41       	ret			

00005628 <register_tm_clones>:
    5628:	3d 40 92 6e 	mov	#28306,	r13	;#0x6e92
    562c:	3d 80 92 6e 	sub	#28306,	r13	;#0x6e92
    5630:	0d 11       	rra	r13		;
    5632:	0c 4d       	mov	r13,	r12	;
    5634:	5c 03       	rrum	#1,	r12	;
    5636:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    563a:	0d 5c       	add	r12,	r13	;
    563c:	0d 11       	rra	r13		;
    563e:	0d 93       	cmp	#0,	r13	;r3 As==00
    5640:	07 24       	jz	$+16     	;abs 0x5650
    5642:	3e 40 00 00 	mov	#0,	r14	;
    5646:	0e 93       	cmp	#0,	r14	;r3 As==00
    5648:	03 24       	jz	$+8      	;abs 0x5650
    564a:	3c 40 92 6e 	mov	#28306,	r12	;#0x6e92
    564e:	8e 12       	call	r14		;
    5650:	30 41       	ret			

00005652 <__do_global_dtors_aux>:
    5652:	0a 15       	pushm	#1,	r10	;16-bit words
    5654:	c2 93 04 1c 	cmp.b	#0,	&0x1c04	;r3 As==00
    5658:	20 20       	jnz	$+66     	;abs 0x569a
    565a:	1c 42 06 1c 	mov	&0x1c06,r12	;0x1c06
    565e:	3a 40 ee 44 	mov	#17646,	r10	;#0x44ee
    5662:	3a 80 ec 44 	sub	#17644,	r10	;#0x44ec
    5666:	0a 11       	rra	r10		;
    5668:	3a 53       	add	#-1,	r10	;r3 As==11
    566a:	0c 9a       	cmp	r10,	r12	;
    566c:	0b 2c       	jc	$+24     	;abs 0x5684
    566e:	1c 53       	inc	r12		;
    5670:	82 4c 06 1c 	mov	r12,	&0x1c06	;
    5674:	0c 5c       	rla	r12		;
    5676:	1c 4c ec 44 	mov	17644(r12),r12	;0x044ec
    567a:	8c 12       	call	r12		;
    567c:	1c 42 06 1c 	mov	&0x1c06,r12	;0x1c06
    5680:	0c 9a       	cmp	r10,	r12	;
    5682:	f5 2b       	jnc	$-20     	;abs 0x566e
    5684:	b0 12 0a 56 	call	#22026		;#0x560a
    5688:	3d 40 00 00 	mov	#0,	r13	;
    568c:	0d 93       	cmp	#0,	r13	;r3 As==00
    568e:	03 24       	jz	$+8      	;abs 0x5696
    5690:	3c 40 e0 44 	mov	#17632,	r12	;#0x44e0
    5694:	8d 12       	call	r13		;
    5696:	d2 43 04 1c 	mov.b	#1,	&0x1c04	;r3 As==01
    569a:	0a 17       	popm	#1,	r10	;16-bit words
    569c:	30 41       	ret			

0000569e <call___do_global_dtors_aux>:
    569e:	30 41       	ret			

000056a0 <frame_dummy>:
    56a0:	3e 40 00 00 	mov	#0,	r14	;
    56a4:	0e 93       	cmp	#0,	r14	;r3 As==00
    56a6:	05 24       	jz	$+12     	;abs 0x56b2
    56a8:	3c 40 e0 44 	mov	#17632,	r12	;#0x44e0
    56ac:	3d 40 08 1c 	mov	#7176,	r13	;#0x1c08
    56b0:	8e 12       	call	r14		;
    56b2:	3c 40 00 1c 	mov	#7168,	r12	;#0x1c00
    56b6:	8c 93 00 00 	cmp	#0,	0(r12)	;r3 As==00
    56ba:	03 20       	jnz	$+8      	;abs 0x56c2
    56bc:	b0 12 28 56 	call	#22056		;#0x5628
    56c0:	30 41       	ret			
    56c2:	3d 40 00 00 	mov	#0,	r13	;
    56c6:	0d 93       	cmp	#0,	r13	;r3 As==00
    56c8:	f9 27       	jz	$-12     	;abs 0x56bc
    56ca:	8d 12       	call	r13		;
    56cc:	f7 3f       	jmp	$-16     	;abs 0x56bc

000056ce <call_frame_dummy>:
    56ce:	30 41       	ret			

000056d0 <TimerB1_ISR>:
    56d0:	04 12       	push	r4		;
    56d2:	04 41       	mov	r1,	r4	;
    56d4:	0c 12       	push	r12		;
    56d6:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    56da:	3c f0 fd ff 	and	#65533,	r12	;#0xfffd
    56de:	82 4c c0 03 	mov	r12,	&0x03c0	;
    56e2:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    56e6:	0c 93       	cmp	#0,	r12	;r3 As==00
    56e8:	17 24       	jz	$+48     	;abs 0x5718
    56ea:	00 3c       	jmp	$+2      	;abs 0x56ec
    56ec:	1c 42 16 1c 	mov	&0x1c16,r12	;0x1c16
    56f0:	1c 53       	inc	r12		;
    56f2:	82 4c 16 1c 	mov	r12,	&0x1c16	;
    56f6:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    56fa:	2c d2       	bis	#4,	r12	;r2 As==10
    56fc:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5700:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5704:	2c d3       	bis	#2,	r12	;r3 As==10
    5706:	82 4c c0 03 	mov	r12,	&0x03c0	;
    570a:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    570e:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    5712:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5716:	00 3c       	jmp	$+2      	;abs 0x5718
    5718:	3c 41       	pop	r12		;
    571a:	34 41       	pop	r4		;
    571c:	00 13       	reti			
	...

00005720 <init>:
    5720:	04 12       	push	r4		;
    5722:	04 41       	mov	r1,	r4	;
    5724:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5728:	3c f0 ff e6 	and	#59135,	r12	;#0xe6ff
    572c:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5730:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5734:	3c d0 00 02 	bis	#512,	r12	;#0x0200
    5738:	82 4c c0 03 	mov	r12,	&0x03c0	;
    573c:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5740:	3c d0 c0 00 	bis	#192,	r12	;#0x00c0
    5744:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5748:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    574c:	3c f0 ef ff 	and	#65519,	r12	;#0xffef
    5750:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5754:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5758:	3c d0 20 00 	bis	#32,	r12	;#0x0020
    575c:	82 4c c0 03 	mov	r12,	&0x03c0	;
    5760:	1c 42 c0 03 	mov	&0x03c0,r12	;0x03c0
    5764:	2c d3       	bis	#2,	r12	;r3 As==10
    5766:	82 4c c0 03 	mov	r12,	&0x03c0	;
    576a:	b0 12 68 61 	call	#24936		;#0x6168
    576e:	5c 42 04 02 	mov.b	&0x0204,r12	;0x0204
    5772:	2c d3       	bis	#2,	r12	;r3 As==10
    5774:	4d 4c       	mov.b	r12,	r13	;
    5776:	c2 4d 04 02 	mov.b	r13,	&0x0204	;
    577a:	5c 42 04 02 	mov.b	&0x0204,r12	;0x0204
    577e:	2c d2       	bis	#4,	r12	;r2 As==10
    5780:	4d 4c       	mov.b	r12,	r13	;
    5782:	c2 4d 04 02 	mov.b	r13,	&0x0204	;
    5786:	5c 42 04 02 	mov.b	&0x0204,r12	;0x0204
    578a:	1c d3       	bis	#1,	r12	;r3 As==01
    578c:	4d 4c       	mov.b	r12,	r13	;
    578e:	c2 4d 04 02 	mov.b	r13,	&0x0204	;
    5792:	b0 12 e8 66 	call	#26344		;#0x66e8
    5796:	32 d2       	eint			
    5798:	03 43       	nop			
    579a:	34 41       	pop	r4		;
    579c:	30 41       	ret			
	...

000057a0 <task_init>:
    57a0:	04 12       	push	r4		;
    57a2:	04 41       	mov	r1,	r4	;
    57a4:	82 43 e8 46 	mov	#0,	&0x46e8	;r3 As==00
    57a8:	82 43 ea 46 	mov	#0,	&0x46ea	;r3 As==00
    57ac:	82 43 ec 46 	mov	#0,	&0x46ec	;r3 As==00
    57b0:	82 43 ee 46 	mov	#0,	&0x46ee	;r3 As==00
    57b4:	82 43 f0 46 	mov	#0,	&0x46f0	;r3 As==00
    57b8:	92 43 f2 46 	mov	#1,	&0x46f2	;r3 As==01
    57bc:	3f 40 1a 45 	mov	#17690,	r15	;#0x451a
    57c0:	b0 12 58 68 	call	#26712		;#0x6858
    57c4:	34 41       	pop	r4		;
    57c6:	30 41       	ret			

000057c8 <task_init_dict>:
    57c8:	04 12       	push	r4		;
    57ca:	04 41       	mov	r1,	r4	;
    57cc:	31 80 0a 00 	sub	#10,	r1	;#0x000a
    57d0:	1c 42 ec 46 	mov	&0x46ec,r12	;0x46ec
    57d4:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    57d8:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    57dc:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa
    57e0:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    57e4:	1c 44 fe ff 	mov	-2(r4),	r12	;
    57e8:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    57ec:	3e 40 06 00 	mov	#6,	r14	;
    57f0:	0f 4c       	mov	r12,	r15	;
    57f2:	b0 12 b8 6b 	call	#27576		;#0x6bb8
    57f6:	1c 44 fc ff 	mov	-4(r4),	r12	;
    57fa:	8f 4c f8 46 	mov	r12,	18168(r15); 0x46f8
    57fe:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5802:	8f 4c f6 46 	mov	r12,	18166(r15); 0x46f6
    5806:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    580a:	8f 4c f4 46 	mov	r12,	18164(r15); 0x46f4
    580e:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5812:	1c 53       	inc	r12		;
    5814:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5818:	3c 90 00 01 	cmp	#256,	r12	;#0x0100
    581c:	0d 2c       	jc	$+28     	;abs 0x5838
    581e:	00 3c       	jmp	$+2      	;abs 0x5820
    5820:	3e 40 ec 46 	mov	#18156,	r14	;#0x46ec
    5824:	0f 44       	mov	r4,	r15	;
    5826:	2f 83       	decd	r15		;
    5828:	2d 43       	mov	#2,	r13	;r3 As==10
    582a:	b0 12 b8 69 	call	#27064		;#0x69b8
    582e:	3f 40 1a 45 	mov	#17690,	r15	;#0x451a
    5832:	b0 12 58 68 	call	#26712		;#0x6858
    5836:	0f 3c       	jmp	$+32     	;abs 0x5856
    5838:	b2 40 00 01 	mov	#256,	&0x52f4	;#0x0100
    583c:	f4 52 
    583e:	3e 40 ec 46 	mov	#18156,	r14	;#0x46ec
    5842:	0f 44       	mov	r4,	r15	;
    5844:	2f 83       	decd	r15		;
    5846:	2d 43       	mov	#2,	r13	;r3 As==10
    5848:	b0 12 b8 69 	call	#27064		;#0x69b8
    584c:	3f 40 44 45 	mov	#17732,	r15	;#0x4544
    5850:	b0 12 58 68 	call	#26712		;#0x6858
    5854:	00 3c       	jmp	$+2      	;abs 0x5856
    5856:	31 50 0a 00 	add	#10,	r1	;#0x000a
    585a:	34 41       	pop	r4		;
    585c:	30 41       	ret			
	...

00005860 <task_sample>:
    5860:	04 12       	push	r4		;
    5862:	04 41       	mov	r1,	r4	;
    5864:	21 82       	sub	#4,	r1	;r2 As==10
    5866:	1c 42 f0 46 	mov	&0x46f0,r12	;0x46f0
    586a:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    586e:	1c 53       	inc	r12		;
    5870:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5874:	2c 93       	cmp	#2,	r12	;r3 As==10
    5876:	04 20       	jnz	$+10     	;abs 0x5880
    5878:	00 3c       	jmp	$+2      	;abs 0x587a
    587a:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    587e:	00 3c       	jmp	$+2      	;abs 0x5880
    5880:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5884:	0c 93       	cmp	#0,	r12	;r3 As==00
    5886:	11 20       	jnz	$+36     	;abs 0x58aa
    5888:	00 3c       	jmp	$+2      	;abs 0x588a
    588a:	1c 44 fc ff 	mov	-4(r4),	r12	;
    588e:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5892:	3e 40 f0 46 	mov	#18160,	r14	;#0x46f0
    5896:	0f 44       	mov	r4,	r15	;
    5898:	2f 83       	decd	r15		;
    589a:	2d 43       	mov	#2,	r13	;r3 As==10
    589c:	b0 12 b8 69 	call	#27064		;#0x69b8
    58a0:	3f 40 6e 45 	mov	#17774,	r15	;#0x456e
    58a4:	b0 12 58 68 	call	#26712		;#0x6858
    58a8:	10 3c       	jmp	$+34     	;abs 0x58ca
    58aa:	1c 44 fc ff 	mov	-4(r4),	r12	;
    58ae:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    58b2:	3e 40 f0 46 	mov	#18160,	r14	;#0x46f0
    58b6:	0f 44       	mov	r4,	r15	;
    58b8:	2f 83       	decd	r15		;
    58ba:	2d 43       	mov	#2,	r13	;r3 As==10
    58bc:	b0 12 b8 69 	call	#27064		;#0x69b8
    58c0:	3f 40 98 45 	mov	#17816,	r15	;#0x4598
    58c4:	b0 12 58 68 	call	#26712		;#0x6858
    58c8:	00 3c       	jmp	$+2      	;abs 0x58ca
    58ca:	21 52       	add	#4,	r1	;r2 As==10
    58cc:	34 41       	pop	r4		;
    58ce:	30 41       	ret			

000058d0 <task_measure_temp>:
    58d0:	04 12       	push	r4		;
    58d2:	04 41       	mov	r1,	r4	;
    58d4:	31 82       	sub	#8,	r1	;r2 As==11
    58d6:	3e 40 ee 46 	mov	#18158,	r14	;#0x46ee
    58da:	1c 42 ee 46 	mov	&0x46ee,r12	;0x46ee
    58de:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    58e2:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    58e6:	0f 4c       	mov	r12,	r15	;
    58e8:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    58ec:	b0 12 84 61 	call	#24964		;#0x6184
    58f0:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    58f4:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    58f8:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    58fc:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5900:	82 4c f6 52 	mov	r12,	&0x52f6	;
    5904:	0f 44       	mov	r4,	r15	;
    5906:	2f 83       	decd	r15		;
    5908:	2d 43       	mov	#2,	r13	;r3 As==10
    590a:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    590e:	b0 12 b8 69 	call	#27064		;#0x69b8
    5912:	3f 40 98 45 	mov	#17816,	r15	;#0x4598
    5916:	b0 12 58 68 	call	#26712		;#0x6858
    591a:	31 52       	add	#8,	r1	;r2 As==11
    591c:	34 41       	pop	r4		;
    591e:	30 41       	ret			

00005920 <task_letterize>:
    5920:	04 12       	push	r4		;
    5922:	04 41       	mov	r1,	r4	;
    5924:	31 80 10 00 	sub	#16,	r1	;#0x0010
    5928:	1c 42 f0 46 	mov	&0x46f0,r12	;0x46f0
    592c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5930:	0c 93       	cmp	#0,	r12	;r3 As==00
    5932:	04 20       	jnz	$+10     	;abs 0x593c
    5934:	00 3c       	jmp	$+2      	;abs 0x5936
    5936:	a4 43 fe ff 	mov	#2,	-2(r4)	;r3 As==10, 0xfffe
    593a:	06 3c       	jmp	$+14     	;abs 0x5948
    593c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5940:	3c 53       	add	#-1,	r12	;r3 As==11
    5942:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5946:	00 3c       	jmp	$+2      	;abs 0x5948
    5948:	1c 44 fe ff 	mov	-2(r4),	r12	;
    594c:	0c 5c       	rla	r12		;
    594e:	0c 5c       	rla	r12		;
    5950:	0c 5c       	rla	r12		;
    5952:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5956:	1c 42 f6 52 	mov	&0x52f6,r12	;0x52f6
    595a:	5d 44 fc ff 	mov.b	-4(r4),	r13	;
    595e:	3e 40 ff 00 	mov	#255,	r14	;#0x00ff
    5962:	4d 93       	cmp.b	#0,	r13	;r3 As==00
    5964:	4f 4d       	mov.b	r13,	r15	;
    5966:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    596a:	c4 4d f7 ff 	mov.b	r13,	-9(r4)	; 0xfff7
    596e:	84 4e f4 ff 	mov	r14,	-12(r4)	; 0xfff4
    5972:	c4 4f f3 ff 	mov.b	r15,	-13(r4)	; 0xfff3
    5976:	0b 24       	jz	$+24     	;abs 0x598e
    5978:	5c 44 f3 ff 	mov.b	-13(r4),r12	;0xfffffff3
    597c:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    5980:	0d 5d       	rla	r13		;
    5982:	5c 83       	dec.b	r12		;
    5984:	84 4d f4 ff 	mov	r13,	-12(r4)	; 0xfff4
    5988:	c4 4c f3 ff 	mov.b	r12,	-13(r4)	; 0xfff3
    598c:	f5 23       	jnz	$-20     	;abs 0x5978
    598e:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    5992:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    5996:	0d fc       	and	r12,	r13	;
    5998:	5e 44 f7 ff 	mov.b	-9(r4),	r14	;
    599c:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    599e:	c4 4e f2 ff 	mov.b	r14,	-14(r4)	; 0xfff2
    59a2:	84 4d f0 ff 	mov	r13,	-16(r4)	; 0xfff0
    59a6:	0c 24       	jz	$+26     	;abs 0x59c0
    59a8:	5c 44 f2 ff 	mov.b	-14(r4),r12	;0xfffffff2
    59ac:	1d 44 f0 ff 	mov	-16(r4),r13	;0xfffffff0
    59b0:	12 c3       	clrc			
    59b2:	0d 10       	rrc	r13		;
    59b4:	5c 83       	dec.b	r12		;
    59b6:	84 4d f0 ff 	mov	r13,	-16(r4)	; 0xfff0
    59ba:	c4 4c f2 ff 	mov.b	r12,	-14(r4)	; 0xfff2
    59be:	f4 23       	jnz	$-22     	;abs 0x59a8
    59c0:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    59c4:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    59c8:	82 4c ec 46 	mov	r12,	&0x46ec	;
    59cc:	3f 40 c2 45 	mov	#17858,	r15	;#0x45c2
    59d0:	b0 12 58 68 	call	#26712		;#0x6858
    59d4:	31 50 10 00 	add	#16,	r1	;#0x0010
    59d8:	34 41       	pop	r4		;
    59da:	30 41       	ret			

000059dc <task_compress>:
    59dc:	04 12       	push	r4		;
    59de:	04 41       	mov	r1,	r4	;
    59e0:	31 80 0c 00 	sub	#12,	r1	;#0x000c
    59e4:	3e 40 f2 46 	mov	#18162,	r14	;#0x46f2
    59e8:	1c 42 f2 46 	mov	&0x46f2,r12	;0x46f2
    59ec:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    59f0:	1c 42 e8 46 	mov	&0x46e8,r12	;0x46e8
    59f4:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    59f8:	3d 40 06 00 	mov	#6,	r13	;
    59fc:	0f 4c       	mov	r12,	r15	;
    59fe:	84 4e f4 ff 	mov	r14,	-12(r4)	; 0xfff4
    5a02:	0e 4d       	mov	r13,	r14	;
    5a04:	b0 12 b8 6b 	call	#27576		;#0x6bb8
    5a08:	1c 4f f8 46 	mov	18168(r15),r12	;0x046f8
    5a0c:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5a10:	1c 4f f6 46 	mov	18166(r15),r12	;0x046f6
    5a14:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5a18:	1c 4f f4 46 	mov	18164(r15),r12	;0x046f4
    5a1c:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5a20:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5a24:	82 4c f8 52 	mov	r12,	&0x52f8	;
    5a28:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5a2c:	82 4c fe 52 	mov	r12,	&0x52fe	;
    5a30:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5a34:	82 4c fc 52 	mov	r12,	&0x52fc	;
    5a38:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    5a3c:	82 4c fa 52 	mov	r12,	&0x52fa	;
    5a40:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    5a44:	82 4c 00 53 	mov	r12,	&0x5300	;
    5a48:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5a4c:	82 4c 02 53 	mov	r12,	&0x5302	;
    5a50:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5a54:	1c 53       	inc	r12		;
    5a56:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5a5a:	0f 44       	mov	r4,	r15	;
    5a5c:	2f 83       	decd	r15		;
    5a5e:	2d 43       	mov	#2,	r13	;r3 As==10
    5a60:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfffffff4
    5a64:	b0 12 b8 69 	call	#27064		;#0x69b8
    5a68:	3f 40 ec 45 	mov	#17900,	r15	;#0x45ec
    5a6c:	b0 12 58 68 	call	#26712		;#0x6858
    5a70:	31 50 0c 00 	add	#12,	r1	;#0x000c
    5a74:	34 41       	pop	r4		;
    5a76:	30 41       	ret			

00005a78 <task_find_sibling>:
    5a78:	04 12       	push	r4		;
    5a7a:	04 41       	mov	r1,	r4	;
    5a7c:	31 82       	sub	#8,	r1	;r2 As==11
    5a7e:	1c 42 f8 52 	mov	&0x52f8,r12	;0x52f8
    5a82:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5a86:	0c 93       	cmp	#0,	r12	;r3 As==00
    5a88:	41 24       	jz	$+132    	;abs 0x5b0c
    5a8a:	00 3c       	jmp	$+2      	;abs 0x5a8c
    5a8c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5a90:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5a94:	3e 40 06 00 	mov	#6,	r14	;
    5a98:	0f 4c       	mov	r12,	r15	;
    5a9a:	b0 12 b8 6b 	call	#27576		;#0x6bb8
    5a9e:	0c 4f       	mov	r15,	r12	;
    5aa0:	3c 50 f4 46 	add	#18164,	r12	;#0x46f4
    5aa4:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5aa8:	1c 4f f4 46 	mov	18164(r15),r12	;0x046f4
    5aac:	1e 42 ec 46 	mov	&0x46ec,r14	;0x46ec
    5ab0:	0c 9e       	cmp	r14,	r12	;
    5ab2:	11 20       	jnz	$+36     	;abs 0x5ad6
    5ab4:	00 3c       	jmp	$+2      	;abs 0x5ab6
    5ab6:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5aba:	82 4c e8 46 	mov	r12,	&0x46e8	;
    5abe:	3e 40 f8 52 	mov	#21240,	r14	;#0x52f8
    5ac2:	0f 44       	mov	r4,	r15	;
    5ac4:	2f 83       	decd	r15		;
    5ac6:	2d 43       	mov	#2,	r13	;r3 As==10
    5ac8:	b0 12 b8 69 	call	#27064		;#0x69b8
    5acc:	3f 40 98 45 	mov	#17816,	r15	;#0x4598
    5ad0:	b0 12 58 68 	call	#26712		;#0x6858
    5ad4:	1a 3c       	jmp	$+54     	;abs 0x5b0a
    5ad6:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5ada:	1c 4c 02 00 	mov	2(r12),	r12	;
    5ade:	0c 93       	cmp	#0,	r12	;r3 As==00
    5ae0:	13 24       	jz	$+40     	;abs 0x5b08
    5ae2:	00 3c       	jmp	$+2      	;abs 0x5ae4
    5ae4:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5ae8:	1c 4c 02 00 	mov	2(r12),	r12	;
    5aec:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5af0:	3e 40 f8 52 	mov	#21240,	r14	;#0x52f8
    5af4:	0f 44       	mov	r4,	r15	;
    5af6:	2f 83       	decd	r15		;
    5af8:	2d 43       	mov	#2,	r13	;r3 As==10
    5afa:	b0 12 b8 69 	call	#27064		;#0x69b8
    5afe:	3f 40 ec 45 	mov	#17900,	r15	;#0x45ec
    5b02:	b0 12 58 68 	call	#26712		;#0x6858
    5b06:	00 3c       	jmp	$+2      	;abs 0x5b08
    5b08:	00 3c       	jmp	$+2      	;abs 0x5b0a
    5b0a:	00 3c       	jmp	$+2      	;abs 0x5b0c
    5b0c:	1c 42 ec 46 	mov	&0x46ec,r12	;0x46ec
    5b10:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5b14:	82 4c e8 46 	mov	r12,	&0x46e8	;
    5b18:	1c 42 02 53 	mov	&0x5302,r12	;0x5302
    5b1c:	0c 93       	cmp	#0,	r12	;r3 As==00
    5b1e:	0d 20       	jnz	$+28     	;abs 0x5b3a
    5b20:	00 3c       	jmp	$+2      	;abs 0x5b22
    5b22:	3e 40 f8 52 	mov	#21240,	r14	;#0x52f8
    5b26:	0f 44       	mov	r4,	r15	;
    5b28:	2f 83       	decd	r15		;
    5b2a:	2d 43       	mov	#2,	r13	;r3 As==10
    5b2c:	b0 12 b8 69 	call	#27064		;#0x69b8
    5b30:	3f 40 40 46 	mov	#17984,	r15	;#0x4640
    5b34:	b0 12 58 68 	call	#26712		;#0x6858
    5b38:	0c 3c       	jmp	$+26     	;abs 0x5b52
    5b3a:	3e 40 f8 52 	mov	#21240,	r14	;#0x52f8
    5b3e:	0f 44       	mov	r4,	r15	;
    5b40:	2f 83       	decd	r15		;
    5b42:	2d 43       	mov	#2,	r13	;r3 As==10
    5b44:	b0 12 b8 69 	call	#27064		;#0x69b8
    5b48:	3f 40 16 46 	mov	#17942,	r15	;#0x4616
    5b4c:	b0 12 58 68 	call	#26712		;#0x6858
    5b50:	00 3c       	jmp	$+2      	;abs 0x5b52
    5b52:	31 52       	add	#8,	r1	;r2 As==11
    5b54:	34 41       	pop	r4		;
    5b56:	30 41       	ret			

00005b58 <task_add_node>:
    5b58:	04 12       	push	r4		;
    5b5a:	04 41       	mov	r1,	r4	;
    5b5c:	31 80 0e 00 	sub	#14,	r1	;#0x000e
    5b60:	1c 42 f8 52 	mov	&0x52f8,r12	;0x52f8
    5b64:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5b68:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5b6c:	3e 40 06 00 	mov	#6,	r14	;
    5b70:	0f 4c       	mov	r12,	r15	;
    5b72:	b0 12 b8 6b 	call	#27576		;#0x6bb8
    5b76:	0c 4f       	mov	r15,	r12	;
    5b78:	3c 50 f4 46 	add	#18164,	r12	;#0x46f4
    5b7c:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5b80:	1c 4f f6 46 	mov	18166(r15),r12	;0x046f6
    5b84:	0c 93       	cmp	#0,	r12	;r3 As==00
    5b86:	15 24       	jz	$+44     	;abs 0x5bb2
    5b88:	00 3c       	jmp	$+2      	;abs 0x5b8a
    5b8a:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5b8e:	1c 4c 02 00 	mov	2(r12),	r12	;
    5b92:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5b96:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5b9a:	3e 40 f8 52 	mov	#21240,	r14	;#0x52f8
    5b9e:	0f 44       	mov	r4,	r15	;
    5ba0:	2f 83       	decd	r15		;
    5ba2:	2d 43       	mov	#2,	r13	;r3 As==10
    5ba4:	b0 12 b8 69 	call	#27064		;#0x69b8
    5ba8:	3f 40 16 46 	mov	#17942,	r15	;#0x4616
    5bac:	b0 12 58 68 	call	#26712		;#0x6858
    5bb0:	25 3c       	jmp	$+76     	;abs 0x5bfc
    5bb2:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5bb6:	1d 4c 04 00 	mov	4(r12),	r13	;
    5bba:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    5bbe:	1d 4c 02 00 	mov	2(r12),	r13	;
    5bc2:	84 4d f4 ff 	mov	r13,	-12(r4)	; 0xfff4
    5bc6:	2c 4c       	mov	@r12,	r12	;
    5bc8:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    5bcc:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    5bd0:	82 4c 08 53 	mov	r12,	&0x5308	;
    5bd4:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    5bd8:	82 4c 06 53 	mov	r12,	&0x5306	;
    5bdc:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    5be0:	82 4c 04 53 	mov	r12,	&0x5304	;
    5be4:	3e 40 f8 52 	mov	#21240,	r14	;#0x52f8
    5be8:	0f 44       	mov	r4,	r15	;
    5bea:	2f 83       	decd	r15		;
    5bec:	2d 43       	mov	#2,	r13	;r3 As==10
    5bee:	b0 12 b8 69 	call	#27064		;#0x69b8
    5bf2:	3f 40 40 46 	mov	#17984,	r15	;#0x4640
    5bf6:	b0 12 58 68 	call	#26712		;#0x6858
    5bfa:	00 3c       	jmp	$+2      	;abs 0x5bfc
    5bfc:	31 50 0e 00 	add	#14,	r1	;#0x000e
    5c00:	34 41       	pop	r4		;
    5c02:	30 41       	ret			

00005c04 <task_add_insert>:
    5c04:	04 12       	push	r4		;
    5c06:	04 41       	mov	r1,	r4	;
    5c08:	31 80 1a 00 	sub	#26,	r1	;#0x001a
    5c0c:	1c 42 f4 52 	mov	&0x52f4,r12	;0x52f4
    5c10:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5c14:	3c 90 00 02 	cmp	#512,	r12	;#0x0200
    5c18:	03 20       	jnz	$+8      	;abs 0x5c20
    5c1a:	00 3c       	jmp	$+2      	;abs 0x5c1c
    5c1c:	00 3c       	jmp	$+2      	;abs 0x5c1e
    5c1e:	ff 3f       	jmp	$+0      	;abs 0x5c1e
    5c20:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5c24:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5c28:	1c 42 ec 46 	mov	&0x46ec,r12	;0x46ec
    5c2c:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    5c30:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8
    5c34:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa
    5c38:	1c 42 fe 52 	mov	&0x52fe,r12	;0x52fe
    5c3c:	0c 93       	cmp	#0,	r12	;r3 As==00
    5c3e:	27 20       	jnz	$+80     	;abs 0x5c8e
    5c40:	00 3c       	jmp	$+2      	;abs 0x5c42
    5c42:	1c 42 fe 52 	mov	&0x52fe,r12	;0x52fe
    5c46:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    5c4a:	1c 42 fc 52 	mov	&0x52fc,r12	;0x52fc
    5c4e:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    5c52:	1c 42 fa 52 	mov	&0x52fa,r12	;0x52fa
    5c56:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    5c5a:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5c5e:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    5c62:	1c 42 00 53 	mov	&0x5300,r12	;0x5300
    5c66:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    5c6a:	3e 40 06 00 	mov	#6,	r14	;
    5c6e:	0f 4c       	mov	r12,	r15	;
    5c70:	b0 12 b8 6b 	call	#27576		;#0x6bb8
    5c74:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    5c78:	8f 4c f8 46 	mov	r12,	18168(r15); 0x46f8
    5c7c:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    5c80:	8f 4c f6 46 	mov	r12,	18166(r15); 0x46f6
    5c84:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    5c88:	8f 4c f4 46 	mov	r12,	18164(r15); 0x46f4
    5c8c:	27 3c       	jmp	$+80     	;abs 0x5cdc
    5c8e:	1c 42 f8 52 	mov	&0x52f8,r12	;0x52f8
    5c92:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    5c96:	1c 42 08 53 	mov	&0x5308,r12	;0x5308
    5c9a:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    5c9e:	1c 42 06 53 	mov	&0x5306,r12	;0x5306
    5ca2:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    5ca6:	1c 42 04 53 	mov	&0x5304,r12	;0x5304
    5caa:	84 4c e6 ff 	mov	r12,	-26(r4)	; 0xffe6
    5cae:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5cb2:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    5cb6:	1f 44 ec ff 	mov	-20(r4),r15	;0xffffffec
    5cba:	3e 40 06 00 	mov	#6,	r14	;
    5cbe:	b0 12 b8 6b 	call	#27576		;#0x6bb8
    5cc2:	1c 44 ea ff 	mov	-22(r4),r12	;0xffffffea
    5cc6:	8f 4c f8 46 	mov	r12,	18168(r15); 0x46f8
    5cca:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    5cce:	8f 4c f6 46 	mov	r12,	18166(r15); 0x46f6
    5cd2:	1c 44 e6 ff 	mov	-26(r4),r12	;0xffffffe6
    5cd6:	8f 4c f4 46 	mov	r12,	18164(r15); 0x46f4
    5cda:	00 3c       	jmp	$+2      	;abs 0x5cdc
    5cdc:	1f 44 fc ff 	mov	-4(r4),	r15	;
    5ce0:	3e 40 06 00 	mov	#6,	r14	;
    5ce4:	b0 12 b8 6b 	call	#27576		;#0x6bb8
    5ce8:	1e 44 fa ff 	mov	-6(r4),	r14	;
    5cec:	8f 4e f8 46 	mov	r14,	18168(r15); 0x46f8
    5cf0:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    5cf4:	8f 4e f6 46 	mov	r14,	18166(r15); 0x46f6
    5cf8:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfffffff6
    5cfc:	8f 4e f4 46 	mov	r14,	18164(r15); 0x46f4
    5d00:	1e 42 00 53 	mov	&0x5300,r14	;0x5300
    5d04:	82 4e 0a 53 	mov	r14,	&0x530a	;
    5d08:	1e 44 fe ff 	mov	-2(r4),	r14	;
    5d0c:	1e 53       	inc	r14		;
    5d0e:	84 4e fe ff 	mov	r14,	-2(r4)	; 0xfffe
    5d12:	3e 40 f4 52 	mov	#21236,	r14	;#0x52f4
    5d16:	0f 44       	mov	r4,	r15	;
    5d18:	2f 83       	decd	r15		;
    5d1a:	2d 43       	mov	#2,	r13	;r3 As==10
    5d1c:	b0 12 b8 69 	call	#27064		;#0x69b8
    5d20:	3f 40 6a 46 	mov	#18026,	r15	;#0x466a
    5d24:	b0 12 58 68 	call	#26712		;#0x6858
    5d28:	31 50 1a 00 	add	#26,	r1	;#0x001a
    5d2c:	34 41       	pop	r4		;
    5d2e:	30 41       	ret			

00005d30 <task_append_compressed>:
    5d30:	04 12       	push	r4		;
    5d32:	04 41       	mov	r1,	r4	;
    5d34:	31 80 06 00 	sub	#6,	r1	;
    5d38:	1c 42 ea 46 	mov	&0x46ea,r12	;0x46ea
    5d3c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5d40:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5d44:	1d 42 0a 53 	mov	&0x530a,r13	;0x530a
    5d48:	3e 40 06 00 	mov	#6,	r14	;
    5d4c:	0f 4c       	mov	r12,	r15	;
    5d4e:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    5d52:	b0 12 b8 6b 	call	#27576		;#0x6bb8
    5d56:	1c 44 fa ff 	mov	-6(r4),	r12	;
    5d5a:	8f 4c 0c 53 	mov	r12,	21260(r15); 0x530c
    5d5e:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5d62:	1c 53       	inc	r12		;
    5d64:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5d68:	3c 90 40 00 	cmp	#64,	r12	;#0x0040
    5d6c:	0d 20       	jnz	$+28     	;abs 0x5d88
    5d6e:	00 3c       	jmp	$+2      	;abs 0x5d70
    5d70:	3e 40 ea 46 	mov	#18154,	r14	;#0x46ea
    5d74:	0f 44       	mov	r4,	r15	;
    5d76:	2f 83       	decd	r15		;
    5d78:	2d 43       	mov	#2,	r13	;r3 As==10
    5d7a:	b0 12 b8 69 	call	#27064		;#0x69b8
    5d7e:	3f 40 94 46 	mov	#18068,	r15	;#0x4694
    5d82:	b0 12 58 68 	call	#26712		;#0x6858
    5d86:	0c 3c       	jmp	$+26     	;abs 0x5da0
    5d88:	3e 40 ea 46 	mov	#18154,	r14	;#0x46ea
    5d8c:	0f 44       	mov	r4,	r15	;
    5d8e:	2f 83       	decd	r15		;
    5d90:	2d 43       	mov	#2,	r13	;r3 As==10
    5d92:	b0 12 b8 69 	call	#27064		;#0x69b8
    5d96:	3f 40 44 45 	mov	#17732,	r15	;#0x4544
    5d9a:	b0 12 58 68 	call	#26712		;#0x6858
    5d9e:	00 3c       	jmp	$+2      	;abs 0x5da0
    5da0:	31 50 06 00 	add	#6,	r1	;
    5da4:	34 41       	pop	r4		;
    5da6:	30 41       	ret			

00005da8 <task_print>:
    5da8:	04 12       	push	r4		;
    5daa:	04 41       	mov	r1,	r4	;
    5dac:	31 80 14 00 	sub	#20,	r1	;#0x0014
    5db0:	0c 41       	mov	r1,	r12	;
    5db2:	bc 40 00 44 	mov	#17408,	0(r12)	;#0x4400
    5db6:	00 00 
    5db8:	b0 12 84 62 	call	#25220		;#0x6284
    5dbc:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    5dc0:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    5dc4:	00 3c       	jmp	$+2      	;abs 0x5dc6
    5dc6:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5dca:	3c 90 40 00 	cmp	#64,	r12	;#0x0040
    5dce:	31 2c       	jc	$+100    	;abs 0x5e32
    5dd0:	00 3c       	jmp	$+2      	;abs 0x5dd2
    5dd2:	1f 44 fe ff 	mov	-2(r4),	r15	;
    5dd6:	3e 40 06 00 	mov	#6,	r14	;
    5dda:	b0 12 b8 6b 	call	#27576		;#0x6bb8
    5dde:	1e 4f 0c 53 	mov	21260(r15),r14	;0x0530c
    5de2:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    5de6:	0f 41       	mov	r1,	r15	;
    5de8:	8f 4e 02 00 	mov	r14,	2(r15)	;
    5dec:	bf 40 14 44 	mov	#17428,	0(r15)	;#0x4414
    5df0:	00 00 
    5df2:	b0 12 84 62 	call	#25220		;#0x6284
    5df6:	1e 44 fe ff 	mov	-2(r4),	r14	;
    5dfa:	0e 93       	cmp	#0,	r14	;r3 As==00
    5dfc:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    5e00:	11 24       	jz	$+36     	;abs 0x5e24
    5e02:	00 3c       	jmp	$+2      	;abs 0x5e04
    5e04:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5e08:	1c 53       	inc	r12		;
    5e0a:	3c b0 07 00 	bit	#7,	r12	;
    5e0e:	0a 20       	jnz	$+22     	;abs 0x5e24
    5e10:	00 3c       	jmp	$+2      	;abs 0x5e12
    5e12:	0c 41       	mov	r1,	r12	;
    5e14:	bc 40 11 44 	mov	#17425,	0(r12)	;#0x4411
    5e18:	00 00 
    5e1a:	b0 12 84 62 	call	#25220		;#0x6284
    5e1e:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    5e22:	00 3c       	jmp	$+2      	;abs 0x5e24
    5e24:	00 3c       	jmp	$+2      	;abs 0x5e26
    5e26:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5e2a:	1c 53       	inc	r12		;
    5e2c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5e30:	ca 3f       	jmp	$-106    	;abs 0x5dc6
    5e32:	0c 41       	mov	r1,	r12	;
    5e34:	bc 40 11 44 	mov	#17425,	0(r12)	;#0x4411
    5e38:	00 00 
    5e3a:	b0 12 84 62 	call	#25220		;#0x6284
    5e3e:	1c 42 f2 46 	mov	&0x46f2,r12	;0x46f2
    5e42:	0d 41       	mov	r1,	r13	;
    5e44:	8d 4c 02 00 	mov	r12,	2(r13)	;
    5e48:	bd 40 40 00 	mov	#64,	4(r13)	;#0x0040
    5e4c:	04 00 
    5e4e:	bd 40 1a 44 	mov	#17434,	0(r13)	;#0x441a
    5e52:	00 00 
    5e54:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    5e58:	b0 12 84 62 	call	#25220		;#0x6284
    5e5c:	3c 40 be 46 	mov	#18110,	r12	;#0x46be
    5e60:	84 4f f2 ff 	mov	r15,	-14(r4)	; 0xfff2
    5e64:	0f 4c       	mov	r12,	r15	;
    5e66:	b0 12 58 68 	call	#26712		;#0x6858
    5e6a:	31 50 14 00 	add	#20,	r1	;#0x0014
    5e6e:	34 41       	pop	r4		;
    5e70:	30 41       	ret			
	...

00005e74 <task_done>:
    5e74:	04 12       	push	r4		;
    5e76:	04 41       	mov	r1,	r4	;
    5e78:	31 80 32 00 	sub	#50,	r1	;#0x0032
    5e7c:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    5e80:	0c 41       	mov	r1,	r12	;
    5e82:	bc 40 2a 00 	mov	#42,	4(r12)	;#0x002a
    5e86:	04 00 
    5e88:	9c 43 02 00 	mov	#1,	2(r12)	;r3 As==01
    5e8c:	bc 40 37 44 	mov	#17463,	0(r12)	;#0x4437
    5e90:	00 00 
    5e92:	b0 12 84 62 	call	#25220		;#0x6284
    5e96:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5e9a:	3c 50 f8 01 	add	#504,	r12	;#0x01f8
    5e9e:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5ea2:	0c 41       	mov	r1,	r12	;
    5ea4:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5ea8:	9c 43 02 00 	mov	#1,	2(r12)	;r3 As==01
    5eac:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    5eb0:	00 00 
    5eb2:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    5eb6:	b0 12 84 62 	call	#25220		;#0x6284
    5eba:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5ebe:	2c 53       	incd	r12		;
    5ec0:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5ec4:	0c 41       	mov	r1,	r12	;
    5ec6:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5eca:	ac 43 02 00 	mov	#2,	2(r12)	;r3 As==10
    5ece:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    5ed2:	00 00 
    5ed4:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    5ed8:	b0 12 84 62 	call	#25220		;#0x6284
    5edc:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5ee0:	2c 53       	incd	r12		;
    5ee2:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5ee6:	0c 41       	mov	r1,	r12	;
    5ee8:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5eec:	bc 40 03 00 	mov	#3,	2(r12)	;
    5ef0:	02 00 
    5ef2:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    5ef6:	00 00 
    5ef8:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    5efc:	b0 12 84 62 	call	#25220		;#0x6284
    5f00:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f04:	2c 53       	incd	r12		;
    5f06:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f0a:	0c 41       	mov	r1,	r12	;
    5f0c:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5f10:	ac 42 02 00 	mov	#4,	2(r12)	;r2 As==10
    5f14:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    5f18:	00 00 
    5f1a:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    5f1e:	b0 12 84 62 	call	#25220		;#0x6284
    5f22:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f26:	2c 53       	incd	r12		;
    5f28:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f2c:	0c 41       	mov	r1,	r12	;
    5f2e:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5f32:	bc 40 05 00 	mov	#5,	2(r12)	;
    5f36:	02 00 
    5f38:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    5f3c:	00 00 
    5f3e:	84 4f f2 ff 	mov	r15,	-14(r4)	; 0xfff2
    5f42:	b0 12 84 62 	call	#25220		;#0x6284
    5f46:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f4a:	2c 53       	incd	r12		;
    5f4c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f50:	0c 41       	mov	r1,	r12	;
    5f52:	bc 40 00 0c 	mov	#3072,	4(r12)	;#0x0c00
    5f56:	04 00 
    5f58:	bc 40 06 00 	mov	#6,	2(r12)	;
    5f5c:	02 00 
    5f5e:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    5f62:	00 00 
    5f64:	84 4f f0 ff 	mov	r15,	-16(r4)	; 0xfff0
    5f68:	b0 12 84 62 	call	#25220		;#0x6284
    5f6c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f70:	3c 50 00 0c 	add	#3072,	r12	;#0x0c00
    5f74:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f78:	0c 41       	mov	r1,	r12	;
    5f7a:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5f7e:	bc 40 07 00 	mov	#7,	2(r12)	;
    5f82:	02 00 
    5f84:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    5f88:	00 00 
    5f8a:	84 4f ee ff 	mov	r15,	-18(r4)	; 0xffee
    5f8e:	b0 12 84 62 	call	#25220		;#0x6284
    5f92:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5f96:	2c 53       	incd	r12		;
    5f98:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5f9c:	0c 41       	mov	r1,	r12	;
    5f9e:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5fa2:	bc 42 02 00 	mov	#8,	2(r12)	;r2 As==11
    5fa6:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    5faa:	00 00 
    5fac:	84 4f ec ff 	mov	r15,	-20(r4)	; 0xffec
    5fb0:	b0 12 84 62 	call	#25220		;#0x6284
    5fb4:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5fb8:	2c 53       	incd	r12		;
    5fba:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5fbe:	0c 41       	mov	r1,	r12	;
    5fc0:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5fc4:	bc 40 09 00 	mov	#9,	2(r12)	;
    5fc8:	02 00 
    5fca:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    5fce:	00 00 
    5fd0:	84 4f ea ff 	mov	r15,	-22(r4)	; 0xffea
    5fd4:	b0 12 84 62 	call	#25220		;#0x6284
    5fd8:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5fdc:	2c 53       	incd	r12		;
    5fde:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5fe2:	0c 41       	mov	r1,	r12	;
    5fe4:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    5fe8:	bc 40 0b 00 	mov	#11,	2(r12)	;#0x000b
    5fec:	02 00 
    5fee:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    5ff2:	00 00 
    5ff4:	84 4f e8 ff 	mov	r15,	-24(r4)	; 0xffe8
    5ff8:	b0 12 84 62 	call	#25220		;#0x6284
    5ffc:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6000:	2c 53       	incd	r12		;
    6002:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    6006:	0c 41       	mov	r1,	r12	;
    6008:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    600c:	bc 40 0c 00 	mov	#12,	2(r12)	;#0x000c
    6010:	02 00 
    6012:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    6016:	00 00 
    6018:	84 4f e6 ff 	mov	r15,	-26(r4)	; 0xffe6
    601c:	b0 12 84 62 	call	#25220		;#0x6284
    6020:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6024:	2c 53       	incd	r12		;
    6026:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    602a:	0c 41       	mov	r1,	r12	;
    602c:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    6030:	bc 40 0d 00 	mov	#13,	2(r12)	;#0x000d
    6034:	02 00 
    6036:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    603a:	00 00 
    603c:	84 4f e4 ff 	mov	r15,	-28(r4)	; 0xffe4
    6040:	b0 12 84 62 	call	#25220		;#0x6284
    6044:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6048:	2c 53       	incd	r12		;
    604a:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    604e:	0c 41       	mov	r1,	r12	;
    6050:	bc 40 06 00 	mov	#6,	4(r12)	;
    6054:	04 00 
    6056:	bc 40 0e 00 	mov	#14,	2(r12)	;#0x000e
    605a:	02 00 
    605c:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    6060:	00 00 
    6062:	84 4f e2 ff 	mov	r15,	-30(r4)	; 0xffe2
    6066:	b0 12 84 62 	call	#25220		;#0x6284
    606a:	1c 44 fe ff 	mov	-2(r4),	r12	;
    606e:	3c 50 06 00 	add	#6,	r12	;
    6072:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    6076:	0c 41       	mov	r1,	r12	;
    6078:	bc 40 80 01 	mov	#384,	4(r12)	;#0x0180
    607c:	04 00 
    607e:	bc 40 0f 00 	mov	#15,	2(r12)	;#0x000f
    6082:	02 00 
    6084:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    6088:	00 00 
    608a:	84 4f e0 ff 	mov	r15,	-32(r4)	; 0xffe0
    608e:	b0 12 84 62 	call	#25220		;#0x6284
    6092:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6096:	3c 50 80 01 	add	#384,	r12	;#0x0180
    609a:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    609e:	0c 41       	mov	r1,	r12	;
    60a0:	bc 40 06 00 	mov	#6,	4(r12)	;
    60a4:	04 00 
    60a6:	bc 40 10 00 	mov	#16,	2(r12)	;#0x0010
    60aa:	02 00 
    60ac:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    60b0:	00 00 
    60b2:	84 4f de ff 	mov	r15,	-34(r4)	; 0xffde
    60b6:	b0 12 84 62 	call	#25220		;#0x6284
    60ba:	1c 44 fe ff 	mov	-2(r4),	r12	;
    60be:	3c 50 06 00 	add	#6,	r12	;
    60c2:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    60c6:	0c 41       	mov	r1,	r12	;
    60c8:	ac 43 04 00 	mov	#2,	4(r12)	;r3 As==10
    60cc:	bc 40 11 00 	mov	#17,	2(r12)	;#0x0011
    60d0:	02 00 
    60d2:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    60d6:	00 00 
    60d8:	84 4f dc ff 	mov	r15,	-36(r4)	; 0xffdc
    60dc:	b0 12 84 62 	call	#25220		;#0x6284
    60e0:	1c 44 fe ff 	mov	-2(r4),	r12	;
    60e4:	2c 53       	incd	r12		;
    60e6:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    60ea:	0c 41       	mov	r1,	r12	;
    60ec:	bc 40 42 00 	mov	#66,	2(r12)	;#0x0042
    60f0:	02 00 
    60f2:	bc 40 66 44 	mov	#17510,	0(r12)	;#0x4466
    60f6:	00 00 
    60f8:	84 4f da ff 	mov	r15,	-38(r4)	; 0xffda
    60fc:	b0 12 84 62 	call	#25220		;#0x6284
    6100:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6104:	3c 50 42 00 	add	#66,	r12	;#0x0042
    6108:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    610c:	0c 41       	mov	r1,	r12	;
    610e:	ac 43 02 00 	mov	#2,	2(r12)	;r3 As==10
    6112:	bc 40 7e 44 	mov	#17534,	0(r12)	;#0x447e
    6116:	00 00 
    6118:	84 4f d8 ff 	mov	r15,	-40(r4)	; 0xffd8
    611c:	b0 12 84 62 	call	#25220		;#0x6284
    6120:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6124:	2c 53       	incd	r12		;
    6126:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    612a:	0d 41       	mov	r1,	r13	;
    612c:	8d 4c 02 00 	mov	r12,	2(r13)	;
    6130:	bd 40 9a 44 	mov	#17562,	0(r13)	;#0x449a
    6134:	00 00 
    6136:	84 4f d6 ff 	mov	r15,	-42(r4)	; 0xffd6
    613a:	b0 12 84 62 	call	#25220		;#0x6284
    613e:	84 4f d4 ff 	mov	r15,	-44(r4)	; 0xffd4
    6142:	31 50 32 00 	add	#50,	r1	;#0x0032
    6146:	34 41       	pop	r4		;
    6148:	30 41       	ret			
	...

0000614c <_entry_task>:
    614c:	04 12       	push	r4		;
    614e:	04 41       	mov	r1,	r4	;
    6150:	3f 40 f0 44 	mov	#17648,	r15	;#0x44f0
    6154:	b0 12 58 68 	call	#26712		;#0x6858
    6158:	34 41       	pop	r4		;
    615a:	30 41       	ret			

0000615c <_init>:
    615c:	04 12       	push	r4		;
    615e:	04 41       	mov	r1,	r4	;
    6160:	b0 12 20 57 	call	#22304		;#0x5720
    6164:	34 41       	pop	r4		;
    6166:	30 41       	ret			

00006168 <init_hw>:
    6168:	04 12       	push	r4		;
    616a:	04 41       	mov	r1,	r4	;
    616c:	b0 12 d0 61 	call	#25040		;#0x61d0
    6170:	1c 42 30 01 	mov	&0x0130,r12	;0x0130
    6174:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    6178:	82 4c 30 01 	mov	r12,	&0x0130	;
    617c:	b0 12 64 62 	call	#25188		;#0x6264
    6180:	34 41       	pop	r4		;
    6182:	30 41       	ret			

00006184 <acquire_sample>:
    6184:	04 12       	push	r4		;
    6186:	04 41       	mov	r1,	r4	;
    6188:	31 80 06 00 	sub	#6,	r1	;
    618c:	0c 4f       	mov	r15,	r12	;
    618e:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6192:	1f 53       	inc	r15		;
    6194:	3f f0 03 00 	and	#3,	r15	;
    6198:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    619c:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    61a0:	31 50 06 00 	add	#6,	r1	;
    61a4:	34 41       	pop	r4		;
    61a6:	30 41       	ret			

000061a8 <msp_watchdog_enable>:
    61a8:	04 12       	push	r4		;
    61aa:	04 41       	mov	r1,	r4	;
    61ac:	21 83       	decd	r1		;
    61ae:	4c 4f       	mov.b	r15,	r12	;
    61b0:	c4 4c ff ff 	mov.b	r12,	-1(r4)	; 0xffff
    61b4:	5f 44 ff ff 	mov.b	-1(r4),	r15	;
    61b8:	3f d0 08 5a 	bis	#23048,	r15	;#0x5a08
    61bc:	82 4f 5c 01 	mov	r15,	&0x015c	;
    61c0:	5c 44 ff ff 	mov.b	-1(r4),	r12	;
    61c4:	c2 4c 20 1c 	mov.b	r12,	&0x1c20	;
    61c8:	21 53       	incd	r1		;
    61ca:	34 41       	pop	r4		;
    61cc:	30 41       	ret			
	...

000061d0 <msp_watchdog_disable>:
    61d0:	04 12       	push	r4		;
    61d2:	04 41       	mov	r1,	r4	;
    61d4:	b2 40 80 5a 	mov	#23168,	&0x015c	;#0x5a80
    61d8:	5c 01 
    61da:	34 41       	pop	r4		;
    61dc:	30 41       	ret			
	...

000061e0 <msp_watchdog_kick>:
    61e0:	04 12       	push	r4		;
    61e2:	04 41       	mov	r1,	r4	;
    61e4:	5c 42 20 1c 	mov.b	&0x1c20,r12	;0x1c20
    61e8:	3c d0 08 5a 	bis	#23048,	r12	;#0x5a08
    61ec:	82 4c 5c 01 	mov	r12,	&0x015c	;
    61f0:	34 41       	pop	r4		;
    61f2:	30 41       	ret			

000061f4 <memcpy>:
    61f4:	04 12       	push	r4		;
    61f6:	04 41       	mov	r1,	r4	;
    61f8:	0b 12       	push	r11		;
    61fa:	0a 12       	push	r10		;
    61fc:	31 80 0e 00 	sub	#14,	r1	;#0x000e
    6200:	0c 4d       	mov	r13,	r12	;
    6202:	0b 4e       	mov	r14,	r11	;
    6204:	0a 4f       	mov	r15,	r10	;
    6206:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    620a:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    620e:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    6212:	84 43 f4 ff 	mov	#0,	-12(r4)	;r3 As==00, 0xfff4
    6216:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    621a:	84 4b f0 ff 	mov	r11,	-16(r4)	; 0xfff0
    621e:	84 4a ee ff 	mov	r10,	-18(r4)	; 0xffee
    6222:	00 3c       	jmp	$+2      	;abs 0x6224
    6224:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6228:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    622c:	0c 9d       	cmp	r13,	r12	;
    622e:	12 2c       	jc	$+38     	;abs 0x6254
    6230:	00 3c       	jmp	$+2      	;abs 0x6232
    6232:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6236:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    623a:	0c 5d       	add	r13,	r12	;
    623c:	6e 4c       	mov.b	@r12,	r14	;
    623e:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6242:	0c 5d       	add	r13,	r12	;
    6244:	cc 4e 00 00 	mov.b	r14,	0(r12)	;
    6248:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    624c:	1c 53       	inc	r12		;
    624e:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    6252:	e8 3f       	jmp	$-46     	;abs 0x6224
    6254:	1f 44 fa ff 	mov	-6(r4),	r15	;
    6258:	31 50 0e 00 	add	#14,	r1	;#0x000e
    625c:	3a 41       	pop	r10		;
    625e:	3b 41       	pop	r11		;
    6260:	34 41       	pop	r4		;
    6262:	30 41       	ret			

00006264 <msp_clock_setup>:
    6264:	04 12       	push	r4		;
    6266:	04 41       	mov	r1,	r4	;
    6268:	f2 40 a5 ff 	mov.b	#65445,	&0x0161	;#0xffa5
    626c:	61 01 
    626e:	b2 40 0c 00 	mov	#12,	&0x0162	;#0x000c
    6272:	62 01 
    6274:	b2 40 33 00 	mov	#51,	&0x0164	;#0x0033
    6278:	64 01 
    627a:	82 43 66 01 	mov	#0,	&0x0166	;r3 As==00
    627e:	34 41       	pop	r4		;
    6280:	30 41       	ret			
	...

00006284 <printf>:
    6284:	04 12       	push	r4		;
    6286:	04 41       	mov	r1,	r4	;
    6288:	31 80 20 00 	sub	#32,	r1	;#0x0020
    628c:	1c 44 04 00 	mov	4(r4),	r12	;
    6290:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    6294:	0c 44       	mov	r4,	r12	;
    6296:	3c 50 06 00 	add	#6,	r12	;
    629a:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    629e:	00 3c       	jmp	$+2      	;abs 0x62a0
    62a0:	1c 44 fc ff 	mov	-4(r4),	r12	;
    62a4:	0d 4c       	mov	r12,	r13	;
    62a6:	1d 53       	inc	r13		;
    62a8:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    62ac:	6e 4c       	mov.b	@r12,	r14	;
    62ae:	c4 4e fb ff 	mov.b	r14,	-5(r4)	; 0xfffb
    62b2:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    62b4:	02 20       	jnz	$+6      	;abs 0x62ba
    62b6:	52 3d       	jmp	$+678    	;abs 0x655c
    62b8:	00 3c       	jmp	$+2      	;abs 0x62ba
    62ba:	5c 44 fb ff 	mov.b	-5(r4),	r12	;
    62be:	7c 90 25 00 	cmp.b	#37,	r12	;#0x0025
    62c2:	02 24       	jz	$+6      	;abs 0x62c8
    62c4:	40 3d       	jmp	$+642    	;abs 0x6546
    62c6:	00 3c       	jmp	$+2      	;abs 0x62c8
    62c8:	84 43 f2 ff 	mov	#0,	-14(r4)	;r3 As==00, 0xfff2
    62cc:	00 3c       	jmp	$+2      	;abs 0x62ce
    62ce:	1c 44 fc ff 	mov	-4(r4),	r12	;
    62d2:	0d 4c       	mov	r12,	r13	;
    62d4:	1d 53       	inc	r13		;
    62d6:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    62da:	6c 4c       	mov.b	@r12,	r12	;
    62dc:	8c 11       	sxt	r12		;
    62de:	4e 4c       	mov.b	r12,	r14	;
    62e0:	c4 4e fb ff 	mov.b	r14,	-5(r4)	; 0xfffb
    62e4:	0c 93       	cmp	#0,	r12	;r3 As==00
    62e6:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    62ea:	02 20       	jnz	$+6      	;abs 0x62f0
    62ec:	27 3d       	jmp	$+592    	;abs 0x653c
    62ee:	00 3c       	jmp	$+2      	;abs 0x62f0
    62f0:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    62f4:	3c 90 30 00 	cmp	#48,	r12	;#0x0030
    62f8:	02 20       	jnz	$+6      	;abs 0x62fe
    62fa:	0f 3d       	jmp	$+544    	;abs 0x651a
    62fc:	00 3c       	jmp	$+2      	;abs 0x62fe
    62fe:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6302:	3c 90 63 00 	cmp	#99,	r12	;#0x0063
    6306:	34 24       	jz	$+106    	;abs 0x6370
    6308:	00 3c       	jmp	$+2      	;abs 0x630a
    630a:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    630e:	3c 90 69 00 	cmp	#105,	r12	;#0x0069
    6312:	3d 24       	jz	$+124    	;abs 0x638e
    6314:	00 3c       	jmp	$+2      	;abs 0x6316
    6316:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    631a:	3c 90 6c 00 	cmp	#108,	r12	;#0x006c
    631e:	66 24       	jz	$+206    	;abs 0x63ec
    6320:	00 3c       	jmp	$+2      	;abs 0x6322
    6322:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6326:	3c 90 6e 00 	cmp	#110,	r12	;#0x006e
    632a:	60 24       	jz	$+194    	;abs 0x63ec
    632c:	00 3c       	jmp	$+2      	;abs 0x632e
    632e:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6332:	3c 90 73 00 	cmp	#115,	r12	;#0x0073
    6336:	0d 24       	jz	$+28     	;abs 0x6352
    6338:	00 3c       	jmp	$+2      	;abs 0x633a
    633a:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    633e:	3c 90 75 00 	cmp	#117,	r12	;#0x0075
    6342:	25 24       	jz	$+76     	;abs 0x638e
    6344:	00 3c       	jmp	$+2      	;abs 0x6346
    6346:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    634a:	3c 90 78 00 	cmp	#120,	r12	;#0x0078
    634e:	8a 24       	jz	$+278    	;abs 0x6464
    6350:	f8 3c       	jmp	$+498    	;abs 0x6542
    6352:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    6356:	1c 53       	inc	r12		;
    6358:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    635c:	0d 4c       	mov	r12,	r13	;
    635e:	2d 53       	incd	r13		;
    6360:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    6364:	2f 4c       	mov	@r12,	r15	;
    6366:	b0 12 28 67 	call	#26408		;#0x6728
    636a:	84 4f ea ff 	mov	r15,	-22(r4)	; 0xffea
    636e:	ea 3c       	jmp	$+470    	;abs 0x6544
    6370:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    6374:	1c 53       	inc	r12		;
    6376:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    637a:	0d 4c       	mov	r12,	r13	;
    637c:	2d 53       	incd	r13		;
    637e:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    6382:	2f 4c       	mov	@r12,	r15	;
    6384:	b0 12 f4 66 	call	#26356		;#0x66f4
    6388:	84 4f e8 ff 	mov	r15,	-24(r4)	; 0xffe8
    638c:	db 3c       	jmp	$+440    	;abs 0x6544
    638e:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    6392:	1c 53       	inc	r12		;
    6394:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    6398:	0d 4c       	mov	r12,	r13	;
    639a:	2d 53       	incd	r13		;
    639c:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    63a0:	2c 4c       	mov	@r12,	r12	;
    63a2:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    63a6:	5e 44 fb ff 	mov.b	-5(r4),	r14	;
    63aa:	7e 90 69 00 	cmp.b	#105,	r14	;#0x0069
    63ae:	13 20       	jnz	$+40     	;abs 0x63d6
    63b0:	00 3c       	jmp	$+2      	;abs 0x63b2
    63b2:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    63b6:	0c 93       	cmp	#0,	r12	;r3 As==00
    63b8:	0e 34       	jge	$+30     	;abs 0x63d6
    63ba:	00 3c       	jmp	$+2      	;abs 0x63bc
    63bc:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    63c0:	0d 43       	clr	r13		;
    63c2:	0d 8c       	sub	r12,	r13	;
    63c4:	84 4d f8 ff 	mov	r13,	-8(r4)	; 0xfff8
    63c8:	3f 40 2d 00 	mov	#45,	r15	;#0x002d
    63cc:	b0 12 f4 66 	call	#26356		;#0x66f4
    63d0:	84 4f e6 ff 	mov	r15,	-26(r4)	; 0xffe6
    63d4:	00 3c       	jmp	$+2      	;abs 0x63d6
    63d6:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    63da:	3c 40 14 00 	mov	#20,	r12	;#0x0014
    63de:	3c 50 a6 44 	add	#17574,	r12	;#0x44a6
    63e2:	0f 43       	clr	r15		;
    63e4:	0d 4c       	mov	r12,	r13	;
    63e6:	b0 12 70 65 	call	#25968		;#0x6570
    63ea:	ac 3c       	jmp	$+346    	;abs 0x6544
    63ec:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    63f0:	1c 53       	inc	r12		;
    63f2:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    63f6:	0d 4c       	mov	r12,	r13	;
    63f8:	2d 53       	incd	r13		;
    63fa:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    63fe:	2c 4c       	mov	@r12,	r12	;
    6400:	1d 44 ee ff 	mov	-18(r4),r13	;0xffffffee
    6404:	0e 4d       	mov	r13,	r14	;
    6406:	2e 53       	incd	r14		;
    6408:	84 4e ee ff 	mov	r14,	-18(r4)	; 0xffee
    640c:	2d 4d       	mov	@r13,	r13	;
    640e:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    6412:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    6416:	5f 44 fb ff 	mov.b	-5(r4),	r15	;
    641a:	7f 90 6c 00 	cmp.b	#108,	r15	;#0x006c
    641e:	19 20       	jnz	$+52     	;abs 0x6452
    6420:	00 3c       	jmp	$+2      	;abs 0x6422
    6422:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6426:	0c 93       	cmp	#0,	r12	;r3 As==00
    6428:	14 34       	jge	$+42     	;abs 0x6452
    642a:	00 3c       	jmp	$+2      	;abs 0x642c
    642c:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6430:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    6434:	0e 43       	clr	r14		;
    6436:	0f 4e       	mov	r14,	r15	;
    6438:	0f 8c       	sub	r12,	r15	;
    643a:	0e 7d       	subc	r13,	r14	;
    643c:	84 4e f6 ff 	mov	r14,	-10(r4)	; 0xfff6
    6440:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    6444:	3f 40 2d 00 	mov	#45,	r15	;#0x002d
    6448:	b0 12 f4 66 	call	#26356		;#0x66f4
    644c:	84 4f e4 ff 	mov	r15,	-28(r4)	; 0xffe4
    6450:	00 3c       	jmp	$+2      	;abs 0x6452
    6452:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfffffff6
    6456:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfffffff4
    645a:	3d 40 a6 44 	mov	#17574,	r13	;#0x44a6
    645e:	b0 12 70 65 	call	#25968		;#0x6570
    6462:	70 3c       	jmp	$+226    	;abs 0x6544
    6464:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    6468:	1c 53       	inc	r12		;
    646a:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    646e:	0d 4c       	mov	r12,	r13	;
    6470:	2d 53       	incd	r13		;
    6472:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    6476:	2c 4c       	mov	@r12,	r12	;
    6478:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    647c:	0c 11       	rra	r12		;
    647e:	0c 11       	rra	r12		;
    6480:	0c 11       	rra	r12		;
    6482:	0c 11       	rra	r12		;
    6484:	0c 11       	rra	r12		;
    6486:	0c 11       	rra	r12		;
    6488:	0c 11       	rra	r12		;
    648a:	0c 11       	rra	r12		;
    648c:	0c 11       	rra	r12		;
    648e:	0c 11       	rra	r12		;
    6490:	0c 11       	rra	r12		;
    6492:	0c 11       	rra	r12		;
    6494:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    6498:	0c 93       	cmp	#0,	r12	;r3 As==00
    649a:	06 20       	jnz	$+14     	;abs 0x64a8
    649c:	00 3c       	jmp	$+2      	;abs 0x649e
    649e:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    64a2:	2c 92       	cmp	#4,	r12	;r2 As==10
    64a4:	06 38       	jl	$+14     	;abs 0x64b2
    64a6:	00 3c       	jmp	$+2      	;abs 0x64a8
    64a8:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfffffff0
    64ac:	b0 12 bc 66 	call	#26300		;#0x66bc
    64b0:	00 3c       	jmp	$+2      	;abs 0x64b2
    64b2:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    64b6:	0c 11       	rra	r12		;
    64b8:	0c 11       	rra	r12		;
    64ba:	0c 11       	rra	r12		;
    64bc:	0c 11       	rra	r12		;
    64be:	0c 11       	rra	r12		;
    64c0:	0c 11       	rra	r12		;
    64c2:	0c 11       	rra	r12		;
    64c4:	0c 11       	rra	r12		;
    64c6:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    64ca:	0c 93       	cmp	#0,	r12	;r3 As==00
    64cc:	07 20       	jnz	$+16     	;abs 0x64dc
    64ce:	00 3c       	jmp	$+2      	;abs 0x64d0
    64d0:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    64d4:	3c 90 03 00 	cmp	#3,	r12	;
    64d8:	06 38       	jl	$+14     	;abs 0x64e6
    64da:	00 3c       	jmp	$+2      	;abs 0x64dc
    64dc:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfffffff0
    64e0:	b0 12 bc 66 	call	#26300		;#0x66bc
    64e4:	00 3c       	jmp	$+2      	;abs 0x64e6
    64e6:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    64ea:	0c 11       	rra	r12		;
    64ec:	0c 11       	rra	r12		;
    64ee:	0c 11       	rra	r12		;
    64f0:	0c 11       	rra	r12		;
    64f2:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    64f6:	0c 93       	cmp	#0,	r12	;r3 As==00
    64f8:	06 20       	jnz	$+14     	;abs 0x6506
    64fa:	00 3c       	jmp	$+2      	;abs 0x64fc
    64fc:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6500:	2c 93       	cmp	#2,	r12	;r3 As==10
    6502:	06 38       	jl	$+14     	;abs 0x6510
    6504:	00 3c       	jmp	$+2      	;abs 0x6506
    6506:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfffffff0
    650a:	b0 12 bc 66 	call	#26300		;#0x66bc
    650e:	00 3c       	jmp	$+2      	;abs 0x6510
    6510:	1f 44 f8 ff 	mov	-8(r4),	r15	;
    6514:	b0 12 bc 66 	call	#26300		;#0x66bc
    6518:	15 3c       	jmp	$+44     	;abs 0x6544
    651a:	1c 44 fc ff 	mov	-4(r4),	r12	;
    651e:	0d 4c       	mov	r12,	r13	;
    6520:	1d 53       	inc	r13		;
    6522:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    6526:	6e 4c       	mov.b	@r12,	r14	;
    6528:	c4 4e fb ff 	mov.b	r14,	-5(r4)	; 0xfffb
    652c:	5c 44 fb ff 	mov.b	-5(r4),	r12	;
    6530:	8c 11       	sxt	r12		;
    6532:	3c 50 d0 ff 	add	#65488,	r12	;#0xffd0
    6536:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    653a:	c9 3e       	jmp	$-620    	;abs 0x62ce
    653c:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    6540:	10 3c       	jmp	$+34     	;abs 0x6562
    6542:	02 3c       	jmp	$+6      	;abs 0x6548
    6544:	0a 3c       	jmp	$+22     	;abs 0x655a
    6546:	00 3c       	jmp	$+2      	;abs 0x6548
    6548:	5c 44 fb ff 	mov.b	-5(r4),	r12	;
    654c:	8c 11       	sxt	r12		;
    654e:	0f 4c       	mov	r12,	r15	;
    6550:	b0 12 f4 66 	call	#26356		;#0x66f4
    6554:	84 4f e2 ff 	mov	r15,	-30(r4)	; 0xffe2
    6558:	00 3c       	jmp	$+2      	;abs 0x655a
    655a:	a2 3e       	jmp	$-698    	;abs 0x62a0
    655c:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    6560:	00 3c       	jmp	$+2      	;abs 0x6562
    6562:	1f 44 fe ff 	mov	-2(r4),	r15	;
    6566:	31 50 20 00 	add	#32,	r1	;#0x0020
    656a:	34 41       	pop	r4		;
    656c:	30 41       	ret			
	...

00006570 <xtoa>:
    6570:	04 12       	push	r4		;
    6572:	04 41       	mov	r1,	r4	;
    6574:	0b 12       	push	r11		;
    6576:	0a 12       	push	r10		;
    6578:	09 12       	push	r9		;
    657a:	31 80 22 00 	sub	#34,	r1	;#0x0022
    657e:	0c 4f       	mov	r15,	r12	;
    6580:	0b 4e       	mov	r14,	r11	;
    6582:	0a 4d       	mov	r13,	r10	;
    6584:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    6588:	84 4e f4 ff 	mov	r14,	-12(r4)	; 0xfff4
    658c:	84 4d f2 ff 	mov	r13,	-14(r4)	; 0xfff2
    6590:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    6594:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfffffff4
    6598:	0e dd       	bis	r13,	r14	;
    659a:	0e 93       	cmp	#0,	r14	;r3 As==00
    659c:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    65a0:	84 4a e8 ff 	mov	r10,	-24(r4)	; 0xffe8
    65a4:	84 4b e6 ff 	mov	r11,	-26(r4)	; 0xffe6
    65a8:	7a 24       	jz	$+246    	;abs 0x669e
    65aa:	00 3c       	jmp	$+2      	;abs 0x65ac
    65ac:	00 3c       	jmp	$+2      	;abs 0x65ae
    65ae:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    65b2:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    65b6:	1e 44 f2 ff 	mov	-14(r4),r14	;0xfffffff2
    65ba:	2f 4e       	mov	@r14,	r15	;
    65bc:	1e 4e 02 00 	mov	2(r14),	r14	;
    65c0:	0d 9e       	cmp	r14,	r13	;
    65c2:	0b 42       	mov	r2,	r11	;
    65c4:	1b f3       	and	#1,	r11	;r3 As==01
    65c6:	0c 9f       	cmp	r15,	r12	;
    65c8:	0c 42       	mov	r2,	r12	;
    65ca:	1c f3       	and	#1,	r12	;r3 As==01
    65cc:	0d 9e       	cmp	r14,	r13	;
    65ce:	84 4b e4 ff 	mov	r11,	-28(r4)	; 0xffe4
    65d2:	84 4c e2 ff 	mov	r12,	-30(r4)	; 0xffe2
    65d6:	04 24       	jz	$+10     	;abs 0x65e0
    65d8:	1c 44 e4 ff 	mov	-28(r4),r12	;0xffffffe4
    65dc:	84 4c e2 ff 	mov	r12,	-30(r4)	; 0xffe2
    65e0:	1c 44 e2 ff 	mov	-30(r4),r12	;0xffffffe2
    65e4:	1c b3       	bit	#1,	r12	;r3 As==01
    65e6:	07 20       	jnz	$+16     	;abs 0x65f6
    65e8:	00 3c       	jmp	$+2      	;abs 0x65ea
    65ea:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    65ee:	2c 52       	add	#4,	r12	;r2 As==10
    65f0:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    65f4:	dc 3f       	jmp	$-70     	;abs 0x65ae
    65f6:	00 3c       	jmp	$+2      	;abs 0x65f8
    65f8:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    65fc:	0d 4c       	mov	r12,	r13	;
    65fe:	2d 52       	add	#4,	r13	;r2 As==10
    6600:	84 4d f2 ff 	mov	r13,	-14(r4)	; 0xfff2
    6604:	2d 4c       	mov	@r12,	r13	;
    6606:	1c 4c 02 00 	mov	2(r12),	r12	;
    660a:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    660e:	84 4d ec ff 	mov	r13,	-20(r4)	; 0xffec
    6612:	f4 40 30 00 	mov.b	#48,	-15(r4)	;#0x0030, 0xfff1
    6616:	f1 ff 
    6618:	00 3c       	jmp	$+2      	;abs 0x661a
    661a:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    661e:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    6622:	1e 44 ec ff 	mov	-20(r4),r14	;0xffffffec
    6626:	1f 44 ee ff 	mov	-18(r4),r15	;0xffffffee
    662a:	0d 9f       	cmp	r15,	r13	;
    662c:	0b 42       	mov	r2,	r11	;
    662e:	1a 43       	mov	#1,	r10	;r3 As==01
    6630:	09 4a       	mov	r10,	r9	;
    6632:	09 cb       	bic	r11,	r9	;
    6634:	0c 9e       	cmp	r14,	r12	;
    6636:	0c 42       	mov	r2,	r12	;
    6638:	0a cc       	bic	r12,	r10	;
    663a:	0d 9f       	cmp	r15,	r13	;
    663c:	84 49 e0 ff 	mov	r9,	-32(r4)	; 0xffe0
    6640:	84 4a de ff 	mov	r10,	-34(r4)	; 0xffde
    6644:	04 24       	jz	$+10     	;abs 0x664e
    6646:	1c 44 e0 ff 	mov	-32(r4),r12	;0xffffffe0
    664a:	84 4c de ff 	mov	r12,	-34(r4)	; 0xffde
    664e:	1c 44 de ff 	mov	-34(r4),r12	;0xffffffde
    6652:	1c b3       	bit	#1,	r12	;r3 As==01
    6654:	15 20       	jnz	$+44     	;abs 0x6680
    6656:	00 3c       	jmp	$+2      	;abs 0x6658
    6658:	5c 44 f1 ff 	mov.b	-15(r4),r12	;0xfffffff1
    665c:	5c 53       	inc.b	r12		;
    665e:	c4 4c f1 ff 	mov.b	r12,	-15(r4)	; 0xfff1
    6662:	1d 44 ec ff 	mov	-20(r4),r13	;0xffffffec
    6666:	1e 44 ee ff 	mov	-18(r4),r14	;0xffffffee
    666a:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfffffff4
    666e:	1b 44 f6 ff 	mov	-10(r4),r11	;0xfffffff6
    6672:	0f 8d       	sub	r13,	r15	;
    6674:	0b 7e       	subc	r14,	r11	;
    6676:	84 4b f6 ff 	mov	r11,	-10(r4)	; 0xfff6
    667a:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    667e:	cd 3f       	jmp	$-100    	;abs 0x661a
    6680:	5c 44 f1 ff 	mov.b	-15(r4),r12	;0xfffffff1
    6684:	8c 11       	sxt	r12		;
    6686:	0f 4c       	mov	r12,	r15	;
    6688:	b0 12 f4 66 	call	#26356		;#0x66f4
    668c:	84 4f dc ff 	mov	r15,	-36(r4)	; 0xffdc
    6690:	00 3c       	jmp	$+2      	;abs 0x6692
    6692:	5c 44 ec ff 	mov.b	-20(r4),r12	;0xffffffec
    6696:	5c b3       	bit.b	#1,	r12	;r3 As==01
    6698:	af 27       	jz	$-160    	;abs 0x65f8
    669a:	00 3c       	jmp	$+2      	;abs 0x669c
    669c:	07 3c       	jmp	$+16     	;abs 0x66ac
    669e:	3f 40 30 00 	mov	#48,	r15	;#0x0030
    66a2:	b0 12 f4 66 	call	#26356		;#0x66f4
    66a6:	84 4f da ff 	mov	r15,	-38(r4)	; 0xffda
    66aa:	00 3c       	jmp	$+2      	;abs 0x66ac
    66ac:	31 50 22 00 	add	#34,	r1	;#0x0022
    66b0:	39 41       	pop	r9		;
    66b2:	3a 41       	pop	r10		;
    66b4:	3b 41       	pop	r11		;
    66b6:	34 41       	pop	r4		;
    66b8:	30 41       	ret			
	...

000066bc <puth>:
    66bc:	04 12       	push	r4		;
    66be:	04 41       	mov	r1,	r4	;
    66c0:	31 80 06 00 	sub	#6,	r1	;
    66c4:	0c 4f       	mov	r15,	r12	;
    66c6:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    66ca:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    66ce:	5f 4f ce 44 	mov.b	17614(r15),r15	;0x044ce
    66d2:	8f 11       	sxt	r15		;
    66d4:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    66d8:	b0 12 f4 66 	call	#26356		;#0x66f4
    66dc:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    66e0:	31 50 06 00 	add	#6,	r1	;
    66e4:	34 41       	pop	r4		;
    66e6:	30 41       	ret			

000066e8 <mspconsole_init>:
    66e8:	04 12       	push	r4		;
    66ea:	04 41       	mov	r1,	r4	;
    66ec:	b0 12 c6 6b 	call	#27590		;#0x6bc6
    66f0:	34 41       	pop	r4		;
    66f2:	30 41       	ret			

000066f4 <io_putchar>:
    66f4:	04 12       	push	r4		;
    66f6:	04 41       	mov	r1,	r4	;
    66f8:	31 80 06 00 	sub	#6,	r1	;
    66fc:	0c 4f       	mov	r15,	r12	;
    66fe:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6702:	5d 44 fe ff 	mov.b	-2(r4),	r13	;
    6706:	c4 4d fd ff 	mov.b	r13,	-3(r4)	; 0xfffd
    670a:	0f 44       	mov	r4,	r15	;
    670c:	3f 80 03 00 	sub	#3,	r15	;
    6710:	1e 43       	mov	#1,	r14	;r3 As==01
    6712:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    6716:	b0 12 52 6c 	call	#27730		;#0x6c52
    671a:	1f 44 fe ff 	mov	-2(r4),	r15	;
    671e:	31 50 06 00 	add	#6,	r1	;
    6722:	34 41       	pop	r4		;
    6724:	30 41       	ret			
	...

00006728 <io_puts_no_newline>:
    6728:	04 12       	push	r4		;
    672a:	04 41       	mov	r1,	r4	;
    672c:	31 82       	sub	#8,	r1	;r2 As==11
    672e:	0c 4f       	mov	r15,	r12	;
    6730:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6734:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    6738:	1f 44 fe ff 	mov	-2(r4),	r15	;
    673c:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    6740:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    6744:	00 3c       	jmp	$+2      	;abs 0x6746
    6746:	1c 44 fa ff 	mov	-6(r4),	r12	;
    674a:	0d 4c       	mov	r12,	r13	;
    674c:	1d 53       	inc	r13		;
    674e:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    6752:	6e 4c       	mov.b	@r12,	r14	;
    6754:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    6756:	07 24       	jz	$+16     	;abs 0x6766
    6758:	00 3c       	jmp	$+2      	;abs 0x675a
    675a:	1c 44 fc ff 	mov	-4(r4),	r12	;
    675e:	1c 53       	inc	r12		;
    6760:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    6764:	f0 3f       	jmp	$-30     	;abs 0x6746
    6766:	1f 44 fe ff 	mov	-2(r4),	r15	;
    676a:	1e 44 fc ff 	mov	-4(r4),	r14	;
    676e:	b0 12 52 6c 	call	#27730		;#0x6c52
    6772:	1f 44 fc ff 	mov	-4(r4),	r15	;
    6776:	31 52       	add	#8,	r1	;r2 As==11
    6778:	34 41       	pop	r4		;
    677a:	30 41       	ret			

0000677c <io_puts>:
    677c:	04 12       	push	r4		;
    677e:	04 41       	mov	r1,	r4	;
    6780:	31 82       	sub	#8,	r1	;r2 As==11
    6782:	0c 4f       	mov	r15,	r12	;
    6784:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6788:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    678c:	b0 12 28 67 	call	#26408		;#0x6728
    6790:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    6794:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    6798:	b0 12 f4 66 	call	#26356		;#0x66f4
    679c:	1c 44 fc ff 	mov	-4(r4),	r12	;
    67a0:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    67a4:	0f 4c       	mov	r12,	r15	;
    67a6:	31 52       	add	#8,	r1	;r2 As==11
    67a8:	34 41       	pop	r4		;
    67aa:	30 41       	ret			

000067ac <task_prologue>:
    67ac:	04 12       	push	r4		;
    67ae:	04 41       	mov	r1,	r4	;
    67b0:	31 80 06 00 	sub	#6,	r1	;
    67b4:	1c 42 d4 54 	mov	&0x54d4,r12	;0x54d4
    67b8:	1c 4c 04 00 	mov	4(r12),	r12	;
    67bc:	2c 4c       	mov	@r12,	r12	;
    67be:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    67c2:	1c 42 d4 54 	mov	&0x54d4,r12	;0x54d4
    67c6:	1c 4c 02 00 	mov	2(r12),	r12	;
    67ca:	1d 44 fe ff 	mov	-2(r4),	r13	;
    67ce:	1d 4d 08 00 	mov	8(r13),	r13	;
    67d2:	0c 9d       	cmp	r13,	r12	;
    67d4:	3a 24       	jz	$+118    	;abs 0x684a
    67d6:	00 3c       	jmp	$+2      	;abs 0x67d8
    67d8:	00 3c       	jmp	$+2      	;abs 0x67da
    67da:	1c 42 b6 54 	mov	&0x54b6,r12	;0x54b6
    67de:	1d 42 b8 54 	mov	&0x54b8,r13	;0x54b8
    67e2:	0c 9d       	cmp	r13,	r12	;
    67e4:	25 2c       	jc	$+76     	;abs 0x6830
    67e6:	00 3c       	jmp	$+2      	;abs 0x67e8
    67e8:	1c 42 b6 54 	mov	&0x54b6,r12	;0x54b6
    67ec:	0c 5c       	rla	r12		;
    67ee:	1c 4c d8 54 	mov	21720(r12),r12	;0x054d8
    67f2:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    67f6:	0c 93       	cmp	#0,	r12	;r3 As==00
    67f8:	15 24       	jz	$+44     	;abs 0x6824
    67fa:	00 3c       	jmp	$+2      	;abs 0x67fc
    67fc:	1c 42 b6 54 	mov	&0x54b6,r12	;0x54b6
    6800:	0c 5c       	rla	r12		;
    6802:	1c 4c 1a 55 	mov	21786(r12),r12	;0x0551a
    6806:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    680a:	1f 44 fc ff 	mov	-4(r4),	r15	;
    680e:	1c 42 b6 54 	mov	&0x54b6,r12	;0x54b6
    6812:	0c 5c       	rla	r12		;
    6814:	3c 50 5c 55 	add	#21852,	r12	;#0x555c
    6818:	1d 44 fa ff 	mov	-6(r4),	r13	;
    681c:	0e 4c       	mov	r12,	r14	;
    681e:	b0 12 f4 61 	call	#25076		;#0x61f4
    6822:	00 3c       	jmp	$+2      	;abs 0x6824
    6824:	1c 42 b6 54 	mov	&0x54b6,r12	;0x54b6
    6828:	1c 53       	inc	r12		;
    682a:	82 4c b6 54 	mov	r12,	&0x54b6	;
    682e:	d5 3f       	jmp	$-84     	;abs 0x67da
    6830:	82 43 b8 54 	mov	#0,	&0x54b8	;r3 As==00
    6834:	82 43 b6 54 	mov	#0,	&0x54b6	;r3 As==00
    6838:	1c 42 d4 54 	mov	&0x54d4,r12	;0x54d4
    683c:	1c 4c 02 00 	mov	2(r12),	r12	;
    6840:	1d 44 fe ff 	mov	-2(r4),	r13	;
    6844:	8d 4c 08 00 	mov	r12,	8(r13)	;
    6848:	03 3c       	jmp	$+8      	;abs 0x6850
    684a:	82 43 b8 54 	mov	#0,	&0x54b8	;r3 As==00
    684e:	00 3c       	jmp	$+2      	;abs 0x6850
    6850:	31 50 06 00 	add	#6,	r1	;
    6854:	34 41       	pop	r4		;
    6856:	30 41       	ret			

00006858 <transition_to>:
    6858:	04 12       	push	r4		;
    685a:	04 41       	mov	r1,	r4	;
    685c:	31 80 0a 00 	sub	#10,	r1	;#0x000a
    6860:	0c 4f       	mov	r15,	r12	;
    6862:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6866:	1f 42 d4 54 	mov	&0x54d4,r15	;0x54d4
    686a:	3d 40 ce 54 	mov	#21710,	r13	;#0x54ce
    686e:	3e 40 c2 54 	mov	#21698,	r14	;#0x54c2
    6872:	0f 9d       	cmp	r13,	r15	;
    6874:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    6878:	84 4d f8 ff 	mov	r13,	-8(r4)	; 0xfff8
    687c:	84 4e f6 ff 	mov	r14,	-10(r4)	; 0xfff6
    6880:	04 24       	jz	$+10     	;abs 0x688a
    6882:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6886:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    688a:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    688e:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    6892:	1d 44 fe ff 	mov	-2(r4),	r13	;
    6896:	8c 4d 00 00 	mov	r13,	0(r12)	;
    689a:	1c 42 d4 54 	mov	&0x54d4,r12	;0x54d4
    689e:	1c 4c 02 00 	mov	2(r12),	r12	;
    68a2:	1c 53       	inc	r12		;
    68a4:	1d 44 fc ff 	mov	-4(r4),	r13	;
    68a8:	8d 4c 02 00 	mov	r12,	2(r13)	;
    68ac:	1c 42 d4 54 	mov	&0x54d4,r12	;0x54d4
    68b0:	1c 4c 02 00 	mov	2(r12),	r12	;
    68b4:	1d 44 fc ff 	mov	-4(r4),	r13	;
    68b8:	1d 4d 04 00 	mov	4(r13),	r13	;
    68bc:	8d 4c 02 00 	mov	r12,	2(r13)	;
    68c0:	1c 42 d4 54 	mov	&0x54d4,r12	;0x54d4
    68c4:	2c 4c       	mov	@r12,	r12	;
    68c6:	1d 44 fc ff 	mov	-4(r4),	r13	;
    68ca:	1d 4d 04 00 	mov	4(r13),	r13	;
    68ce:	8d 4c 00 00 	mov	r12,	0(r13)	;
    68d2:	1c 44 fc ff 	mov	-4(r4),	r12	;
    68d6:	82 4c d4 54 	mov	r12,	&0x54d4	;
    68da:	b0 12 ac 67 	call	#26540		;#0x67ac
    68de:	1c 44 fe ff 	mov	-2(r4),	r12	;
    68e2:	2c 4c       	mov	@r12,	r12	;
    68e4:	31 40 00 24 	mov	#9216,	r1	;#0x2400
    68e8:	00 4c       	br	r12		;
    68ea:	31 50 0a 00 	add	#10,	r1	;#0x000a
    68ee:	34 41       	pop	r4		;
    68f0:	30 41       	ret			
	...

000068f4 <chan_in>:
    68f4:	04 12       	push	r4		;
    68f6:	04 41       	mov	r1,	r4	;
    68f8:	0b 12       	push	r11		;
    68fa:	0a 12       	push	r10		;
    68fc:	31 80 18 00 	sub	#24,	r1	;#0x0018
    6900:	0c 4d       	mov	r13,	r12	;
    6902:	0b 4e       	mov	r14,	r11	;
    6904:	0a 4f       	mov	r15,	r10	;
    6906:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    690a:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    690e:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    6912:	84 43 f2 ff 	mov	#0,	-14(r4)	;r3 As==00, 0xfff2
    6916:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    691a:	2d 53       	incd	r13		;
    691c:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    6920:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    6924:	84 4d ec ff 	mov	r13,	-20(r4)	; 0xffec
    6928:	1d 44 ee ff 	mov	-18(r4),r13	;0xffffffee
    692c:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfffffff6
    6930:	0d 5e       	add	r14,	r13	;
    6932:	84 4d ea ff 	mov	r13,	-22(r4)	; 0xffea
    6936:	84 4d f0 ff 	mov	r13,	-16(r4)	; 0xfff0
    693a:	0f 4d       	mov	r13,	r15	;
    693c:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    6940:	84 4b e6 ff 	mov	r11,	-26(r4)	; 0xffe6
    6944:	84 4a e4 ff 	mov	r10,	-28(r4)	; 0xffe4
    6948:	31 50 18 00 	add	#24,	r1	;#0x0018
    694c:	3a 41       	pop	r10		;
    694e:	3b 41       	pop	r11		;
    6950:	34 41       	pop	r4		;
    6952:	30 41       	ret			

00006954 <chan_out>:
    6954:	04 12       	push	r4		;
    6956:	04 41       	mov	r1,	r4	;
    6958:	31 80 14 00 	sub	#20,	r1	;#0x0014
    695c:	1c 44 0a 00 	mov	10(r4),	r12	;0x0000a
    6960:	1d 44 08 00 	mov	8(r4),	r13	;
    6964:	1e 44 06 00 	mov	6(r4),	r14	;
    6968:	1f 44 04 00 	mov	4(r4),	r15	;
    696c:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6970:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    6974:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    6978:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    697c:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6980:	2c 53       	incd	r12		;
    6982:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    6986:	1c 44 fa ff 	mov	-6(r4),	r12	;
    698a:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    698e:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    6992:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    6996:	0c 5d       	add	r13,	r12	;
    6998:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    699c:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    69a0:	1e 44 fe ff 	mov	-2(r4),	r14	;
    69a4:	1d 44 fc ff 	mov	-4(r4),	r13	;
    69a8:	0f 4c       	mov	r12,	r15	;
    69aa:	b0 12 f4 61 	call	#25076		;#0x61f4
    69ae:	31 50 14 00 	add	#20,	r1	;#0x0014
    69b2:	34 41       	pop	r4		;
    69b4:	30 41       	ret			
	...

000069b8 <write_to_gbuf>:
    69b8:	04 12       	push	r4		;
    69ba:	04 41       	mov	r1,	r4	;
    69bc:	0b 12       	push	r11		;
    69be:	0a 12       	push	r10		;
    69c0:	31 80 12 00 	sub	#18,	r1	;#0x0012
    69c4:	0c 4d       	mov	r13,	r12	;
    69c6:	0b 4e       	mov	r14,	r11	;
    69c8:	0a 4f       	mov	r15,	r10	;
    69ca:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    69ce:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    69d2:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    69d6:	1d 42 b8 54 	mov	&0x54b8,r13	;0x54b8
    69da:	0d 5d       	rla	r13		;
    69dc:	3d 50 5c 55 	add	#21852,	r13	;#0x555c
    69e0:	1e 44 fa ff 	mov	-6(r4),	r14	;
    69e4:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfffffff6
    69e8:	84 4f f0 ff 	mov	r15,	-16(r4)	; 0xfff0
    69ec:	0f 4d       	mov	r13,	r15	;
    69ee:	1d 44 f0 ff 	mov	-16(r4),r13	;0xfffffff0
    69f2:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    69f6:	84 4b ec ff 	mov	r11,	-20(r4)	; 0xffec
    69fa:	84 4a ea ff 	mov	r10,	-22(r4)	; 0xffea
    69fe:	b0 12 f4 61 	call	#25076		;#0x61f4
    6a02:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6a06:	1d 42 b8 54 	mov	&0x54b8,r13	;0x54b8
    6a0a:	0d 5d       	rla	r13		;
    6a0c:	8d 4c 1a 55 	mov	r12,	21786(r13); 0x551a
    6a10:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6a14:	1d 42 b8 54 	mov	&0x54b8,r13	;0x54b8
    6a18:	0d 5d       	rla	r13		;
    6a1a:	8d 4c d8 54 	mov	r12,	21720(r13); 0x54d8
    6a1e:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6a22:	3c 90 03 00 	cmp	#3,	r12	;
    6a26:	2a 28       	jnc	$+86     	;abs 0x6a7c
    6a28:	00 3c       	jmp	$+2      	;abs 0x6a2a
    6a2a:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6a2e:	3c 53       	add	#-1,	r12	;r3 As==11
    6a30:	12 c3       	clrc			
    6a32:	0c 10       	rrc	r12		;
    6a34:	1c 53       	inc	r12		;
    6a36:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    6a3a:	94 43 f2 ff 	mov	#1,	-14(r4)	;r3 As==01, 0xfff2
    6a3e:	00 3c       	jmp	$+2      	;abs 0x6a40
    6a40:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6a44:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    6a48:	0c 9d       	cmp	r13,	r12	;
    6a4a:	10 2c       	jc	$+34     	;abs 0x6a6c
    6a4c:	00 3c       	jmp	$+2      	;abs 0x6a4e
    6a4e:	1c 42 b8 54 	mov	&0x54b8,r12	;0x54b8
    6a52:	1d 44 f2 ff 	mov	-14(r4),r13	;0xfffffff2
    6a56:	0c 5d       	add	r13,	r12	;
    6a58:	0c 5c       	rla	r12		;
    6a5a:	8c 43 d8 54 	mov	#0,	21720(r12);r3 As==00, 0x54d8
    6a5e:	00 3c       	jmp	$+2      	;abs 0x6a60
    6a60:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6a64:	1c 53       	inc	r12		;
    6a66:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    6a6a:	ea 3f       	jmp	$-42     	;abs 0x6a40
    6a6c:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6a70:	1d 42 b8 54 	mov	&0x54b8,r13	;0x54b8
    6a74:	0d 5c       	add	r12,	r13	;
    6a76:	82 4d b8 54 	mov	r13,	&0x54b8	;
    6a7a:	06 3c       	jmp	$+14     	;abs 0x6a88
    6a7c:	1c 42 b8 54 	mov	&0x54b8,r12	;0x54b8
    6a80:	1c 53       	inc	r12		;
    6a82:	82 4c b8 54 	mov	r12,	&0x54b8	;
    6a86:	00 3c       	jmp	$+2      	;abs 0x6a88
    6a88:	31 50 12 00 	add	#18,	r1	;#0x0012
    6a8c:	3a 41       	pop	r10		;
    6a8e:	3b 41       	pop	r11		;
    6a90:	34 41       	pop	r4		;
    6a92:	30 41       	ret			

00006a94 <chan_out_gbuf>:
    6a94:	04 12       	push	r4		;
    6a96:	04 41       	mov	r1,	r4	;
    6a98:	31 80 18 00 	sub	#24,	r1	;#0x0018
    6a9c:	1c 44 0a 00 	mov	10(r4),	r12	;0x0000a
    6aa0:	1d 44 08 00 	mov	8(r4),	r13	;
    6aa4:	1e 44 06 00 	mov	6(r4),	r14	;
    6aa8:	1f 44 04 00 	mov	4(r4),	r15	;
    6aac:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6ab0:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    6ab4:	84 4d fa ff 	mov	r13,	-6(r4)	; 0xfffa
    6ab8:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    6abc:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6ac0:	2c 53       	incd	r12		;
    6ac2:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    6ac6:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6aca:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    6ace:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    6ad2:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    6ad6:	0c 5d       	add	r13,	r12	;
    6ad8:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    6adc:	1c 42 b8 54 	mov	&0x54b8,r12	;0x54b8
    6ae0:	0c 5c       	rla	r12		;
    6ae2:	3c 50 5c 55 	add	#21852,	r12	;#0x555c
    6ae6:	1e 44 fe ff 	mov	-2(r4),	r14	;
    6aea:	1d 44 fc ff 	mov	-4(r4),	r13	;
    6aee:	0f 4c       	mov	r12,	r15	;
    6af0:	b0 12 f4 61 	call	#25076		;#0x61f4
    6af4:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6af8:	1d 42 b8 54 	mov	&0x54b8,r13	;0x54b8
    6afc:	0d 5d       	rla	r13		;
    6afe:	8d 4c 1a 55 	mov	r12,	21786(r13); 0x551a
    6b02:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6b06:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    6b0a:	1d 42 b8 54 	mov	&0x54b8,r13	;0x54b8
    6b0e:	0d 5d       	rla	r13		;
    6b10:	8d 4c d8 54 	mov	r12,	21720(r13); 0x54d8
    6b14:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6b18:	3c 90 03 00 	cmp	#3,	r12	;
    6b1c:	2a 28       	jnc	$+86     	;abs 0x6b72
    6b1e:	00 3c       	jmp	$+2      	;abs 0x6b20
    6b20:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6b24:	3c 53       	add	#-1,	r12	;r3 As==11
    6b26:	12 c3       	clrc			
    6b28:	0c 10       	rrc	r12		;
    6b2a:	1c 53       	inc	r12		;
    6b2c:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    6b30:	94 43 e8 ff 	mov	#1,	-24(r4)	;r3 As==01, 0xffe8
    6b34:	00 3c       	jmp	$+2      	;abs 0x6b36
    6b36:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    6b3a:	1d 44 ea ff 	mov	-22(r4),r13	;0xffffffea
    6b3e:	0c 9d       	cmp	r13,	r12	;
    6b40:	10 2c       	jc	$+34     	;abs 0x6b62
    6b42:	00 3c       	jmp	$+2      	;abs 0x6b44
    6b44:	1c 42 b8 54 	mov	&0x54b8,r12	;0x54b8
    6b48:	1d 44 e8 ff 	mov	-24(r4),r13	;0xffffffe8
    6b4c:	0c 5d       	add	r13,	r12	;
    6b4e:	0c 5c       	rla	r12		;
    6b50:	8c 43 d8 54 	mov	#0,	21720(r12);r3 As==00, 0x54d8
    6b54:	00 3c       	jmp	$+2      	;abs 0x6b56
    6b56:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    6b5a:	1c 53       	inc	r12		;
    6b5c:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    6b60:	ea 3f       	jmp	$-42     	;abs 0x6b36
    6b62:	1c 44 ea ff 	mov	-22(r4),r12	;0xffffffea
    6b66:	1d 42 b8 54 	mov	&0x54b8,r13	;0x54b8
    6b6a:	0d 5c       	add	r12,	r13	;
    6b6c:	82 4d b8 54 	mov	r13,	&0x54b8	;
    6b70:	06 3c       	jmp	$+14     	;abs 0x6b7e
    6b72:	1c 42 b8 54 	mov	&0x54b8,r12	;0x54b8
    6b76:	1c 53       	inc	r12		;
    6b78:	82 4c b8 54 	mov	r12,	&0x54b8	;
    6b7c:	00 3c       	jmp	$+2      	;abs 0x6b7e
    6b7e:	31 50 18 00 	add	#24,	r1	;#0x0018
    6b82:	34 41       	pop	r4		;
    6b84:	30 41       	ret			
	...

00006b88 <main>:
    6b88:	04 12       	push	r4		;
    6b8a:	04 41       	mov	r1,	r4	;
    6b8c:	21 83       	decd	r1		;
    6b8e:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    6b92:	b0 12 5c 61 	call	#24924		;#0x615c
    6b96:	1c 42 d6 54 	mov	&0x54d6,r12	;0x54d6
    6b9a:	1c 53       	inc	r12		;
    6b9c:	82 4c d6 54 	mov	r12,	&0x54d6	;
    6ba0:	b0 12 ac 67 	call	#26540		;#0x67ac
    6ba4:	1c 42 d4 54 	mov	&0x54d4,r12	;0x54d4
    6ba8:	2c 4c       	mov	@r12,	r12	;
    6baa:	2c 4c       	mov	@r12,	r12	;
    6bac:	00 4c       	br	r12		;
    6bae:	0f 43       	clr	r15		;
    6bb0:	21 53       	incd	r1		;
    6bb2:	34 41       	pop	r4		;
    6bb4:	30 41       	ret			
	...

00006bb8 <__mulhi3hw_noint>:
    6bb8:	82 4f c0 04 	mov	r15,	&0x04c0	;
    6bbc:	82 4e c8 04 	mov	r14,	&0x04c8	;
    6bc0:	1f 42 ca 04 	mov	&0x04ca,r15	;0x04ca
    6bc4:	30 41       	ret			

00006bc6 <UART_init>:
 * @todo Currently assumes an 8MHz SMCLK. Make robust to clock frequency changes by using 32k ACLK.
 */
void UART_init(void) {

    // Configure USCI_A0 for UART mode
    UCA0CTLW0 = UCSWRST;                      // Put eUSCI in reset
    6bc6:	92 43 c0 05 	mov	#1,	&0x05c0	;r3 As==01
    UCA0CTLW0 |= UCSSEL__SMCLK;               // CLK = SMCLK
    6bca:	b2 d0 80 00 	bis	#128,	&0x05c0	;#0x0080
    6bce:	c0 05 
    UCA0BR1 = 0;
    UCA0MCTLW = UCOS16 | UCBRF_2 | (0xBB << 8);
#endif // UART_BAUDRATE
#elif UART_CLOCK == 8000000
#if UART_BAUDRATE == 115200
    UCA0BR0 = 4;
    6bd0:	e2 42 c6 05 	mov.b	#4,	&0x05c6	;r2 As==10
    UCA0BR1 = 0;
    6bd4:	c2 43 c7 05 	mov.b	#0,	&0x05c7	;r3 As==00
    UCA0MCTLW = UCOS16 | UCBRF_4 | (0x55 << 8);
    6bd8:	b2 40 41 55 	mov	#21825,	&0x05c8	;#0x5541
    6bdc:	c8 05 
#endif // UART_BAUDRATE
#endif // UART_CLOCK

#if defined(__MSP430FR5969__) || defined(__MSP430FR5949__)
    PUART_TXSEL0 &= ~PIN_UART_TX; // TX pin to UART module
    6bde:	d2 c3 0b 02 	bic.b	#1,	&0x020b	;r3 As==01
    PUART_TXSEL1 |= PIN_UART_TX;
    6be2:	d2 d3 0d 02 	bis.b	#1,	&0x020d	;r3 As==01

    PUART_RXSEL0 &= ~PIN_UART_RX; // RX pin to UART module
    6be6:	e2 c3 0b 02 	bic.b	#2,	&0x020b	;r3 As==10
    PUART_RXSEL1 |= PIN_UART_RX;
    6bea:	e2 d3 0d 02 	bis.b	#2,	&0x020d	;r3 As==10
    PUART_RXSEL1 &= ~PIN_UART_RX;
#else
#error MCU not supported
#endif

    UCA0CTLW0 &= ~UCSWRST;                    // Initialize eUSCI
    6bee:	92 c3 c0 05 	bic	#1,	&0x05c0	;r3 As==01

    // Initialize module state
    UART_SM.isTxBusy = FALSE;
    6bf2:	3c 40 22 1c 	mov	#7202,	r12	;#0x1c22
    6bf6:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    UART_SM.txBytesRemaining = 0;
    6bfa:	8c 43 04 00 	mov	#0,	4(r12)	;r3 As==00
    UART_SM.isRxBusy = FALSE;
    6bfe:	cc 43 06 00 	mov.b	#0,	6(r12)	;r3 As==00
    UART_SM.rxBytesRemaining = 0;
    6c02:	8c 43 0a 00 	mov	#0,	10(r12)	;r3 As==00, 0x000a

}
    6c06:	30 41       	ret			

00006c08 <UART_teardown>:
void UART_teardown()
{
    // disable UART
    // Not sure how to do this best, but set all UCA0* registers to
    // their default values.  See User's Guide for default values.
    PUART_TXSEL0 &= ~PIN_UART_TX;
    6c08:	d2 c3 0b 02 	bic.b	#1,	&0x020b	;r3 As==01
    PUART_TXSEL1 &= ~PIN_UART_TX;
    6c0c:	d2 c3 0d 02 	bic.b	#1,	&0x020d	;r3 As==01
    PUART_RXSEL0 &= ~PIN_UART_RX;
    6c10:	e2 c3 0b 02 	bic.b	#2,	&0x020b	;r3 As==10
    PUART_RXSEL1 &= ~PIN_UART_RX;
    6c14:	e2 c3 0d 02 	bic.b	#2,	&0x020d	;r3 As==10
    UCA0CTLW0 = 0x0001;
    6c18:	92 43 c0 05 	mov	#1,	&0x05c0	;r3 As==01
    UCA0BR0 = 0x0000;
    6c1c:	c2 43 c6 05 	mov.b	#0,	&0x05c6	;r3 As==00
    UCA0MCTLW = 0x0000;
    6c20:	82 43 c8 05 	mov	#0,	&0x05c8	;r3 As==00
    UCA0IE = 0x0000;
    6c24:	82 43 da 05 	mov	#0,	&0x05da	;r3 As==00
    UCA0IFG = 0x0000;
    6c28:	82 43 dc 05 	mov	#0,	&0x05dc	;r3 As==00
}
    6c2c:	30 41       	ret			

00006c2e <UART_asyncSend>:
 * @param size the number of bytes to send
 */
void UART_asyncSend(uint8_t* txBuf, uint16_t size) {

    // Block until prior transmission has completed
    while (UART_SM.isTxBusy)
    6c2e:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6c32:	6e 4f       	mov.b	@r15,	r14	;
    6c34:	0e 93       	cmp	#0,	r14	;r3 As==00
    6c36:	fd 23       	jnz	$-4      	;abs 0x6c32
        ;

    // Set up for start of transmission
    UART_SM.isTxBusy = TRUE;
    6c38:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6c3c:	de 43 00 00 	mov.b	#1,	0(r14)	;r3 As==01
    UART_SM.txPtr = txBuf;
    6c40:	8e 4c 02 00 	mov	r12,	2(r14)	;
    UART_SM.txBytesRemaining = size;
    6c44:	8e 4d 04 00 	mov	r13,	4(r14)	;

    UCA0IFG &= ~(USCI_UART_UCTXIFG); // Clear the 'ready to accept byte' flag
    6c48:	a2 c2 dc 05 	bic	#4,	&0x05dc	;r2 As==10

    UCA0IE |= UCTXIE; // Enable USCI_A0 TX interrupt ('ready to accept byte')
    6c4c:	a2 d3 da 05 	bis	#2,	&0x05da	;r3 As==10
    //UCA0TXBUF = *(UART_SM.txPtr++); // Load in first byte

    // The bytes are transmitted in the TX ISR (which is called whenever the
    // UART is ready to accept a byte), and the isBusy flag is cleared when the
    // last byte has *finished* transmitting.
}
    6c50:	30 41       	ret			

00006c52 <UART_send>:
 * @param size the number of bytes to send
 *
 */
void UART_send(uint8_t* txBuf, uint16_t size) {

    UART_asyncSend(txBuf, size);
    6c52:	b0 12 2e 6c 	call	#27694		;#0x6c2e

    // Block until complete
    while (UART_SM.isTxBusy)
    6c56:	3d 40 22 1c 	mov	#7202,	r13	;#0x1c22
    6c5a:	6c 4d       	mov.b	@r13,	r12	;
    6c5c:	0c 93       	cmp	#0,	r12	;r3 As==00
    6c5e:	fd 23       	jnz	$-4      	;abs 0x6c5a
        ;
}
    6c60:	30 41       	ret			

00006c62 <UART_critSend>:
 *  and use UART status register polling instead of interrupts.
 */
void UART_critSend(uint8_t* txBuf, uint16_t size) {

    // Block until prior transmission has completed
    while (UART_SM.isTxBusy)
    6c62:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6c66:	6e 4f       	mov.b	@r15,	r14	;
    6c68:	0e 93       	cmp	#0,	r14	;r3 As==00
    6c6a:	fd 23       	jnz	$-4      	;abs 0x6c66
        ;

    // Set up for start of transmission
    UART_SM.isTxBusy = TRUE;
    6c6c:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6c70:	de 43 00 00 	mov.b	#1,	0(r14)	;r3 As==01
    UART_SM.txPtr = txBuf;
    6c74:	8e 4c 02 00 	mov	r12,	2(r14)	;
    UART_SM.txBytesRemaining = size;
    6c78:	8e 4d 04 00 	mov	r13,	4(r14)	;

    UCA0IV &= ~(USCI_UART_UCTXIFG); // Clear byte completion flag
    6c7c:	a2 c2 de 05 	bic	#4,	&0x05de	;r2 As==10

    while (UART_SM.txBytesRemaining--) {
    6c80:	1c 4e 04 00 	mov	4(r14),	r12	;
    6c84:	0d 4c       	mov	r12,	r13	;
    6c86:	3d 53       	add	#-1,	r13	;r3 As==11
    6c88:	8e 4d 04 00 	mov	r13,	4(r14)	;
    6c8c:	0c 93       	cmp	#0,	r12	;r3 As==00
    6c8e:	19 24       	jz	$+52     	;abs 0x6cc2
        UCA0TXBUF = *(UART_SM.txPtr++); // Load in next byte
    6c90:	0c 4e       	mov	r14,	r12	;
    6c92:	1d 4c 02 00 	mov	2(r12),	r13	;
    6c96:	0e 4d       	mov	r13,	r14	;
    6c98:	1e 53       	inc	r14		;
    6c9a:	8c 4e 02 00 	mov	r14,	2(r12)	;
    6c9e:	6d 4d       	mov.b	@r13,	r13	;
    6ca0:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    6ca4:	82 4d ce 05 	mov	r13,	&0x05ce	;
        while (!(UCA0IFG & UCTXIFG))
    6ca8:	a2 b3 dc 05 	bit	#2,	&0x05dc	;r3 As==10
    6cac:	fd 27       	jz	$-4      	;abs 0x6ca8
            ; // Wait for byte transmission to complete
        UCA0IFG &= ~(UCTXIFG); // Clear byte completion flag
    6cae:	a2 c3 dc 05 	bic	#2,	&0x05dc	;r3 As==10
    UART_SM.txPtr = txBuf;
    UART_SM.txBytesRemaining = size;

    UCA0IV &= ~(USCI_UART_UCTXIFG); // Clear byte completion flag

    while (UART_SM.txBytesRemaining--) {
    6cb2:	1d 4c 04 00 	mov	4(r12),	r13	;
    6cb6:	0e 4d       	mov	r13,	r14	;
    6cb8:	3e 53       	add	#-1,	r14	;r3 As==11
    6cba:	8c 4e 04 00 	mov	r14,	4(r12)	;
    6cbe:	0d 93       	cmp	#0,	r13	;r3 As==00
    6cc0:	e8 23       	jnz	$-46     	;abs 0x6c92
        while (!(UCA0IFG & UCTXIFG))
            ; // Wait for byte transmission to complete
        UCA0IFG &= ~(UCTXIFG); // Clear byte completion flag
    }

    UART_SM.isTxBusy = FALSE;
    6cc2:	c2 43 22 1c 	mov.b	#0,	&0x1c22	;r3 As==00
}
    6cc6:	30 41       	ret			

00006cc8 <UART_isTxBusy>:
/**
 * Return true if UART TX module is in the middle of an operation, false if not.
 */
uint8_t UART_isTxBusy() {
    return UART_SM.isTxBusy;
}
    6cc8:	5c 42 22 1c 	mov.b	&0x1c22,r12	;0x1c22
    6ccc:	30 41       	ret			

00006cce <UART_asyncReceive>:
 * @param size the number of bytes to receive
 */
void UART_asyncReceive(uint8_t* rxBuf, uint16_t size) {

    // Block until prior reception has completed
    while (UART_SM.isRxBusy)
    6cce:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6cd2:	5e 4f 06 00 	mov.b	6(r15),	r14	;
    6cd6:	0e 93       	cmp	#0,	r14	;r3 As==00
    6cd8:	fc 23       	jnz	$-6      	;abs 0x6cd2
        ;

    // Set up for start of reception
    UART_SM.isRxBusy = TRUE;
    6cda:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6cde:	de 43 06 00 	mov.b	#1,	6(r14)	;r3 As==01
    UART_SM.rxPtr = rxBuf;
    6ce2:	8e 4c 08 00 	mov	r12,	8(r14)	;
    UART_SM.rxBytesRemaining = size;
    6ce6:	8e 4d 0a 00 	mov	r13,	10(r14)	; 0x000a

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag
    6cea:	92 c3 dc 05 	bic	#1,	&0x05dc	;r3 As==01

    UCA0IE |= UCRXIE; // Enable USCI_A0 RX interrupt
    6cee:	92 d3 da 05 	bis	#1,	&0x05da	;r3 As==01

    // The rest of the reception will be completed by the RX ISR (which
    //  will wake after each byte has been received), and the isBusy flag
    //  will be cleared when done.
}
    6cf2:	30 41       	ret			

00006cf4 <UART_receive>:
 * @param size the number of bytes to receive
 *
 */
void UART_receive(uint8_t* rxBuf, uint16_t size) {

    UART_asyncReceive(rxBuf, size);
    6cf4:	b0 12 ce 6c 	call	#27854		;#0x6cce

    // Block until complete
    while (UART_SM.isRxBusy)
    6cf8:	3d 40 22 1c 	mov	#7202,	r13	;#0x1c22
    6cfc:	5c 4d 06 00 	mov.b	6(r13),	r12	;
    6d00:	0c 93       	cmp	#0,	r12	;r3 As==00
    6d02:	fc 23       	jnz	$-6      	;abs 0x6cfc
        ;
}
    6d04:	30 41       	ret			

00006d06 <UART_critReceive>:
 *  and use UART status register polling instead of interrupts.
 */
void UART_critReceive(uint8_t* rxBuf, uint16_t size) {

    // Block until prior reception has completed
    while (UART_SM.isRxBusy)
    6d06:	3f 40 22 1c 	mov	#7202,	r15	;#0x1c22
    6d0a:	5e 4f 06 00 	mov.b	6(r15),	r14	;
    6d0e:	0e 93       	cmp	#0,	r14	;r3 As==00
    6d10:	fc 23       	jnz	$-6      	;abs 0x6d0a
        ;

    // Set up for start of reception
    UART_SM.isRxBusy = TRUE;
    6d12:	3e 40 22 1c 	mov	#7202,	r14	;#0x1c22
    6d16:	de 43 06 00 	mov.b	#1,	6(r14)	;r3 As==01
    UART_SM.rxPtr = rxBuf;
    6d1a:	8e 4c 08 00 	mov	r12,	8(r14)	;
    UART_SM.rxBytesRemaining = size;
    6d1e:	8e 4d 0a 00 	mov	r13,	10(r14)	; 0x000a

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag
    6d22:	92 c3 dc 05 	bic	#1,	&0x05dc	;r3 As==01

    while (UART_SM.rxBytesRemaining--) {
    6d26:	1c 4e 0a 00 	mov	10(r14),r12	;0x0000a
    6d2a:	0d 4c       	mov	r12,	r13	;
    6d2c:	3d 53       	add	#-1,	r13	;r3 As==11
    6d2e:	8e 4d 0a 00 	mov	r13,	10(r14)	; 0x000a
    6d32:	0c 93       	cmp	#0,	r12	;r3 As==00
    6d34:	18 24       	jz	$+50     	;abs 0x6d66
        while (!(UCA0IFG & UCRXIFG))
            ; // Wait for byte reception to complete
        UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

        uint8_t rec = UCA0RXBUF; // Read next byte
        *(UART_SM.rxPtr++) = rec; // Store byte
    6d36:	0c 4e       	mov	r14,	r12	;
    UART_SM.rxBytesRemaining = size;

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

    while (UART_SM.rxBytesRemaining--) {
        while (!(UCA0IFG & UCRXIFG))
    6d38:	92 b3 dc 05 	bit	#1,	&0x05dc	;r3 As==01
    6d3c:	fd 27       	jz	$-4      	;abs 0x6d38
            ; // Wait for byte reception to complete
        UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag
    6d3e:	92 c3 dc 05 	bic	#1,	&0x05dc	;r3 As==01

        uint8_t rec = UCA0RXBUF; // Read next byte
    6d42:	1e 42 cc 05 	mov	&0x05cc,r14	;0x05cc
        *(UART_SM.rxPtr++) = rec; // Store byte
    6d46:	1d 4c 08 00 	mov	8(r12),	r13	;
    6d4a:	0f 4d       	mov	r13,	r15	;
    6d4c:	1f 53       	inc	r15		;
    6d4e:	8c 4f 08 00 	mov	r15,	8(r12)	;
    while (UART_SM.rxBytesRemaining--) {
        while (!(UCA0IFG & UCRXIFG))
            ; // Wait for byte reception to complete
        UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

        uint8_t rec = UCA0RXBUF; // Read next byte
    6d52:	cd 4e 00 00 	mov.b	r14,	0(r13)	;
    UART_SM.rxPtr = rxBuf;
    UART_SM.rxBytesRemaining = size;

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

    while (UART_SM.rxBytesRemaining--) {
    6d56:	1d 4c 0a 00 	mov	10(r12),r13	;0x0000a
    6d5a:	0e 4d       	mov	r13,	r14	;
    6d5c:	3e 53       	add	#-1,	r14	;r3 As==11
    6d5e:	8c 4e 0a 00 	mov	r14,	10(r12)	; 0x000a
    6d62:	0d 93       	cmp	#0,	r13	;r3 As==00
    6d64:	e9 23       	jnz	$-44     	;abs 0x6d38

        uint8_t rec = UCA0RXBUF; // Read next byte
        *(UART_SM.rxPtr++) = rec; // Store byte
    }

    UART_SM.isRxBusy = FALSE;
    6d66:	c2 43 28 1c 	mov.b	#0,	&0x1c28	;r3 As==00
}
    6d6a:	30 41       	ret			

00006d6c <UART_isRxBusy>:
/**
 * Return true if UART RX module is in the middle of an operation, false if not.
 */
uint8_t UART_isRxBusy() {
    return UART_SM.isRxBusy;
}
    6d6c:	5c 42 28 1c 	mov.b	&0x1c28,r12	;0x1c28
    6d70:	30 41       	ret			

00006d72 <UART_isRxDone>:
 * Return true if UART RX module is not in the middle of an operation (e.g. done), false if not.
 *
 * Could be used in combination with UART_asyncReceive.
 */
uint8_t UART_isRxDone() {
    return !(UART_SM.isRxBusy);
    6d72:	5c 42 28 1c 	mov.b	&0x1c28,r12	;0x1c28
    6d76:	3c 53       	add	#-1,	r12	;r3 As==11
}
    6d78:	5c 03       	rrum	#1,	r12	;
    6d7a:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    6d7e:	30 41       	ret			

00006d80 <USCI_A0_ISR>:
#elif defined(__GNUC__)
void __attribute__ ((interrupt(USCI_A0_VECTOR))) USCI_A0_ISR (void)
#else
#error Compiler not supported!
#endif
{
    6d80:	3f 15       	pushm	#4,	r15	;16-bit words
    uint8_t rec;

    switch (__even_in_range(UCA0IV, USCI_UART_UCTXCPTIFG)) {
    6d82:	1c 42 de 05 	mov	&0x05de,r12	;0x05de
    6d86:	2c 93       	cmp	#2,	r12	;r3 As==10
    6d88:	03 24       	jz	$+8      	;abs 0x6d90
    6d8a:	2c 92       	cmp	#4,	r12	;r2 As==10
    6d8c:	1e 24       	jz	$+62     	;abs 0x6dca
    6d8e:	38 3c       	jmp	$+114    	;abs 0x6e00
    case USCI_NONE:
        break;
    case USCI_UART_UCRXIFG:
        if (UART_SM.rxBytesRemaining--) {
    6d90:	3d 40 22 1c 	mov	#7202,	r13	;#0x1c22
    6d94:	1c 4d 0a 00 	mov	10(r13),r12	;0x0000a
    6d98:	0e 4c       	mov	r12,	r14	;
    6d9a:	3e 53       	add	#-1,	r14	;r3 As==11
    6d9c:	8d 4e 0a 00 	mov	r14,	10(r13)	; 0x000a
    6da0:	0c 93       	cmp	#0,	r12	;r3 As==00
    6da2:	0a 24       	jz	$+22     	;abs 0x6db8
            rec = UCA0RXBUF; // Read next byte
    6da4:	1e 42 cc 05 	mov	&0x05cc,r14	;0x05cc
            *(UART_SM.rxPtr++) = rec; // Store byte
    6da8:	1c 4d 08 00 	mov	8(r13),	r12	;
    6dac:	0f 4c       	mov	r12,	r15	;
    6dae:	1f 53       	inc	r15		;
    6db0:	8d 4f 08 00 	mov	r15,	8(r13)	;
    switch (__even_in_range(UCA0IV, USCI_UART_UCTXCPTIFG)) {
    case USCI_NONE:
        break;
    case USCI_UART_UCRXIFG:
        if (UART_SM.rxBytesRemaining--) {
            rec = UCA0RXBUF; // Read next byte
    6db4:	cc 4e 00 00 	mov.b	r14,	0(r12)	;
            *(UART_SM.rxPtr++) = rec; // Store byte
        }

        if (0 == UART_SM.rxBytesRemaining) {
    6db8:	1c 42 2c 1c 	mov	&0x1c2c,r12	;0x1c2c
    6dbc:	0c 93       	cmp	#0,	r12	;r3 As==00
    6dbe:	20 20       	jnz	$+66     	;abs 0x6e00
            UCA0IE &= ~(UCRXIE); // Disable USCI_A0 RX interrupt
    6dc0:	92 c3 da 05 	bic	#1,	&0x05da	;r3 As==01
            UART_SM.isRxBusy = FALSE;
    6dc4:	c2 43 28 1c 	mov.b	#0,	&0x1c28	;r3 As==00
    6dc8:	1b 3c       	jmp	$+56     	;abs 0x6e00
        }

        break;
    case USCI_UART_UCTXIFG:
        UCA0TXBUF = *(UART_SM.txPtr++); // if interrupt was enabled, there must be bytes
    6dca:	3c 40 22 1c 	mov	#7202,	r12	;#0x1c22
    6dce:	1d 4c 02 00 	mov	2(r12),	r13	;
    6dd2:	0e 4d       	mov	r13,	r14	;
    6dd4:	1e 53       	inc	r14		;
    6dd6:	8c 4e 02 00 	mov	r14,	2(r12)	;
    6dda:	6d 4d       	mov.b	@r13,	r13	;
    6ddc:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    6de0:	82 4d ce 05 	mov	r13,	&0x05ce	;
        if (--UART_SM.txBytesRemaining == 0) {
    6de4:	1d 4c 04 00 	mov	4(r12),	r13	;
    6de8:	3d 53       	add	#-1,	r13	;r3 As==11
    6dea:	8c 4d 04 00 	mov	r13,	4(r12)	;
    6dee:	0d 93       	cmp	#0,	r13	;r3 As==00
    6df0:	07 20       	jnz	$+16     	;abs 0x6e00
            // TODO: actually, this wait should probably happen for blocking version only
            while (UCA0STATW & UCBUSY); // wait for last byte to finish transmitting
    6df2:	d2 b3 ca 05 	bit.b	#1,	&0x05ca	;r3 As==01
    6df6:	fd 23       	jnz	$-4      	;abs 0x6df2
            UCA0IE &= ~(UCTXIE); // Disable USCI_A0 TX interrupt
    6df8:	a2 c3 da 05 	bic	#2,	&0x05da	;r3 As==10
            UART_SM.isTxBusy = FALSE;
    6dfc:	c2 43 22 1c 	mov.b	#0,	&0x1c22	;r3 As==00
    case USCI_UART_UCSTTIFG:
        break;
    case USCI_UART_UCTXCPTIFG:
        break;
    }
}
    6e00:	3c 17       	popm	#4,	r15	;16-bit words
    6e02:	00 13       	reti			

00006e04 <memmove>:
    6e04:	0a 15       	pushm	#1,	r10	;16-bit words
    6e06:	0d 9c       	cmp	r12,	r13	;
    6e08:	10 2c       	jc	$+34     	;abs 0x6e2a
    6e0a:	0b 4d       	mov	r13,	r11	;
    6e0c:	0b 5e       	add	r14,	r11	;
    6e0e:	0c 9b       	cmp	r11,	r12	;
    6e10:	0c 2c       	jc	$+26     	;abs 0x6e2a
    6e12:	0d 4e       	mov	r14,	r13	;
    6e14:	3d 53       	add	#-1,	r13	;r3 As==11
    6e16:	3d 93       	cmp	#-1,	r13	;r3 As==11
    6e18:	13 24       	jz	$+40     	;abs 0x6e40
    6e1a:	0f 4d       	mov	r13,	r15	;
    6e1c:	0f 8e       	sub	r14,	r15	;
    6e1e:	0f 5b       	add	r11,	r15	;
    6e20:	0a 4c       	mov	r12,	r10	;
    6e22:	0a 5d       	add	r13,	r10	;
    6e24:	ea 4f 00 00 	mov.b	@r15,	0(r10)	;
    6e28:	f5 3f       	jmp	$-20     	;abs 0x6e14
    6e2a:	0f 43       	clr	r15		;
    6e2c:	0f 9e       	cmp	r14,	r15	;
    6e2e:	08 24       	jz	$+18     	;abs 0x6e40
    6e30:	0a 4d       	mov	r13,	r10	;
    6e32:	0a 5f       	add	r15,	r10	;
    6e34:	0b 4c       	mov	r12,	r11	;
    6e36:	0b 5f       	add	r15,	r11	;
    6e38:	eb 4a 00 00 	mov.b	@r10,	0(r11)	;
    6e3c:	1f 53       	inc	r15		;
    6e3e:	f6 3f       	jmp	$-18     	;abs 0x6e2c
    6e40:	0a 17       	popm	#1,	r10	;16-bit words
    6e42:	30 41       	ret			

00006e44 <memset>:
    6e44:	0f 4c       	mov	r12,	r15	;
    6e46:	0e 5c       	add	r12,	r14	;
    6e48:	0f 9e       	cmp	r14,	r15	;
    6e4a:	04 24       	jz	$+10     	;abs 0x6e54
    6e4c:	cf 4d 00 00 	mov.b	r13,	0(r15)	;
    6e50:	1f 53       	inc	r15		;
    6e52:	fa 3f       	jmp	$-10     	;abs 0x6e48
    6e54:	30 41       	ret			

00006e56 <__do_global_ctors_aux>:
    6e56:	0a 15       	pushm	#1,	r10	;16-bit words
    6e58:	1c 42 e8 44 	mov	&0x44e8,r12	;0x44e8
    6e5c:	3c 93       	cmp	#-1,	r12	;r3 As==11
    6e5e:	08 24       	jz	$+18     	;abs 0x6e70
    6e60:	3a 40 e8 44 	mov	#17640,	r10	;#0x44e8
    6e64:	8c 12       	call	r12		;
    6e66:	3a 50 fe ff 	add	#65534,	r10	;#0xfffe
    6e6a:	2c 4a       	mov	@r10,	r12	;
    6e6c:	3c 93       	cmp	#-1,	r12	;r3 As==11
    6e6e:	fa 23       	jnz	$-10     	;abs 0x6e64
    6e70:	0a 17       	popm	#1,	r10	;16-bit words
    6e72:	30 41       	ret			

00006e74 <call___do_global_ctors_aux>:
    6e74:	30 41       	ret			

00006e76 <__msp430_init>:
    6e76:	b0 12 a0 56 	call	#22176		;#0x56a0
    6e7a:	b0 12 56 6e 	call	#28246		;#0x6e56
    6e7e:	b0 12 e0 55 	call	#21984		;#0x55e0
    6e82:	b0 12 d4 55 	call	#21972		;#0x55d4
    6e86:	30 41       	ret			

00006e88 <__msp430_fini>:
    6e88:	b0 12 ec 55 	call	#21996		;#0x55ec
    6e8c:	b0 12 52 56 	call	#22098		;#0x5652
    6e90:	30 41       	ret			
