
templog.out:     file format elf32-little


Disassembly of section __interrupt_vector_49:

0000fff0 <__interrupt_vector_49>:
    fff0:	b8                   	.byte 0xb8
    fff1:	6d                   	insl   (%dx),%es:(%edi)

Disassembly of section .text:

000055b0 <__crt0_start>:
    55b0:	31 40 00             	xor    %eax,0x0(%eax)
    55b3:	24                   	.byte 0x24

000055b4 <__crt0_init_bss>:
    55b4:	3c 40                	cmp    $0x40,%al
    55b6:	04 1c                	add    $0x1c,%al

000055b8 <.Loc.79.1>:
    55b8:	0d                   	.byte 0xd
    55b9:	43                   	inc    %ebx

000055ba <.Loc.80.1>:
    55ba:	3e 40                	ds inc %eax
    55bc:	2a 00                	sub    (%eax),%al

000055be <.Loc.84.1>:
    55be:	b0 12                	mov    $0x12,%al
    55c0:	7c 6e                	jl     5630 <L0+0x14>

000055c2 <__crt0_movedata>:
    55c2:	3c 40                	cmp    $0x40,%al
    55c4:	00                   	.byte 0x0
    55c5:	1c                   	.byte 0x1c

000055c6 <.Loc.123.1>:
    55c6:	3d                   	.byte 0x3d
    55c7:	40                   	inc    %eax
    55c8:	aa                   	stos   %al,%es:(%edi)
    55c9:	55                   	push   %ebp

000055ca <.Loc.126.1>:
    55ca:	0d                   	.byte 0xd
    55cb:	9c                   	pushf  

000055cc <.Loc.127.1>:
    55cc:	04 24                	add    $0x24,%al

000055ce <.Loc.129.1>:
    55ce:	3e 40                	ds inc %eax
    55d0:	04 00                	add    $0x0,%al

000055d2 <.Loc.131.1>:
    55d2:	b0 12                	mov    $0x12,%al
    55d4:	3c 6e                	cmp    $0x6e,%al

000055d6 <__crt0_call_init_then_main>:
    55d6:	b0 12                	mov    $0x12,%al
    55d8:	ae                   	scas   %es:(%edi),%al
    55d9:	6e                   	outsb  %ds:(%esi),(%dx)

000055da <.Loc.206.1>:
    55da:	0c 43                	or     $0x43,%al

000055dc <.Loc.207.1>:
    55dc:	b0 12                	mov    $0x12,%al
    55de:	c0                   	.byte 0xc0
    55df:	6b                   	.byte 0x6b

000055e0 <_msp430_run_init_array>:
    55e0:	34 40                	xor    $0x40,%al
    55e2:	f0 44                	lock inc %esp

000055e4 <.Loc.234.1>:
    55e4:	35                   	.byte 0x35
    55e5:	40                   	inc    %eax
    55e6:	f0 44                	lock inc %esp

000055e8 <.Loc.235.1>:
    55e8:	26 43                	es inc %ebx

000055ea <.Loc.236.1>:
    55ea:	0d                   	.byte 0xd
    55eb:	3c                   	.byte 0x3c

000055ec <_msp430_run_preinit_array>:
    55ec:	34 40                	xor    $0x40,%al
    55ee:	f0 44                	lock inc %esp

000055f0 <.Loc.242.1>:
    55f0:	35                   	.byte 0x35
    55f1:	40                   	inc    %eax
    55f2:	f0 44                	lock inc %esp

000055f4 <.Loc.243.1>:
    55f4:	26 43                	es inc %ebx

000055f6 <.Loc.244.1>:
    55f6:	07                   	pop    %es
    55f7:	3c                   	.byte 0x3c

000055f8 <_msp430_run_fini_array>:
    55f8:	34 40                	xor    $0x40,%al
    55fa:	f0 44                	lock inc %esp

000055fc <.Loc.250.1>:
    55fc:	35                   	.byte 0x35
    55fd:	40                   	inc    %eax
    55fe:	f0 44                	lock inc %esp

00005600 <.Loc.251.1>:
    5600:	36 40                	ss inc %eax
    5602:	fe                   	(bad)  
    5603:	ff                   	.byte 0xff

00005604 <.Loc.252.1>:
    5604:	00                   	.byte 0x0
    5605:	3c                   	.byte 0x3c

00005606 <_msp430_run_array>:
    5606:	05                   	.byte 0x5
    5607:	94                   	xchg   %eax,%esp

00005608 <.Loc.256.1>:
    5608:	05                   	.byte 0x5
    5609:	24                   	.byte 0x24

0000560a <.Loc.257.1>:
    560a:	27                   	daa    
    560b:	44                   	inc    %esp

0000560c <.Loc.258.1>:
    560c:	04 56                	add    $0x56,%al

0000560e <.Loc.259.1>:
    560e:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
    560f:	12                   	.byte 0x12

00005610 <.Loc.260.1>:
    5610:	10 40 f4             	adc    %al,-0xc(%eax)
    5613:	ff                   	.byte 0xff

00005614 <_msp430_run_done>:
    5614:	30                   	.byte 0x30
    5615:	41                   	inc    %ecx

00005616 <deregister_tm_clones>:
    5616:	3c 40                	cmp    $0x40,%al
    5618:	ca 6e 3c             	lret   $0x3c6e
    561b:	80                   	.byte 0x80

0000561c <L0>:
    561c:	c9                   	leave  
    561d:	6e                   	outsb  %ds:(%esi),(%dx)
    561e:	2d 43 0d 9c 07       	sub    $0x79c0d43,%eax
    5623:	2c 3d                	sub    $0x3d,%al
    5625:	40                   	inc    %eax
    5626:	00 00                	add    %al,(%eax)
    5628:	0d 93 03 24 3c       	or     $0x3c240393,%eax
    562d:	40                   	inc    %eax
    562e:	ca 6e 8d             	lret   $0x8d6e
    5631:	12                   	.byte 0x12

00005632 <.L1>:
    5632:	30                   	.byte 0x30
    5633:	41                   	inc    %ecx

00005634 <register_tm_clones>:
    5634:	3d 40 ca 6e 3d       	cmp    $0x3d6eca40,%eax
    5639:	80 ca 6e             	or     $0x6e,%dl
    563c:	0d 11 0c 4d 5c       	or     $0x5c4d0c11,%eax
    5641:	03 4d 18             	add    0x18(%ebp),%ecx
    5644:	0c 11                	or     $0x11,%al
    5646:	0d 5c 0d 11 0d       	or     $0xd110d5c,%eax
    564b:	93                   	xchg   %eax,%ebx
    564c:	07                   	pop    %es
    564d:	24 3e                	and    $0x3e,%al
    564f:	40                   	inc    %eax
    5650:	00 00                	add    %al,(%eax)
    5652:	0e                   	push   %cs
    5653:	93                   	xchg   %eax,%ebx
    5654:	03 24 3c             	add    (%esp,%edi,1),%esp
    5657:	40                   	inc    %eax
    5658:	ca 6e 8e             	lret   $0x8e6e
    565b:	12                   	.byte 0x12

0000565c <.L7>:
    565c:	30                   	.byte 0x30
    565d:	41                   	inc    %ecx

0000565e <__do_global_dtors_aux>:
    565e:	0a 15 c2 93 04 1c    	or     0x1c0493c2,%dl
    5664:	20 20                	and    %ah,(%eax)
    5666:	1c 42                	sbb    $0x42,%al
    5668:	06                   	push   %es
    5669:	1c 3a                	sbb    $0x3a,%al
    566b:	40                   	inc    %eax
    566c:	fa                   	cli    
    566d:	44                   	inc    %esp
    566e:	3a 80 f8 44 0a 11    	cmp    0x110a44f8(%eax),%al
    5674:	3a 53 0c             	cmp    0xc(%ebx),%dl
    5677:	9a                   	.byte 0x9a
    5678:	0b                   	.byte 0xb
    5679:	2c                   	.byte 0x2c

0000567a <.L22>:
    567a:	1c 53                	sbb    $0x53,%al
    567c:	82                   	(bad)  
    567d:	4c                   	dec    %esp
    567e:	06                   	push   %es
    567f:	1c 0c                	sbb    $0xc,%al
    5681:	5c                   	pop    %esp
    5682:	1c 4c                	sbb    $0x4c,%al
    5684:	f8                   	clc    
    5685:	44                   	inc    %esp
    5686:	8c 12                	mov    %ss,(%edx)
    5688:	1c 42                	sbb    $0x42,%al
    568a:	06                   	push   %es
    568b:	1c 0c                	sbb    $0xc,%al
    568d:	9a                   	.byte 0x9a
    568e:	f5                   	cmc    
    568f:	2b                   	.byte 0x2b

00005690 <.L21>:
    5690:	b0 12                	mov    $0x12,%al
    5692:	16                   	push   %ss
    5693:	56                   	push   %esi
    5694:	3d 40 00 00 0d       	cmp    $0xd000040,%eax
    5699:	93                   	xchg   %eax,%ebx
    569a:	03 24 3c             	add    (%esp,%edi,1),%esp
    569d:	40                   	inc    %eax
    569e:	ec                   	in     (%dx),%al
    569f:	44                   	inc    %esp
    56a0:	8d 12                	lea    (%edx),%edx

000056a2 <.L19>:
    56a2:	d2 43 04             	rolb   %cl,0x4(%ebx)
    56a5:	1c                   	.byte 0x1c

000056a6 <.L15>:
    56a6:	0a 17                	or     (%edi),%dl
    56a8:	30                   	.byte 0x30
    56a9:	41                   	inc    %ecx

000056aa <call___do_global_dtors_aux>:
    56aa:	30                   	.byte 0x30
    56ab:	41                   	inc    %ecx

000056ac <frame_dummy>:
    56ac:	3e 40                	ds inc %eax
    56ae:	00 00                	add    %al,(%eax)
    56b0:	0e                   	push   %cs
    56b1:	93                   	xchg   %eax,%ebx
    56b2:	05 24 3c 40 ec       	add    $0xec403c24,%eax
    56b7:	44                   	inc    %esp
    56b8:	3d 40 08 1c 8e       	cmp    $0x8e1c0840,%eax
    56bd:	12                   	.byte 0x12

000056be <.L26>:
    56be:	3c 40                	cmp    $0x40,%al
    56c0:	00 1c 8c             	add    %bl,(%esp,%ecx,4)
    56c3:	93                   	xchg   %eax,%ebx
    56c4:	00 00                	add    %al,(%eax)
    56c6:	03 20                	add    (%eax),%esp

000056c8 <.L27>:
    56c8:	b0 12                	mov    $0x12,%al
    56ca:	34 56                	xor    $0x56,%al
    56cc:	30                   	.byte 0x30
    56cd:	41                   	inc    %ecx

000056ce <.L34>:
    56ce:	3d 40 00 00 0d       	cmp    $0xd000040,%eax
    56d3:	93                   	xchg   %eax,%ebx
    56d4:	f9                   	stc    
    56d5:	27                   	daa    
    56d6:	8d 12                	lea    (%edx),%edx
    56d8:	f7 3f                	idivl  (%edi)

000056da <call_frame_dummy>:
    56da:	30                   	.byte 0x30
    56db:	41                   	inc    %ecx

000056dc <TimerB1_ISR>:
    56dc:	04 12                	add    $0x12,%al
    56de:	04 41                	add    $0x41,%al
    56e0:	0c 12                	or     $0x12,%al
    56e2:	1c 42                	sbb    $0x42,%al
    56e4:	c0 03 3c             	rolb   $0x3c,(%ebx)
    56e7:	f0 fd                	lock std 
    56e9:	ff 82 4c c0 03 1c    	incl   0x1c03c04c(%edx)
    56ef:	42                   	inc    %edx
    56f0:	c0 03 0c             	rolb   $0xc,(%ebx)
    56f3:	93                   	xchg   %eax,%ebx
    56f4:	17                   	pop    %ss
    56f5:	24 00                	and    $0x0,%al
    56f7:	3c                   	.byte 0x3c

000056f8 <.LBB0_1>:
    56f8:	1c 42                	sbb    $0x42,%al
    56fa:	16                   	push   %ss
    56fb:	1c 1c                	sbb    $0x1c,%al
    56fd:	53                   	push   %ebx
    56fe:	82                   	(bad)  
    56ff:	4c                   	dec    %esp
    5700:	16                   	push   %ss
    5701:	1c 1c                	sbb    $0x1c,%al
    5703:	42                   	inc    %edx
    5704:	c0 03 2c             	rolb   $0x2c,(%ebx)
    5707:	d2 82 4c c0 03 1c    	rolb   %cl,0x1c03c04c(%edx)
    570d:	42                   	inc    %edx
    570e:	c0 03 2c             	rolb   $0x2c,(%ebx)
    5711:	d3 82 4c c0 03 1c    	roll   %cl,0x1c03c04c(%edx)
    5717:	42                   	inc    %edx
    5718:	c0 03 3c             	rolb   $0x3c,(%ebx)
    571b:	f0 fe                	lock (bad) 
    571d:	ff 82 4c c0 03 00    	incl   0x3c04c(%edx)
    5723:	3c                   	.byte 0x3c

00005724 <.LBB0_2>:
    5724:	3c 41                	cmp    $0x41,%al
    5726:	34 41                	xor    $0x41,%al
    5728:	00 13                	add    %dl,(%ebx)
	...

0000572c <init>:
    572c:	04 12                	add    $0x12,%al
    572e:	04 41                	add    $0x41,%al
    5730:	21 82 1c 42 c0 03    	and    %eax,0x3c0421c(%edx)
    5736:	3c f0                	cmp    $0xf0,%al
    5738:	ff e6                	jmp    *%esi
    573a:	82                   	(bad)  
    573b:	4c                   	dec    %esp
    573c:	c0 03 1c             	rolb   $0x1c,(%ebx)
    573f:	42                   	inc    %edx
    5740:	c0 03 3c             	rolb   $0x3c,(%ebx)
    5743:	d0 00                	rolb   (%eax)
    5745:	02 82 4c c0 03 1c    	add    0x1c03c04c(%edx),%al
    574b:	42                   	inc    %edx
    574c:	c0 03 3c             	rolb   $0x3c,(%ebx)
    574f:	d0 c0                	rol    %al
    5751:	00 82 4c c0 03 1c    	add    %al,0x1c03c04c(%edx)
    5757:	42                   	inc    %edx
    5758:	c0 03 3c             	rolb   $0x3c,(%ebx)
    575b:	f0 ef                	lock out %eax,(%dx)
    575d:	ff 82 4c c0 03 1c    	incl   0x1c03c04c(%edx)
    5763:	42                   	inc    %edx
    5764:	c0 03 3c             	rolb   $0x3c,(%ebx)
    5767:	d0 20                	shlb   (%eax)
    5769:	00 82 4c c0 03 1c    	add    %al,0x1c03c04c(%edx)
    576f:	42                   	inc    %edx
    5770:	c0 03 2c             	rolb   $0x2c,(%ebx)
    5773:	d3 82 4c c0 03 b0    	roll   %cl,-0x4ffc3fb4(%edx)
    5779:	12 a0 61 5c 42 04    	adc    0x4425c61(%eax),%ah
    577f:	02 2c d3             	add    (%ebx,%edx,8),%ch
    5782:	4d                   	dec    %ebp
    5783:	4c                   	dec    %esp
    5784:	c2 4d 04             	ret    $0x44d
    5787:	02 5c 42 04          	add    0x4(%edx,%eax,2),%bl
    578b:	02 2c d2             	add    (%edx,%edx,8),%ch
    578e:	4d                   	dec    %ebp
    578f:	4c                   	dec    %esp
    5790:	c2 4d 04             	ret    $0x44d
    5793:	02 5c 42 04          	add    0x4(%edx,%eax,2),%bl
    5797:	02 1c d3             	add    (%ebx,%edx,8),%bl
    579a:	4d                   	dec    %ebp
    579b:	4c                   	dec    %esp
    579c:	c2 4d 04             	ret    $0x44d
    579f:	02 b0 12 20 67 32    	add    0x32672012(%eax),%dh
    57a5:	d2 03                	rolb   %cl,(%ebx)
    57a7:	43                   	inc    %ebx
    57a8:	0c 41                	or     $0x41,%al
    57aa:	bc 40 00 44 00       	mov    $0x440040,%esp
    57af:	00 b0 12 bc 62 84    	add    %dh,-0x7b9d43ee(%eax)
    57b5:	4f                   	dec    %edi
    57b6:	fe                   	(bad)  
    57b7:	ff 21                	jmp    *(%ecx)
    57b9:	52                   	push   %edx
    57ba:	34 41                	xor    $0x41,%al
    57bc:	30 41 00             	xor    %al,0x0(%ecx)
	...

000057c0 <task_init>:
    57c0:	04 12                	add    $0x12,%al
    57c2:	04 41                	add    $0x41,%al
    57c4:	21 82 0c 41 bc 40    	and    %eax,0x40bc410c(%edx)
    57ca:	00 44 00 00          	add    %al,0x0(%eax,%eax,1)
    57ce:	b0 12                	mov    $0x12,%al
    57d0:	bc 62 82 43 f4       	mov    $0xf4438262,%esp
    57d5:	46                   	inc    %esi
    57d6:	82                   	(bad)  
    57d7:	43                   	inc    %ebx
    57d8:	f6 46 82 43          	testb  $0x43,-0x7e(%esi)
    57dc:	f8                   	clc    
    57dd:	46                   	inc    %esi
    57de:	82                   	(bad)  
    57df:	43                   	inc    %ebx
    57e0:	fa                   	cli    
    57e1:	46                   	inc    %esi
    57e2:	82                   	(bad)  
    57e3:	43                   	inc    %ebx
    57e4:	fc                   	cld    
    57e5:	46                   	inc    %esi
    57e6:	92                   	xchg   %eax,%edx
    57e7:	43                   	inc    %ebx
    57e8:	fe 46 3c             	incb   0x3c(%esi)
    57eb:	40                   	inc    %eax
    57ec:	26 45                	es inc %ebp
    57ee:	84 4f fe             	test   %cl,-0x2(%edi)
    57f1:	ff 0f                	decl   (%edi)
    57f3:	4c                   	dec    %esp
    57f4:	b0 12                	mov    $0x12,%al
    57f6:	90                   	nop
    57f7:	68 21 52 34 41       	push   $0x41345221
    57fc:	30 41 00             	xor    %al,0x0(%ecx)
	...

00005800 <task_init_dict>:
    5800:	04 12                	add    $0x12,%al
    5802:	04 41                	add    $0x41,%al
    5804:	31 80 0a 00 1c 42    	xor    %eax,0x421c000a(%eax)
    580a:	f8                   	clc    
    580b:	46                   	inc    %esi
    580c:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5810:	84 4c f8 ff          	test   %cl,-0x1(%eax,%edi,8)
    5814:	84 43 fa             	test   %al,-0x6(%ebx)
    5817:	ff 84 43 fc ff 1c 44 	incl   0x441cfffc(%ebx,%eax,2)
    581e:	fe                   	(bad)  
    581f:	ff 84 4c f6 ff 3e 40 	incl   0x403efff6(%esp,%ecx,2)
    5826:	06                   	push   %es
    5827:	00 0f                	add    %cl,(%edi)
    5829:	4c                   	dec    %esp
    582a:	b0 12                	mov    $0x12,%al
    582c:	f0 6b 1c 44 fc       	lock imul $0xfffffffc,(%esp,%eax,2),%ebx
    5831:	ff 8f 4c 04 47 1c    	decl   0x1c47044c(%edi)
    5837:	44                   	inc    %esp
    5838:	fa                   	cli    
    5839:	ff 8f 4c 02 47 1c    	decl   0x1c47024c(%edi)
    583f:	44                   	inc    %esp
    5840:	f8                   	clc    
    5841:	ff 8f 4c 00 47 1c    	decl   0x1c47004c(%edi)
    5847:	44                   	inc    %esp
    5848:	fe                   	(bad)  
    5849:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    584c:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5850:	3c 90                	cmp    $0x90,%al
    5852:	00 01                	add    %al,(%ecx)
    5854:	0d                   	.byte 0xd
    5855:	2c 00                	sub    $0x0,%al
    5857:	3c                   	.byte 0x3c

00005858 <.LBB3_1>:
    5858:	3e 40                	ds inc %eax
    585a:	f8                   	clc    
    585b:	46                   	inc    %esi
    585c:	0f 44 2f             	cmove  (%edi),%ebp
    585f:	83 2d 43 b0 12 f0 69 	subl   $0x69,0xf012b043
    5866:	3f                   	aas    
    5867:	40                   	inc    %eax
    5868:	26 45                	es inc %ebp
    586a:	b0 12                	mov    $0x12,%al
    586c:	90                   	nop
    586d:	68                   	.byte 0x68
    586e:	0f 3c                	(bad)  

00005870 <.LBB3_2>:
    5870:	b2 40                	mov    $0x40,%dl
    5872:	00 01                	add    %al,(%ecx)
    5874:	00 53 3e             	add    %dl,0x3e(%ebx)
    5877:	40                   	inc    %eax
    5878:	f8                   	clc    
    5879:	46                   	inc    %esi
    587a:	0f 44 2f             	cmove  (%edi),%ebp
    587d:	83 2d 43 b0 12 f0 69 	subl   $0x69,0xf012b043
    5884:	3f                   	aas    
    5885:	40                   	inc    %eax
    5886:	50                   	push   %eax
    5887:	45                   	inc    %ebp
    5888:	b0 12                	mov    $0x12,%al
    588a:	90                   	nop
    588b:	68                   	.byte 0x68
    588c:	00                   	.byte 0x0
    588d:	3c                   	.byte 0x3c

0000588e <.LBB3_3>:
    588e:	31 50 0a             	xor    %edx,0xa(%eax)
    5891:	00 34 41             	add    %dh,(%ecx,%eax,2)
    5894:	30 41 00             	xor    %al,0x0(%ecx)
	...

00005898 <task_sample>:
    5898:	04 12                	add    $0x12,%al
    589a:	04 41                	add    $0x41,%al
    589c:	21 82 1c 42 fc 46    	and    %eax,0x46fc421c(%edx)
    58a2:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    58a6:	1c 53                	sbb    $0x53,%al
    58a8:	84 4c fc ff          	test   %cl,-0x1(%esp,%edi,8)
    58ac:	2c 93                	sub    $0x93,%al
    58ae:	04 20                	add    $0x20,%al
    58b0:	00                   	.byte 0x0
    58b1:	3c                   	.byte 0x3c

000058b2 <.LBB4_1>:
    58b2:	84 43 fc             	test   %al,-0x4(%ebx)
    58b5:	ff 00                	incl   (%eax)
    58b7:	3c                   	.byte 0x3c

000058b8 <.LBB4_2>:
    58b8:	1c 44                	sbb    $0x44,%al
    58ba:	fe                   	(bad)  
    58bb:	ff 0c 93             	decl   (%ebx,%edx,4)
    58be:	11 20                	adc    %esp,(%eax)
    58c0:	00                   	.byte 0x0
    58c1:	3c                   	.byte 0x3c

000058c2 <.LBB4_3>:
    58c2:	1c 44                	sbb    $0x44,%al
    58c4:	fc                   	cld    
    58c5:	ff 84 4c fe ff 3e 40 	incl   0x403efffe(%esp,%ecx,2)
    58cc:	fc                   	cld    
    58cd:	46                   	inc    %esi
    58ce:	0f 44 2f             	cmove  (%edi),%ebp
    58d1:	83 2d 43 b0 12 f0 69 	subl   $0x69,0xf012b043
    58d8:	3f                   	aas    
    58d9:	40                   	inc    %eax
    58da:	7a 45                	jp     5921 <task_measure_temp+0x19>
    58dc:	b0 12                	mov    $0x12,%al
    58de:	90                   	nop
    58df:	68                   	.byte 0x68
    58e0:	10                   	.byte 0x10
    58e1:	3c                   	.byte 0x3c

000058e2 <.LBB4_4>:
    58e2:	1c 44                	sbb    $0x44,%al
    58e4:	fc                   	cld    
    58e5:	ff 84 4c fe ff 3e 40 	incl   0x403efffe(%esp,%ecx,2)
    58ec:	fc                   	cld    
    58ed:	46                   	inc    %esi
    58ee:	0f 44 2f             	cmove  (%edi),%ebp
    58f1:	83 2d 43 b0 12 f0 69 	subl   $0x69,0xf012b043
    58f8:	3f                   	aas    
    58f9:	40                   	inc    %eax
    58fa:	a4                   	movsb  %ds:(%esi),%es:(%edi)
    58fb:	45                   	inc    %ebp
    58fc:	b0 12                	mov    $0x12,%al
    58fe:	90                   	nop
    58ff:	68                   	.byte 0x68
    5900:	00                   	.byte 0x0
    5901:	3c                   	.byte 0x3c

00005902 <.LBB4_5>:
    5902:	21 52 34             	and    %edx,0x34(%edx)
    5905:	41                   	inc    %ecx
    5906:	30                   	.byte 0x30
    5907:	41                   	inc    %ecx

00005908 <task_measure_temp>:
    5908:	04 12                	add    $0x12,%al
    590a:	04 41                	add    $0x41,%al
    590c:	31 82 3e 40 fa 46    	xor    %eax,0x46fa403e(%edx)
    5912:	1c 42                	sbb    $0x42,%al
    5914:	fa                   	cli    
    5915:	46                   	inc    %esi
    5916:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    591a:	84 4c fc ff          	test   %cl,-0x1(%esp,%edi,8)
    591e:	0f 4c 84 4e f8 ff b0 	cmovl  0x12b0fff8(%esi,%ecx,2),%eax
    5925:	12 
    5926:	bc 61 84 4f fa       	mov    $0xfa4f8461,%esp
    592b:	ff 84 4f fc ff 84 4f 	incl   0x4f84fffc(%edi,%ecx,2)
    5932:	fe                   	(bad)  
    5933:	ff 1c 44             	lcall  *(%esp,%eax,2)
    5936:	fa                   	cli    
    5937:	ff 82 4c 02 53 0f    	incl   0xf53024c(%edx)
    593d:	44                   	inc    %esp
    593e:	2f                   	das    
    593f:	83 2d 43 1e 44 f8 ff 	subl   $0xffffffff,0xf8441e43
    5946:	b0 12                	mov    $0x12,%al
    5948:	f0 69 3f 40 a4 45 b0 	lock imul $0xb045a440,(%edi),%edi
    594f:	12 90 68 31 52 34    	adc    0x34523168(%eax),%dl
    5955:	41                   	inc    %ecx
    5956:	30                   	.byte 0x30
    5957:	41                   	inc    %ecx

00005958 <task_letterize>:
    5958:	04 12                	add    $0x12,%al
    595a:	04 41                	add    $0x41,%al
    595c:	31 80 10 00 1c 42    	xor    %eax,0x421c0010(%eax)
    5962:	fc                   	cld    
    5963:	46                   	inc    %esi
    5964:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5968:	0c 93                	or     $0x93,%al
    596a:	04 20                	add    $0x20,%al
    596c:	00                   	.byte 0x0
    596d:	3c                   	.byte 0x3c

0000596e <.LBB6_1>:
    596e:	a4                   	movsb  %ds:(%esi),%es:(%edi)
    596f:	43                   	inc    %ebx
    5970:	fe                   	(bad)  
    5971:	ff 06                	incl   (%esi)
    5973:	3c                   	.byte 0x3c

00005974 <.LBB6_2>:
    5974:	1c 44                	sbb    $0x44,%al
    5976:	fe                   	(bad)  
    5977:	ff                   	(bad)  
    5978:	3c 53                	cmp    $0x53,%al
    597a:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    597e:	00                   	.byte 0x0
    597f:	3c                   	.byte 0x3c

00005980 <.LBB6_3>:
    5980:	1c 44                	sbb    $0x44,%al
    5982:	fe                   	(bad)  
    5983:	ff 0c 5c             	decl   (%esp,%ebx,2)
    5986:	0c 5c                	or     $0x5c,%al
    5988:	0c 5c                	or     $0x5c,%al
    598a:	84 4c fc ff          	test   %cl,-0x1(%esp,%edi,8)
    598e:	1c 42                	sbb    $0x42,%al
    5990:	02 53 5d             	add    0x5d(%ebx),%dl
    5993:	44                   	inc    %esp
    5994:	fc                   	cld    
    5995:	ff                   	(bad)  
    5996:	3e 40                	ds inc %eax
    5998:	ff 00                	incl   (%eax)
    599a:	4d                   	dec    %ebp
    599b:	93                   	xchg   %eax,%ebx
    599c:	4f                   	dec    %edi
    599d:	4d                   	dec    %ebp
    599e:	84 4c f8 ff          	test   %cl,-0x1(%eax,%edi,8)
    59a2:	c4 4d f7             	les    -0x9(%ebp),%ecx
    59a5:	ff 84 4e f4 ff c4 4f 	incl   0x4fc4fff4(%esi,%ecx,2)
    59ac:	f3 ff 0b             	repz decl (%ebx)
    59af:	24                   	.byte 0x24

000059b0 <.LBB6_4>:
    59b0:	5c                   	pop    %esp
    59b1:	44                   	inc    %esp
    59b2:	f3 ff 1d 44 f4 ff 0d 	repz lcall *0xdfff444
    59b9:	5d                   	pop    %ebp
    59ba:	5c                   	pop    %esp
    59bb:	83 84 4d f4 ff c4 4c 	addl   $0xfffffff3,0x4cc4fff4(%ebp,%ecx,2)
    59c2:	f3 
    59c3:	ff f5                	push   %ebp
    59c5:	23                   	.byte 0x23

000059c6 <.LBB6_5>:
    59c6:	1c 44                	sbb    $0x44,%al
    59c8:	f4                   	hlt    
    59c9:	ff 1d 44 f8 ff 0d    	lcall  *0xdfff844
    59cf:	fc                   	cld    
    59d0:	5e                   	pop    %esi
    59d1:	44                   	inc    %esp
    59d2:	f7 ff                	idiv   %edi
    59d4:	4e                   	dec    %esi
    59d5:	93                   	xchg   %eax,%ebx
    59d6:	c4 4e f2             	les    -0xe(%esi),%ecx
    59d9:	ff 84 4d f0 ff 0c 24 	incl   0x240cfff0(%ebp,%ecx,2)

000059e0 <.LBB6_6>:
    59e0:	5c                   	pop    %esp
    59e1:	44                   	inc    %esp
    59e2:	f2 ff 1d 44 f0 ff 12 	repnz lcall *0x12fff044
    59e9:	c3                   	ret    
    59ea:	0d 10 5c 83 84       	or     $0x84835c10,%eax
    59ef:	4d                   	dec    %ebp
    59f0:	f0 ff c4             	lock inc %esp
    59f3:	4c                   	dec    %esp
    59f4:	f2 ff f4             	repnz push %esp
    59f7:	23                   	.byte 0x23

000059f8 <.LBB6_7>:
    59f8:	1c 44                	sbb    $0x44,%al
    59fa:	f0 ff 84 4c fa ff 82 	lock incl 0x4c82fffa(%esp,%ecx,2)
    5a01:	4c 
    5a02:	f8                   	clc    
    5a03:	46                   	inc    %esi
    5a04:	3f                   	aas    
    5a05:	40                   	inc    %eax
    5a06:	ce                   	into   
    5a07:	45                   	inc    %ebp
    5a08:	b0 12                	mov    $0x12,%al
    5a0a:	90                   	nop
    5a0b:	68 31 50 10 00       	push   $0x105031
    5a10:	34 41                	xor    $0x41,%al
    5a12:	30                   	.byte 0x30
    5a13:	41                   	inc    %ecx

00005a14 <task_compress>:
    5a14:	04 12                	add    $0x12,%al
    5a16:	04 41                	add    $0x41,%al
    5a18:	31 80 0c 00 3e 40    	xor    %eax,0x403e000c(%eax)
    5a1e:	fe 46 1c             	incb   0x1c(%esi)
    5a21:	42                   	inc    %edx
    5a22:	fe 46 84             	incb   -0x7c(%esi)
    5a25:	4c                   	dec    %esp
    5a26:	fe                   	(bad)  
    5a27:	ff 1c 42             	lcall  *(%edx,%eax,2)
    5a2a:	f4                   	hlt    
    5a2b:	46                   	inc    %esi
    5a2c:	84 4c f6 ff          	test   %cl,-0x1(%esi,%esi,8)
    5a30:	3d 40 06 00 0f       	cmp    $0xf000640,%eax
    5a35:	4c                   	dec    %esp
    5a36:	84 4e f4             	test   %cl,-0xc(%esi)
    5a39:	ff 0e                	decl   (%esi)
    5a3b:	4d                   	dec    %ebp
    5a3c:	b0 12                	mov    $0x12,%al
    5a3e:	f0 6b 1c 4f 04       	lock imul $0x4,(%edi,%ecx,2),%ebx
    5a43:	47                   	inc    %edi
    5a44:	84 4c fc ff          	test   %cl,-0x1(%esp,%edi,8)
    5a48:	1c 4f                	sbb    $0x4f,%al
    5a4a:	02 47 84             	add    -0x7c(%edi),%al
    5a4d:	4c                   	dec    %esp
    5a4e:	fa                   	cli    
    5a4f:	ff 1c 4f             	lcall  *(%edi,%ecx,2)
    5a52:	00 47 84             	add    %al,-0x7c(%edi)
    5a55:	4c                   	dec    %esp
    5a56:	f8                   	clc    
    5a57:	ff 1c 44             	lcall  *(%esp,%eax,2)
    5a5a:	fc                   	cld    
    5a5b:	ff 82 4c 04 53 1c    	incl   0x1c53044c(%edx)
    5a61:	44                   	inc    %esp
    5a62:	fc                   	cld    
    5a63:	ff 82 4c 0a 53 1c    	incl   0x1c530a4c(%edx)
    5a69:	44                   	inc    %esp
    5a6a:	fa                   	cli    
    5a6b:	ff 82 4c 08 53 1c    	incl   0x1c53084c(%edx)
    5a71:	44                   	inc    %esp
    5a72:	f8                   	clc    
    5a73:	ff 82 4c 06 53 1c    	incl   0x1c53064c(%edx)
    5a79:	44                   	inc    %esp
    5a7a:	f6 ff                	idiv   %bh
    5a7c:	82                   	(bad)  
    5a7d:	4c                   	dec    %esp
    5a7e:	0c 53                	or     $0x53,%al
    5a80:	1c 44                	sbb    $0x44,%al
    5a82:	fc                   	cld    
    5a83:	ff 82 4c 0e 53 1c    	incl   0x1c530e4c(%edx)
    5a89:	44                   	inc    %esp
    5a8a:	fe                   	(bad)  
    5a8b:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    5a8e:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5a92:	0f 44 2f             	cmove  (%edi),%ebp
    5a95:	83 2d 43 1e 44 f4 ff 	subl   $0xffffffff,0xf4441e43
    5a9c:	b0 12                	mov    $0x12,%al
    5a9e:	f0 69 3f 40 f8 45 b0 	lock imul $0xb045f840,(%edi),%edi
    5aa5:	12 90 68 31 50 0c    	adc    0xc503168(%eax),%dl
    5aab:	00 34 41             	add    %dh,(%ecx,%eax,2)
    5aae:	30                   	.byte 0x30
    5aaf:	41                   	inc    %ecx

00005ab0 <task_find_sibling>:
    5ab0:	04 12                	add    $0x12,%al
    5ab2:	04 41                	add    $0x41,%al
    5ab4:	31 82 1c 42 04 53    	xor    %eax,0x5304421c(%edx)
    5aba:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5abe:	0c 93                	or     $0x93,%al
    5ac0:	41                   	inc    %ecx
    5ac1:	24 00                	and    $0x0,%al
    5ac3:	3c                   	.byte 0x3c

00005ac4 <.LBB8_1>:
    5ac4:	1c 44                	sbb    $0x44,%al
    5ac6:	fe                   	(bad)  
    5ac7:	ff 84 4c fa ff 3e 40 	incl   0x403efffa(%esp,%ecx,2)
    5ace:	06                   	push   %es
    5acf:	00 0f                	add    %cl,(%edi)
    5ad1:	4c                   	dec    %esp
    5ad2:	b0 12                	mov    $0x12,%al
    5ad4:	f0 6b 0c 4f 3c       	lock imul $0x3c,(%edi,%ecx,2),%ecx
    5ad9:	50                   	push   %eax
    5ada:	00 47 84             	add    %al,-0x7c(%edi)
    5add:	4c                   	dec    %esp
    5ade:	fc                   	cld    
    5adf:	ff 1c 4f             	lcall  *(%edi,%ecx,2)
    5ae2:	00 47 1e             	add    %al,0x1e(%edi)
    5ae5:	42                   	inc    %edx
    5ae6:	f8                   	clc    
    5ae7:	46                   	inc    %esi
    5ae8:	0c 9e                	or     $0x9e,%al
    5aea:	11 20                	adc    %esp,(%eax)
    5aec:	00                   	.byte 0x0
    5aed:	3c                   	.byte 0x3c

00005aee <.LBB8_2>:
    5aee:	1c 44                	sbb    $0x44,%al
    5af0:	fe                   	(bad)  
    5af1:	ff 82 4c f4 46 3e    	incl   0x3e46f44c(%edx)
    5af7:	40                   	inc    %eax
    5af8:	04 53                	add    $0x53,%al
    5afa:	0f 44 2f             	cmove  (%edi),%ebp
    5afd:	83 2d 43 b0 12 f0 69 	subl   $0x69,0xf012b043
    5b04:	3f                   	aas    
    5b05:	40                   	inc    %eax
    5b06:	a4                   	movsb  %ds:(%esi),%es:(%edi)
    5b07:	45                   	inc    %ebp
    5b08:	b0 12                	mov    $0x12,%al
    5b0a:	90                   	nop
    5b0b:	68                   	.byte 0x68
    5b0c:	1a                   	.byte 0x1a
    5b0d:	3c                   	.byte 0x3c

00005b0e <.LBB8_3>:
    5b0e:	1c 44                	sbb    $0x44,%al
    5b10:	fc                   	cld    
    5b11:	ff 1c 4c             	lcall  *(%esp,%ecx,2)
    5b14:	02 00                	add    (%eax),%al
    5b16:	0c 93                	or     $0x93,%al
    5b18:	13 24 00             	adc    (%eax,%eax,1),%esp
    5b1b:	3c                   	.byte 0x3c

00005b1c <.LBB8_4>:
    5b1c:	1c 44                	sbb    $0x44,%al
    5b1e:	fc                   	cld    
    5b1f:	ff 1c 4c             	lcall  *(%esp,%ecx,2)
    5b22:	02 00                	add    (%eax),%al
    5b24:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5b28:	3e 40                	ds inc %eax
    5b2a:	04 53                	add    $0x53,%al
    5b2c:	0f 44 2f             	cmove  (%edi),%ebp
    5b2f:	83 2d 43 b0 12 f0 69 	subl   $0x69,0xf012b043
    5b36:	3f                   	aas    
    5b37:	40                   	inc    %eax
    5b38:	f8                   	clc    
    5b39:	45                   	inc    %ebp
    5b3a:	b0 12                	mov    $0x12,%al
    5b3c:	90                   	nop
    5b3d:	68                   	.byte 0x68
    5b3e:	00                   	.byte 0x0
    5b3f:	3c                   	.byte 0x3c

00005b40 <.LBB8_5>:
    5b40:	00                   	.byte 0x0
    5b41:	3c                   	.byte 0x3c

00005b42 <.LBB8_6>:
    5b42:	00                   	.byte 0x0
    5b43:	3c                   	.byte 0x3c

00005b44 <.LBB8_7>:
    5b44:	1c 42                	sbb    $0x42,%al
    5b46:	f8                   	clc    
    5b47:	46                   	inc    %esi
    5b48:	84 4c f8 ff          	test   %cl,-0x1(%eax,%edi,8)
    5b4c:	82                   	(bad)  
    5b4d:	4c                   	dec    %esp
    5b4e:	f4                   	hlt    
    5b4f:	46                   	inc    %esi
    5b50:	1c 42                	sbb    $0x42,%al
    5b52:	0e                   	push   %cs
    5b53:	53                   	push   %ebx
    5b54:	0c 93                	or     $0x93,%al
    5b56:	0d                   	.byte 0xd
    5b57:	20 00                	and    %al,(%eax)
    5b59:	3c                   	.byte 0x3c

00005b5a <.LBB8_8>:
    5b5a:	3e 40                	ds inc %eax
    5b5c:	04 53                	add    $0x53,%al
    5b5e:	0f 44 2f             	cmove  (%edi),%ebp
    5b61:	83 2d 43 b0 12 f0 69 	subl   $0x69,0xf012b043
    5b68:	3f                   	aas    
    5b69:	40                   	inc    %eax
    5b6a:	4c                   	dec    %esp
    5b6b:	46                   	inc    %esi
    5b6c:	b0 12                	mov    $0x12,%al
    5b6e:	90                   	nop
    5b6f:	68                   	.byte 0x68
    5b70:	0c 3c                	or     $0x3c,%al

00005b72 <.LBB8_9>:
    5b72:	3e 40                	ds inc %eax
    5b74:	04 53                	add    $0x53,%al
    5b76:	0f 44 2f             	cmove  (%edi),%ebp
    5b79:	83 2d 43 b0 12 f0 69 	subl   $0x69,0xf012b043
    5b80:	3f                   	aas    
    5b81:	40                   	inc    %eax
    5b82:	22 46 b0             	and    -0x50(%esi),%al
    5b85:	12                   	.byte 0x12
    5b86:	90                   	nop
    5b87:	68                   	.byte 0x68
    5b88:	00                   	.byte 0x0
    5b89:	3c                   	.byte 0x3c

00005b8a <.LBB8_10>:
    5b8a:	31 52 34             	xor    %edx,0x34(%edx)
    5b8d:	41                   	inc    %ecx
    5b8e:	30                   	.byte 0x30
    5b8f:	41                   	inc    %ecx

00005b90 <task_add_node>:
    5b90:	04 12                	add    $0x12,%al
    5b92:	04 41                	add    $0x41,%al
    5b94:	31 80 0e 00 1c 42    	xor    %eax,0x421c000e(%eax)
    5b9a:	04 53                	add    $0x53,%al
    5b9c:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5ba0:	84 4c fa ff          	test   %cl,-0x1(%edx,%edi,8)
    5ba4:	3e 40                	ds inc %eax
    5ba6:	06                   	push   %es
    5ba7:	00 0f                	add    %cl,(%edi)
    5ba9:	4c                   	dec    %esp
    5baa:	b0 12                	mov    $0x12,%al
    5bac:	f0 6b 0c 4f 3c       	lock imul $0x3c,(%edi,%ecx,2),%ecx
    5bb1:	50                   	push   %eax
    5bb2:	00 47 84             	add    %al,-0x7c(%edi)
    5bb5:	4c                   	dec    %esp
    5bb6:	fc                   	cld    
    5bb7:	ff 1c 4f             	lcall  *(%edi,%ecx,2)
    5bba:	02 47 0c             	add    0xc(%edi),%al
    5bbd:	93                   	xchg   %eax,%ebx
    5bbe:	15                   	.byte 0x15
    5bbf:	24 00                	and    $0x0,%al
    5bc1:	3c                   	.byte 0x3c

00005bc2 <.LBB9_1>:
    5bc2:	1c 44                	sbb    $0x44,%al
    5bc4:	fc                   	cld    
    5bc5:	ff 1c 4c             	lcall  *(%esp,%ecx,2)
    5bc8:	02 00                	add    (%eax),%al
    5bca:	84 4c f8 ff          	test   %cl,-0x1(%eax,%edi,8)
    5bce:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5bd2:	3e 40                	ds inc %eax
    5bd4:	04 53                	add    $0x53,%al
    5bd6:	0f 44 2f             	cmove  (%edi),%ebp
    5bd9:	83 2d 43 b0 12 f0 69 	subl   $0x69,0xf012b043
    5be0:	3f                   	aas    
    5be1:	40                   	inc    %eax
    5be2:	22 46 b0             	and    -0x50(%esi),%al
    5be5:	12                   	.byte 0x12
    5be6:	90                   	nop
    5be7:	68                   	.byte 0x68
    5be8:	25                   	.byte 0x25
    5be9:	3c                   	.byte 0x3c

00005bea <.LBB9_2>:
    5bea:	1c 44                	sbb    $0x44,%al
    5bec:	fc                   	cld    
    5bed:	ff 1d 4c 04 00 84    	lcall  *0x8400044c
    5bf3:	4d                   	dec    %ebp
    5bf4:	f6 ff                	idiv   %bh
    5bf6:	1d 4c 02 00 84       	sbb    $0x8400024c,%eax
    5bfb:	4d                   	dec    %ebp
    5bfc:	f4                   	hlt    
    5bfd:	ff 2c 4c             	ljmp   *(%esp,%ecx,2)
    5c00:	84 4c f2 ff          	test   %cl,-0x1(%edx,%esi,8)
    5c04:	1c 44                	sbb    $0x44,%al
    5c06:	f6 ff                	idiv   %bh
    5c08:	82                   	(bad)  
    5c09:	4c                   	dec    %esp
    5c0a:	14 53                	adc    $0x53,%al
    5c0c:	1c 44                	sbb    $0x44,%al
    5c0e:	f4                   	hlt    
    5c0f:	ff 82 4c 12 53 1c    	incl   0x1c53124c(%edx)
    5c15:	44                   	inc    %esp
    5c16:	f2 ff 82 4c 10 53 3e 	repnz incl 0x3e53104c(%edx)
    5c1d:	40                   	inc    %eax
    5c1e:	04 53                	add    $0x53,%al
    5c20:	0f 44 2f             	cmove  (%edi),%ebp
    5c23:	83 2d 43 b0 12 f0 69 	subl   $0x69,0xf012b043
    5c2a:	3f                   	aas    
    5c2b:	40                   	inc    %eax
    5c2c:	4c                   	dec    %esp
    5c2d:	46                   	inc    %esi
    5c2e:	b0 12                	mov    $0x12,%al
    5c30:	90                   	nop
    5c31:	68                   	.byte 0x68
    5c32:	00                   	.byte 0x0
    5c33:	3c                   	.byte 0x3c

00005c34 <.LBB9_3>:
    5c34:	31 50 0e             	xor    %edx,0xe(%eax)
    5c37:	00 34 41             	add    %dh,(%ecx,%eax,2)
    5c3a:	30                   	.byte 0x30
    5c3b:	41                   	inc    %ecx

00005c3c <task_add_insert>:
    5c3c:	04 12                	add    $0x12,%al
    5c3e:	04 41                	add    $0x41,%al
    5c40:	31 80 1a 00 1c 42    	xor    %eax,0x421c001a(%eax)
    5c46:	00 53 84             	add    %dl,-0x7c(%ebx)
    5c49:	4c                   	dec    %esp
    5c4a:	fe                   	(bad)  
    5c4b:	ff                   	(bad)  
    5c4c:	3c 90                	cmp    $0x90,%al
    5c4e:	00 02                	add    %al,(%edx)
    5c50:	03 20                	add    (%eax),%esp
    5c52:	00                   	.byte 0x0
    5c53:	3c                   	.byte 0x3c

00005c54 <.LBB10_1>:
    5c54:	00                   	.byte 0x0
    5c55:	3c                   	.byte 0x3c

00005c56 <.LBB10_2>:
    5c56:	ff                   	(bad)  
    5c57:	3f                   	aas    

00005c58 <.LBB10_3>:
    5c58:	1c 44                	sbb    $0x44,%al
    5c5a:	fe                   	(bad)  
    5c5b:	ff 84 4c fc ff 1c 42 	incl   0x421cfffc(%esp,%ecx,2)
    5c62:	f8                   	clc    
    5c63:	46                   	inc    %esi
    5c64:	84 4c f6 ff          	test   %cl,-0x1(%esi,%esi,8)
    5c68:	84 43 f8             	test   %al,-0x8(%ebx)
    5c6b:	ff 84 43 fa ff 1c 42 	incl   0x421cfffa(%ebx,%eax,2)
    5c72:	0a 53 0c             	or     0xc(%ebx),%dl
    5c75:	93                   	xchg   %eax,%ebx
    5c76:	27                   	daa    
    5c77:	20 00                	and    %al,(%eax)
    5c79:	3c                   	.byte 0x3c

00005c7a <.LBB10_4>:
    5c7a:	1c 42                	sbb    $0x42,%al
    5c7c:	0a 53 84             	or     -0x7c(%ebx),%dl
    5c7f:	4c                   	dec    %esp
    5c80:	f4                   	hlt    
    5c81:	ff 1c 42             	lcall  *(%edx,%eax,2)
    5c84:	08 53 84             	or     %dl,-0x7c(%ebx)
    5c87:	4c                   	dec    %esp
    5c88:	f2 ff 1c 42          	repnz lcall *(%edx,%eax,2)
    5c8c:	06                   	push   %es
    5c8d:	53                   	push   %ebx
    5c8e:	84 4c f0 ff          	test   %cl,-0x1(%eax,%esi,8)
    5c92:	1c 44                	sbb    $0x44,%al
    5c94:	fc                   	cld    
    5c95:	ff 84 4c f4 ff 1c 42 	incl   0x421cfff4(%esp,%ecx,2)
    5c9c:	0c 53                	or     $0x53,%al
    5c9e:	84 4c ee ff          	test   %cl,-0x1(%esi,%ebp,8)
    5ca2:	3e 40                	ds inc %eax
    5ca4:	06                   	push   %es
    5ca5:	00 0f                	add    %cl,(%edi)
    5ca7:	4c                   	dec    %esp
    5ca8:	b0 12                	mov    $0x12,%al
    5caa:	f0 6b 1c 44 f4       	lock imul $0xfffffff4,(%esp,%eax,2),%ebx
    5caf:	ff 8f 4c 04 47 1c    	decl   0x1c47044c(%edi)
    5cb5:	44                   	inc    %esp
    5cb6:	f2 ff 8f 4c 02 47 1c 	repnz decl 0x1c47024c(%edi)
    5cbd:	44                   	inc    %esp
    5cbe:	f0 ff 8f 4c 00 47 27 	lock decl 0x2747004c(%edi)
    5cc5:	3c                   	.byte 0x3c

00005cc6 <.LBB10_5>:
    5cc6:	1c 42                	sbb    $0x42,%al
    5cc8:	04 53                	add    $0x53,%al
    5cca:	84 4c ec ff          	test   %cl,-0x1(%esp,%ebp,8)
    5cce:	1c 42                	sbb    $0x42,%al
    5cd0:	14 53                	adc    $0x53,%al
    5cd2:	84 4c ea ff          	test   %cl,-0x1(%edx,%ebp,8)
    5cd6:	1c 42                	sbb    $0x42,%al
    5cd8:	12 53 84             	adc    -0x7c(%ebx),%dl
    5cdb:	4c                   	dec    %esp
    5cdc:	e8 ff 1c 42 10       	call   104279e0 <__high_dataend+0x104179de>
    5ce1:	53                   	push   %ebx
    5ce2:	84 4c e6 ff          	test   %cl,-0x1(%esi,%eiz,8)
    5ce6:	1c 44                	sbb    $0x44,%al
    5ce8:	fc                   	cld    
    5ce9:	ff 84 4c e8 ff 1f 44 	incl   0x441fffe8(%esp,%ecx,2)
    5cf0:	ec                   	in     (%dx),%al
    5cf1:	ff                   	(bad)  
    5cf2:	3e 40                	ds inc %eax
    5cf4:	06                   	push   %es
    5cf5:	00 b0 12 f0 6b 1c    	add    %dh,0x1c6bf012(%eax)
    5cfb:	44                   	inc    %esp
    5cfc:	ea ff 8f 4c 04 47 1c 	ljmp   $0x1c47,$0x44c8fff
    5d03:	44                   	inc    %esp
    5d04:	e8 ff 8f 4c 02       	call   24ced08 <__high_dataend+0x24bed06>
    5d09:	47                   	inc    %edi
    5d0a:	1c 44                	sbb    $0x44,%al
    5d0c:	e6 ff                	out    %al,$0xff
    5d0e:	8f                   	(bad)  
    5d0f:	4c                   	dec    %esp
    5d10:	00 47 00             	add    %al,0x0(%edi)
    5d13:	3c                   	.byte 0x3c

00005d14 <.LBB10_6>:
    5d14:	1f                   	pop    %ds
    5d15:	44                   	inc    %esp
    5d16:	fc                   	cld    
    5d17:	ff                   	(bad)  
    5d18:	3e 40                	ds inc %eax
    5d1a:	06                   	push   %es
    5d1b:	00 b0 12 f0 6b 1e    	add    %dh,0x1e6bf012(%eax)
    5d21:	44                   	inc    %esp
    5d22:	fa                   	cli    
    5d23:	ff 8f 4e 04 47 1e    	decl   0x1e47044e(%edi)
    5d29:	44                   	inc    %esp
    5d2a:	f8                   	clc    
    5d2b:	ff 8f 4e 02 47 1e    	decl   0x1e47024e(%edi)
    5d31:	44                   	inc    %esp
    5d32:	f6 ff                	idiv   %bh
    5d34:	8f                   	(bad)  
    5d35:	4e                   	dec    %esi
    5d36:	00 47 1e             	add    %al,0x1e(%edi)
    5d39:	42                   	inc    %edx
    5d3a:	0c 53                	or     $0x53,%al
    5d3c:	82                   	(bad)  
    5d3d:	4e                   	dec    %esi
    5d3e:	16                   	push   %ss
    5d3f:	53                   	push   %ebx
    5d40:	1e                   	push   %ds
    5d41:	44                   	inc    %esp
    5d42:	fe                   	(bad)  
    5d43:	ff 1e                	lcall  *(%esi)
    5d45:	53                   	push   %ebx
    5d46:	84 4e fe             	test   %cl,-0x2(%esi)
    5d49:	ff                   	(bad)  
    5d4a:	3e 40                	ds inc %eax
    5d4c:	00 53 0f             	add    %dl,0xf(%ebx)
    5d4f:	44                   	inc    %esp
    5d50:	2f                   	das    
    5d51:	83 2d 43 b0 12 f0 69 	subl   $0x69,0xf012b043
    5d58:	3f                   	aas    
    5d59:	40                   	inc    %eax
    5d5a:	76 46                	jbe    5da2 <task_append_compressed+0x3a>
    5d5c:	b0 12                	mov    $0x12,%al
    5d5e:	90                   	nop
    5d5f:	68 31 50 1a 00       	push   $0x1a5031
    5d64:	34 41                	xor    $0x41,%al
    5d66:	30                   	.byte 0x30
    5d67:	41                   	inc    %ecx

00005d68 <task_append_compressed>:
    5d68:	04 12                	add    $0x12,%al
    5d6a:	04 41                	add    $0x41,%al
    5d6c:	31 80 06 00 1c 42    	xor    %eax,0x421c0006(%eax)
    5d72:	f6 46 84 4c          	testb  $0x4c,-0x7c(%esi)
    5d76:	fe                   	(bad)  
    5d77:	ff 84 4c fc ff 1d 42 	incl   0x421dfffc(%esp,%ecx,2)
    5d7e:	16                   	push   %ss
    5d7f:	53                   	push   %ebx
    5d80:	3e 40                	ds inc %eax
    5d82:	06                   	push   %es
    5d83:	00 0f                	add    %cl,(%edi)
    5d85:	4c                   	dec    %esp
    5d86:	84 4d fa             	test   %cl,-0x6(%ebp)
    5d89:	ff b0 12 f0 6b 1c    	pushl  0x1c6bf012(%eax)
    5d8f:	44                   	inc    %esp
    5d90:	fa                   	cli    
    5d91:	ff 8f 4c 18 53 1c    	decl   0x1c53184c(%edi)
    5d97:	44                   	inc    %esp
    5d98:	fe                   	(bad)  
    5d99:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    5d9c:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5da0:	3c 90                	cmp    $0x90,%al
    5da2:	40                   	inc    %eax
    5da3:	00                   	.byte 0x0
    5da4:	0d                   	.byte 0xd
    5da5:	20 00                	and    %al,(%eax)
    5da7:	3c                   	.byte 0x3c

00005da8 <.LBB11_1>:
    5da8:	3e 40                	ds inc %eax
    5daa:	f6 46 0f 44          	testb  $0x44,0xf(%esi)
    5dae:	2f                   	das    
    5daf:	83 2d 43 b0 12 f0 69 	subl   $0x69,0xf012b043
    5db6:	3f                   	aas    
    5db7:	40                   	inc    %eax
    5db8:	a0 46 b0 12 90       	mov    0x9012b046,%al
    5dbd:	68                   	.byte 0x68
    5dbe:	0c 3c                	or     $0x3c,%al

00005dc0 <.LBB11_2>:
    5dc0:	3e 40                	ds inc %eax
    5dc2:	f6 46 0f 44          	testb  $0x44,0xf(%esi)
    5dc6:	2f                   	das    
    5dc7:	83 2d 43 b0 12 f0 69 	subl   $0x69,0xf012b043
    5dce:	3f                   	aas    
    5dcf:	40                   	inc    %eax
    5dd0:	50                   	push   %eax
    5dd1:	45                   	inc    %ebp
    5dd2:	b0 12                	mov    $0x12,%al
    5dd4:	90                   	nop
    5dd5:	68                   	.byte 0x68
    5dd6:	00                   	.byte 0x0
    5dd7:	3c                   	.byte 0x3c

00005dd8 <.LBB11_3>:
    5dd8:	31 50 06             	xor    %edx,0x6(%eax)
    5ddb:	00 34 41             	add    %dh,(%ecx,%eax,2)
    5dde:	30                   	.byte 0x30
    5ddf:	41                   	inc    %ecx

00005de0 <task_print>:
    5de0:	04 12                	add    $0x12,%al
    5de2:	04 41                	add    $0x41,%al
    5de4:	31 80 14 00 0c 41    	xor    %eax,0x410c0014(%eax)
    5dea:	bc 40 0e 44 00       	mov    $0x440e40,%esp
    5def:	00 b0 12 bc 62 84    	add    %dh,-0x7b9d43ee(%eax)
    5df5:	43                   	inc    %ebx
    5df6:	fe                   	(bad)  
    5df7:	ff 84 4f fa ff 00 3c 	incl   0x3c00fffa(%edi,%ecx,2)

00005dfe <.LBB12_1>:
    5dfe:	1c 44                	sbb    $0x44,%al
    5e00:	fe                   	(bad)  
    5e01:	ff                   	(bad)  
    5e02:	3c 90                	cmp    $0x90,%al
    5e04:	40                   	inc    %eax
    5e05:	00 31                	add    %dh,(%ecx)
    5e07:	2c 00                	sub    $0x0,%al
    5e09:	3c                   	.byte 0x3c

00005e0a <.LBB12_2>:
    5e0a:	1f                   	pop    %ds
    5e0b:	44                   	inc    %esp
    5e0c:	fe                   	(bad)  
    5e0d:	ff                   	(bad)  
    5e0e:	3e 40                	ds inc %eax
    5e10:	06                   	push   %es
    5e11:	00 b0 12 f0 6b 1e    	add    %dh,0x1e6bf012(%eax)
    5e17:	4f                   	dec    %edi
    5e18:	18 53 84             	sbb    %dl,-0x7c(%ebx)
    5e1b:	4e                   	dec    %esi
    5e1c:	fc                   	cld    
    5e1d:	ff 0f                	decl   (%edi)
    5e1f:	41                   	inc    %ecx
    5e20:	8f                   	(bad)  
    5e21:	4e                   	dec    %esi
    5e22:	02 00                	add    (%eax),%al
    5e24:	bf 40 22 44 00       	mov    $0x442240,%edi
    5e29:	00 b0 12 bc 62 1e    	add    %dh,0x1e62bc12(%eax)
    5e2f:	44                   	inc    %esp
    5e30:	fe                   	(bad)  
    5e31:	ff 0e                	decl   (%esi)
    5e33:	93                   	xchg   %eax,%ebx
    5e34:	84 4f f8             	test   %cl,-0x8(%edi)
    5e37:	ff 11                	call   *(%ecx)
    5e39:	24 00                	and    $0x0,%al
    5e3b:	3c                   	.byte 0x3c

00005e3c <.LBB12_3>:
    5e3c:	1c 44                	sbb    $0x44,%al
    5e3e:	fe                   	(bad)  
    5e3f:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    5e42:	3c b0                	cmp    $0xb0,%al
    5e44:	07                   	pop    %es
    5e45:	00 0a                	add    %cl,(%edx)
    5e47:	20 00                	and    %al,(%eax)
    5e49:	3c                   	.byte 0x3c

00005e4a <.LBB12_4>:
    5e4a:	0c 41                	or     $0x41,%al
    5e4c:	bc 40 1f 44 00       	mov    $0x441f40,%esp
    5e51:	00 b0 12 bc 62 84    	add    %dh,-0x7b9d43ee(%eax)
    5e57:	4f                   	dec    %edi
    5e58:	f6 ff                	idiv   %bh
    5e5a:	00                   	.byte 0x0
    5e5b:	3c                   	.byte 0x3c

00005e5c <.LBB12_5>:
    5e5c:	00                   	.byte 0x0
    5e5d:	3c                   	.byte 0x3c

00005e5e <.LBB12_6>:
    5e5e:	1c 44                	sbb    $0x44,%al
    5e60:	fe                   	(bad)  
    5e61:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    5e64:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5e68:	ca                   	.byte 0xca
    5e69:	3f                   	aas    

00005e6a <.LBB12_7>:
    5e6a:	0c 41                	or     $0x41,%al
    5e6c:	bc 40 1f 44 00       	mov    $0x441f40,%esp
    5e71:	00 b0 12 bc 62 1c    	add    %dh,0x1c62bc12(%eax)
    5e77:	42                   	inc    %edx
    5e78:	fe 46 0d             	incb   0xd(%esi)
    5e7b:	41                   	inc    %ecx
    5e7c:	8d 4c 02 00          	lea    0x0(%edx,%eax,1),%ecx
    5e80:	bd 40 40 00 04       	mov    $0x4004040,%ebp
    5e85:	00 bd 40 28 44 00    	add    %bh,0x442840(%ebp)
    5e8b:	00 84 4f f4 ff b0 12 	add    %al,0x12b0fff4(%edi,%ecx,2)
    5e92:	bc 62 3c 40 ca       	mov    $0xca403c62,%esp
    5e97:	46                   	inc    %esi
    5e98:	84 4f f2             	test   %cl,-0xe(%edi)
    5e9b:	ff 0f                	decl   (%edi)
    5e9d:	4c                   	dec    %esp
    5e9e:	b0 12                	mov    $0x12,%al
    5ea0:	90                   	nop
    5ea1:	68 31 50 14 00       	push   $0x145031
    5ea6:	34 41                	xor    $0x41,%al
    5ea8:	30 41 00             	xor    %al,0x0(%ecx)
	...

00005eac <task_done>:
    5eac:	04 12                	add    $0x12,%al
    5eae:	04 41                	add    $0x41,%al
    5eb0:	31 80 32 00 84 43    	xor    %eax,0x43840032(%eax)
    5eb6:	fe                   	(bad)  
    5eb7:	ff 0c 41             	decl   (%ecx,%eax,2)
    5eba:	bc 40 2a 00 04       	mov    $0x4002a40,%esp
    5ebf:	00 9c 43 02 00 bc 40 	add    %bl,0x40bc0002(%ebx,%eax,2)
    5ec6:	45                   	inc    %ebp
    5ec7:	44                   	inc    %esp
    5ec8:	00 00                	add    %al,(%eax)
    5eca:	b0 12                	mov    $0x12,%al
    5ecc:	bc 62 1c 44 fe       	mov    $0xfe441c62,%esp
    5ed1:	ff                   	(bad)  
    5ed2:	3c 50                	cmp    $0x50,%al
    5ed4:	f8                   	clc    
    5ed5:	01 84 4c fe ff 0c 41 	add    %eax,0x410cfffe(%esp,%ecx,2)
    5edc:	ac                   	lods   %ds:(%esi),%al
    5edd:	43                   	inc    %ebx
    5ede:	04 00                	add    $0x0,%al
    5ee0:	9c                   	pushf  
    5ee1:	43                   	inc    %ebx
    5ee2:	02 00                	add    (%eax),%al
    5ee4:	bc 40 5b 44 00       	mov    $0x445b40,%esp
    5ee9:	00 84 4f fa ff b0 12 	add    %al,0x12b0fffa(%edi,%ecx,2)
    5ef0:	bc 62 1c 44 fe       	mov    $0xfe441c62,%esp
    5ef5:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    5ef8:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5efc:	0c 41                	or     $0x41,%al
    5efe:	ac                   	lods   %ds:(%esi),%al
    5eff:	43                   	inc    %ebx
    5f00:	04 00                	add    $0x0,%al
    5f02:	ac                   	lods   %ds:(%esi),%al
    5f03:	43                   	inc    %ebx
    5f04:	02 00                	add    (%eax),%al
    5f06:	bc 40 5b 44 00       	mov    $0x445b40,%esp
    5f0b:	00 84 4f f8 ff b0 12 	add    %al,0x12b0fff8(%edi,%ecx,2)
    5f12:	bc 62 1c 44 fe       	mov    $0xfe441c62,%esp
    5f17:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    5f1a:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5f1e:	0c 41                	or     $0x41,%al
    5f20:	ac                   	lods   %ds:(%esi),%al
    5f21:	43                   	inc    %ebx
    5f22:	04 00                	add    $0x0,%al
    5f24:	bc 40 03 00 02       	mov    $0x2000340,%esp
    5f29:	00 bc 40 5b 44 00 00 	add    %bh,0x445b(%eax,%eax,2)
    5f30:	84 4f f6             	test   %cl,-0xa(%edi)
    5f33:	ff b0 12 bc 62 1c    	pushl  0x1c62bc12(%eax)
    5f39:	44                   	inc    %esp
    5f3a:	fe                   	(bad)  
    5f3b:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    5f3e:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5f42:	0c 41                	or     $0x41,%al
    5f44:	ac                   	lods   %ds:(%esi),%al
    5f45:	43                   	inc    %ebx
    5f46:	04 00                	add    $0x0,%al
    5f48:	ac                   	lods   %ds:(%esi),%al
    5f49:	42                   	inc    %edx
    5f4a:	02 00                	add    (%eax),%al
    5f4c:	bc 40 5b 44 00       	mov    $0x445b40,%esp
    5f51:	00 84 4f f4 ff b0 12 	add    %al,0x12b0fff4(%edi,%ecx,2)
    5f58:	bc 62 1c 44 fe       	mov    $0xfe441c62,%esp
    5f5d:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    5f60:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5f64:	0c 41                	or     $0x41,%al
    5f66:	ac                   	lods   %ds:(%esi),%al
    5f67:	43                   	inc    %ebx
    5f68:	04 00                	add    $0x0,%al
    5f6a:	bc 40 05 00 02       	mov    $0x2000540,%esp
    5f6f:	00 bc 40 5b 44 00 00 	add    %bh,0x445b(%eax,%eax,2)
    5f76:	84 4f f2             	test   %cl,-0xe(%edi)
    5f79:	ff b0 12 bc 62 1c    	pushl  0x1c62bc12(%eax)
    5f7f:	44                   	inc    %esp
    5f80:	fe                   	(bad)  
    5f81:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    5f84:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5f88:	0c 41                	or     $0x41,%al
    5f8a:	bc 40 00 0c 04       	mov    $0x40c0040,%esp
    5f8f:	00 bc 40 06 00 02 00 	add    %bh,0x20006(%eax,%eax,2)
    5f96:	bc 40 5b 44 00       	mov    $0x445b40,%esp
    5f9b:	00 84 4f f0 ff b0 12 	add    %al,0x12b0fff0(%edi,%ecx,2)
    5fa2:	bc 62 1c 44 fe       	mov    $0xfe441c62,%esp
    5fa7:	ff                   	(bad)  
    5fa8:	3c 50                	cmp    $0x50,%al
    5faa:	00 0c 84             	add    %cl,(%esp,%eax,4)
    5fad:	4c                   	dec    %esp
    5fae:	fe                   	(bad)  
    5faf:	ff 0c 41             	decl   (%ecx,%eax,2)
    5fb2:	ac                   	lods   %ds:(%esi),%al
    5fb3:	43                   	inc    %ebx
    5fb4:	04 00                	add    $0x0,%al
    5fb6:	bc 40 07 00 02       	mov    $0x2000740,%esp
    5fbb:	00 bc 40 5b 44 00 00 	add    %bh,0x445b(%eax,%eax,2)
    5fc2:	84 4f ee             	test   %cl,-0x12(%edi)
    5fc5:	ff b0 12 bc 62 1c    	pushl  0x1c62bc12(%eax)
    5fcb:	44                   	inc    %esp
    5fcc:	fe                   	(bad)  
    5fcd:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    5fd0:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5fd4:	0c 41                	or     $0x41,%al
    5fd6:	ac                   	lods   %ds:(%esi),%al
    5fd7:	43                   	inc    %ebx
    5fd8:	04 00                	add    $0x0,%al
    5fda:	bc 42 02 00 bc       	mov    $0xbc000242,%esp
    5fdf:	40                   	inc    %eax
    5fe0:	5b                   	pop    %ebx
    5fe1:	44                   	inc    %esp
    5fe2:	00 00                	add    %al,(%eax)
    5fe4:	84 4f ec             	test   %cl,-0x14(%edi)
    5fe7:	ff b0 12 bc 62 1c    	pushl  0x1c62bc12(%eax)
    5fed:	44                   	inc    %esp
    5fee:	fe                   	(bad)  
    5fef:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    5ff2:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5ff6:	0c 41                	or     $0x41,%al
    5ff8:	ac                   	lods   %ds:(%esi),%al
    5ff9:	43                   	inc    %ebx
    5ffa:	04 00                	add    $0x0,%al
    5ffc:	bc 40 09 00 02       	mov    $0x2000940,%esp
    6001:	00 bc 40 5b 44 00 00 	add    %bh,0x445b(%eax,%eax,2)
    6008:	84 4f ea             	test   %cl,-0x16(%edi)
    600b:	ff b0 12 bc 62 1c    	pushl  0x1c62bc12(%eax)
    6011:	44                   	inc    %esp
    6012:	fe                   	(bad)  
    6013:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    6016:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    601a:	0c 41                	or     $0x41,%al
    601c:	ac                   	lods   %ds:(%esi),%al
    601d:	43                   	inc    %ebx
    601e:	04 00                	add    $0x0,%al
    6020:	bc 40 0b 00 02       	mov    $0x2000b40,%esp
    6025:	00 bc 40 5b 44 00 00 	add    %bh,0x445b(%eax,%eax,2)
    602c:	84 4f e8             	test   %cl,-0x18(%edi)
    602f:	ff b0 12 bc 62 1c    	pushl  0x1c62bc12(%eax)
    6035:	44                   	inc    %esp
    6036:	fe                   	(bad)  
    6037:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    603a:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    603e:	0c 41                	or     $0x41,%al
    6040:	ac                   	lods   %ds:(%esi),%al
    6041:	43                   	inc    %ebx
    6042:	04 00                	add    $0x0,%al
    6044:	bc 40 0c 00 02       	mov    $0x2000c40,%esp
    6049:	00 bc 40 5b 44 00 00 	add    %bh,0x445b(%eax,%eax,2)
    6050:	84 4f e6             	test   %cl,-0x1a(%edi)
    6053:	ff b0 12 bc 62 1c    	pushl  0x1c62bc12(%eax)
    6059:	44                   	inc    %esp
    605a:	fe                   	(bad)  
    605b:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    605e:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    6062:	0c 41                	or     $0x41,%al
    6064:	ac                   	lods   %ds:(%esi),%al
    6065:	43                   	inc    %ebx
    6066:	04 00                	add    $0x0,%al
    6068:	bc 40 0d 00 02       	mov    $0x2000d40,%esp
    606d:	00 bc 40 5b 44 00 00 	add    %bh,0x445b(%eax,%eax,2)
    6074:	84 4f e4             	test   %cl,-0x1c(%edi)
    6077:	ff b0 12 bc 62 1c    	pushl  0x1c62bc12(%eax)
    607d:	44                   	inc    %esp
    607e:	fe                   	(bad)  
    607f:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    6082:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    6086:	0c 41                	or     $0x41,%al
    6088:	bc 40 06 00 04       	mov    $0x4000640,%esp
    608d:	00 bc 40 0e 00 02 00 	add    %bh,0x2000e(%eax,%eax,2)
    6094:	bc 40 5b 44 00       	mov    $0x445b40,%esp
    6099:	00 84 4f e2 ff b0 12 	add    %al,0x12b0ffe2(%edi,%ecx,2)
    60a0:	bc 62 1c 44 fe       	mov    $0xfe441c62,%esp
    60a5:	ff                   	(bad)  
    60a6:	3c 50                	cmp    $0x50,%al
    60a8:	06                   	push   %es
    60a9:	00 84 4c fe ff 0c 41 	add    %al,0x410cfffe(%esp,%ecx,2)
    60b0:	bc 40 80 01 04       	mov    $0x4018040,%esp
    60b5:	00 bc 40 0f 00 02 00 	add    %bh,0x2000f(%eax,%eax,2)
    60bc:	bc 40 5b 44 00       	mov    $0x445b40,%esp
    60c1:	00 84 4f e0 ff b0 12 	add    %al,0x12b0ffe0(%edi,%ecx,2)
    60c8:	bc 62 1c 44 fe       	mov    $0xfe441c62,%esp
    60cd:	ff                   	(bad)  
    60ce:	3c 50                	cmp    $0x50,%al
    60d0:	80 01 84             	addb   $0x84,(%ecx)
    60d3:	4c                   	dec    %esp
    60d4:	fe                   	(bad)  
    60d5:	ff 0c 41             	decl   (%ecx,%eax,2)
    60d8:	bc 40 06 00 04       	mov    $0x4000640,%esp
    60dd:	00 bc 40 10 00 02 00 	add    %bh,0x20010(%eax,%eax,2)
    60e4:	bc 40 5b 44 00       	mov    $0x445b40,%esp
    60e9:	00 84 4f de ff b0 12 	add    %al,0x12b0ffde(%edi,%ecx,2)
    60f0:	bc 62 1c 44 fe       	mov    $0xfe441c62,%esp
    60f5:	ff                   	(bad)  
    60f6:	3c 50                	cmp    $0x50,%al
    60f8:	06                   	push   %es
    60f9:	00 84 4c fe ff 0c 41 	add    %al,0x410cfffe(%esp,%ecx,2)
    6100:	ac                   	lods   %ds:(%esi),%al
    6101:	43                   	inc    %ebx
    6102:	04 00                	add    $0x0,%al
    6104:	bc 40 11 00 02       	mov    $0x2001140,%esp
    6109:	00 bc 40 5b 44 00 00 	add    %bh,0x445b(%eax,%eax,2)
    6110:	84 4f dc             	test   %cl,-0x24(%edi)
    6113:	ff b0 12 bc 62 1c    	pushl  0x1c62bc12(%eax)
    6119:	44                   	inc    %esp
    611a:	fe                   	(bad)  
    611b:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    611e:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    6122:	0c 41                	or     $0x41,%al
    6124:	bc 40 42 00 02       	mov    $0x2004240,%esp
    6129:	00 bc 40 74 44 00 00 	add    %bh,0x4474(%eax,%eax,2)
    6130:	84 4f da             	test   %cl,-0x26(%edi)
    6133:	ff b0 12 bc 62 1c    	pushl  0x1c62bc12(%eax)
    6139:	44                   	inc    %esp
    613a:	fe                   	(bad)  
    613b:	ff                   	(bad)  
    613c:	3c 50                	cmp    $0x50,%al
    613e:	42                   	inc    %edx
    613f:	00 84 4c fe ff 0c 41 	add    %al,0x410cfffe(%esp,%ecx,2)
    6146:	ac                   	lods   %ds:(%esi),%al
    6147:	43                   	inc    %ebx
    6148:	02 00                	add    (%eax),%al
    614a:	bc 40 8c 44 00       	mov    $0x448c40,%esp
    614f:	00 84 4f d8 ff b0 12 	add    %al,0x12b0ffd8(%edi,%ecx,2)
    6156:	bc 62 1c 44 fe       	mov    $0xfe441c62,%esp
    615b:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    615e:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    6162:	0d 41 8d 4c 02       	or     $0x24c8d41,%eax
    6167:	00 bd 40 a8 44 00    	add    %bh,0x44a840(%ebp)
    616d:	00 84 4f d6 ff b0 12 	add    %al,0x12b0ffd6(%edi,%ecx,2)
    6174:	bc 62 84 4f d4       	mov    $0xd44f8462,%esp
    6179:	ff 31                	pushl  (%ecx)
    617b:	50                   	push   %eax
    617c:	32 00                	xor    (%eax),%al
    617e:	34 41                	xor    $0x41,%al
    6180:	30 41 00             	xor    %al,0x0(%ecx)
	...

00006184 <_entry_task>:
    6184:	04 12                	add    $0x12,%al
    6186:	04 41                	add    $0x41,%al
    6188:	3f                   	aas    
    6189:	40                   	inc    %eax
    618a:	fc                   	cld    
    618b:	44                   	inc    %esp
    618c:	b0 12                	mov    $0x12,%al
    618e:	90                   	nop
    618f:	68 34 41 30 41       	push   $0x41304134

00006194 <_init>:
    6194:	04 12                	add    $0x12,%al
    6196:	04 41                	add    $0x41,%al
    6198:	b0 12                	mov    $0x12,%al
    619a:	2c 57                	sub    $0x57,%al
    619c:	34 41                	xor    $0x41,%al
    619e:	30                   	.byte 0x30
    619f:	41                   	inc    %ecx

000061a0 <init_hw>:
    61a0:	04 12                	add    $0x12,%al
    61a2:	04 41                	add    $0x41,%al
    61a4:	b0 12                	mov    $0x12,%al
    61a6:	08 62 1c             	or     %ah,0x1c(%edx)
    61a9:	42                   	inc    %edx
    61aa:	30 01                	xor    %al,(%ecx)
    61ac:	3c f0                	cmp    $0xf0,%al
    61ae:	fe                   	(bad)  
    61af:	ff 82 4c 30 01 b0    	incl   -0x4ffecfb4(%edx)
    61b5:	12 9c 62 34 41 30 41 	adc    0x41304134(%edx,%eiz,2),%bl

000061bc <acquire_sample>:
    61bc:	04 12                	add    $0x12,%al
    61be:	04 41                	add    $0x41,%al
    61c0:	31 80 06 00 0c 4f    	xor    %eax,0x4f0c0006(%eax)
    61c6:	84 4f fe             	test   %cl,-0x2(%edi)
    61c9:	ff 1f                	lcall  *(%edi)
    61cb:	53                   	push   %ebx
    61cc:	3f                   	aas    
    61cd:	f0 03 00             	lock add (%eax),%eax
    61d0:	84 4f fc             	test   %cl,-0x4(%edi)
    61d3:	ff 84 4c fa ff 31 50 	incl   0x5031fffa(%esp,%ecx,2)
    61da:	06                   	push   %es
    61db:	00 34 41             	add    %dh,(%ecx,%eax,2)
    61de:	30                   	.byte 0x30
    61df:	41                   	inc    %ecx

000061e0 <msp_watchdog_enable>:
    61e0:	04 12                	add    $0x12,%al
    61e2:	04 41                	add    $0x41,%al
    61e4:	21 83 4c 4f c4 4c    	and    %eax,0x4cc44f4c(%ebx)
    61ea:	ff                   	(bad)  
    61eb:	ff 5f 44             	lcall  *0x44(%edi)
    61ee:	ff                   	(bad)  
    61ef:	ff                   	(bad)  
    61f0:	3f                   	aas    
    61f1:	d0 08                	rorb   (%eax)
    61f3:	5a                   	pop    %edx
    61f4:	82                   	(bad)  
    61f5:	4f                   	dec    %edi
    61f6:	5c                   	pop    %esp
    61f7:	01 5c 44 ff          	add    %ebx,-0x1(%esp,%eax,2)
    61fb:	ff c2                	inc    %edx
    61fd:	4c                   	dec    %esp
    61fe:	20 1c 21             	and    %bl,(%ecx,%eiz,1)
    6201:	53                   	push   %ebx
    6202:	34 41                	xor    $0x41,%al
    6204:	30 41 00             	xor    %al,0x0(%ecx)
	...

00006208 <msp_watchdog_disable>:
    6208:	04 12                	add    $0x12,%al
    620a:	04 41                	add    $0x41,%al
    620c:	b2 40                	mov    $0x40,%dl
    620e:	80 5a 5c 01          	sbbb   $0x1,0x5c(%edx)
    6212:	34 41                	xor    $0x41,%al
    6214:	30 41 00             	xor    %al,0x0(%ecx)
	...

00006218 <msp_watchdog_kick>:
    6218:	04 12                	add    $0x12,%al
    621a:	04 41                	add    $0x41,%al
    621c:	5c                   	pop    %esp
    621d:	42                   	inc    %edx
    621e:	20 1c 3c             	and    %bl,(%esp,%edi,1)
    6221:	d0 08                	rorb   (%eax)
    6223:	5a                   	pop    %edx
    6224:	82                   	(bad)  
    6225:	4c                   	dec    %esp
    6226:	5c                   	pop    %esp
    6227:	01 34 41             	add    %esi,(%ecx,%eax,2)
    622a:	30                   	.byte 0x30
    622b:	41                   	inc    %ecx

0000622c <memcpy>:
    622c:	04 12                	add    $0x12,%al
    622e:	04 41                	add    $0x41,%al
    6230:	0b 12                	or     (%edx),%edx
    6232:	0a 12                	or     (%edx),%dl
    6234:	31 80 0e 00 0c 4d    	xor    %eax,0x4d0c000e(%eax)
    623a:	0b 4e 0a             	or     0xa(%esi),%ecx
    623d:	4f                   	dec    %edi
    623e:	84 4f fa             	test   %cl,-0x6(%edi)
    6241:	ff 84 4e f8 ff 84 4d 	incl   0x4d84fff8(%esi,%ecx,2)
    6248:	f6 ff                	idiv   %bh
    624a:	84 43 f4             	test   %al,-0xc(%ebx)
    624d:	ff 84 4c f2 ff 84 4b 	incl   0x4b84fff2(%esp,%ecx,2)
    6254:	f0 ff 84 4a ee ff 00 	lock incl 0x3c00ffee(%edx,%ecx,2)
    625b:	3c 

0000625c <.LBB21_1>:
    625c:	1c 44                	sbb    $0x44,%al
    625e:	f4                   	hlt    
    625f:	ff 1d 44 f6 ff 0c    	lcall  *0xcfff644
    6265:	9d                   	popf   
    6266:	12 2c 00             	adc    (%eax,%eax,1),%ch
    6269:	3c                   	.byte 0x3c

0000626a <.LBB21_2>:
    626a:	1c 44                	sbb    $0x44,%al
    626c:	f8                   	clc    
    626d:	ff 1d 44 f4 ff 0c    	lcall  *0xcfff444
    6273:	5d                   	pop    %ebp
    6274:	6e                   	outsb  %ds:(%esi),(%dx)
    6275:	4c                   	dec    %esp
    6276:	1c 44                	sbb    $0x44,%al
    6278:	fa                   	cli    
    6279:	ff 0c 5d cc 4e 00 00 	decl   0x4ecc(,%ebx,2)
    6280:	1c 44                	sbb    $0x44,%al
    6282:	f4                   	hlt    
    6283:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    6286:	84 4c f4 ff          	test   %cl,-0x1(%esp,%esi,8)
    628a:	e8                   	.byte 0xe8
    628b:	3f                   	aas    

0000628c <.LBB21_3>:
    628c:	1f                   	pop    %ds
    628d:	44                   	inc    %esp
    628e:	fa                   	cli    
    628f:	ff 31                	pushl  (%ecx)
    6291:	50                   	push   %eax
    6292:	0e                   	push   %cs
    6293:	00 3a                	add    %bh,(%edx)
    6295:	41                   	inc    %ecx
    6296:	3b 41 34             	cmp    0x34(%ecx),%eax
    6299:	41                   	inc    %ecx
    629a:	30                   	.byte 0x30
    629b:	41                   	inc    %ecx

0000629c <msp_clock_setup>:
    629c:	04 12                	add    $0x12,%al
    629e:	04 41                	add    $0x41,%al
    62a0:	f2 40                	repnz inc %eax
    62a2:	a5                   	movsl  %ds:(%esi),%es:(%edi)
    62a3:	ff 61 01             	jmp    *0x1(%ecx)
    62a6:	b2 40                	mov    $0x40,%dl
    62a8:	0c 00                	or     $0x0,%al
    62aa:	62 01                	bound  %eax,(%ecx)
    62ac:	b2 40                	mov    $0x40,%dl
    62ae:	33 00                	xor    (%eax),%eax
    62b0:	64 01 82 43 66 01 34 	add    %eax,%fs:0x34016643(%edx)
    62b7:	41                   	inc    %ecx
    62b8:	30 41 00             	xor    %al,0x0(%ecx)
	...

000062bc <printf>:
    62bc:	04 12                	add    $0x12,%al
    62be:	04 41                	add    $0x41,%al
    62c0:	31 80 20 00 1c 44    	xor    %eax,0x441c0020(%eax)
    62c6:	04 00                	add    $0x0,%al
    62c8:	84 4c fc ff          	test   %cl,-0x1(%esp,%edi,8)
    62cc:	0c 44                	or     $0x44,%al
    62ce:	3c 50                	cmp    $0x50,%al
    62d0:	06                   	push   %es
    62d1:	00 84 4c ee ff 00 3c 	add    %al,0x3c00ffee(%esp,%ecx,2)

000062d8 <.LBB23_1>:
    62d8:	1c 44                	sbb    $0x44,%al
    62da:	fc                   	cld    
    62db:	ff 0d 4c 1d 53 84    	decl   0x84531d4c
    62e1:	4d                   	dec    %ebp
    62e2:	fc                   	cld    
    62e3:	ff 6e 4c             	ljmp   *0x4c(%esi)
    62e6:	c4 4e fb             	les    -0x5(%esi),%ecx
    62e9:	ff 4e 93             	decl   -0x6d(%esi)
    62ec:	02 20                	add    (%eax),%ah
    62ee:	52                   	push   %edx
    62ef:	3d                   	.byte 0x3d
    62f0:	00                   	.byte 0x0
    62f1:	3c                   	.byte 0x3c

000062f2 <.LBB23_2>:
    62f2:	5c                   	pop    %esp
    62f3:	44                   	inc    %esp
    62f4:	fb                   	sti    
    62f5:	ff                   	(bad)  
    62f6:	7c 90                	jl     6288 <.LBB21_2+0x1e>
    62f8:	25 00 02 24 40       	and    $0x40240200,%eax
    62fd:	3d                   	.byte 0x3d
    62fe:	00                   	.byte 0x0
    62ff:	3c                   	.byte 0x3c

00006300 <.LBB23_3>:
    6300:	84 43 f2             	test   %al,-0xe(%ebx)
    6303:	ff 00                	incl   (%eax)
    6305:	3c                   	.byte 0x3c

00006306 <.LBB23_4>:
    6306:	1c 44                	sbb    $0x44,%al
    6308:	fc                   	cld    
    6309:	ff 0d 4c 1d 53 84    	decl   0x84531d4c
    630f:	4d                   	dec    %ebp
    6310:	fc                   	cld    
    6311:	ff 6c 4c 8c          	ljmp   *-0x74(%esp,%ecx,2)
    6315:	11 4e 4c             	adc    %ecx,0x4c(%esi)
    6318:	c4 4e fb             	les    -0x5(%esi),%ecx
    631b:	ff 0c 93             	decl   (%ebx,%edx,4)
    631e:	84 4c ec ff          	test   %cl,-0x1(%esp,%ebp,8)
    6322:	02 20                	add    (%eax),%ah
    6324:	27                   	daa    
    6325:	3d                   	.byte 0x3d
    6326:	00                   	.byte 0x0
    6327:	3c                   	.byte 0x3c

00006328 <.LBB23_5>:
    6328:	1c 44                	sbb    $0x44,%al
    632a:	ec                   	in     (%dx),%al
    632b:	ff                   	(bad)  
    632c:	3c 90                	cmp    $0x90,%al
    632e:	30 00                	xor    %al,(%eax)
    6330:	02 20                	add    (%eax),%ah
    6332:	0f 3d                	(bad)  
    6334:	00                   	.byte 0x0
    6335:	3c                   	.byte 0x3c

00006336 <.LBB23_6>:
    6336:	1c 44                	sbb    $0x44,%al
    6338:	ec                   	in     (%dx),%al
    6339:	ff                   	(bad)  
    633a:	3c 90                	cmp    $0x90,%al
    633c:	63 00                	arpl   %ax,(%eax)
    633e:	34 24                	xor    $0x24,%al
    6340:	00                   	.byte 0x0
    6341:	3c                   	.byte 0x3c

00006342 <.LBB23_7>:
    6342:	1c 44                	sbb    $0x44,%al
    6344:	ec                   	in     (%dx),%al
    6345:	ff                   	(bad)  
    6346:	3c 90                	cmp    $0x90,%al
    6348:	69 00 3d 24 00 3c    	imul   $0x3c00243d,(%eax),%eax

0000634e <.LBB23_8>:
    634e:	1c 44                	sbb    $0x44,%al
    6350:	ec                   	in     (%dx),%al
    6351:	ff                   	(bad)  
    6352:	3c 90                	cmp    $0x90,%al
    6354:	6c                   	insb   (%dx),%es:(%edi)
    6355:	00 66 24             	add    %ah,0x24(%esi)
    6358:	00                   	.byte 0x0
    6359:	3c                   	.byte 0x3c

0000635a <.LBB23_9>:
    635a:	1c 44                	sbb    $0x44,%al
    635c:	ec                   	in     (%dx),%al
    635d:	ff                   	(bad)  
    635e:	3c 90                	cmp    $0x90,%al
    6360:	6e                   	outsb  %ds:(%esi),(%dx)
    6361:	00 60 24             	add    %ah,0x24(%eax)
    6364:	00                   	.byte 0x0
    6365:	3c                   	.byte 0x3c

00006366 <.LBB23_10>:
    6366:	1c 44                	sbb    $0x44,%al
    6368:	ec                   	in     (%dx),%al
    6369:	ff                   	(bad)  
    636a:	3c 90                	cmp    $0x90,%al
    636c:	73 00                	jae    636e <.LBB23_10+0x8>
    636e:	0d                   	.byte 0xd
    636f:	24 00                	and    $0x0,%al
    6371:	3c                   	.byte 0x3c

00006372 <.LBB23_11>:
    6372:	1c 44                	sbb    $0x44,%al
    6374:	ec                   	in     (%dx),%al
    6375:	ff                   	(bad)  
    6376:	3c 90                	cmp    $0x90,%al
    6378:	75 00                	jne    637a <.LBB23_11+0x8>
    637a:	25                   	.byte 0x25
    637b:	24 00                	and    $0x0,%al
    637d:	3c                   	.byte 0x3c

0000637e <.LBB23_12>:
    637e:	1c 44                	sbb    $0x44,%al
    6380:	ec                   	in     (%dx),%al
    6381:	ff                   	(bad)  
    6382:	3c 90                	cmp    $0x90,%al
    6384:	78 00                	js     6386 <.LBB23_12+0x8>
    6386:	8a 24 f8             	mov    (%eax,%edi,8),%ah
    6389:	3c                   	.byte 0x3c

0000638a <.LBB23_13>:
    638a:	1c 44                	sbb    $0x44,%al
    638c:	ee                   	out    %al,(%dx)
    638d:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    6390:	3c f0                	cmp    $0xf0,%al
    6392:	fe                   	(bad)  
    6393:	ff 0d 4c 2d 53 84    	decl   0x84532d4c
    6399:	4d                   	dec    %ebp
    639a:	ee                   	out    %al,(%dx)
    639b:	ff 2f                	ljmp   *(%edi)
    639d:	4c                   	dec    %esp
    639e:	b0 12                	mov    $0x12,%al
    63a0:	60                   	pusha  
    63a1:	67 84 4f ea          	test   %cl,-0x16(%bx)
    63a5:	ff                   	(bad)  
    63a6:	ea                   	.byte 0xea
    63a7:	3c                   	.byte 0x3c

000063a8 <.LBB23_14>:
    63a8:	1c 44                	sbb    $0x44,%al
    63aa:	ee                   	out    %al,(%dx)
    63ab:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    63ae:	3c f0                	cmp    $0xf0,%al
    63b0:	fe                   	(bad)  
    63b1:	ff 0d 4c 2d 53 84    	decl   0x84532d4c
    63b7:	4d                   	dec    %ebp
    63b8:	ee                   	out    %al,(%dx)
    63b9:	ff 2f                	ljmp   *(%edi)
    63bb:	4c                   	dec    %esp
    63bc:	b0 12                	mov    $0x12,%al
    63be:	2c 67                	sub    $0x67,%al
    63c0:	84 4f e8             	test   %cl,-0x18(%edi)
    63c3:	ff                   	(bad)  
    63c4:	db                   	.byte 0xdb
    63c5:	3c                   	.byte 0x3c

000063c6 <.LBB23_15>:
    63c6:	1c 44                	sbb    $0x44,%al
    63c8:	ee                   	out    %al,(%dx)
    63c9:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    63cc:	3c f0                	cmp    $0xf0,%al
    63ce:	fe                   	(bad)  
    63cf:	ff 0d 4c 2d 53 84    	decl   0x84532d4c
    63d5:	4d                   	dec    %ebp
    63d6:	ee                   	out    %al,(%dx)
    63d7:	ff 2c 4c             	ljmp   *(%esp,%ecx,2)
    63da:	84 4c f8 ff          	test   %cl,-0x1(%eax,%edi,8)
    63de:	5e                   	pop    %esi
    63df:	44                   	inc    %esp
    63e0:	fb                   	sti    
    63e1:	ff                   	(bad)  
    63e2:	7e 90                	jle    6374 <.LBB23_11+0x2>
    63e4:	69 00 13 20 00 3c    	imul   $0x3c002013,(%eax),%eax

000063ea <.LBB23_16>:
    63ea:	1c 44                	sbb    $0x44,%al
    63ec:	f8                   	clc    
    63ed:	ff 0c 93             	decl   (%ebx,%edx,4)
    63f0:	0e                   	push   %cs
    63f1:	34 00                	xor    $0x0,%al
    63f3:	3c                   	.byte 0x3c

000063f4 <.LBB23_17>:
    63f4:	1c 44                	sbb    $0x44,%al
    63f6:	f8                   	clc    
    63f7:	ff 0d 43 0d 8c 84    	decl   0x848c0d43
    63fd:	4d                   	dec    %ebp
    63fe:	f8                   	clc    
    63ff:	ff                   	(bad)  
    6400:	3f                   	aas    
    6401:	40                   	inc    %eax
    6402:	2d 00 b0 12 2c       	sub    $0x2c12b000,%eax
    6407:	67 84 4f e6          	test   %cl,-0x1a(%bx)
    640b:	ff 00                	incl   (%eax)
    640d:	3c                   	.byte 0x3c

0000640e <.LBB23_18>:
    640e:	1e                   	push   %ds
    640f:	44                   	inc    %esp
    6410:	f8                   	clc    
    6411:	ff                   	(bad)  
    6412:	3c 40                	cmp    $0x40,%al
    6414:	14 00                	adc    $0x0,%al
    6416:	3c 50                	cmp    $0x50,%al
    6418:	b4 44                	mov    $0x44,%ah
    641a:	0f 43 0d 4c b0 12 a8 	cmovae 0xa812b04c,%ecx
    6421:	65 ac                	lods   %gs:(%esi),%al
    6423:	3c                   	.byte 0x3c

00006424 <.LBB23_19>:
    6424:	1c 44                	sbb    $0x44,%al
    6426:	ee                   	out    %al,(%dx)
    6427:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    642a:	3c f0                	cmp    $0xf0,%al
    642c:	fe                   	(bad)  
    642d:	ff 0d 4c 2d 53 84    	decl   0x84532d4c
    6433:	4d                   	dec    %ebp
    6434:	ee                   	out    %al,(%dx)
    6435:	ff 2c 4c             	ljmp   *(%esp,%ecx,2)
    6438:	1d 44 ee ff 0e       	sbb    $0xeffee44,%eax
    643d:	4d                   	dec    %ebp
    643e:	2e 53                	cs push %ebx
    6440:	84 4e ee             	test   %cl,-0x12(%esi)
    6443:	ff 2d 4d 84 4d f6    	ljmp   *0xf64d844d
    6449:	ff 84 4c f4 ff 5f 44 	incl   0x445ffff4(%esp,%ecx,2)
    6450:	fb                   	sti    
    6451:	ff                   	(bad)  
    6452:	7f 90                	jg     63e4 <.LBB23_15+0x1e>
    6454:	6c                   	insb   (%dx),%es:(%edi)
    6455:	00 19                	add    %bl,(%ecx)
    6457:	20 00                	and    %al,(%eax)
    6459:	3c                   	.byte 0x3c

0000645a <.LBB23_20>:
    645a:	1c 44                	sbb    $0x44,%al
    645c:	f6 ff                	idiv   %bh
    645e:	0c 93                	or     $0x93,%al
    6460:	14 34                	adc    $0x34,%al
    6462:	00                   	.byte 0x0
    6463:	3c                   	.byte 0x3c

00006464 <.LBB23_21>:
    6464:	1c 44                	sbb    $0x44,%al
    6466:	f4                   	hlt    
    6467:	ff 1d 44 f6 ff 0e    	lcall  *0xefff644
    646d:	43                   	inc    %ebx
    646e:	0f 4e 0f             	cmovle (%edi),%ecx
    6471:	8c 0e                	mov    %cs,(%esi)
    6473:	7d 84                	jge    63f9 <.LBB23_17+0x5>
    6475:	4e                   	dec    %esi
    6476:	f6 ff                	idiv   %bh
    6478:	84 4f f4             	test   %cl,-0xc(%edi)
    647b:	ff                   	(bad)  
    647c:	3f                   	aas    
    647d:	40                   	inc    %eax
    647e:	2d 00 b0 12 2c       	sub    $0x2c12b000,%eax
    6483:	67 84 4f e4          	test   %cl,-0x1c(%bx)
    6487:	ff 00                	incl   (%eax)
    6489:	3c                   	.byte 0x3c

0000648a <.LBB23_22>:
    648a:	1f                   	pop    %ds
    648b:	44                   	inc    %esp
    648c:	f6 ff                	idiv   %bh
    648e:	1e                   	push   %ds
    648f:	44                   	inc    %esp
    6490:	f4                   	hlt    
    6491:	ff                   	(bad)  
    6492:	3d 40 b4 44 b0       	cmp    $0xb044b440,%eax
    6497:	12                   	.byte 0x12
    6498:	a8 65                	test   $0x65,%al
    649a:	70 3c                	jo     64d8 <.LBB23_24+0x2>

0000649c <.LBB23_23>:
    649c:	1c 44                	sbb    $0x44,%al
    649e:	ee                   	out    %al,(%dx)
    649f:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    64a2:	3c f0                	cmp    $0xf0,%al
    64a4:	fe                   	(bad)  
    64a5:	ff 0d 4c 2d 53 84    	decl   0x84532d4c
    64ab:	4d                   	dec    %ebp
    64ac:	ee                   	out    %al,(%dx)
    64ad:	ff 2c 4c             	ljmp   *(%esp,%ecx,2)
    64b0:	84 4c f8 ff          	test   %cl,-0x1(%eax,%edi,8)
    64b4:	0c 11                	or     $0x11,%al
    64b6:	0c 11                	or     $0x11,%al
    64b8:	0c 11                	or     $0x11,%al
    64ba:	0c 11                	or     $0x11,%al
    64bc:	0c 11                	or     $0x11,%al
    64be:	0c 11                	or     $0x11,%al
    64c0:	0c 11                	or     $0x11,%al
    64c2:	0c 11                	or     $0x11,%al
    64c4:	0c 11                	or     $0x11,%al
    64c6:	0c 11                	or     $0x11,%al
    64c8:	0c 11                	or     $0x11,%al
    64ca:	0c 11                	or     $0x11,%al
    64cc:	84 4c f0 ff          	test   %cl,-0x1(%eax,%esi,8)
    64d0:	0c 93                	or     $0x93,%al
    64d2:	06                   	push   %es
    64d3:	20 00                	and    %al,(%eax)
    64d5:	3c                   	.byte 0x3c

000064d6 <.LBB23_24>:
    64d6:	1c 44                	sbb    $0x44,%al
    64d8:	f2 ff 2c 92          	repnz ljmp *(%edx,%edx,4)
    64dc:	06                   	push   %es
    64dd:	38 00                	cmp    %al,(%eax)
    64df:	3c                   	.byte 0x3c

000064e0 <.LBB23_25>:
    64e0:	1f                   	pop    %ds
    64e1:	44                   	inc    %esp
    64e2:	f0 ff b0 12 f4 66 00 	lock pushl 0x66f412(%eax)
    64e9:	3c                   	.byte 0x3c

000064ea <.LBB23_26>:
    64ea:	1c 44                	sbb    $0x44,%al
    64ec:	f8                   	clc    
    64ed:	ff 0c 11             	decl   (%ecx,%edx,1)
    64f0:	0c 11                	or     $0x11,%al
    64f2:	0c 11                	or     $0x11,%al
    64f4:	0c 11                	or     $0x11,%al
    64f6:	0c 11                	or     $0x11,%al
    64f8:	0c 11                	or     $0x11,%al
    64fa:	0c 11                	or     $0x11,%al
    64fc:	0c 11                	or     $0x11,%al
    64fe:	84 4c f0 ff          	test   %cl,-0x1(%eax,%esi,8)
    6502:	0c 93                	or     $0x93,%al
    6504:	07                   	pop    %es
    6505:	20 00                	and    %al,(%eax)
    6507:	3c                   	.byte 0x3c

00006508 <.LBB23_27>:
    6508:	1c 44                	sbb    $0x44,%al
    650a:	f2 ff                	repnz (bad) 
    650c:	3c 90                	cmp    $0x90,%al
    650e:	03 00                	add    (%eax),%eax
    6510:	06                   	push   %es
    6511:	38 00                	cmp    %al,(%eax)
    6513:	3c                   	.byte 0x3c

00006514 <.LBB23_28>:
    6514:	1f                   	pop    %ds
    6515:	44                   	inc    %esp
    6516:	f0 ff b0 12 f4 66 00 	lock pushl 0x66f412(%eax)
    651d:	3c                   	.byte 0x3c

0000651e <.LBB23_29>:
    651e:	1c 44                	sbb    $0x44,%al
    6520:	f8                   	clc    
    6521:	ff 0c 11             	decl   (%ecx,%edx,1)
    6524:	0c 11                	or     $0x11,%al
    6526:	0c 11                	or     $0x11,%al
    6528:	0c 11                	or     $0x11,%al
    652a:	84 4c f0 ff          	test   %cl,-0x1(%eax,%esi,8)
    652e:	0c 93                	or     $0x93,%al
    6530:	06                   	push   %es
    6531:	20 00                	and    %al,(%eax)
    6533:	3c                   	.byte 0x3c

00006534 <.LBB23_30>:
    6534:	1c 44                	sbb    $0x44,%al
    6536:	f2 ff 2c 93          	repnz ljmp *(%ebx,%edx,4)
    653a:	06                   	push   %es
    653b:	38 00                	cmp    %al,(%eax)
    653d:	3c                   	.byte 0x3c

0000653e <.LBB23_31>:
    653e:	1f                   	pop    %ds
    653f:	44                   	inc    %esp
    6540:	f0 ff b0 12 f4 66 00 	lock pushl 0x66f412(%eax)
    6547:	3c                   	.byte 0x3c

00006548 <.LBB23_32>:
    6548:	1f                   	pop    %ds
    6549:	44                   	inc    %esp
    654a:	f8                   	clc    
    654b:	ff b0 12 f4 66 15    	pushl  0x1566f412(%eax)
    6551:	3c                   	.byte 0x3c

00006552 <.LBB23_33>:
    6552:	1c 44                	sbb    $0x44,%al
    6554:	fc                   	cld    
    6555:	ff 0d 4c 1d 53 84    	decl   0x84531d4c
    655b:	4d                   	dec    %ebp
    655c:	fc                   	cld    
    655d:	ff 6e 4c             	ljmp   *0x4c(%esi)
    6560:	c4 4e fb             	les    -0x5(%esi),%ecx
    6563:	ff 5c 44 fb          	lcall  *-0x5(%esp,%eax,2)
    6567:	ff 8c 11 3c 50 d0 ff 	decl   -0x2fafc4(%ecx,%edx,1)
    656e:	84 4c f2 ff          	test   %cl,-0x1(%edx,%esi,8)
    6572:	c9                   	leave  
    6573:	3e                   	ds

00006574 <.LBB23_34>:
    6574:	84 43 fe             	test   %al,-0x2(%ebx)
    6577:	ff 10                	call   *(%eax)
    6579:	3c                   	.byte 0x3c

0000657a <.LBB23_35>:
    657a:	02                   	.byte 0x2
    657b:	3c                   	.byte 0x3c

0000657c <.LBB23_36>:
    657c:	0a                   	.byte 0xa
    657d:	3c                   	.byte 0x3c

0000657e <.LBB23_37>:
    657e:	00                   	.byte 0x0
    657f:	3c                   	.byte 0x3c

00006580 <.LBB23_38>:
    6580:	5c                   	pop    %esp
    6581:	44                   	inc    %esp
    6582:	fb                   	sti    
    6583:	ff 8c 11 0f 4c b0 12 	decl   0x12b04c0f(%ecx,%edx,1)
    658a:	2c 67                	sub    $0x67,%al
    658c:	84 4f e2             	test   %cl,-0x1e(%edi)
    658f:	ff 00                	incl   (%eax)
    6591:	3c                   	.byte 0x3c

00006592 <.LBB23_39>:
    6592:	a2                   	.byte 0xa2
    6593:	3e                   	ds

00006594 <.LBB23_40>:
    6594:	84 43 fe             	test   %al,-0x2(%ebx)
    6597:	ff 00                	incl   (%eax)
    6599:	3c                   	.byte 0x3c

0000659a <.LBB23_41>:
    659a:	1f                   	pop    %ds
    659b:	44                   	inc    %esp
    659c:	fe                   	(bad)  
    659d:	ff 31                	pushl  (%ecx)
    659f:	50                   	push   %eax
    65a0:	20 00                	and    %al,(%eax)
    65a2:	34 41                	xor    $0x41,%al
    65a4:	30 41 00             	xor    %al,0x0(%ecx)
	...

000065a8 <xtoa>:
    65a8:	04 12                	add    $0x12,%al
    65aa:	04 41                	add    $0x41,%al
    65ac:	0b 12                	or     (%edx),%edx
    65ae:	0a 12                	or     (%edx),%dl
    65b0:	09 12                	or     %edx,(%edx)
    65b2:	31 80 22 00 0c 4f    	xor    %eax,0x4f0c0022(%eax)
    65b8:	0b 4e 0a             	or     0xa(%esi),%ecx
    65bb:	4d                   	dec    %ebp
    65bc:	84 4f f6             	test   %cl,-0xa(%edi)
    65bf:	ff 84 4e f4 ff 84 4d 	incl   0x4d84fff4(%esi,%ecx,2)
    65c6:	f2 ff 1d 44 f6 ff 1e 	repnz lcall *0x1efff644
    65cd:	44                   	inc    %esp
    65ce:	f4                   	hlt    
    65cf:	ff 0e                	decl   (%esi)
    65d1:	dd 0e                	fisttpll (%esi)
    65d3:	93                   	xchg   %eax,%ebx
    65d4:	84 4c ea ff          	test   %cl,-0x1(%edx,%ebp,8)
    65d8:	84 4a e8             	test   %cl,-0x18(%edx)
    65db:	ff 84 4b e6 ff 7a 24 	incl   0x247affe6(%ebx,%ecx,2)
    65e2:	00                   	.byte 0x0
    65e3:	3c                   	.byte 0x3c

000065e4 <.LBB24_1>:
    65e4:	00                   	.byte 0x0
    65e5:	3c                   	.byte 0x3c

000065e6 <.LBB24_2>:
    65e6:	1c 44                	sbb    $0x44,%al
    65e8:	f4                   	hlt    
    65e9:	ff 1d 44 f6 ff 1e    	lcall  *0x1efff644
    65ef:	44                   	inc    %esp
    65f0:	f2 ff 2f             	repnz ljmp *(%edi)
    65f3:	4e                   	dec    %esi
    65f4:	1e                   	push   %ds
    65f5:	4e                   	dec    %esi
    65f6:	02 00                	add    (%eax),%al
    65f8:	0d 9e 0b 42 1b       	or     $0x1b420b9e,%eax
    65fd:	f3 0c 9f             	repz or $0x9f,%al
    6600:	0c 42                	or     $0x42,%al
    6602:	1c f3                	sbb    $0xf3,%al
    6604:	0d 9e 84 4b e4       	or     $0xe44b849e,%eax
    6609:	ff 84 4c e2 ff 04 24 	incl   0x2404ffe2(%esp,%ecx,2)
    6610:	1c 44                	sbb    $0x44,%al
    6612:	e4 ff                	in     $0xff,%al
    6614:	84 4c e2 ff          	test   %cl,-0x1(%edx,%eiz,8)

00006618 <.LBB24_4>:
    6618:	1c 44                	sbb    $0x44,%al
    661a:	e2 ff                	loop   661b <.LBB24_4+0x3>
    661c:	1c b3                	sbb    $0xb3,%al
    661e:	07                   	pop    %es
    661f:	20 00                	and    %al,(%eax)
    6621:	3c                   	.byte 0x3c

00006622 <.LBB24_5>:
    6622:	1c 44                	sbb    $0x44,%al
    6624:	f2 ff 2c 52          	repnz ljmp *(%edx,%edx,2)
    6628:	84 4c f2 ff          	test   %cl,-0x1(%edx,%esi,8)
    662c:	dc 3f                	fdivrl (%edi)

0000662e <.LBB24_6>:
    662e:	00                   	.byte 0x0
    662f:	3c                   	.byte 0x3c

00006630 <.LBB24_7>:
    6630:	1c 44                	sbb    $0x44,%al
    6632:	f2 ff 0d 4c 2d 52 84 	repnz decl 0x84522d4c
    6639:	4d                   	dec    %ebp
    663a:	f2 ff 2d 4c 1c 4c 02 	repnz ljmp *0x24c1c4c
    6641:	00 84 4c ee ff 84 4d 	add    %al,0x4d84ffee(%esp,%ecx,2)
    6648:	ec                   	in     (%dx),%al
    6649:	ff f4                	push   %esp
    664b:	40                   	inc    %eax
    664c:	30 00                	xor    %al,(%eax)
    664e:	f1                   	icebp  
    664f:	ff 00                	incl   (%eax)
    6651:	3c                   	.byte 0x3c

00006652 <.LBB24_8>:
    6652:	1c 44                	sbb    $0x44,%al
    6654:	f4                   	hlt    
    6655:	ff 1d 44 f6 ff 1e    	lcall  *0x1efff644
    665b:	44                   	inc    %esp
    665c:	ec                   	in     (%dx),%al
    665d:	ff 1f                	lcall  *(%edi)
    665f:	44                   	inc    %esp
    6660:	ee                   	out    %al,(%dx)
    6661:	ff 0d 9f 0b 42 1a    	decl   0x1a420b9f
    6667:	43                   	inc    %ebx
    6668:	09 4a 09             	or     %ecx,0x9(%edx)
    666b:	cb                   	lret   
    666c:	0c 9e                	or     $0x9e,%al
    666e:	0c 42                	or     $0x42,%al
    6670:	0a cc                	or     %ah,%cl
    6672:	0d 9f 84 49 e0       	or     $0xe049849f,%eax
    6677:	ff 84 4a de ff 04 24 	incl   0x2404ffde(%edx,%ecx,2)
    667e:	1c 44                	sbb    $0x44,%al
    6680:	e0 ff                	loopne 6681 <.LBB24_8+0x2f>
    6682:	84 4c de ff          	test   %cl,-0x1(%esi,%ebx,8)

00006686 <.LBB24_10>:
    6686:	1c 44                	sbb    $0x44,%al
    6688:	de ff                	fdivrp %st,%st(7)
    668a:	1c b3                	sbb    $0xb3,%al
    668c:	15                   	.byte 0x15
    668d:	20 00                	and    %al,(%eax)
    668f:	3c                   	.byte 0x3c

00006690 <.LBB24_11>:
    6690:	5c                   	pop    %esp
    6691:	44                   	inc    %esp
    6692:	f1                   	icebp  
    6693:	ff 5c 53 c4          	lcall  *-0x3c(%ebx,%edx,2)
    6697:	4c                   	dec    %esp
    6698:	f1                   	icebp  
    6699:	ff 1d 44 ec ff 1e    	lcall  *0x1effec44
    669f:	44                   	inc    %esp
    66a0:	ee                   	out    %al,(%dx)
    66a1:	ff 1f                	lcall  *(%edi)
    66a3:	44                   	inc    %esp
    66a4:	f4                   	hlt    
    66a5:	ff 1b                	lcall  *(%ebx)
    66a7:	44                   	inc    %esp
    66a8:	f6 ff                	idiv   %bh
    66aa:	0f 8d 0b 7e 84 4b    	jge    4b84e4bb <__high_dataend+0x4b83e4b9>
    66b0:	f6 ff                	idiv   %bh
    66b2:	84 4f f4             	test   %cl,-0xc(%edi)
    66b5:	ff cd                	dec    %ebp
    66b7:	3f                   	aas    

000066b8 <.LBB24_12>:
    66b8:	5c                   	pop    %esp
    66b9:	44                   	inc    %esp
    66ba:	f1                   	icebp  
    66bb:	ff 8c 11 0f 4c b0 12 	decl   0x12b04c0f(%ecx,%edx,1)
    66c2:	2c 67                	sub    $0x67,%al
    66c4:	84 4f dc             	test   %cl,-0x24(%edi)
    66c7:	ff 00                	incl   (%eax)
    66c9:	3c                   	.byte 0x3c

000066ca <.LBB24_13>:
    66ca:	5c                   	pop    %esp
    66cb:	44                   	inc    %esp
    66cc:	ec                   	in     (%dx),%al
    66cd:	ff 5c b3 af          	lcall  *-0x51(%ebx,%esi,4)
    66d1:	27                   	daa    
    66d2:	00                   	.byte 0x0
    66d3:	3c                   	.byte 0x3c

000066d4 <.LBB24_14>:
    66d4:	07                   	pop    %es
    66d5:	3c                   	.byte 0x3c

000066d6 <.LBB24_15>:
    66d6:	3f                   	aas    
    66d7:	40                   	inc    %eax
    66d8:	30 00                	xor    %al,(%eax)
    66da:	b0 12                	mov    $0x12,%al
    66dc:	2c 67                	sub    $0x67,%al
    66de:	84 4f da             	test   %cl,-0x26(%edi)
    66e1:	ff 00                	incl   (%eax)
    66e3:	3c                   	.byte 0x3c

000066e4 <.LBB24_16>:
    66e4:	31 50 22             	xor    %edx,0x22(%eax)
    66e7:	00 39                	add    %bh,(%ecx)
    66e9:	41                   	inc    %ecx
    66ea:	3a 41 3b             	cmp    0x3b(%ecx),%al
    66ed:	41                   	inc    %ecx
    66ee:	34 41                	xor    $0x41,%al
    66f0:	30 41 00             	xor    %al,0x0(%ecx)
	...

000066f4 <puth>:
    66f4:	04 12                	add    $0x12,%al
    66f6:	04 41                	add    $0x41,%al
    66f8:	31 80 06 00 0c 4f    	xor    %eax,0x4f0c0006(%eax)
    66fe:	84 4f fe             	test   %cl,-0x2(%edi)
    6701:	ff                   	(bad)  
    6702:	3f                   	aas    
    6703:	f0 0f 00 5f 4f       	lock ltr 0x4f(%edi)
    6708:	dc 44 8f 11          	faddl  0x11(%edi,%ecx,4)
    670c:	84 4c fc ff          	test   %cl,-0x1(%esp,%edi,8)
    6710:	b0 12                	mov    $0x12,%al
    6712:	2c 67                	sub    $0x67,%al
    6714:	84 4f fa             	test   %cl,-0x6(%edi)
    6717:	ff 31                	pushl  (%ecx)
    6719:	50                   	push   %eax
    671a:	06                   	push   %es
    671b:	00 34 41             	add    %dh,(%ecx,%eax,2)
    671e:	30                   	.byte 0x30
    671f:	41                   	inc    %ecx

00006720 <mspconsole_init>:
    6720:	04 12                	add    $0x12,%al
    6722:	04 41                	add    $0x41,%al
    6724:	b0 12                	mov    $0x12,%al
    6726:	fe                   	(bad)  
    6727:	6b 34 41 30          	imul   $0x30,(%ecx,%eax,2),%esi
    672b:	41                   	inc    %ecx

0000672c <io_putchar>:
    672c:	04 12                	add    $0x12,%al
    672e:	04 41                	add    $0x41,%al
    6730:	31 80 06 00 0c 4f    	xor    %eax,0x4f0c0006(%eax)
    6736:	84 4f fe             	test   %cl,-0x2(%edi)
    6739:	ff 5d 44             	lcall  *0x44(%ebp)
    673c:	fe                   	(bad)  
    673d:	ff c4                	inc    %esp
    673f:	4d                   	dec    %ebp
    6740:	fd                   	std    
    6741:	ff 0f                	decl   (%edi)
    6743:	44                   	inc    %esp
    6744:	3f                   	aas    
    6745:	80 03 00             	addb   $0x0,(%ebx)
    6748:	1e                   	push   %ds
    6749:	43                   	inc    %ebx
    674a:	84 4c fa ff          	test   %cl,-0x1(%edx,%edi,8)
    674e:	b0 12                	mov    $0x12,%al
    6750:	8a 6c 1f 44          	mov    0x44(%edi,%ebx,1),%ch
    6754:	fe                   	(bad)  
    6755:	ff 31                	pushl  (%ecx)
    6757:	50                   	push   %eax
    6758:	06                   	push   %es
    6759:	00 34 41             	add    %dh,(%ecx,%eax,2)
    675c:	30 41 00             	xor    %al,0x0(%ecx)
	...

00006760 <io_puts_no_newline>:
    6760:	04 12                	add    $0x12,%al
    6762:	04 41                	add    $0x41,%al
    6764:	31 82 0c 4f 84 4f    	xor    %eax,0x4f844f0c(%edx)
    676a:	fe                   	(bad)  
    676b:	ff 84 43 fc ff 1f 44 	incl   0x441ffffc(%ebx,%eax,2)
    6772:	fe                   	(bad)  
    6773:	ff 84 4f fa ff 84 4c 	incl   0x4c84fffa(%edi,%ecx,2)
    677a:	f8                   	clc    
    677b:	ff 00                	incl   (%eax)
    677d:	3c                   	.byte 0x3c

0000677e <.LBB28_1>:
    677e:	1c 44                	sbb    $0x44,%al
    6780:	fa                   	cli    
    6781:	ff 0d 4c 1d 53 84    	decl   0x84531d4c
    6787:	4d                   	dec    %ebp
    6788:	fa                   	cli    
    6789:	ff 6e 4c             	ljmp   *0x4c(%esi)
    678c:	4e                   	dec    %esi
    678d:	93                   	xchg   %eax,%ebx
    678e:	07                   	pop    %es
    678f:	24 00                	and    $0x0,%al
    6791:	3c                   	.byte 0x3c

00006792 <.LBB28_2>:
    6792:	1c 44                	sbb    $0x44,%al
    6794:	fc                   	cld    
    6795:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    6798:	84 4c fc ff          	test   %cl,-0x1(%esp,%edi,8)
    679c:	f0 3f                	lock aas 

0000679e <.LBB28_3>:
    679e:	1f                   	pop    %ds
    679f:	44                   	inc    %esp
    67a0:	fe                   	(bad)  
    67a1:	ff 1e                	lcall  *(%esi)
    67a3:	44                   	inc    %esp
    67a4:	fc                   	cld    
    67a5:	ff b0 12 8a 6c 1f    	pushl  0x1f6c8a12(%eax)
    67ab:	44                   	inc    %esp
    67ac:	fc                   	cld    
    67ad:	ff 31                	pushl  (%ecx)
    67af:	52                   	push   %edx
    67b0:	34 41                	xor    $0x41,%al
    67b2:	30                   	.byte 0x30
    67b3:	41                   	inc    %ecx

000067b4 <io_puts>:
    67b4:	04 12                	add    $0x12,%al
    67b6:	04 41                	add    $0x41,%al
    67b8:	31 82 0c 4f 84 4f    	xor    %eax,0x4f844f0c(%edx)
    67be:	fe                   	(bad)  
    67bf:	ff 84 4c fa ff b0 12 	incl   0x12b0fffa(%esp,%ecx,2)
    67c6:	60                   	pusha  
    67c7:	67 84 4f fc          	test   %cl,-0x4(%bx)
    67cb:	ff                   	(bad)  
    67cc:	3f                   	aas    
    67cd:	40                   	inc    %eax
    67ce:	0a 00                	or     (%eax),%al
    67d0:	b0 12                	mov    $0x12,%al
    67d2:	2c 67                	sub    $0x67,%al
    67d4:	1c 44                	sbb    $0x44,%al
    67d6:	fc                   	cld    
    67d7:	ff 84 4f f8 ff 0f 4c 	incl   0x4c0ffff8(%edi,%ecx,2)
    67de:	31 52 34             	xor    %edx,0x34(%edx)
    67e1:	41                   	inc    %ecx
    67e2:	30                   	.byte 0x30
    67e3:	41                   	inc    %ecx

000067e4 <task_prologue>:
    67e4:	04 12                	add    $0x12,%al
    67e6:	04 41                	add    $0x41,%al
    67e8:	31 80 06 00 1c 42    	xor    %eax,0x421c0006(%eax)
    67ee:	e0 54                	loopne 6844 <.LBB30_4+0x10>
    67f0:	1c 4c                	sbb    $0x4c,%al
    67f2:	04 00                	add    $0x0,%al
    67f4:	2c 4c                	sub    $0x4c,%al
    67f6:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    67fa:	1c 42                	sbb    $0x42,%al
    67fc:	e0 54                	loopne 6852 <.LBB30_4+0x1e>
    67fe:	1c 4c                	sbb    $0x4c,%al
    6800:	02 00                	add    (%eax),%al
    6802:	1d 44 fe ff 1d       	sbb    $0x1dfffe44,%eax
    6807:	4d                   	dec    %ebp
    6808:	08 00                	or     %al,(%eax)
    680a:	0c 9d                	or     $0x9d,%al
    680c:	3a 24 00             	cmp    (%eax,%eax,1),%ah
    680f:	3c                   	.byte 0x3c

00006810 <.LBB30_1>:
    6810:	00                   	.byte 0x0
    6811:	3c                   	.byte 0x3c

00006812 <.LBB30_2>:
    6812:	1c 42                	sbb    $0x42,%al
    6814:	c2 54 1d             	ret    $0x1d54
    6817:	42                   	inc    %edx
    6818:	c4 54 0c 9d          	les    -0x63(%esp,%ecx,1),%edx
    681c:	25                   	.byte 0x25
    681d:	2c 00                	sub    $0x0,%al
    681f:	3c                   	.byte 0x3c

00006820 <.LBB30_3>:
    6820:	1c 42                	sbb    $0x42,%al
    6822:	c2 54 0c             	ret    $0xc54
    6825:	5c                   	pop    %esp
    6826:	1c 4c                	sbb    $0x4c,%al
    6828:	e4 54                	in     $0x54,%al
    682a:	84 4c fc ff          	test   %cl,-0x1(%esp,%edi,8)
    682e:	0c 93                	or     $0x93,%al
    6830:	15                   	.byte 0x15
    6831:	24 00                	and    $0x0,%al
    6833:	3c                   	.byte 0x3c

00006834 <.LBB30_4>:
    6834:	1c 42                	sbb    $0x42,%al
    6836:	c2 54 0c             	ret    $0xc54
    6839:	5c                   	pop    %esp
    683a:	1c 4c                	sbb    $0x4c,%al
    683c:	26 55                	es push %ebp
    683e:	84 4c fa ff          	test   %cl,-0x1(%edx,%edi,8)
    6842:	1f                   	pop    %ds
    6843:	44                   	inc    %esp
    6844:	fc                   	cld    
    6845:	ff 1c 42             	lcall  *(%edx,%eax,2)
    6848:	c2 54 0c             	ret    $0xc54
    684b:	5c                   	pop    %esp
    684c:	3c 50                	cmp    $0x50,%al
    684e:	68 55 1d 44 fa       	push   $0xfa441d55
    6853:	ff 0e                	decl   (%esi)
    6855:	4c                   	dec    %esp
    6856:	b0 12                	mov    $0x12,%al
    6858:	2c 62                	sub    $0x62,%al
    685a:	00                   	.byte 0x0
    685b:	3c                   	.byte 0x3c

0000685c <.LBB30_5>:
    685c:	1c 42                	sbb    $0x42,%al
    685e:	c2 54 1c             	ret    $0x1c54
    6861:	53                   	push   %ebx
    6862:	82                   	(bad)  
    6863:	4c                   	dec    %esp
    6864:	c2 54 d5             	ret    $0xd554
    6867:	3f                   	aas    

00006868 <.LBB30_6>:
    6868:	82                   	(bad)  
    6869:	43                   	inc    %ebx
    686a:	c4 54 82 43          	les    0x43(%edx,%eax,4),%edx
    686e:	c2 54 1c             	ret    $0x1c54
    6871:	42                   	inc    %edx
    6872:	e0 54                	loopne 68c8 <.LBB31_2+0x6>
    6874:	1c 4c                	sbb    $0x4c,%al
    6876:	02 00                	add    (%eax),%al
    6878:	1d 44 fe ff 8d       	sbb    $0x8dfffe44,%eax
    687d:	4c                   	dec    %esp
    687e:	08 00                	or     %al,(%eax)
    6880:	03                   	.byte 0x3
    6881:	3c                   	.byte 0x3c

00006882 <.LBB30_7>:
    6882:	82                   	(bad)  
    6883:	43                   	inc    %ebx
    6884:	c4 54 00 3c          	les    0x3c(%eax,%eax,1),%edx

00006888 <.LBB30_8>:
    6888:	31 50 06             	xor    %edx,0x6(%eax)
    688b:	00 34 41             	add    %dh,(%ecx,%eax,2)
    688e:	30                   	.byte 0x30
    688f:	41                   	inc    %ecx

00006890 <transition_to>:
    6890:	04 12                	add    $0x12,%al
    6892:	04 41                	add    $0x41,%al
    6894:	31 80 0a 00 0c 4f    	xor    %eax,0x4f0c000a(%eax)
    689a:	84 4f fe             	test   %cl,-0x2(%edi)
    689d:	ff 1f                	lcall  *(%edi)
    689f:	42                   	inc    %edx
    68a0:	e0 54                	loopne 68f6 <.LBB31_2+0x34>
    68a2:	3d 40 da 54 3e       	cmp    $0x3e54da40,%eax
    68a7:	40                   	inc    %eax
    68a8:	ce                   	into   
    68a9:	54                   	push   %esp
    68aa:	0f 9d 84 4c fa ff 84 	setge  0x4d84fffa(%esp,%ecx,2)
    68b1:	4d 
    68b2:	f8                   	clc    
    68b3:	ff 84 4e f6 ff 04 24 	incl   0x2404fff6(%esi,%ecx,2)
    68ba:	1c 44                	sbb    $0x44,%al
    68bc:	f8                   	clc    
    68bd:	ff                   	.byte 0xff
    68be:	84 4c f6 ff          	test   %cl,-0x1(%esi,%esi,8)

000068c2 <.LBB31_2>:
    68c2:	1c 44                	sbb    $0x44,%al
    68c4:	f6 ff                	idiv   %bh
    68c6:	84 4c fc ff          	test   %cl,-0x1(%esp,%edi,8)
    68ca:	1d 44 fe ff 8c       	sbb    $0x8cfffe44,%eax
    68cf:	4d                   	dec    %ebp
    68d0:	00 00                	add    %al,(%eax)
    68d2:	1c 42                	sbb    $0x42,%al
    68d4:	e0 54                	loopne 692a <.LBB31_2+0x68>
    68d6:	1c 4c                	sbb    $0x4c,%al
    68d8:	02 00                	add    (%eax),%al
    68da:	1c 53                	sbb    $0x53,%al
    68dc:	1d 44 fc ff 8d       	sbb    $0x8dfffc44,%eax
    68e1:	4c                   	dec    %esp
    68e2:	02 00                	add    (%eax),%al
    68e4:	1c 42                	sbb    $0x42,%al
    68e6:	e0 54                	loopne 693c <chan_in+0x10>
    68e8:	1c 4c                	sbb    $0x4c,%al
    68ea:	02 00                	add    (%eax),%al
    68ec:	1d 44 fc ff 1d       	sbb    $0x1dfffc44,%eax
    68f1:	4d                   	dec    %ebp
    68f2:	04 00                	add    $0x0,%al
    68f4:	8d 4c 02 00          	lea    0x0(%edx,%eax,1),%ecx
    68f8:	1c 42                	sbb    $0x42,%al
    68fa:	e0 54                	loopne 6950 <chan_in+0x24>
    68fc:	2c 4c                	sub    $0x4c,%al
    68fe:	1d 44 fc ff 1d       	sbb    $0x1dfffc44,%eax
    6903:	4d                   	dec    %ebp
    6904:	04 00                	add    $0x0,%al
    6906:	8d 4c 00 00          	lea    0x0(%eax,%eax,1),%ecx
    690a:	1c 44                	sbb    $0x44,%al
    690c:	fc                   	cld    
    690d:	ff 82 4c e0 54 b0    	incl   -0x4fab1fb4(%edx)
    6913:	12 e4                	adc    %ah,%ah
    6915:	67 1c 44             	addr16 sbb $0x44,%al
    6918:	fe                   	(bad)  
    6919:	ff 2c 4c             	ljmp   *(%esp,%ecx,2)
    691c:	31 40 00             	xor    %eax,0x0(%eax)
    691f:	24 00                	and    $0x0,%al
    6921:	4c                   	dec    %esp
    6922:	31 50 0a             	xor    %edx,0xa(%eax)
    6925:	00 34 41             	add    %dh,(%ecx,%eax,2)
    6928:	30 41 00             	xor    %al,0x0(%ecx)
	...

0000692c <chan_in>:
    692c:	04 12                	add    $0x12,%al
    692e:	04 41                	add    $0x41,%al
    6930:	0b 12                	or     (%edx),%edx
    6932:	0a 12                	or     (%edx),%dl
    6934:	31 80 18 00 0c 4d    	xor    %eax,0x4d0c0018(%eax)
    693a:	0b 4e 0a             	or     0xa(%esi),%ecx
    693d:	4f                   	dec    %edi
    693e:	84 4f fa             	test   %cl,-0x6(%edi)
    6941:	ff 84 4e f8 ff 84 4d 	incl   0x4d84fff8(%esi,%ecx,2)
    6948:	f6 ff                	idiv   %bh
    694a:	84 43 f2             	test   %al,-0xe(%ebx)
    694d:	ff 1d 44 f8 ff 2d    	lcall  *0x2dfff844
    6953:	53                   	push   %ebx
    6954:	84 4d ee             	test   %cl,-0x12(%ebp)
    6957:	ff 1d 44 f8 ff 84    	lcall  *0x84fff844
    695d:	4d                   	dec    %ebp
    695e:	ec                   	in     (%dx),%al
    695f:	ff 1d 44 ee ff 1e    	lcall  *0x1effee44
    6965:	44                   	inc    %esp
    6966:	f6 ff                	idiv   %bh
    6968:	0d 5e 84 4d ea       	or     $0xea4d845e,%eax
    696d:	ff 84 4d f0 ff 0f 4d 	incl   0x4d0ffff0(%ebp,%ecx,2)
    6974:	84 4c e8 ff          	test   %cl,-0x1(%eax,%ebp,8)
    6978:	84 4b e6             	test   %cl,-0x1a(%ebx)
    697b:	ff 84 4a e4 ff 31 50 	incl   0x5031ffe4(%edx,%ecx,2)
    6982:	18 00                	sbb    %al,(%eax)
    6984:	3a 41 3b             	cmp    0x3b(%ecx),%al
    6987:	41                   	inc    %ecx
    6988:	34 41                	xor    $0x41,%al
    698a:	30                   	.byte 0x30
    698b:	41                   	inc    %ecx

0000698c <chan_out>:
    698c:	04 12                	add    $0x12,%al
    698e:	04 41                	add    $0x41,%al
    6990:	31 80 14 00 1c 44    	xor    %eax,0x441c0014(%eax)
    6996:	0a 00                	or     (%eax),%al
    6998:	1d 44 08 00 1e       	sbb    $0x1e000844,%eax
    699d:	44                   	inc    %esp
    699e:	06                   	push   %es
    699f:	00 1f                	add    %bl,(%edi)
    69a1:	44                   	inc    %esp
    69a2:	04 00                	add    $0x0,%al
    69a4:	84 4f fe             	test   %cl,-0x2(%edi)
    69a7:	ff 84 4e fc ff 84 4d 	incl   0x4d84fffc(%esi,%ecx,2)
    69ae:	fa                   	cli    
    69af:	ff 84 4c f8 ff 1c 44 	incl   0x441cfff8(%esp,%ecx,2)
    69b6:	fa                   	cli    
    69b7:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    69ba:	84 4c f0 ff          	test   %cl,-0x1(%eax,%esi,8)
    69be:	1c 44                	sbb    $0x44,%al
    69c0:	fa                   	cli    
    69c1:	ff 84 4c ee ff 1c 44 	incl   0x441cffee(%esp,%ecx,2)
    69c8:	f0 ff 1d 44 f8 ff 0c 	lock lcall *0xcfff844
    69cf:	5d                   	pop    %ebp
    69d0:	84 4c ec ff          	test   %cl,-0x1(%esp,%ebp,8)
    69d4:	84 4c f2 ff          	test   %cl,-0x1(%edx,%esi,8)
    69d8:	1e                   	push   %ds
    69d9:	44                   	inc    %esp
    69da:	fe                   	(bad)  
    69db:	ff 1d 44 fc ff 0f    	lcall  *0xffffc44
    69e1:	4c                   	dec    %esp
    69e2:	b0 12                	mov    $0x12,%al
    69e4:	2c 62                	sub    $0x62,%al
    69e6:	31 50 14             	xor    %edx,0x14(%eax)
    69e9:	00 34 41             	add    %dh,(%ecx,%eax,2)
    69ec:	30 41 00             	xor    %al,0x0(%ecx)
	...

000069f0 <write_to_gbuf>:
    69f0:	04 12                	add    $0x12,%al
    69f2:	04 41                	add    $0x41,%al
    69f4:	0b 12                	or     (%edx),%edx
    69f6:	0a 12                	or     (%edx),%dl
    69f8:	31 80 12 00 0c 4d    	xor    %eax,0x4d0c0012(%eax)
    69fe:	0b 4e 0a             	or     0xa(%esi),%ecx
    6a01:	4f                   	dec    %edi
    6a02:	84 4f fa             	test   %cl,-0x6(%edi)
    6a05:	ff 84 4e f8 ff 84 4d 	incl   0x4d84fff8(%esi,%ecx,2)
    6a0c:	f6 ff                	idiv   %bh
    6a0e:	1d 42 c4 54 0d       	sbb    $0xd54c442,%eax
    6a13:	5d                   	pop    %ebp
    6a14:	3d 50 68 55 1e       	cmp    $0x1e556850,%eax
    6a19:	44                   	inc    %esp
    6a1a:	fa                   	cli    
    6a1b:	ff 1f                	lcall  *(%edi)
    6a1d:	44                   	inc    %esp
    6a1e:	f6 ff                	idiv   %bh
    6a20:	84 4f f0             	test   %cl,-0x10(%edi)
    6a23:	ff 0f                	decl   (%edi)
    6a25:	4d                   	dec    %ebp
    6a26:	1d 44 f0 ff 84       	sbb    $0x84fff044,%eax
    6a2b:	4c                   	dec    %esp
    6a2c:	ee                   	out    %al,(%dx)
    6a2d:	ff 84 4b ec ff 84 4a 	incl   0x4a84ffec(%ebx,%ecx,2)
    6a34:	ea ff b0 12 2c 62 1c 	ljmp   $0x1c62,$0x2c12b0ff
    6a3b:	44                   	inc    %esp
    6a3c:	f6 ff                	idiv   %bh
    6a3e:	1d 42 c4 54 0d       	sbb    $0xd54c442,%eax
    6a43:	5d                   	pop    %ebp
    6a44:	8d 4c 26 55          	lea    0x55(%esi,%eiz,1),%ecx
    6a48:	1c 44                	sbb    $0x44,%al
    6a4a:	f8                   	clc    
    6a4b:	ff 1d 42 c4 54 0d    	lcall  *0xd54c442
    6a51:	5d                   	pop    %ebp
    6a52:	8d 4c e4 54          	lea    0x54(%esp,%eiz,8),%ecx
    6a56:	1c 44                	sbb    $0x44,%al
    6a58:	f6 ff                	idiv   %bh
    6a5a:	3c 90                	cmp    $0x90,%al
    6a5c:	03 00                	add    (%eax),%eax
    6a5e:	2a 28                	sub    (%eax),%ch
    6a60:	00                   	.byte 0x0
    6a61:	3c                   	.byte 0x3c

00006a62 <.LBB34_1>:
    6a62:	1c 44                	sbb    $0x44,%al
    6a64:	f6 ff                	idiv   %bh
    6a66:	3c 53                	cmp    $0x53,%al
    6a68:	12 c3                	adc    %bl,%al
    6a6a:	0c 10                	or     $0x10,%al
    6a6c:	1c 53                	sbb    $0x53,%al
    6a6e:	84 4c f4 ff          	test   %cl,-0x1(%esp,%esi,8)
    6a72:	94                   	xchg   %eax,%esp
    6a73:	43                   	inc    %ebx
    6a74:	f2 ff 00             	repnz incl (%eax)
    6a77:	3c                   	.byte 0x3c

00006a78 <.LBB34_2>:
    6a78:	1c 44                	sbb    $0x44,%al
    6a7a:	f2 ff 1d 44 f4 ff 0c 	repnz lcall *0xcfff444
    6a81:	9d                   	popf   
    6a82:	10 2c 00             	adc    %ch,(%eax,%eax,1)
    6a85:	3c                   	.byte 0x3c

00006a86 <.LBB34_3>:
    6a86:	1c 42                	sbb    $0x42,%al
    6a88:	c4 54 1d 44          	les    0x44(%ebp,%ebx,1),%edx
    6a8c:	f2 ff 0c 5d 0c 5c 8c 	repnz decl 0x438c5c0c(,%ebx,2)
    6a93:	43 
    6a94:	e4 54                	in     $0x54,%al
    6a96:	00                   	.byte 0x0
    6a97:	3c                   	.byte 0x3c

00006a98 <.LBB34_4>:
    6a98:	1c 44                	sbb    $0x44,%al
    6a9a:	f2 ff 1c 53          	repnz lcall *(%ebx,%edx,2)
    6a9e:	84 4c f2 ff          	test   %cl,-0x1(%edx,%esi,8)
    6aa2:	ea                   	.byte 0xea
    6aa3:	3f                   	aas    

00006aa4 <.LBB34_5>:
    6aa4:	1c 44                	sbb    $0x44,%al
    6aa6:	f4                   	hlt    
    6aa7:	ff 1d 42 c4 54 0d    	lcall  *0xd54c442
    6aad:	5c                   	pop    %esp
    6aae:	82                   	(bad)  
    6aaf:	4d                   	dec    %ebp
    6ab0:	c4 54 06 3c          	les    0x3c(%esi,%eax,1),%edx

00006ab4 <.LBB34_6>:
    6ab4:	1c 42                	sbb    $0x42,%al
    6ab6:	c4 54 1c 53          	les    0x53(%esp,%ebx,1),%edx
    6aba:	82                   	(bad)  
    6abb:	4c                   	dec    %esp
    6abc:	c4 54 00 3c          	les    0x3c(%eax,%eax,1),%edx

00006ac0 <.LBB34_7>:
    6ac0:	31 50 12             	xor    %edx,0x12(%eax)
    6ac3:	00 3a                	add    %bh,(%edx)
    6ac5:	41                   	inc    %ecx
    6ac6:	3b 41 34             	cmp    0x34(%ecx),%eax
    6ac9:	41                   	inc    %ecx
    6aca:	30                   	.byte 0x30
    6acb:	41                   	inc    %ecx

00006acc <chan_out_gbuf>:
    6acc:	04 12                	add    $0x12,%al
    6ace:	04 41                	add    $0x41,%al
    6ad0:	31 80 18 00 1c 44    	xor    %eax,0x441c0018(%eax)
    6ad6:	0a 00                	or     (%eax),%al
    6ad8:	1d 44 08 00 1e       	sbb    $0x1e000844,%eax
    6add:	44                   	inc    %esp
    6ade:	06                   	push   %es
    6adf:	00 1f                	add    %bl,(%edi)
    6ae1:	44                   	inc    %esp
    6ae2:	04 00                	add    $0x0,%al
    6ae4:	84 4f fe             	test   %cl,-0x2(%edi)
    6ae7:	ff 84 4e fc ff 84 4d 	incl   0x4d84fffc(%esi,%ecx,2)
    6aee:	fa                   	cli    
    6aef:	ff 84 4c f8 ff 1c 44 	incl   0x441cfff8(%esp,%ecx,2)
    6af6:	fa                   	cli    
    6af7:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    6afa:	84 4c f0 ff          	test   %cl,-0x1(%eax,%esi,8)
    6afe:	1c 44                	sbb    $0x44,%al
    6b00:	fa                   	cli    
    6b01:	ff 84 4c ee ff 1c 44 	incl   0x441cffee(%esp,%ecx,2)
    6b08:	f0 ff 1d 44 f8 ff 0c 	lock lcall *0xcfff844
    6b0f:	5d                   	pop    %ebp
    6b10:	84 4c ec ff          	test   %cl,-0x1(%esp,%ebp,8)
    6b14:	1c 42                	sbb    $0x42,%al
    6b16:	c4 54 0c 5c          	les    0x5c(%esp,%ecx,1),%edx
    6b1a:	3c 50                	cmp    $0x50,%al
    6b1c:	68 55 1e 44 fe       	push   $0xfe441e55
    6b21:	ff 1d 44 fc ff 0f    	lcall  *0xffffc44
    6b27:	4c                   	dec    %esp
    6b28:	b0 12                	mov    $0x12,%al
    6b2a:	2c 62                	sub    $0x62,%al
    6b2c:	1c 44                	sbb    $0x44,%al
    6b2e:	fc                   	cld    
    6b2f:	ff 1d 42 c4 54 0d    	lcall  *0xd54c442
    6b35:	5d                   	pop    %ebp
    6b36:	8d 4c 26 55          	lea    0x55(%esi,%eiz,1),%ecx
    6b3a:	1c 44                	sbb    $0x44,%al
    6b3c:	ec                   	in     (%dx),%al
    6b3d:	ff 84 4c f2 ff 1d 42 	incl   0x421dfff2(%esp,%ecx,2)
    6b44:	c4 54 0d 5d          	les    0x5d(%ebp,%ecx,1),%edx
    6b48:	8d 4c e4 54          	lea    0x54(%esp,%eiz,8),%ecx
    6b4c:	1c 44                	sbb    $0x44,%al
    6b4e:	fc                   	cld    
    6b4f:	ff                   	(bad)  
    6b50:	3c 90                	cmp    $0x90,%al
    6b52:	03 00                	add    (%eax),%eax
    6b54:	2a 28                	sub    (%eax),%ch
    6b56:	00                   	.byte 0x0
    6b57:	3c                   	.byte 0x3c

00006b58 <.LBB35_1>:
    6b58:	1c 44                	sbb    $0x44,%al
    6b5a:	fc                   	cld    
    6b5b:	ff                   	(bad)  
    6b5c:	3c 53                	cmp    $0x53,%al
    6b5e:	12 c3                	adc    %bl,%al
    6b60:	0c 10                	or     $0x10,%al
    6b62:	1c 53                	sbb    $0x53,%al
    6b64:	84 4c ea ff          	test   %cl,-0x1(%edx,%ebp,8)
    6b68:	94                   	xchg   %eax,%esp
    6b69:	43                   	inc    %ebx
    6b6a:	e8                   	.byte 0xe8
    6b6b:	ff 00                	incl   (%eax)
    6b6d:	3c                   	.byte 0x3c

00006b6e <.LBB35_2>:
    6b6e:	1c 44                	sbb    $0x44,%al
    6b70:	e8 ff 1d 44 ea       	call   ea448974 <__high_dataend+0xea438972>
    6b75:	ff 0c 9d 10 2c 00 3c 	decl   0x3c002c10(,%ebx,4)

00006b7c <.LBB35_3>:
    6b7c:	1c 42                	sbb    $0x42,%al
    6b7e:	c4 54 1d 44          	les    0x44(%ebp,%ebx,1),%edx
    6b82:	e8 ff 0c 5d 0c       	call   c5d7886 <__high_dataend+0xc5c7884>
    6b87:	5c                   	pop    %esp
    6b88:	8c 43 e4             	mov    %es,-0x1c(%ebx)
    6b8b:	54                   	push   %esp
    6b8c:	00                   	.byte 0x0
    6b8d:	3c                   	.byte 0x3c

00006b8e <.LBB35_4>:
    6b8e:	1c 44                	sbb    $0x44,%al
    6b90:	e8 ff 1c 53 84       	call   84538894 <__high_dataend+0x84528892>
    6b95:	4c                   	dec    %esp
    6b96:	e8                   	.byte 0xe8
    6b97:	ff                   	(bad)  
    6b98:	ea                   	.byte 0xea
    6b99:	3f                   	aas    

00006b9a <.LBB35_5>:
    6b9a:	1c 44                	sbb    $0x44,%al
    6b9c:	ea ff 1d 42 c4 54 0d 	ljmp   $0xd54,$0xc4421dff
    6ba3:	5c                   	pop    %esp
    6ba4:	82                   	(bad)  
    6ba5:	4d                   	dec    %ebp
    6ba6:	c4 54 06 3c          	les    0x3c(%esi,%eax,1),%edx

00006baa <.LBB35_6>:
    6baa:	1c 42                	sbb    $0x42,%al
    6bac:	c4 54 1c 53          	les    0x53(%esp,%ebx,1),%edx
    6bb0:	82                   	(bad)  
    6bb1:	4c                   	dec    %esp
    6bb2:	c4 54 00 3c          	les    0x3c(%eax,%eax,1),%edx

00006bb6 <.LBB35_7>:
    6bb6:	31 50 18             	xor    %edx,0x18(%eax)
    6bb9:	00 34 41             	add    %dh,(%ecx,%eax,2)
    6bbc:	30 41 00             	xor    %al,0x0(%ecx)
	...

00006bc0 <main>:
    6bc0:	04 12                	add    $0x12,%al
    6bc2:	04 41                	add    $0x41,%al
    6bc4:	21 83 84 43 fe ff    	and    %eax,-0x1bc7c(%ebx)
    6bca:	b0 12                	mov    $0x12,%al
    6bcc:	94                   	xchg   %eax,%esp
    6bcd:	61                   	popa   
    6bce:	1c 42                	sbb    $0x42,%al
    6bd0:	e2 54                	loop   6c26 <.Loc.91.1>
    6bd2:	1c 53                	sbb    $0x53,%al
    6bd4:	82                   	(bad)  
    6bd5:	4c                   	dec    %esp
    6bd6:	e2 54                	loop   6c2c <.Loc.94.1+0x2>
    6bd8:	b0 12                	mov    $0x12,%al
    6bda:	e4 67                	in     $0x67,%al
    6bdc:	1c 42                	sbb    $0x42,%al
    6bde:	e0 54                	loopne 6c34 <.Loc.95.1+0x2>
    6be0:	2c 4c                	sub    $0x4c,%al
    6be2:	2c 4c                	sub    $0x4c,%al
    6be4:	00 4c 0f 43          	add    %cl,0x43(%edi,%ecx,1)
    6be8:	21 53 34             	and    %edx,0x34(%ebx)
    6beb:	41                   	inc    %ecx
    6bec:	30 41 00             	xor    %al,0x0(%ecx)
	...

00006bf0 <__mulhi3hw_noint>:
    6bf0:	82                   	(bad)  
    6bf1:	4f                   	dec    %edi
    6bf2:	c0 04 82 4e          	rolb   $0x4e,(%edx,%eax,4)
    6bf6:	c8 04 1f 42          	enter  $0x1f04,$0x42
    6bfa:	ca 04 30             	lret   $0x3004
    6bfd:	41                   	inc    %ecx

00006bfe <UART_init>:
 * @todo Currently assumes an 8MHz SMCLK. Make robust to clock frequency changes by using 32k ACLK.
 */
void UART_init(void) {

    // Configure USCI_A0 for UART mode
    UCA0CTLW0 = UCSWRST;                      // Put eUSCI in reset
    6bfe:	92                   	xchg   %eax,%edx
    6bff:	43                   	inc    %ebx
    6c00:	c0                   	.byte 0xc0
    6c01:	05                   	.byte 0x5

00006c02 <.Loc.36.1>:
    UCA0CTLW0 |= UCSSEL__SMCLK;               // CLK = SMCLK
    6c02:	b2 d0                	mov    $0xd0,%dl
    6c04:	80 00 c0             	addb   $0xc0,(%eax)
    6c07:	05                   	.byte 0x5

00006c08 <.Loc.69.1>:
    UCA0BR1 = 0;
    UCA0MCTLW = UCOS16 | UCBRF_2 | (0xBB << 8);
#endif // UART_BAUDRATE
#elif UART_CLOCK == 8000000
#if UART_BAUDRATE == 115200
    UCA0BR0 = 4;
    6c08:	e2 42                	loop   6c4c <.Loc.109.1>
    6c0a:	c6                   	.byte 0xc6
    6c0b:	05                   	.byte 0x5

00006c0c <.Loc.70.1>:
    UCA0BR1 = 0;
    6c0c:	c2 43 c7             	ret    $0xc743
    6c0f:	05                   	.byte 0x5

00006c10 <.Loc.71.1>:
    UCA0MCTLW = UCOS16 | UCBRF_4 | (0x55 << 8);
    6c10:	b2 40                	mov    $0x40,%dl
    6c12:	41                   	inc    %ecx
    6c13:	55                   	push   %ebp
    6c14:	c8                   	.byte 0xc8
    6c15:	05                   	.byte 0x5

00006c16 <.Loc.76.1>:
#endif // UART_BAUDRATE
#endif // UART_CLOCK

#if defined(__MSP430FR5969__) || defined(__MSP430FR5949__)
    PUART_TXSEL0 &= ~PIN_UART_TX; // TX pin to UART module
    6c16:	d2 c3                	rol    %cl,%bl
    6c18:	0b 02                	or     (%edx),%eax

00006c1a <.Loc.77.1>:
    PUART_TXSEL1 |= PIN_UART_TX;
    6c1a:	d2 d3                	rcl    %cl,%bl
    6c1c:	0d                   	.byte 0xd
    6c1d:	02                   	.byte 0x2

00006c1e <.Loc.79.1>:

    PUART_RXSEL0 &= ~PIN_UART_RX; // RX pin to UART module
    6c1e:	e2 c3                	loop   6be3 <main+0x23>
    6c20:	0b 02                	or     (%edx),%eax

00006c22 <.Loc.80.1>:
    PUART_RXSEL1 |= PIN_UART_RX;
    6c22:	e2 d3                	loop   6bf7 <__mulhi3hw_noint+0x7>
    6c24:	0d                   	.byte 0xd
    6c25:	02                   	.byte 0x2

00006c26 <.Loc.91.1>:
    PUART_RXSEL1 &= ~PIN_UART_RX;
#else
#error MCU not supported
#endif

    UCA0CTLW0 &= ~UCSWRST;                    // Initialize eUSCI
    6c26:	92                   	xchg   %eax,%edx
    6c27:	c3                   	ret    
    6c28:	c0                   	.byte 0xc0
    6c29:	05                   	.byte 0x5

00006c2a <.Loc.94.1>:

    // Initialize module state
    UART_SM.isTxBusy = FALSE;
    6c2a:	3c 40                	cmp    $0x40,%al
    6c2c:	22 1c cc             	and    (%esp,%ecx,8),%bl
    6c2f:	43                   	inc    %ebx
	...

00006c32 <.Loc.95.1>:
    UART_SM.txBytesRemaining = 0;
    6c32:	8c 43 04             	mov    %es,0x4(%ebx)
	...

00006c36 <.Loc.96.1>:
    UART_SM.isRxBusy = FALSE;
    6c36:	cc                   	int3   
    6c37:	43                   	inc    %ebx
    6c38:	06                   	push   %es
	...

00006c3a <.Loc.97.1>:
    UART_SM.rxBytesRemaining = 0;
    6c3a:	8c 43 0a             	mov    %es,0xa(%ebx)
	...

00006c3e <.Loc.99.1>:

}
    6c3e:	30                   	.byte 0x30
    6c3f:	41                   	inc    %ecx

00006c40 <UART_teardown>:
void UART_teardown()
{
    // disable UART
    // Not sure how to do this best, but set all UCA0* registers to
    // their default values.  See User's Guide for default values.
    PUART_TXSEL0 &= ~PIN_UART_TX;
    6c40:	d2 c3                	rol    %cl,%bl
    6c42:	0b 02                	or     (%edx),%eax

00006c44 <.Loc.107.1>:
    PUART_TXSEL1 &= ~PIN_UART_TX;
    6c44:	d2 c3                	rol    %cl,%bl
    6c46:	0d                   	.byte 0xd
    6c47:	02                   	.byte 0x2

00006c48 <.Loc.108.1>:
    PUART_RXSEL0 &= ~PIN_UART_RX;
    6c48:	e2 c3                	loop   6c0d <.Loc.70.1+0x1>
    6c4a:	0b 02                	or     (%edx),%eax

00006c4c <.Loc.109.1>:
    PUART_RXSEL1 &= ~PIN_UART_RX;
    6c4c:	e2 c3                	loop   6c11 <.Loc.71.1+0x1>
    6c4e:	0d                   	.byte 0xd
    6c4f:	02                   	.byte 0x2

00006c50 <.Loc.110.1>:
    UCA0CTLW0 = 0x0001;
    6c50:	92                   	xchg   %eax,%edx
    6c51:	43                   	inc    %ebx
    6c52:	c0                   	.byte 0xc0
    6c53:	05                   	.byte 0x5

00006c54 <.Loc.111.1>:
    UCA0BR0 = 0x0000;
    6c54:	c2 43 c6             	ret    $0xc643
    6c57:	05                   	.byte 0x5

00006c58 <.Loc.112.1>:
    UCA0MCTLW = 0x0000;
    6c58:	82                   	(bad)  
    6c59:	43                   	inc    %ebx
    6c5a:	c8                   	.byte 0xc8
    6c5b:	05                   	.byte 0x5

00006c5c <.Loc.113.1>:
    UCA0IE = 0x0000;
    6c5c:	82                   	(bad)  
    6c5d:	43                   	inc    %ebx
    6c5e:	da                   	.byte 0xda
    6c5f:	05                   	.byte 0x5

00006c60 <.Loc.114.1>:
    UCA0IFG = 0x0000;
    6c60:	82                   	(bad)  
    6c61:	43                   	inc    %ebx
    6c62:	dc                   	.byte 0xdc
    6c63:	05                   	.byte 0x5

00006c64 <.Loc.115.1>:
}
    6c64:	30                   	.byte 0x30
    6c65:	41                   	inc    %ecx

00006c66 <UART_asyncSend>:
 * @param size the number of bytes to send
 */
void UART_asyncSend(uint8_t* txBuf, uint16_t size) {

    // Block until prior transmission has completed
    while (UART_SM.isTxBusy)
    6c66:	3f                   	aas    
    6c67:	40                   	inc    %eax
    6c68:	22                   	.byte 0x22
    6c69:	1c                   	.byte 0x1c

00006c6a <.L4>:
    6c6a:	6e                   	outsb  %ds:(%esi),(%dx)
    6c6b:	4f                   	dec    %edi
    6c6c:	0e                   	push   %cs
    6c6d:	93                   	xchg   %eax,%ebx
    6c6e:	fd                   	std    
    6c6f:	23                   	.byte 0x23

00006c70 <.Loc.131.1>:
        ;

    // Set up for start of transmission
    UART_SM.isTxBusy = TRUE;
    6c70:	3e 40                	ds inc %eax
    6c72:	22 1c de             	and    (%esi,%ebx,8),%bl
    6c75:	43                   	inc    %ebx
	...

00006c78 <.Loc.132.1>:
    UART_SM.txPtr = txBuf;
    6c78:	8e 4c 02 00          	mov    0x0(%edx,%eax,1),%cs

00006c7c <.Loc.133.1>:
    UART_SM.txBytesRemaining = size;
    6c7c:	8e 4d 04             	mov    0x4(%ebp),%cs
	...

00006c80 <.Loc.135.1>:

    UCA0IFG &= ~(USCI_UART_UCTXIFG); // Clear the 'ready to accept byte' flag
    6c80:	a2                   	.byte 0xa2
    6c81:	c2 dc 05             	ret    $0x5dc

00006c84 <.Loc.137.1>:

    UCA0IE |= UCTXIE; // Enable USCI_A0 TX interrupt ('ready to accept byte')
    6c84:	a2                   	.byte 0xa2
    6c85:	d3 da                	rcr    %cl,%edx
    6c87:	05                   	.byte 0x5

00006c88 <.Loc.143.1>:
    //UCA0TXBUF = *(UART_SM.txPtr++); // Load in first byte

    // The bytes are transmitted in the TX ISR (which is called whenever the
    // UART is ready to accept a byte), and the isBusy flag is cleared when the
    // last byte has *finished* transmitting.
}
    6c88:	30                   	.byte 0x30
    6c89:	41                   	inc    %ecx

00006c8a <UART_send>:
 * @param size the number of bytes to send
 *
 */
void UART_send(uint8_t* txBuf, uint16_t size) {

    UART_asyncSend(txBuf, size);
    6c8a:	b0 12                	mov    $0x12,%al
    6c8c:	66 6c                	data16 insb (%dx),%es:(%edi)

00006c8e <.LVL2>:

    // Block until complete
    while (UART_SM.isTxBusy)
    6c8e:	3d                   	.byte 0x3d
    6c8f:	40                   	inc    %eax
    6c90:	22                   	.byte 0x22
    6c91:	1c                   	.byte 0x1c

00006c92 <.L7>:
    6c92:	6c                   	insb   (%dx),%es:(%edi)
    6c93:	4d                   	dec    %ebp
    6c94:	0c 93                	or     $0x93,%al
    6c96:	fd                   	std    
    6c97:	23                   	.byte 0x23

00006c98 <.Loc.159.1>:
        ;
}
    6c98:	30                   	.byte 0x30
    6c99:	41                   	inc    %ecx

00006c9a <UART_critSend>:
 *  and use UART status register polling instead of interrupts.
 */
void UART_critSend(uint8_t* txBuf, uint16_t size) {

    // Block until prior transmission has completed
    while (UART_SM.isTxBusy)
    6c9a:	3f                   	aas    
    6c9b:	40                   	inc    %eax
    6c9c:	22                   	.byte 0x22
    6c9d:	1c                   	.byte 0x1c

00006c9e <.L10>:
    6c9e:	6e                   	outsb  %ds:(%esi),(%dx)
    6c9f:	4f                   	dec    %edi
    6ca0:	0e                   	push   %cs
    6ca1:	93                   	xchg   %eax,%ebx
    6ca2:	fd                   	std    
    6ca3:	23                   	.byte 0x23

00006ca4 <.Loc.172.1>:
        ;

    // Set up for start of transmission
    UART_SM.isTxBusy = TRUE;
    6ca4:	3e 40                	ds inc %eax
    6ca6:	22 1c de             	and    (%esi,%ebx,8),%bl
    6ca9:	43                   	inc    %ebx
	...

00006cac <.Loc.173.1>:
    UART_SM.txPtr = txBuf;
    6cac:	8e 4c 02 00          	mov    0x0(%edx,%eax,1),%cs

00006cb0 <.Loc.174.1>:
    UART_SM.txBytesRemaining = size;
    6cb0:	8e 4d 04             	mov    0x4(%ebp),%cs
	...

00006cb4 <.Loc.176.1>:

    UCA0IV &= ~(USCI_UART_UCTXIFG); // Clear byte completion flag
    6cb4:	a2                   	.byte 0xa2
    6cb5:	c2 de 05             	ret    $0x5de

00006cb8 <.Loc.178.1>:

    while (UART_SM.txBytesRemaining--) {
    6cb8:	1c 4e                	sbb    $0x4e,%al
    6cba:	04 00                	add    $0x0,%al

00006cbc <.LVL4>:
    6cbc:	0d                   	.byte 0xd
    6cbd:	4c                   	dec    %esp

00006cbe <.LVL5>:
    6cbe:	3d 53 8e 4d 04       	cmp    $0x44d8e53,%eax
	...

00006cc4 <.LVL6>:
    6cc4:	0c 93                	or     $0x93,%al
    6cc6:	19                   	.byte 0x19
    6cc7:	24                   	.byte 0x24

00006cc8 <.Loc.179.1>:
        UCA0TXBUF = *(UART_SM.txPtr++); // Load in next byte
    6cc8:	0c 4e                	or     $0x4e,%al

00006cca <.L14>:
    6cca:	1d 4c 02 00 0e       	sbb    $0xe00024c,%eax
    6ccf:	4d                   	dec    %ebp
    6cd0:	1e                   	push   %ds
    6cd1:	53                   	push   %ebx
    6cd2:	8c 4e 02             	mov    %cs,0x2(%esi)
    6cd5:	00 6d 4d             	add    %ch,0x4d(%ebp)
    6cd8:	3d f0 ff 00 82       	cmp    $0x8200fff0,%eax
    6cdd:	4d                   	dec    %ebp
    6cde:	ce                   	into   
    6cdf:	05                   	.byte 0x5

00006ce0 <.L12>:
        while (!(UCA0IFG & UCTXIFG))
    6ce0:	a2 b3 dc 05 fd       	mov    %al,0xfd05dcb3
    6ce5:	27                   	daa    

00006ce6 <.Loc.182.1>:
            ; // Wait for byte transmission to complete
        UCA0IFG &= ~(UCTXIFG); // Clear byte completion flag
    6ce6:	a2                   	.byte 0xa2
    6ce7:	c3                   	ret    
    6ce8:	dc                   	.byte 0xdc
    6ce9:	05                   	.byte 0x5

00006cea <.Loc.178.1>:
    while (UART_SM.txBytesRemaining--) {
    6cea:	1d 4c 04 00 0e       	sbb    $0xe00044c,%eax
    6cef:	4d                   	dec    %ebp
    6cf0:	3e 53                	ds push %ebx
    6cf2:	8c 4e 04             	mov    %cs,0x4(%esi)
    6cf5:	00                   	.byte 0x0
    6cf6:	0d                   	.byte 0xd
    6cf7:	93                   	xchg   %eax,%ebx
    6cf8:	e8                   	.byte 0xe8
    6cf9:	23                   	.byte 0x23

00006cfa <.L11>:
    }

    UART_SM.isTxBusy = FALSE;
    6cfa:	c2 43 22             	ret    $0x2243
    6cfd:	1c                   	.byte 0x1c

00006cfe <.Loc.186.1>:
}
    6cfe:	30                   	.byte 0x30
    6cff:	41                   	inc    %ecx

00006d00 <UART_isTxBusy>:
/**
 * Return true if UART TX module is in the middle of an operation, false if not.
 */
uint8_t UART_isTxBusy() {
    return UART_SM.isTxBusy;
}
    6d00:	5c                   	pop    %esp
    6d01:	42                   	inc    %edx
    6d02:	22 1c 30             	and    (%eax,%esi,1),%bl
    6d05:	41                   	inc    %ecx

00006d06 <UART_asyncReceive>:
 * @param size the number of bytes to receive
 */
void UART_asyncReceive(uint8_t* rxBuf, uint16_t size) {

    // Block until prior reception has completed
    while (UART_SM.isRxBusy)
    6d06:	3f                   	aas    
    6d07:	40                   	inc    %eax
    6d08:	22                   	.byte 0x22
    6d09:	1c                   	.byte 0x1c

00006d0a <.L20>:
    6d0a:	5e                   	pop    %esi
    6d0b:	4f                   	dec    %edi
    6d0c:	06                   	push   %es
    6d0d:	00 0e                	add    %cl,(%esi)
    6d0f:	93                   	xchg   %eax,%ebx
    6d10:	fc                   	cld    
    6d11:	23                   	.byte 0x23

00006d12 <.Loc.208.1>:
        ;

    // Set up for start of reception
    UART_SM.isRxBusy = TRUE;
    6d12:	3e 40                	ds inc %eax
    6d14:	22 1c de             	and    (%esi,%ebx,8),%bl
    6d17:	43                   	inc    %ebx
    6d18:	06                   	push   %es
	...

00006d1a <.Loc.209.1>:
    UART_SM.rxPtr = rxBuf;
    6d1a:	8e 4c 08 00          	mov    0x0(%eax,%ecx,1),%cs

00006d1e <.Loc.210.1>:
    UART_SM.rxBytesRemaining = size;
    6d1e:	8e 4d 0a             	mov    0xa(%ebp),%cs
	...

00006d22 <.Loc.212.1>:

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag
    6d22:	92                   	xchg   %eax,%edx
    6d23:	c3                   	ret    
    6d24:	dc                   	.byte 0xdc
    6d25:	05                   	.byte 0x5

00006d26 <.Loc.214.1>:

    UCA0IE |= UCRXIE; // Enable USCI_A0 RX interrupt
    6d26:	92                   	xchg   %eax,%edx
    6d27:	d3 da                	rcr    %cl,%edx
    6d29:	05                   	.byte 0x5

00006d2a <.Loc.219.1>:

    // The rest of the reception will be completed by the RX ISR (which
    //  will wake after each byte has been received), and the isBusy flag
    //  will be cleared when done.
}
    6d2a:	30                   	.byte 0x30
    6d2b:	41                   	inc    %ecx

00006d2c <UART_receive>:
 * @param size the number of bytes to receive
 *
 */
void UART_receive(uint8_t* rxBuf, uint16_t size) {

    UART_asyncReceive(rxBuf, size);
    6d2c:	b0 12                	mov    $0x12,%al
    6d2e:	06                   	push   %es
    6d2f:	6d                   	insl   (%dx),%es:(%edi)

00006d30 <.LVL9>:

    // Block until complete
    while (UART_SM.isRxBusy)
    6d30:	3d                   	.byte 0x3d
    6d31:	40                   	inc    %eax
    6d32:	22                   	.byte 0x22
    6d33:	1c                   	.byte 0x1c

00006d34 <.L23>:
    6d34:	5c                   	pop    %esp
    6d35:	4d                   	dec    %ebp
    6d36:	06                   	push   %es
    6d37:	00 0c 93             	add    %cl,(%ebx,%edx,4)
    6d3a:	fc                   	cld    
    6d3b:	23                   	.byte 0x23

00006d3c <.Loc.235.1>:
        ;
}
    6d3c:	30                   	.byte 0x30
    6d3d:	41                   	inc    %ecx

00006d3e <UART_critReceive>:
 *  and use UART status register polling instead of interrupts.
 */
void UART_critReceive(uint8_t* rxBuf, uint16_t size) {

    // Block until prior reception has completed
    while (UART_SM.isRxBusy)
    6d3e:	3f                   	aas    
    6d3f:	40                   	inc    %eax
    6d40:	22                   	.byte 0x22
    6d41:	1c                   	.byte 0x1c

00006d42 <.L26>:
    6d42:	5e                   	pop    %esi
    6d43:	4f                   	dec    %edi
    6d44:	06                   	push   %es
    6d45:	00 0e                	add    %cl,(%esi)
    6d47:	93                   	xchg   %eax,%ebx
    6d48:	fc                   	cld    
    6d49:	23                   	.byte 0x23

00006d4a <.Loc.248.1>:
        ;

    // Set up for start of reception
    UART_SM.isRxBusy = TRUE;
    6d4a:	3e 40                	ds inc %eax
    6d4c:	22 1c de             	and    (%esi,%ebx,8),%bl
    6d4f:	43                   	inc    %ebx
    6d50:	06                   	push   %es
	...

00006d52 <.Loc.249.1>:
    UART_SM.rxPtr = rxBuf;
    6d52:	8e 4c 08 00          	mov    0x0(%eax,%ecx,1),%cs

00006d56 <.Loc.250.1>:
    UART_SM.rxBytesRemaining = size;
    6d56:	8e 4d 0a             	mov    0xa(%ebp),%cs
	...

00006d5a <.Loc.252.1>:

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag
    6d5a:	92                   	xchg   %eax,%edx
    6d5b:	c3                   	ret    
    6d5c:	dc                   	.byte 0xdc
    6d5d:	05                   	.byte 0x5

00006d5e <.Loc.254.1>:

    while (UART_SM.rxBytesRemaining--) {
    6d5e:	1c 4e                	sbb    $0x4e,%al
    6d60:	0a 00                	or     (%eax),%al

00006d62 <.LVL11>:
    6d62:	0d                   	.byte 0xd
    6d63:	4c                   	dec    %esp

00006d64 <.LVL12>:
    6d64:	3d 53 8e 4d 0a       	cmp    $0xa4d8e53,%eax
	...

00006d6a <.LVL13>:
    6d6a:	0c 93                	or     $0x93,%al
    6d6c:	18                   	.byte 0x18
    6d6d:	24                   	.byte 0x24

00006d6e <.LBB2>:
        while (!(UCA0IFG & UCRXIFG))
            ; // Wait for byte reception to complete
        UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

        uint8_t rec = UCA0RXBUF; // Read next byte
        *(UART_SM.rxPtr++) = rec; // Store byte
    6d6e:	0c 4e                	or     $0x4e,%al

00006d70 <.L28>:
        while (!(UCA0IFG & UCRXIFG))
    6d70:	92                   	xchg   %eax,%edx
    6d71:	b3 dc                	mov    $0xdc,%bl
    6d73:	05                   	.byte 0x5
    6d74:	fd                   	std    
    6d75:	27                   	daa    

00006d76 <.Loc.257.1>:
        UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag
    6d76:	92                   	xchg   %eax,%edx
    6d77:	c3                   	ret    
    6d78:	dc                   	.byte 0xdc
    6d79:	05                   	.byte 0x5

00006d7a <.Loc.259.1>:
        uint8_t rec = UCA0RXBUF; // Read next byte
    6d7a:	1e                   	push   %ds
    6d7b:	42                   	inc    %edx
    6d7c:	cc                   	int3   
    6d7d:	05                   	.byte 0x5

00006d7e <.LVL14>:
        *(UART_SM.rxPtr++) = rec; // Store byte
    6d7e:	1d 4c 08 00 0f       	sbb    $0xf00084c,%eax
    6d83:	4d                   	dec    %ebp
    6d84:	1f                   	pop    %ds
    6d85:	53                   	push   %ebx
    6d86:	8c 4f 08             	mov    %cs,0x8(%edi)
	...

00006d8a <.Loc.259.1>:
        uint8_t rec = UCA0RXBUF; // Read next byte
    6d8a:	cd 4e                	int    $0x4e
	...

00006d8e <.LBE2>:
    while (UART_SM.rxBytesRemaining--) {
    6d8e:	1d 4c 0a 00 0e       	sbb    $0xe000a4c,%eax
    6d93:	4d                   	dec    %ebp

00006d94 <.LVL15>:
    6d94:	3e 53                	ds push %ebx
    6d96:	8c 4e 0a             	mov    %cs,0xa(%esi)
    6d99:	00                   	.byte 0x0
    6d9a:	0d                   	.byte 0xd
    6d9b:	93                   	xchg   %eax,%ebx
    6d9c:	e9                   	.byte 0xe9
    6d9d:	23                   	.byte 0x23

00006d9e <.L27>:
    }

    UART_SM.isRxBusy = FALSE;
    6d9e:	c2 43 28             	ret    $0x2843
    6da1:	1c                   	.byte 0x1c

00006da2 <.Loc.264.1>:
}
    6da2:	30                   	.byte 0x30
    6da3:	41                   	inc    %ecx

00006da4 <UART_isRxBusy>:
/**
 * Return true if UART RX module is in the middle of an operation, false if not.
 */
uint8_t UART_isRxBusy() {
    return UART_SM.isRxBusy;
}
    6da4:	5c                   	pop    %esp
    6da5:	42                   	inc    %edx
    6da6:	28 1c 30             	sub    %bl,(%eax,%esi,1)
    6da9:	41                   	inc    %ecx

00006daa <UART_isRxDone>:
 * Return true if UART RX module is not in the middle of an operation (e.g. done), false if not.
 *
 * Could be used in combination with UART_asyncReceive.
 */
uint8_t UART_isRxDone() {
    return !(UART_SM.isRxBusy);
    6daa:	5c                   	pop    %esp
    6dab:	42                   	inc    %edx
    6dac:	28 1c 3c             	sub    %bl,(%esp,%edi,1)
    6daf:	53                   	push   %ebx

00006db0 <.Loc.280.1>:
}
    6db0:	5c                   	pop    %esp
    6db1:	03 4d 18             	add    0x18(%ebp),%ecx
    6db4:	0c 11                	or     $0x11,%al
    6db6:	30                   	.byte 0x30
    6db7:	41                   	inc    %ecx

00006db8 <USCI_A0_ISR>:
#elif defined(__GNUC__)
void __attribute__ ((interrupt(USCI_A0_VECTOR))) USCI_A0_ISR (void)
#else
#error Compiler not supported!
#endif
{
    6db8:	3f                   	aas    
    6db9:	15                   	.byte 0x15

00006dba <.LCFI0>:
    uint8_t rec;

    switch (__even_in_range(UCA0IV, USCI_UART_UCTXCPTIFG)) {
    6dba:	1c 42                	sbb    $0x42,%al
    6dbc:	de 05 2c 93 03 24    	fiadd  0x2403932c
    6dc2:	2c 92                	sub    $0x92,%al
    6dc4:	1e                   	push   %ds
    6dc5:	24 38                	and    $0x38,%al
    6dc7:	3c                   	.byte 0x3c

00006dc8 <.L38>:
    case USCI_NONE:
        break;
    case USCI_UART_UCRXIFG:
        if (UART_SM.rxBytesRemaining--) {
    6dc8:	3d 40 22 1c 1c       	cmp    $0x1c1c2240,%eax
    6dcd:	4d                   	dec    %ebp
    6dce:	0a 00                	or     (%eax),%al
    6dd0:	0e                   	push   %cs
    6dd1:	4c                   	dec    %esp
    6dd2:	3e 53                	ds push %ebx
    6dd4:	8d 4e 0a             	lea    0xa(%esi),%ecx
    6dd7:	00 0c 93             	add    %cl,(%ebx,%edx,4)
    6dda:	0a                   	.byte 0xa
    6ddb:	24                   	.byte 0x24

00006ddc <.Loc.302.1>:
            rec = UCA0RXBUF; // Read next byte
    6ddc:	1e                   	push   %ds
    6ddd:	42                   	inc    %edx
    6dde:	cc                   	int3   
    6ddf:	05                   	.byte 0x5

00006de0 <.LVL16>:
            *(UART_SM.rxPtr++) = rec; // Store byte
    6de0:	1c 4d                	sbb    $0x4d,%al
    6de2:	08 00                	or     %al,(%eax)
    6de4:	0f 4c 1f             	cmovl  (%edi),%ebx
    6de7:	53                   	push   %ebx
    6de8:	8d 4f 08             	lea    0x8(%edi),%ecx
	...

00006dec <.Loc.302.1>:
            rec = UCA0RXBUF; // Read next byte
    6dec:	cc                   	int3   
    6ded:	4e                   	dec    %esi
	...

00006df0 <.L40>:
        }

        if (0 == UART_SM.rxBytesRemaining) {
    6df0:	1c 42                	sbb    $0x42,%al
    6df2:	2c 1c                	sub    $0x1c,%al
    6df4:	0c 93                	or     $0x93,%al
    6df6:	20 20                	and    %ah,(%eax)

00006df8 <.Loc.307.1>:
            UCA0IE &= ~(UCRXIE); // Disable USCI_A0 RX interrupt
    6df8:	92                   	xchg   %eax,%edx
    6df9:	c3                   	ret    
    6dfa:	da                   	.byte 0xda
    6dfb:	05                   	.byte 0x5

00006dfc <.Loc.308.1>:
            UART_SM.isRxBusy = FALSE;
    6dfc:	c2 43 28             	ret    $0x2843
    6dff:	1c 1b                	sbb    $0x1b,%al
    6e01:	3c                   	.byte 0x3c

00006e02 <.L39>:
        }

        break;
    case USCI_UART_UCTXIFG:
        UCA0TXBUF = *(UART_SM.txPtr++); // if interrupt was enabled, there must be bytes
    6e02:	3c 40                	cmp    $0x40,%al
    6e04:	22 1c 1d 4c 02 00 0e 	and    0xe00024c(,%ebx,1),%bl
    6e0b:	4d                   	dec    %ebp
    6e0c:	1e                   	push   %ds
    6e0d:	53                   	push   %ebx
    6e0e:	8c 4e 02             	mov    %cs,0x2(%esi)
    6e11:	00 6d 4d             	add    %ch,0x4d(%ebp)
    6e14:	3d f0 ff 00 82       	cmp    $0x8200fff0,%eax
    6e19:	4d                   	dec    %ebp
    6e1a:	ce                   	into   
    6e1b:	05                   	.byte 0x5

00006e1c <.Loc.314.1>:
        if (--UART_SM.txBytesRemaining == 0) {
    6e1c:	1d 4c 04 00 3d       	sbb    $0x3d00044c,%eax
    6e21:	53                   	push   %ebx
    6e22:	8c 4d 04             	mov    %cs,0x4(%ebp)
    6e25:	00                   	.byte 0x0
    6e26:	0d                   	.byte 0xd
    6e27:	93                   	xchg   %eax,%ebx
    6e28:	07                   	pop    %es
    6e29:	20                   	.byte 0x20

00006e2a <.L42>:
            // TODO: actually, this wait should probably happen for blocking version only
            while (UCA0STATW & UCBUSY); // wait for last byte to finish transmitting
    6e2a:	d2                   	(bad)  
    6e2b:	b3 ca                	mov    $0xca,%bl
    6e2d:	05                   	.byte 0x5
    6e2e:	fd                   	std    
    6e2f:	23                   	.byte 0x23

00006e30 <.Loc.317.1>:
            UCA0IE &= ~(UCTXIE); // Disable USCI_A0 TX interrupt
    6e30:	a2                   	.byte 0xa2
    6e31:	c3                   	ret    
    6e32:	da                   	.byte 0xda
    6e33:	05                   	.byte 0x5

00006e34 <.Loc.318.1>:
            UART_SM.isTxBusy = FALSE;
    6e34:	c2 43 22             	ret    $0x2243
    6e37:	1c                   	.byte 0x1c

00006e38 <.L36>:
    case USCI_UART_UCSTTIFG:
        break;
    case USCI_UART_UCTXCPTIFG:
        break;
    }
}
    6e38:	3c 17                	cmp    $0x17,%al
    6e3a:	00 13                	add    %dl,(%ebx)

00006e3c <memmove>:
    6e3c:	0a                   	.byte 0xa
    6e3d:	15                   	.byte 0x15

00006e3e <.LCFI0>:
    6e3e:	0d                   	.byte 0xd
    6e3f:	9c                   	pushf  

00006e40 <L0>:
    6e40:	10                   	.byte 0x10
    6e41:	2c                   	.byte 0x2c

00006e42 <.Loc.69.1>:
    6e42:	0b 4d 0b             	or     0xb(%ebp),%ecx
    6e45:	5e                   	pop    %esi
    6e46:	0c 9b                	or     $0x9b,%al
    6e48:	0c 2c                	or     $0x2c,%al

00006e4a <.LVL2>:
    6e4a:	0d                   	.byte 0xd
    6e4b:	4e                   	dec    %esi

00006e4c <.L3>:
    6e4c:	3d                   	.byte 0x3d
    6e4d:	53                   	push   %ebx

00006e4e <.LVL4>:
    6e4e:	3d                   	.byte 0x3d
    6e4f:	93                   	xchg   %eax,%ebx
    6e50:	13                   	.byte 0x13
    6e51:	24                   	.byte 0x24

00006e52 <.LVL5>:
    6e52:	0f 4d 0f             	cmovge (%edi),%ecx
    6e55:	8e 0f                	mov    (%edi),%cs
    6e57:	5b                   	pop    %ebx
    6e58:	0a 4c 0a 5d          	or     0x5d(%edx,%ecx,1),%cl

00006e5c <.Loc.76.1>:
    6e5c:	ea                   	.byte 0xea
    6e5d:	4f                   	dec    %edi
    6e5e:	00 00                	add    %al,(%eax)
    6e60:	f5                   	cmc    
    6e61:	3f                   	aas    

00006e62 <.L8>:
    6e62:	0f                   	.byte 0xf
    6e63:	43                   	inc    %ebx

00006e64 <.L10>:
    6e64:	0f 9e 08             	setle  (%eax)
    6e67:	24                   	.byte 0x24

00006e68 <.LVL8>:
    6e68:	0a 4d 0a             	or     0xa(%ebp),%cl
    6e6b:	5f                   	pop    %edi
    6e6c:	0b 4c 0b 5f          	or     0x5f(%ebx,%ecx,1),%ecx

00006e70 <.Loc.83.1>:
    6e70:	eb 4a                	jmp    6ebc <.Loc.19.1+0x2>
    6e72:	00 00                	add    %al,(%eax)
    6e74:	1f                   	pop    %ds
    6e75:	53                   	push   %ebx

00006e76 <.LVL9>:
    6e76:	f6 3f                	idivb  (%edi)

00006e78 <.L9>:
    6e78:	0a 17                	or     (%edi),%dl
    6e7a:	30                   	.byte 0x30
    6e7b:	41                   	inc    %ecx

00006e7c <memset>:
    6e7c:	0f 4c 0e             	cmovl  (%esi),%ecx
    6e7f:	5c                   	pop    %esp

00006e80 <L0>:
    6e80:	0f 9e 04 24          	setle  (%esp)

00006e84 <.LVL3>:
    6e84:	cf                   	iret   
    6e85:	4d                   	dec    %ebp
    6e86:	00 00                	add    %al,(%eax)
    6e88:	1f                   	pop    %ds
    6e89:	53                   	push   %ebx

00006e8a <.LVL4>:
    6e8a:	fa                   	cli    
    6e8b:	3f                   	aas    

00006e8c <.L5>:
    6e8c:	30                   	.byte 0x30
    6e8d:	41                   	inc    %ecx

00006e8e <__do_global_ctors_aux>:
    6e8e:	0a                   	.byte 0xa
    6e8f:	15                   	.byte 0x15

00006e90 <L0>:
    6e90:	1c 42                	sbb    $0x42,%al
    6e92:	f4                   	hlt    
    6e93:	44                   	inc    %esp
    6e94:	3c 93                	cmp    $0x93,%al
    6e96:	08 24 3a             	or     %ah,(%edx,%edi,1)
    6e99:	40                   	inc    %eax
    6e9a:	f4                   	hlt    
    6e9b:	44                   	inc    %esp

00006e9c <.L3>:
    6e9c:	8c 12                	mov    %ss,(%edx)
    6e9e:	3a 50 fe             	cmp    -0x2(%eax),%dl
    6ea1:	ff 2c 4a             	ljmp   *(%edx,%ecx,2)
    6ea4:	3c 93                	cmp    $0x93,%al
    6ea6:	fa                   	cli    
    6ea7:	23                   	.byte 0x23

00006ea8 <.L1>:
    6ea8:	0a 17                	or     (%edi),%dl
    6eaa:	30                   	.byte 0x30
    6eab:	41                   	inc    %ecx

00006eac <call___do_global_ctors_aux>:
    6eac:	30                   	.byte 0x30
    6ead:	41                   	inc    %ecx

00006eae <__msp430_init>:
    6eae:	b0 12                	mov    $0x12,%al
    6eb0:	ac                   	lods   %ds:(%esi),%al
    6eb1:	56                   	push   %esi
    6eb2:	b0 12                	mov    $0x12,%al
    6eb4:	8e                   	.byte 0x8e
    6eb5:	6e                   	outsb  %ds:(%esi),(%dx)

00006eb6 <L0>:
    6eb6:	b0 12                	mov    $0x12,%al
    6eb8:	ec                   	in     (%dx),%al
    6eb9:	55                   	push   %ebp

00006eba <.Loc.19.1>:
    6eba:	b0 12                	mov    $0x12,%al
    6ebc:	e0 55                	loopne 6f13 <__TMC_END__+0x49>

00006ebe <.Loc.20.1>:
    6ebe:	30                   	.byte 0x30
    6ebf:	41                   	inc    %ecx

00006ec0 <__msp430_fini>:
    6ec0:	b0 12                	mov    $0x12,%al
    6ec2:	f8                   	clc    
    6ec3:	55                   	push   %ebp

00006ec4 <L0>:
    6ec4:	b0 12                	mov    $0x12,%al
    6ec6:	5e                   	pop    %esi
    6ec7:	56                   	push   %esi

00006ec8 <L0>:
    6ec8:	30                   	.byte 0x30
    6ec9:	41                   	inc    %ecx

templog.out:     file format elf32-little


templog.out:     file format elf32-little


Disassembly of section __interrupt_vector_49:

0000fff0 <__interrupt_vector_49>:
    fff0:	80                   	.byte 0x80
    fff1:	6d                   	insl   (%dx),%es:(%edi)

Disassembly of section __reset_vector:

0000fffe <__msp430_resetvec_hook>:
    fffe:	a4                   	movsb  %ds:(%esi),%es:(%edi)
    ffff:	55                   	push   %ebp

Disassembly of section .rodata:

00004400 <dv-0xa6>:
    4400:	63 6f 6d             	arpl   %bp,0x6d(%edi)
    4403:	70 72                	jo     4477 <__stack+0x2077>
    4405:	65 73 73             	gs jae 447b <__stack+0x207b>
    4408:	65 64 20 62 6c       	gs and %ah,%fs:0x6c(%edx)
    440d:	6f                   	outsl  %ds:(%esi),(%dx)
    440e:	63 6b 3a             	arpl   %bp,0x3a(%ebx)
    4411:	0d 0a 00 25 30       	or     $0x3025000a,%eax
    4416:	34 78                	xor    $0x78,%al
    4418:	20 00                	and    %al,(%eax)
    441a:	72 61                	jb     447d <__stack+0x207d>
    441c:	74 65                	je     4483 <__stack+0x2083>
    441e:	3a 20                	cmp    (%eax),%ah
    4420:	73 61                	jae    4483 <__stack+0x2083>
    4422:	6d                   	insl   (%dx),%es:(%edi)
    4423:	70 6c                	jo     4491 <__stack+0x2091>
    4425:	65 73 2f             	gs jae 4457 <__stack+0x2057>
    4428:	62 6c 6f 63          	bound  %ebp,0x63(%edi,%ebp,2)
    442c:	6b 3a 20             	imul   $0x20,(%edx),%edi
    442f:	25 75 2f 25 75       	and    $0x75252f75,%eax
    4434:	0d 0a 00 53 69       	or     $0x6953000a,%eax
    4439:	7a 65                	jp     44a0 <__stack+0x20a0>
    443b:	20 6f 66             	and    %ch,0x66(%edi)
    443e:	20 74 61 73          	and    %dh,0x73(%ecx,%eiz,2)
    4442:	6b 20 25             	imul   $0x25,(%eax),%esp
    4445:	75 3a                	jne    4481 <__stack+0x2081>
    4447:	20 25 75 0d 0a 00    	and    %ah,0xa0d75
    444d:	53                   	push   %ebx
    444e:	69 7a 65 20 6f 66 20 	imul   $0x20666f20,0x65(%edx),%edi
    4455:	63 68 61             	arpl   %bp,0x61(%eax)
    4458:	6e                   	outsb  %ds:(%esi),(%dx)
    4459:	6e                   	outsb  %ds:(%esi),(%dx)
    445a:	65 6c                	gs insb (%dx),%es:(%edi)
    445c:	20 25 75 3a 20 25    	and    %ah,0x25203a75
    4462:	75 0d                	jne    4471 <__stack+0x2071>
    4464:	0a 00                	or     (%eax),%al
    4466:	53                   	push   %ebx
    4467:	69 7a 65 20 6f 66 20 	imul   $0x20666f20,0x65(%edx),%edi
    446e:	64 69 72 74 79 5f 67 	imul   $0x76675f79,%fs:0x74(%edx),%esi
    4475:	76 
    4476:	73 3a                	jae    44b2 <dv+0xc>
    4478:	20 25 75 0d 0a 00    	and    %ah,0xa0d75
    447e:	53                   	push   %ebx
    447f:	69 7a 65 20 6f 66 20 	imul   $0x20666f20,0x65(%edx),%edi
    4486:	6e                   	outsb  %ds:(%esi),(%dx)
    4487:	75 6d                	jne    44f6 <_task_task_init+0x6>
    4489:	5f                   	pop    %edi
    448a:	64 69 72 74 79 5f 67 	imul   $0x76675f79,%fs:0x74(%edx),%esi
    4491:	76 
    4492:	73 3a                	jae    44ce <puth.hex>
    4494:	20 25 75 0d 0a 00    	and    %ah,0xa0d75
    449a:	54                   	push   %esp
    449b:	6f                   	outsl  %ds:(%esi),(%dx)
    449c:	74 61                	je     44ff <_task_task_init+0xf>
    449e:	6c                   	insb   (%dx),%es:(%edi)
    449f:	3a 20                	cmp    (%eax),%ah
    44a1:	25 75 0d 0a 00       	and    $0xa0d75,%eax

000044a6 <dv>:
    44a6:	00 ca                	add    %cl,%dl
    44a8:	9a 3b 00 e1 f5 05 80 	lcall  $0x8005,$0xf5e1003b
    44af:	96                   	xchg   %eax,%esi
    44b0:	98                   	cwtl   
    44b1:	00 40 42             	add    %al,0x42(%eax)
    44b4:	0f 00 a0 86 01 00 10 	verr   0x10000186(%eax)
    44bb:	27                   	daa    
    44bc:	00 00                	add    %al,(%eax)
    44be:	e8 03 00 00 64       	call   640044c6 <__high_dataend+0x63ff44c4>
    44c3:	00 00                	add    %al,(%eax)
    44c5:	00 0a                	add    %cl,(%edx)
    44c7:	00 00                	add    %al,(%eax)
    44c9:	00 01                	add    %al,(%ecx)
    44cb:	00 00                	add    %al,(%eax)
	...

000044ce <puth.hex>:
    44ce:	30 31                	xor    %dh,(%ecx)
    44d0:	32 33                	xor    (%ebx),%dh
    44d2:	34 35                	xor    $0x35,%al
    44d4:	36 37                	ss aaa 
    44d6:	38 39                	cmp    %bh,(%ecx)
    44d8:	41                   	inc    %ecx
    44d9:	42                   	inc    %edx
    44da:	43                   	inc    %ebx
    44db:	44                   	inc    %esp
    44dc:	45                   	inc    %ebp
    44dd:	46                   	inc    %esi
	...

000044e0 <__EH_FRAME_BEGIN__>:
    44e0:	00 00                	add    %al,(%eax)
	...

000044e4 <__fini_array_end>:
    44e4:	00 00                	add    %al,(%eax)
	...

000044e8 <__CTOR_LIST__>:
    44e8:	ff                   	(bad)  
    44e9:	ff 00                	incl   (%eax)

000044ea <__CTOR_END__>:
	...

000044ec <__DTOR_LIST__>:
    44ec:	ff                   	(bad)  
    44ed:	ff 00                	incl   (%eax)

000044ee <__DTOR_END__>:
	...

Disassembly of section .nv:

000044f0 <_task_task_init>:
    44f0:	a0 57 02 00 00       	mov    0x257,%al
    44f5:	00 01                	add    %al,(%ecx)
    44f7:	00 00                	add    %al,(%eax)
    44f9:	00 74 61 73          	add    %dh,0x73(%ecx,%eiz,2)
    44fd:	6b 5f 69 6e          	imul   $0x6e,0x69(%edi),%ebx
    4501:	69 74 00 00 00 00 00 	imul   $0x0,0x0(%eax,%eax,1),%esi
    4508:	00 
	...

0000451a <_task_task_init_dict>:
    451a:	c8 57 04 00          	enter  $0x457,$0x0
    451e:	00 00                	add    %al,(%eax)
    4520:	02 00                	add    (%eax),%al
    4522:	00 00                	add    %al,(%eax)
    4524:	74 61                	je     4587 <_task_task_measure_temp+0x19>
    4526:	73 6b                	jae    4593 <_task_task_measure_temp+0x25>
    4528:	5f                   	pop    %edi
    4529:	69 6e 69 74 5f 64 69 	imul   $0x69645f74,0x69(%esi),%ebp
    4530:	63 74 00 00          	arpl   %si,0x0(%eax,%eax,1)
	...

00004544 <_task_task_sample>:
    4544:	60                   	pusha  
    4545:	58                   	pop    %eax
    4546:	08 00                	or     %al,(%eax)
    4548:	00 00                	add    %al,(%eax)
    454a:	03 00                	add    (%eax),%eax
    454c:	00 00                	add    %al,(%eax)
    454e:	74 61                	je     45b1 <_task_task_letterize+0x19>
    4550:	73 6b                	jae    45bd <_task_task_letterize+0x25>
    4552:	5f                   	pop    %edi
    4553:	73 61                	jae    45b6 <_task_task_letterize+0x1e>
    4555:	6d                   	insl   (%dx),%es:(%edi)
    4556:	70 6c                	jo     45c4 <_task_task_compress+0x2>
    4558:	65 00 00             	add    %al,%gs:(%eax)
	...

0000456e <_task_task_measure_temp>:
    456e:	d0 58 10             	rcrb   0x10(%eax)
    4571:	00 00                	add    %al,(%eax)
    4573:	00 04 00             	add    %al,(%eax,%eax,1)
    4576:	00 00                	add    %al,(%eax)
    4578:	74 61                	je     45db <_task_task_compress+0x19>
    457a:	73 6b                	jae    45e7 <_task_task_compress+0x25>
    457c:	5f                   	pop    %edi
    457d:	6d                   	insl   (%dx),%es:(%edi)
    457e:	65 61                	gs popa 
    4580:	73 75                	jae    45f7 <_task_task_find_sibling+0xb>
    4582:	72 65                	jb     45e9 <_task_task_compress+0x27>
    4584:	5f                   	pop    %edi
    4585:	74 65                	je     45ec <_task_task_find_sibling>
    4587:	6d                   	insl   (%dx),%es:(%edi)
    4588:	70 00                	jo     458a <_task_task_measure_temp+0x1c>
	...

00004598 <_task_task_letterize>:
    4598:	20 59 20             	and    %bl,0x20(%ecx)
    459b:	00 00                	add    %al,(%eax)
    459d:	00 05 00 00 00 74    	add    %al,0x74000000
    45a3:	61                   	popa   
    45a4:	73 6b                	jae    4611 <_task_task_find_sibling+0x25>
    45a6:	5f                   	pop    %edi
    45a7:	6c                   	insb   (%dx),%es:(%edi)
    45a8:	65 74 74             	gs je  461f <_task_task_add_node+0x9>
    45ab:	65 72 69             	gs jb  4617 <_task_task_add_node+0x1>
    45ae:	7a 65                	jp     4615 <_task_task_find_sibling+0x29>
	...

000045c2 <_task_task_compress>:
    45c2:	dc 59 40             	fcompl 0x40(%ecx)
    45c5:	00 00                	add    %al,(%eax)
    45c7:	00 06                	add    %al,(%esi)
    45c9:	00 00                	add    %al,(%eax)
    45cb:	00 74 61 73          	add    %dh,0x73(%ecx,%eiz,2)
    45cf:	6b 5f 63 6f          	imul   $0x6f,0x63(%edi),%ebx
    45d3:	6d                   	insl   (%dx),%es:(%edi)
    45d4:	70 72                	jo     4648 <_task_task_add_insert+0x8>
    45d6:	65 73 73             	gs jae 464c <_task_task_add_insert+0xc>
	...

000045ec <_task_task_find_sibling>:
    45ec:	78 5a                	js     4648 <_task_task_add_insert+0x8>
    45ee:	80 00 00             	addb   $0x0,(%eax)
    45f1:	00 07                	add    %al,(%edi)
    45f3:	00 00                	add    %al,(%eax)
    45f5:	00 74 61 73          	add    %dh,0x73(%ecx,%eiz,2)
    45f9:	6b 5f 66 69          	imul   $0x69,0x66(%edi),%ebx
    45fd:	6e                   	outsb  %ds:(%esi),(%dx)
    45fe:	64 5f                	fs pop %edi
    4600:	73 69                	jae    466b <_task_task_append_compressed+0x1>
    4602:	62 6c 69 6e          	bound  %ebp,0x6e(%ecx,%ebp,2)
    4606:	67 00 00             	add    %al,(%bx,%si)
	...

00004616 <_task_task_add_node>:
    4616:	58                   	pop    %eax
    4617:	5b                   	pop    %ebx
    4618:	00 01                	add    %al,(%ecx)
    461a:	00 00                	add    %al,(%eax)
    461c:	08 00                	or     %al,(%eax)
    461e:	00 00                	add    %al,(%eax)
    4620:	74 61                	je     4683 <_task_task_append_compressed+0x19>
    4622:	73 6b                	jae    468f <_task_task_append_compressed+0x25>
    4624:	5f                   	pop    %edi
    4625:	61                   	popa   
    4626:	64 64 5f             	fs fs pop %edi
    4629:	6e                   	outsb  %ds:(%esi),(%dx)
    462a:	6f                   	outsl  %ds:(%esi),(%dx)
    462b:	64 65 00 00          	fs add %al,%gs:(%eax)
	...

00004640 <_task_task_add_insert>:
    4640:	04 5c                	add    $0x5c,%al
    4642:	00 02                	add    %al,(%edx)
    4644:	00 00                	add    %al,(%eax)
    4646:	09 00                	or     %eax,(%eax)
    4648:	00 00                	add    %al,(%eax)
    464a:	74 61                	je     46ad <_task_task_print+0x19>
    464c:	73 6b                	jae    46b9 <_task_task_print+0x25>
    464e:	5f                   	pop    %edi
    464f:	61                   	popa   
    4650:	64 64 5f             	fs fs pop %edi
    4653:	69 6e 73 65 72 74 00 	imul   $0x747265,0x73(%esi),%ebp
	...

0000466a <_task_task_append_compressed>:
    466a:	30 5d 00             	xor    %bl,0x0(%ebp)
    466d:	04 00                	add    $0x0,%al
    466f:	00 0a                	add    %cl,(%edx)
    4671:	00 00                	add    %al,(%eax)
    4673:	00 74 61 73          	add    %dh,0x73(%ecx,%eiz,2)
    4677:	6b 5f 61 70          	imul   $0x70,0x61(%edi),%ebx
    467b:	70 65                	jo     46e2 <_task_task_done+0x24>
    467d:	6e                   	outsb  %ds:(%esi),(%dx)
    467e:	64 5f                	fs pop %edi
    4680:	63 6f 6d             	arpl   %bp,0x6d(%edi)
    4683:	70 72                	jo     46f7 <_global_dict+0x3>
    4685:	65 73 73             	gs jae 46fb <_global_dict+0x7>
    4688:	65 64 00 00          	gs add %al,%fs:(%eax)
	...

00004694 <_task_task_print>:
    4694:	a8 5d                	test   $0x5d,%al
    4696:	00 08                	add    %cl,(%eax)
    4698:	00 00                	add    %al,(%eax)
    469a:	0b 00                	or     (%eax),%eax
    469c:	00 00                	add    %al,(%eax)
    469e:	74 61                	je     4701 <_global_dict+0xd>
    46a0:	73 6b                	jae    470d <_global_dict+0x19>
    46a2:	5f                   	pop    %edi
    46a3:	70 72                	jo     4717 <_global_dict+0x23>
    46a5:	69 6e 74 00 00 00 00 	imul   $0x0,0x74(%esi),%ebp
	...

000046be <_task_task_done>:
    46be:	74 5e                	je     471e <_global_dict+0x2a>
    46c0:	00 10                	add    %dl,(%eax)
    46c2:	00 00                	add    %al,(%eax)
    46c4:	0c 00                	or     $0x0,%al
    46c6:	00 00                	add    %al,(%eax)
    46c8:	74 61                	je     472b <_global_dict+0x37>
    46ca:	73 6b                	jae    4737 <_global_dict+0x43>
    46cc:	5f                   	pop    %edi
    46cd:	64 6f                	outsl  %fs:(%esi),(%dx)
    46cf:	6e                   	outsb  %ds:(%esi),(%dx)
    46d0:	65 00 00             	add    %al,%gs:(%eax)
	...

000046e8 <_global_parent_next>:
	...

000046ea <_global_out_len>:
	...

000046ec <_global_letter>:
	...

000046ee <_global_prev_sample>:
	...

000046f0 <_global_letter_idx>:
	...

000046f2 <_global_sample_count>:
	...

000046f4 <_global_dict>:
	...

000052f4 <_global_node_count>:
	...

000052f6 <_global_sample>:
	...

000052f8 <_global_sibling>:
	...

000052fa <_global_parent_node>:
    52fa:	00 00                	add    %al,(%eax)
    52fc:	00 00                	add    %al,(%eax)
	...

00005300 <_global_parent>:
	...

00005302 <_global_child>:
	...

00005304 <_global_sibling_node>:
    5304:	00 00                	add    %al,(%eax)
    5306:	00 00                	add    %al,(%eax)
	...

0000530a <_global_symbol>:
	...

0000530c <_global_compressed_data>:
	...

0000548c <_task__entry_task>:
    548c:	4c                   	dec    %esp
    548d:	61                   	popa   
    548e:	01 00                	add    %eax,(%eax)
    5490:	00 00                	add    %al,(%eax)
    5492:	00 00                	add    %al,(%eax)
    5494:	00 00                	add    %al,(%eax)
    5496:	5f                   	pop    %edi
    5497:	65 6e                	outsb  %gs:(%esi),(%dx)
    5499:	74 72                	je     550d <data_dest+0x35>
    549b:	79 5f                	jns    54fc <data_dest+0x24>
    549d:	74 61                	je     5500 <data_dest+0x28>
    549f:	73 6b                	jae    550c <data_dest+0x34>
	...

000054b6 <gv_index>:
	...

000054b8 <num_dirty_gv>:
	...

000054ba <curtime>:
	...

000054bc <context_3>:
    54bc:	00 00                	add    %al,(%eax)
    54be:	00 00                	add    %al,(%eax)
	...

000054c2 <context_2>:
    54c2:	8c 54 00 00          	mov    %ss,0x0(%eax,%eax,1)
    54c6:	bc 54 00 00 00       	mov    $0x54,%esp

000054c8 <context_1>:
    54c8:	00 00                	add    %al,(%eax)
    54ca:	00 00                	add    %al,(%eax)
	...

000054ce <context_0>:
    54ce:	8c 54 00 00          	mov    %ss,0x0(%eax,%eax,1)
    54d2:	c8 54 ce 54          	enter  $0xce54,$0x54

000054d4 <curctx>:
    54d4:	ce                   	into   
    54d5:	54                   	push   %esp

000054d6 <_numBoots>:
	...

000054d8 <data_dest>:
	...

0000551a <data_size>:
	...

0000555c <data>:
	...

Disassembly of section .data:

00001c00 <__datastart>:
	...

00001c02 <__dso_handle>:
	...

Disassembly of section .upper.data:

00010000 <__high_dataend-0x2>:
   10000:	01 00                	add    %eax,(%eax)

Disassembly of section .bss:

00001c04 <__bssstart>:
	...

00001c06 <dtor_idx.2763>:
	...

00001c08 <object.2776>:
	...

00001c16 <overflow>:
	...

00001c18 <rcount>:
	...

00001c1a <wcount>:
	...

00001c1c <tcount>:
	...

00001c1e <max_num_dirty_gv>:
	...

00001c20 <watchdog_bits>:
	...

00001c22 <UART_SM>:
	...

Disassembly of section .text:

000055a4 <__crt0_start>:
    55a4:	31 40 00             	xor    %eax,0x0(%eax)
    55a7:	24 3c                	and    $0x3c,%al

000055a8 <__crt0_init_bss>:
    55a8:	3c 40                	cmp    $0x40,%al
    55aa:	04 1c                	add    $0x1c,%al

000055ac <.Loc.79.1>:
    55ac:	0d 43 3e 40 2a       	or     $0x2a403e43,%eax

000055ae <.Loc.80.1>:
    55ae:	3e 40                	ds inc %eax
    55b0:	2a 00                	sub    (%eax),%al

000055b2 <.Loc.84.1>:
    55b2:	b0 12                	mov    $0x12,%al
    55b4:	44                   	inc    %esp
    55b5:	6e                   	outsb  %ds:(%esi),(%dx)

000055b6 <__crt0_movedata>:
    55b6:	3c 40                	cmp    $0x40,%al
    55b8:	00 1c 3d 40 9e 55 0d 	add    %bl,0xd559e40(,%edi,1)

000055ba <.Loc.123.1>:
    55ba:	3d 40 9e 55 0d       	cmp    $0xd559e40,%eax

000055be <.Loc.126.1>:
    55be:	0d 9c 04 24 3e       	or     $0x3e24049c,%eax

000055c0 <.Loc.127.1>:
    55c0:	04 24                	add    $0x24,%al

000055c2 <.Loc.129.1>:
    55c2:	3e 40                	ds inc %eax
    55c4:	04 00                	add    $0x0,%al

000055c6 <.Loc.131.1>:
    55c6:	b0 12                	mov    $0x12,%al
    55c8:	04 6e                	add    $0x6e,%al

000055ca <__crt0_call_init_then_main>:
    55ca:	b0 12                	mov    $0x12,%al
    55cc:	76 6e                	jbe    563c <register_tm_clones+0x14>

000055ce <.Loc.206.1>:
    55ce:	0c 43                	or     $0x43,%al

000055d0 <.Loc.207.1>:
    55d0:	b0 12                	mov    $0x12,%al
    55d2:	88 6b 34             	mov    %ch,0x34(%ebx)

000055d4 <_msp430_run_init_array>:
    55d4:	34 40                	xor    $0x40,%al
    55d6:	e4 44                	in     $0x44,%al

000055d8 <.Loc.234.1>:
    55d8:	35 40 e4 44 26       	xor    $0x2644e440,%eax

000055dc <.Loc.235.1>:
    55dc:	26 43                	es inc %ebx

000055de <.Loc.236.1>:
    55de:	0d 3c 34 40 e4       	or     $0xe440343c,%eax

000055e0 <_msp430_run_preinit_array>:
    55e0:	34 40                	xor    $0x40,%al
    55e2:	e4 44                	in     $0x44,%al

000055e4 <.Loc.242.1>:
    55e4:	35 40 e4 44 26       	xor    $0x2644e440,%eax

000055e8 <.Loc.243.1>:
    55e8:	26 43                	es inc %ebx

000055ea <.Loc.244.1>:
    55ea:	07                   	pop    %es
    55eb:	3c 34                	cmp    $0x34,%al

000055ec <_msp430_run_fini_array>:
    55ec:	34 40                	xor    $0x40,%al
    55ee:	e4 44                	in     $0x44,%al

000055f0 <.Loc.250.1>:
    55f0:	35 40 e4 44 36       	xor    $0x3644e440,%eax

000055f4 <.Loc.251.1>:
    55f4:	36 40                	ss inc %eax
    55f6:	fe                   	(bad)  
    55f7:	ff 00                	incl   (%eax)

000055f8 <.Loc.252.1>:
    55f8:	00 3c 05 94 05 24 27 	add    %bh,0x27240594(,%eax,1)

000055fa <_msp430_run_array>:
    55fa:	05 94 05 24 27       	add    $0x27240594,%eax

000055fc <.Loc.256.1>:
    55fc:	05 24 27 44 04       	add    $0x4442724,%eax

000055fe <.Loc.257.1>:
    55fe:	27                   	daa    
    55ff:	44                   	inc    %esp

00005600 <.Loc.258.1>:
    5600:	04 56                	add    $0x56,%al

00005602 <.Loc.259.1>:
    5602:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
    5603:	12 10                	adc    (%eax),%dl

00005604 <.Loc.260.1>:
    5604:	10 40 f4             	adc    %al,-0xc(%eax)
    5607:	ff 30                	pushl  (%eax)

00005608 <_msp430_run_done>:
    5608:	30 41 3c             	xor    %al,0x3c(%ecx)

0000560a <deregister_tm_clones>:
    560a:	3c 40                	cmp    $0x40,%al
    560c:	92                   	xchg   %eax,%edx
    560d:	6e                   	outsb  %ds:(%esi),(%dx)
    560e:	3c 80                	cmp    $0x80,%al

00005610 <L0>:
    5610:	91                   	xchg   %eax,%ecx
    5611:	6e                   	outsb  %ds:(%esi),(%dx)
    5612:	2d 43 0d 9c 07       	sub    $0x79c0d43,%eax
    5617:	2c 3d                	sub    $0x3d,%al
    5619:	40                   	inc    %eax
    561a:	00 00                	add    %al,(%eax)
    561c:	0d 93 03 24 3c       	or     $0x3c240393,%eax
    5621:	40                   	inc    %eax
    5622:	92                   	xchg   %eax,%edx
    5623:	6e                   	outsb  %ds:(%esi),(%dx)
    5624:	8d 12                	lea    (%edx),%edx

00005626 <.L1>:
    5626:	30 41 3d             	xor    %al,0x3d(%ecx)

00005628 <register_tm_clones>:
    5628:	3d 40 92 6e 3d       	cmp    $0x3d6e9240,%eax
    562d:	80 92 6e 0d 11 0c 4d 	adcb   $0x4d,0xc110d6e(%edx)
    5634:	5c                   	pop    %esp
    5635:	03 4d 18             	add    0x18(%ebp),%ecx
    5638:	0c 11                	or     $0x11,%al
    563a:	0d 5c 0d 11 0d       	or     $0xd110d5c,%eax
    563f:	93                   	xchg   %eax,%ebx
    5640:	07                   	pop    %es
    5641:	24 3e                	and    $0x3e,%al
    5643:	40                   	inc    %eax
    5644:	00 00                	add    %al,(%eax)
    5646:	0e                   	push   %cs
    5647:	93                   	xchg   %eax,%ebx
    5648:	03 24 3c             	add    (%esp,%edi,1),%esp
    564b:	40                   	inc    %eax
    564c:	92                   	xchg   %eax,%edx
    564d:	6e                   	outsb  %ds:(%esi),(%dx)
    564e:	8e 12                	mov    (%edx),%ss

00005650 <.L7>:
    5650:	30 41 0a             	xor    %al,0xa(%ecx)

00005652 <__do_global_dtors_aux>:
    5652:	0a 15 c2 93 04 1c    	or     0x1c0493c2,%dl
    5658:	20 20                	and    %ah,(%eax)
    565a:	1c 42                	sbb    $0x42,%al
    565c:	06                   	push   %es
    565d:	1c 3a                	sbb    $0x3a,%al
    565f:	40                   	inc    %eax
    5660:	ee                   	out    %al,(%dx)
    5661:	44                   	inc    %esp
    5662:	3a 80 ec 44 0a 11    	cmp    0x110a44ec(%eax),%al
    5668:	3a 53 0c             	cmp    0xc(%ebx),%dl
    566b:	9a 0b 2c 1c 53 82 4c 	lcall  $0x4c82,$0x531c2c0b

0000566e <.L22>:
    566e:	1c 53                	sbb    $0x53,%al
    5670:	82                   	(bad)  
    5671:	4c                   	dec    %esp
    5672:	06                   	push   %es
    5673:	1c 0c                	sbb    $0xc,%al
    5675:	5c                   	pop    %esp
    5676:	1c 4c                	sbb    $0x4c,%al
    5678:	ec                   	in     (%dx),%al
    5679:	44                   	inc    %esp
    567a:	8c 12                	mov    %ss,(%edx)
    567c:	1c 42                	sbb    $0x42,%al
    567e:	06                   	push   %es
    567f:	1c 0c                	sbb    $0xc,%al
    5681:	9a f5 2b b0 12 0a 56 	lcall  $0x560a,$0x12b02bf5

00005684 <.L21>:
    5684:	b0 12                	mov    $0x12,%al
    5686:	0a 56 3d             	or     0x3d(%esi),%dl
    5689:	40                   	inc    %eax
    568a:	00 00                	add    %al,(%eax)
    568c:	0d 93 03 24 3c       	or     $0x3c240393,%eax
    5691:	40                   	inc    %eax
    5692:	e0 44                	loopne 56d8 <TimerB1_ISR+0x8>
    5694:	8d 12                	lea    (%edx),%edx

00005696 <.L19>:
    5696:	d2 43 04             	rolb   %cl,0x4(%ebx)
    5699:	1c 0a                	sbb    $0xa,%al

0000569a <.L15>:
    569a:	0a 17                	or     (%edi),%dl
    569c:	30 41 30             	xor    %al,0x30(%ecx)

0000569e <call___do_global_dtors_aux>:
    569e:	30 41 3e             	xor    %al,0x3e(%ecx)

000056a0 <frame_dummy>:
    56a0:	3e 40                	ds inc %eax
    56a2:	00 00                	add    %al,(%eax)
    56a4:	0e                   	push   %cs
    56a5:	93                   	xchg   %eax,%ebx
    56a6:	05 24 3c 40 e0       	add    $0xe0403c24,%eax
    56ab:	44                   	inc    %esp
    56ac:	3d 40 08 1c 8e       	cmp    $0x8e1c0840,%eax
    56b1:	12 3c 40             	adc    (%eax,%eax,2),%bh

000056b2 <.L26>:
    56b2:	3c 40                	cmp    $0x40,%al
    56b4:	00 1c 8c             	add    %bl,(%esp,%ecx,4)
    56b7:	93                   	xchg   %eax,%ebx
    56b8:	00 00                	add    %al,(%eax)
    56ba:	03 20                	add    (%eax),%esp

000056bc <.L27>:
    56bc:	b0 12                	mov    $0x12,%al
    56be:	28 56 30             	sub    %dl,0x30(%esi)
    56c1:	41                   	inc    %ecx

000056c2 <.L34>:
    56c2:	3d 40 00 00 0d       	cmp    $0xd000040,%eax
    56c7:	93                   	xchg   %eax,%ebx
    56c8:	f9                   	stc    
    56c9:	27                   	daa    
    56ca:	8d 12                	lea    (%edx),%edx
    56cc:	f7 3f                	idivl  (%edi)

000056ce <call_frame_dummy>:
    56ce:	30 41 04             	xor    %al,0x4(%ecx)

000056d0 <TimerB1_ISR>:
    56d0:	04 12                	add    $0x12,%al
    56d2:	04 41                	add    $0x41,%al
    56d4:	0c 12                	or     $0x12,%al
    56d6:	1c 42                	sbb    $0x42,%al
    56d8:	c0 03 3c             	rolb   $0x3c,(%ebx)
    56db:	f0 fd                	lock std 
    56dd:	ff 82 4c c0 03 1c    	incl   0x1c03c04c(%edx)
    56e3:	42                   	inc    %edx
    56e4:	c0 03 0c             	rolb   $0xc,(%ebx)
    56e7:	93                   	xchg   %eax,%ebx
    56e8:	17                   	pop    %ss
    56e9:	24 00                	and    $0x0,%al
    56eb:	3c 1c                	cmp    $0x1c,%al

000056ec <.LBB0_1>:
    56ec:	1c 42                	sbb    $0x42,%al
    56ee:	16                   	push   %ss
    56ef:	1c 1c                	sbb    $0x1c,%al
    56f1:	53                   	push   %ebx
    56f2:	82                   	(bad)  
    56f3:	4c                   	dec    %esp
    56f4:	16                   	push   %ss
    56f5:	1c 1c                	sbb    $0x1c,%al
    56f7:	42                   	inc    %edx
    56f8:	c0 03 2c             	rolb   $0x2c,(%ebx)
    56fb:	d2 82 4c c0 03 1c    	rolb   %cl,0x1c03c04c(%edx)
    5701:	42                   	inc    %edx
    5702:	c0 03 2c             	rolb   $0x2c,(%ebx)
    5705:	d3 82 4c c0 03 1c    	roll   %cl,0x1c03c04c(%edx)
    570b:	42                   	inc    %edx
    570c:	c0 03 3c             	rolb   $0x3c,(%ebx)
    570f:	f0 fe                	lock (bad) 
    5711:	ff 82 4c c0 03 00    	incl   0x3c04c(%edx)
    5717:	3c 3c                	cmp    $0x3c,%al

00005718 <.LBB0_2>:
    5718:	3c 41                	cmp    $0x41,%al
    571a:	34 41                	xor    $0x41,%al
    571c:	00 13                	add    %dl,(%ebx)
	...

00005720 <init>:
    5720:	04 12                	add    $0x12,%al
    5722:	04 41                	add    $0x41,%al
    5724:	1c 42                	sbb    $0x42,%al
    5726:	c0 03 3c             	rolb   $0x3c,(%ebx)
    5729:	f0 ff e6             	lock jmp *%esi
    572c:	82                   	(bad)  
    572d:	4c                   	dec    %esp
    572e:	c0 03 1c             	rolb   $0x1c,(%ebx)
    5731:	42                   	inc    %edx
    5732:	c0 03 3c             	rolb   $0x3c,(%ebx)
    5735:	d0 00                	rolb   (%eax)
    5737:	02 82 4c c0 03 1c    	add    0x1c03c04c(%edx),%al
    573d:	42                   	inc    %edx
    573e:	c0 03 3c             	rolb   $0x3c,(%ebx)
    5741:	d0 c0                	rol    %al
    5743:	00 82 4c c0 03 1c    	add    %al,0x1c03c04c(%edx)
    5749:	42                   	inc    %edx
    574a:	c0 03 3c             	rolb   $0x3c,(%ebx)
    574d:	f0 ef                	lock out %eax,(%dx)
    574f:	ff 82 4c c0 03 1c    	incl   0x1c03c04c(%edx)
    5755:	42                   	inc    %edx
    5756:	c0 03 3c             	rolb   $0x3c,(%ebx)
    5759:	d0 20                	shlb   (%eax)
    575b:	00 82 4c c0 03 1c    	add    %al,0x1c03c04c(%edx)
    5761:	42                   	inc    %edx
    5762:	c0 03 2c             	rolb   $0x2c,(%ebx)
    5765:	d3 82 4c c0 03 b0    	roll   %cl,-0x4ffc3fb4(%edx)
    576b:	12 68 61             	adc    0x61(%eax),%ch
    576e:	5c                   	pop    %esp
    576f:	42                   	inc    %edx
    5770:	04 02                	add    $0x2,%al
    5772:	2c d3                	sub    $0xd3,%al
    5774:	4d                   	dec    %ebp
    5775:	4c                   	dec    %esp
    5776:	c2 4d 04             	ret    $0x44d
    5779:	02 5c 42 04          	add    0x4(%edx,%eax,2),%bl
    577d:	02 2c d2             	add    (%edx,%edx,8),%ch
    5780:	4d                   	dec    %ebp
    5781:	4c                   	dec    %esp
    5782:	c2 4d 04             	ret    $0x44d
    5785:	02 5c 42 04          	add    0x4(%edx,%eax,2),%bl
    5789:	02 1c d3             	add    (%ebx,%edx,8),%bl
    578c:	4d                   	dec    %ebp
    578d:	4c                   	dec    %esp
    578e:	c2 4d 04             	ret    $0x44d
    5791:	02 b0 12 e8 66 32    	add    0x3266e812(%eax),%dh
    5797:	d2 03                	rolb   %cl,(%ebx)
    5799:	43                   	inc    %ebx
    579a:	34 41                	xor    $0x41,%al
    579c:	30 41 00             	xor    %al,0x0(%ecx)
	...

000057a0 <task_init>:
    57a0:	04 12                	add    $0x12,%al
    57a2:	04 41                	add    $0x41,%al
    57a4:	82                   	(bad)  
    57a5:	43                   	inc    %ebx
    57a6:	e8 46 82 43 ea       	call   ea43d9f1 <__high_dataend+0xea42d9ef>
    57ab:	46                   	inc    %esi
    57ac:	82                   	(bad)  
    57ad:	43                   	inc    %ebx
    57ae:	ec                   	in     (%dx),%al
    57af:	46                   	inc    %esi
    57b0:	82                   	(bad)  
    57b1:	43                   	inc    %ebx
    57b2:	ee                   	out    %al,(%dx)
    57b3:	46                   	inc    %esi
    57b4:	82                   	(bad)  
    57b5:	43                   	inc    %ebx
    57b6:	f0 46                	lock inc %esi
    57b8:	92                   	xchg   %eax,%edx
    57b9:	43                   	inc    %ebx
    57ba:	f2 46                	repnz inc %esi
    57bc:	3f                   	aas    
    57bd:	40                   	inc    %eax
    57be:	1a 45 b0             	sbb    -0x50(%ebp),%al
    57c1:	12 58 68             	adc    0x68(%eax),%bl
    57c4:	34 41                	xor    $0x41,%al
    57c6:	30 41 04             	xor    %al,0x4(%ecx)

000057c8 <task_init_dict>:
    57c8:	04 12                	add    $0x12,%al
    57ca:	04 41                	add    $0x41,%al
    57cc:	31 80 0a 00 1c 42    	xor    %eax,0x421c000a(%eax)
    57d2:	ec                   	in     (%dx),%al
    57d3:	46                   	inc    %esi
    57d4:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    57d8:	84 4c f8 ff          	test   %cl,-0x1(%eax,%edi,8)
    57dc:	84 43 fa             	test   %al,-0x6(%ebx)
    57df:	ff 84 43 fc ff 1c 44 	incl   0x441cfffc(%ebx,%eax,2)
    57e6:	fe                   	(bad)  
    57e7:	ff 84 4c f6 ff 3e 40 	incl   0x403efff6(%esp,%ecx,2)
    57ee:	06                   	push   %es
    57ef:	00 0f                	add    %cl,(%edi)
    57f1:	4c                   	dec    %esp
    57f2:	b0 12                	mov    $0x12,%al
    57f4:	b8 6b 1c 44 fc       	mov    $0xfc441c6b,%eax
    57f9:	ff 8f 4c f8 46 1c    	decl   0x1c46f84c(%edi)
    57ff:	44                   	inc    %esp
    5800:	fa                   	cli    
    5801:	ff 8f 4c f6 46 1c    	decl   0x1c46f64c(%edi)
    5807:	44                   	inc    %esp
    5808:	f8                   	clc    
    5809:	ff 8f 4c f4 46 1c    	decl   0x1c46f44c(%edi)
    580f:	44                   	inc    %esp
    5810:	fe                   	(bad)  
    5811:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    5814:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5818:	3c 90                	cmp    $0x90,%al
    581a:	00 01                	add    %al,(%ecx)
    581c:	0d 2c 00 3c 3e       	or     $0x3e3c002c,%eax

00005820 <.LBB3_1>:
    5820:	3e 40                	ds inc %eax
    5822:	ec                   	in     (%dx),%al
    5823:	46                   	inc    %esi
    5824:	0f 44 2f             	cmove  (%edi),%ebp
    5827:	83 2d 43 b0 12 b8 69 	subl   $0x69,0xb812b043
    582e:	3f                   	aas    
    582f:	40                   	inc    %eax
    5830:	1a 45 b0             	sbb    -0x50(%ebp),%al
    5833:	12 58 68             	adc    0x68(%eax),%bl
    5836:	0f 3c                	(bad)  

00005838 <.LBB3_2>:
    5838:	b2 40                	mov    $0x40,%dl
    583a:	00 01                	add    %al,(%ecx)
    583c:	f4                   	hlt    
    583d:	52                   	push   %edx
    583e:	3e 40                	ds inc %eax
    5840:	ec                   	in     (%dx),%al
    5841:	46                   	inc    %esi
    5842:	0f 44 2f             	cmove  (%edi),%ebp
    5845:	83 2d 43 b0 12 b8 69 	subl   $0x69,0xb812b043
    584c:	3f                   	aas    
    584d:	40                   	inc    %eax
    584e:	44                   	inc    %esp
    584f:	45                   	inc    %ebp
    5850:	b0 12                	mov    $0x12,%al
    5852:	58                   	pop    %eax
    5853:	68 00 3c 31 50       	push   $0x50313c00

00005856 <.LBB3_3>:
    5856:	31 50 0a             	xor    %edx,0xa(%eax)
    5859:	00 34 41             	add    %dh,(%ecx,%eax,2)
    585c:	30 41 00             	xor    %al,0x0(%ecx)
	...

00005860 <task_sample>:
    5860:	04 12                	add    $0x12,%al
    5862:	04 41                	add    $0x41,%al
    5864:	21 82 1c 42 f0 46    	and    %eax,0x46f0421c(%edx)
    586a:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    586e:	1c 53                	sbb    $0x53,%al
    5870:	84 4c fc ff          	test   %cl,-0x1(%esp,%edi,8)
    5874:	2c 93                	sub    $0x93,%al
    5876:	04 20                	add    $0x20,%al
    5878:	00 3c 84             	add    %bh,(%esp,%eax,4)

0000587a <.LBB4_1>:
    587a:	84 43 fc             	test   %al,-0x4(%ebx)
    587d:	ff 00                	incl   (%eax)
    587f:	3c 1c                	cmp    $0x1c,%al

00005880 <.LBB4_2>:
    5880:	1c 44                	sbb    $0x44,%al
    5882:	fe                   	(bad)  
    5883:	ff 0c 93             	decl   (%ebx,%edx,4)
    5886:	11 20                	adc    %esp,(%eax)
    5888:	00 3c 1c             	add    %bh,(%esp,%ebx,1)

0000588a <.LBB4_3>:
    588a:	1c 44                	sbb    $0x44,%al
    588c:	fc                   	cld    
    588d:	ff 84 4c fe ff 3e 40 	incl   0x403efffe(%esp,%ecx,2)
    5894:	f0 46                	lock inc %esi
    5896:	0f 44 2f             	cmove  (%edi),%ebp
    5899:	83 2d 43 b0 12 b8 69 	subl   $0x69,0xb812b043
    58a0:	3f                   	aas    
    58a1:	40                   	inc    %eax
    58a2:	6e                   	outsb  %ds:(%esi),(%dx)
    58a3:	45                   	inc    %ebp
    58a4:	b0 12                	mov    $0x12,%al
    58a6:	58                   	pop    %eax
    58a7:	68 10 3c 1c 44       	push   $0x441c3c10

000058aa <.LBB4_4>:
    58aa:	1c 44                	sbb    $0x44,%al
    58ac:	fc                   	cld    
    58ad:	ff 84 4c fe ff 3e 40 	incl   0x403efffe(%esp,%ecx,2)
    58b4:	f0 46                	lock inc %esi
    58b6:	0f 44 2f             	cmove  (%edi),%ebp
    58b9:	83 2d 43 b0 12 b8 69 	subl   $0x69,0xb812b043
    58c0:	3f                   	aas    
    58c1:	40                   	inc    %eax
    58c2:	98                   	cwtl   
    58c3:	45                   	inc    %ebp
    58c4:	b0 12                	mov    $0x12,%al
    58c6:	58                   	pop    %eax
    58c7:	68 00 3c 21 52       	push   $0x52213c00

000058ca <.LBB4_5>:
    58ca:	21 52 34             	and    %edx,0x34(%edx)
    58cd:	41                   	inc    %ecx
    58ce:	30 41 04             	xor    %al,0x4(%ecx)

000058d0 <task_measure_temp>:
    58d0:	04 12                	add    $0x12,%al
    58d2:	04 41                	add    $0x41,%al
    58d4:	31 82 3e 40 ee 46    	xor    %eax,0x46ee403e(%edx)
    58da:	1c 42                	sbb    $0x42,%al
    58dc:	ee                   	out    %al,(%dx)
    58dd:	46                   	inc    %esi
    58de:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    58e2:	84 4c fc ff          	test   %cl,-0x1(%esp,%edi,8)
    58e6:	0f 4c 84 4e f8 ff b0 	cmovl  0x12b0fff8(%esi,%ecx,2),%eax
    58ed:	12 
    58ee:	84 61 84             	test   %ah,-0x7c(%ecx)
    58f1:	4f                   	dec    %edi
    58f2:	fa                   	cli    
    58f3:	ff 84 4f fc ff 84 4f 	incl   0x4f84fffc(%edi,%ecx,2)
    58fa:	fe                   	(bad)  
    58fb:	ff 1c 44             	lcall  *(%esp,%eax,2)
    58fe:	fa                   	cli    
    58ff:	ff 82 4c f6 52 0f    	incl   0xf52f64c(%edx)
    5905:	44                   	inc    %esp
    5906:	2f                   	das    
    5907:	83 2d 43 1e 44 f8 ff 	subl   $0xffffffff,0xf8441e43
    590e:	b0 12                	mov    $0x12,%al
    5910:	b8 69 3f 40 98       	mov    $0x98403f69,%eax
    5915:	45                   	inc    %ebp
    5916:	b0 12                	mov    $0x12,%al
    5918:	58                   	pop    %eax
    5919:	68 31 52 34 41       	push   $0x41345231
    591e:	30 41 04             	xor    %al,0x4(%ecx)

00005920 <task_letterize>:
    5920:	04 12                	add    $0x12,%al
    5922:	04 41                	add    $0x41,%al
    5924:	31 80 10 00 1c 42    	xor    %eax,0x421c0010(%eax)
    592a:	f0 46                	lock inc %esi
    592c:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5930:	0c 93                	or     $0x93,%al
    5932:	04 20                	add    $0x20,%al
    5934:	00 3c a4             	add    %bh,(%esp,%eiz,4)

00005936 <.LBB6_1>:
    5936:	a4                   	movsb  %ds:(%esi),%es:(%edi)
    5937:	43                   	inc    %ebx
    5938:	fe                   	(bad)  
    5939:	ff 06                	incl   (%esi)
    593b:	3c 1c                	cmp    $0x1c,%al

0000593c <.LBB6_2>:
    593c:	1c 44                	sbb    $0x44,%al
    593e:	fe                   	(bad)  
    593f:	ff                   	(bad)  
    5940:	3c 53                	cmp    $0x53,%al
    5942:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5946:	00 3c 1c             	add    %bh,(%esp,%ebx,1)

00005948 <.LBB6_3>:
    5948:	1c 44                	sbb    $0x44,%al
    594a:	fe                   	(bad)  
    594b:	ff 0c 5c             	decl   (%esp,%ebx,2)
    594e:	0c 5c                	or     $0x5c,%al
    5950:	0c 5c                	or     $0x5c,%al
    5952:	84 4c fc ff          	test   %cl,-0x1(%esp,%edi,8)
    5956:	1c 42                	sbb    $0x42,%al
    5958:	f6 52 5d             	notb   0x5d(%edx)
    595b:	44                   	inc    %esp
    595c:	fc                   	cld    
    595d:	ff                   	(bad)  
    595e:	3e 40                	ds inc %eax
    5960:	ff 00                	incl   (%eax)
    5962:	4d                   	dec    %ebp
    5963:	93                   	xchg   %eax,%ebx
    5964:	4f                   	dec    %edi
    5965:	4d                   	dec    %ebp
    5966:	84 4c f8 ff          	test   %cl,-0x1(%eax,%edi,8)
    596a:	c4 4d f7             	les    -0x9(%ebp),%ecx
    596d:	ff 84 4e f4 ff c4 4f 	incl   0x4fc4fff4(%esi,%ecx,2)
    5974:	f3 ff 0b             	repz decl (%ebx)
    5977:	24 5c                	and    $0x5c,%al

00005978 <.LBB6_4>:
    5978:	5c                   	pop    %esp
    5979:	44                   	inc    %esp
    597a:	f3 ff 1d 44 f4 ff 0d 	repz lcall *0xdfff444
    5981:	5d                   	pop    %ebp
    5982:	5c                   	pop    %esp
    5983:	83 84 4d f4 ff c4 4c 	addl   $0xfffffff3,0x4cc4fff4(%ebp,%ecx,2)
    598a:	f3 
    598b:	ff f5                	push   %ebp
    598d:	23 1c 44             	and    (%esp,%eax,2),%ebx

0000598e <.LBB6_5>:
    598e:	1c 44                	sbb    $0x44,%al
    5990:	f4                   	hlt    
    5991:	ff 1d 44 f8 ff 0d    	lcall  *0xdfff844
    5997:	fc                   	cld    
    5998:	5e                   	pop    %esi
    5999:	44                   	inc    %esp
    599a:	f7 ff                	idiv   %edi
    599c:	4e                   	dec    %esi
    599d:	93                   	xchg   %eax,%ebx
    599e:	c4 4e f2             	les    -0xe(%esi),%ecx
    59a1:	ff 84 4d f0 ff 0c 24 	incl   0x240cfff0(%ebp,%ecx,2)

000059a8 <.LBB6_6>:
    59a8:	5c                   	pop    %esp
    59a9:	44                   	inc    %esp
    59aa:	f2 ff 1d 44 f0 ff 12 	repnz lcall *0x12fff044
    59b1:	c3                   	ret    
    59b2:	0d 10 5c 83 84       	or     $0x84835c10,%eax
    59b7:	4d                   	dec    %ebp
    59b8:	f0 ff c4             	lock inc %esp
    59bb:	4c                   	dec    %esp
    59bc:	f2 ff f4             	repnz push %esp
    59bf:	23 1c 44             	and    (%esp,%eax,2),%ebx

000059c0 <.LBB6_7>:
    59c0:	1c 44                	sbb    $0x44,%al
    59c2:	f0 ff 84 4c fa ff 82 	lock incl 0x4c82fffa(%esp,%ecx,2)
    59c9:	4c 
    59ca:	ec                   	in     (%dx),%al
    59cb:	46                   	inc    %esi
    59cc:	3f                   	aas    
    59cd:	40                   	inc    %eax
    59ce:	c2 45 b0             	ret    $0xb045
    59d1:	12 58 68             	adc    0x68(%eax),%bl
    59d4:	31 50 10             	xor    %edx,0x10(%eax)
    59d7:	00 34 41             	add    %dh,(%ecx,%eax,2)
    59da:	30 41 04             	xor    %al,0x4(%ecx)

000059dc <task_compress>:
    59dc:	04 12                	add    $0x12,%al
    59de:	04 41                	add    $0x41,%al
    59e0:	31 80 0c 00 3e 40    	xor    %eax,0x403e000c(%eax)
    59e6:	f2 46                	repnz inc %esi
    59e8:	1c 42                	sbb    $0x42,%al
    59ea:	f2 46                	repnz inc %esi
    59ec:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    59f0:	1c 42                	sbb    $0x42,%al
    59f2:	e8 46 84 4c f6       	call   f64cde3d <__high_dataend+0xf64bde3b>
    59f7:	ff                   	(bad)  
    59f8:	3d 40 06 00 0f       	cmp    $0xf000640,%eax
    59fd:	4c                   	dec    %esp
    59fe:	84 4e f4             	test   %cl,-0xc(%esi)
    5a01:	ff 0e                	decl   (%esi)
    5a03:	4d                   	dec    %ebp
    5a04:	b0 12                	mov    $0x12,%al
    5a06:	b8 6b 1c 4f f8       	mov    $0xf84f1c6b,%eax
    5a0b:	46                   	inc    %esi
    5a0c:	84 4c fc ff          	test   %cl,-0x1(%esp,%edi,8)
    5a10:	1c 4f                	sbb    $0x4f,%al
    5a12:	f6 46 84 4c          	testb  $0x4c,-0x7c(%esi)
    5a16:	fa                   	cli    
    5a17:	ff 1c 4f             	lcall  *(%edi,%ecx,2)
    5a1a:	f4                   	hlt    
    5a1b:	46                   	inc    %esi
    5a1c:	84 4c f8 ff          	test   %cl,-0x1(%eax,%edi,8)
    5a20:	1c 44                	sbb    $0x44,%al
    5a22:	fc                   	cld    
    5a23:	ff 82 4c f8 52 1c    	incl   0x1c52f84c(%edx)
    5a29:	44                   	inc    %esp
    5a2a:	fc                   	cld    
    5a2b:	ff 82 4c fe 52 1c    	incl   0x1c52fe4c(%edx)
    5a31:	44                   	inc    %esp
    5a32:	fa                   	cli    
    5a33:	ff 82 4c fc 52 1c    	incl   0x1c52fc4c(%edx)
    5a39:	44                   	inc    %esp
    5a3a:	f8                   	clc    
    5a3b:	ff 82 4c fa 52 1c    	incl   0x1c52fa4c(%edx)
    5a41:	44                   	inc    %esp
    5a42:	f6 ff                	idiv   %bh
    5a44:	82                   	(bad)  
    5a45:	4c                   	dec    %esp
    5a46:	00 53 1c             	add    %dl,0x1c(%ebx)
    5a49:	44                   	inc    %esp
    5a4a:	fc                   	cld    
    5a4b:	ff 82 4c 02 53 1c    	incl   0x1c53024c(%edx)
    5a51:	44                   	inc    %esp
    5a52:	fe                   	(bad)  
    5a53:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    5a56:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5a5a:	0f 44 2f             	cmove  (%edi),%ebp
    5a5d:	83 2d 43 1e 44 f4 ff 	subl   $0xffffffff,0xf4441e43
    5a64:	b0 12                	mov    $0x12,%al
    5a66:	b8 69 3f 40 ec       	mov    $0xec403f69,%eax
    5a6b:	45                   	inc    %ebp
    5a6c:	b0 12                	mov    $0x12,%al
    5a6e:	58                   	pop    %eax
    5a6f:	68 31 50 0c 00       	push   $0xc5031
    5a74:	34 41                	xor    $0x41,%al
    5a76:	30 41 04             	xor    %al,0x4(%ecx)

00005a78 <task_find_sibling>:
    5a78:	04 12                	add    $0x12,%al
    5a7a:	04 41                	add    $0x41,%al
    5a7c:	31 82 1c 42 f8 52    	xor    %eax,0x52f8421c(%edx)
    5a82:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5a86:	0c 93                	or     $0x93,%al
    5a88:	41                   	inc    %ecx
    5a89:	24 00                	and    $0x0,%al
    5a8b:	3c 1c                	cmp    $0x1c,%al

00005a8c <.LBB8_1>:
    5a8c:	1c 44                	sbb    $0x44,%al
    5a8e:	fe                   	(bad)  
    5a8f:	ff 84 4c fa ff 3e 40 	incl   0x403efffa(%esp,%ecx,2)
    5a96:	06                   	push   %es
    5a97:	00 0f                	add    %cl,(%edi)
    5a99:	4c                   	dec    %esp
    5a9a:	b0 12                	mov    $0x12,%al
    5a9c:	b8 6b 0c 4f 3c       	mov    $0x3c4f0c6b,%eax
    5aa1:	50                   	push   %eax
    5aa2:	f4                   	hlt    
    5aa3:	46                   	inc    %esi
    5aa4:	84 4c fc ff          	test   %cl,-0x1(%esp,%edi,8)
    5aa8:	1c 4f                	sbb    $0x4f,%al
    5aaa:	f4                   	hlt    
    5aab:	46                   	inc    %esi
    5aac:	1e                   	push   %ds
    5aad:	42                   	inc    %edx
    5aae:	ec                   	in     (%dx),%al
    5aaf:	46                   	inc    %esi
    5ab0:	0c 9e                	or     $0x9e,%al
    5ab2:	11 20                	adc    %esp,(%eax)
    5ab4:	00 3c 1c             	add    %bh,(%esp,%ebx,1)

00005ab6 <.LBB8_2>:
    5ab6:	1c 44                	sbb    $0x44,%al
    5ab8:	fe                   	(bad)  
    5ab9:	ff 82 4c e8 46 3e    	incl   0x3e46e84c(%edx)
    5abf:	40                   	inc    %eax
    5ac0:	f8                   	clc    
    5ac1:	52                   	push   %edx
    5ac2:	0f 44 2f             	cmove  (%edi),%ebp
    5ac5:	83 2d 43 b0 12 b8 69 	subl   $0x69,0xb812b043
    5acc:	3f                   	aas    
    5acd:	40                   	inc    %eax
    5ace:	98                   	cwtl   
    5acf:	45                   	inc    %ebp
    5ad0:	b0 12                	mov    $0x12,%al
    5ad2:	58                   	pop    %eax
    5ad3:	68 1a 3c 1c 44       	push   $0x441c3c1a

00005ad6 <.LBB8_3>:
    5ad6:	1c 44                	sbb    $0x44,%al
    5ad8:	fc                   	cld    
    5ad9:	ff 1c 4c             	lcall  *(%esp,%ecx,2)
    5adc:	02 00                	add    (%eax),%al
    5ade:	0c 93                	or     $0x93,%al
    5ae0:	13 24 00             	adc    (%eax,%eax,1),%esp
    5ae3:	3c 1c                	cmp    $0x1c,%al

00005ae4 <.LBB8_4>:
    5ae4:	1c 44                	sbb    $0x44,%al
    5ae6:	fc                   	cld    
    5ae7:	ff 1c 4c             	lcall  *(%esp,%ecx,2)
    5aea:	02 00                	add    (%eax),%al
    5aec:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5af0:	3e 40                	ds inc %eax
    5af2:	f8                   	clc    
    5af3:	52                   	push   %edx
    5af4:	0f 44 2f             	cmove  (%edi),%ebp
    5af7:	83 2d 43 b0 12 b8 69 	subl   $0x69,0xb812b043
    5afe:	3f                   	aas    
    5aff:	40                   	inc    %eax
    5b00:	ec                   	in     (%dx),%al
    5b01:	45                   	inc    %ebp
    5b02:	b0 12                	mov    $0x12,%al
    5b04:	58                   	pop    %eax
    5b05:	68 00 3c 00 3c       	push   $0x3c003c00

00005b08 <.LBB8_5>:
    5b08:	00 3c 00             	add    %bh,(%eax,%eax,1)

00005b0a <.LBB8_6>:
    5b0a:	00 3c 1c             	add    %bh,(%esp,%ebx,1)

00005b0c <.LBB8_7>:
    5b0c:	1c 42                	sbb    $0x42,%al
    5b0e:	ec                   	in     (%dx),%al
    5b0f:	46                   	inc    %esi
    5b10:	84 4c f8 ff          	test   %cl,-0x1(%eax,%edi,8)
    5b14:	82                   	(bad)  
    5b15:	4c                   	dec    %esp
    5b16:	e8 46 1c 42 02       	call   2427761 <__high_dataend+0x241775f>
    5b1b:	53                   	push   %ebx
    5b1c:	0c 93                	or     $0x93,%al
    5b1e:	0d 20 00 3c 3e       	or     $0x3e3c0020,%eax

00005b22 <.LBB8_8>:
    5b22:	3e 40                	ds inc %eax
    5b24:	f8                   	clc    
    5b25:	52                   	push   %edx
    5b26:	0f 44 2f             	cmove  (%edi),%ebp
    5b29:	83 2d 43 b0 12 b8 69 	subl   $0x69,0xb812b043
    5b30:	3f                   	aas    
    5b31:	40                   	inc    %eax
    5b32:	40                   	inc    %eax
    5b33:	46                   	inc    %esi
    5b34:	b0 12                	mov    $0x12,%al
    5b36:	58                   	pop    %eax
    5b37:	68 0c 3c 3e 40       	push   $0x403e3c0c

00005b3a <.LBB8_9>:
    5b3a:	3e 40                	ds inc %eax
    5b3c:	f8                   	clc    
    5b3d:	52                   	push   %edx
    5b3e:	0f 44 2f             	cmove  (%edi),%ebp
    5b41:	83 2d 43 b0 12 b8 69 	subl   $0x69,0xb812b043
    5b48:	3f                   	aas    
    5b49:	40                   	inc    %eax
    5b4a:	16                   	push   %ss
    5b4b:	46                   	inc    %esi
    5b4c:	b0 12                	mov    $0x12,%al
    5b4e:	58                   	pop    %eax
    5b4f:	68 00 3c 31 52       	push   $0x52313c00

00005b52 <.LBB8_10>:
    5b52:	31 52 34             	xor    %edx,0x34(%edx)
    5b55:	41                   	inc    %ecx
    5b56:	30 41 04             	xor    %al,0x4(%ecx)

00005b58 <task_add_node>:
    5b58:	04 12                	add    $0x12,%al
    5b5a:	04 41                	add    $0x41,%al
    5b5c:	31 80 0e 00 1c 42    	xor    %eax,0x421c000e(%eax)
    5b62:	f8                   	clc    
    5b63:	52                   	push   %edx
    5b64:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5b68:	84 4c fa ff          	test   %cl,-0x1(%edx,%edi,8)
    5b6c:	3e 40                	ds inc %eax
    5b6e:	06                   	push   %es
    5b6f:	00 0f                	add    %cl,(%edi)
    5b71:	4c                   	dec    %esp
    5b72:	b0 12                	mov    $0x12,%al
    5b74:	b8 6b 0c 4f 3c       	mov    $0x3c4f0c6b,%eax
    5b79:	50                   	push   %eax
    5b7a:	f4                   	hlt    
    5b7b:	46                   	inc    %esi
    5b7c:	84 4c fc ff          	test   %cl,-0x1(%esp,%edi,8)
    5b80:	1c 4f                	sbb    $0x4f,%al
    5b82:	f6 46 0c 93          	testb  $0x93,0xc(%esi)
    5b86:	15 24 00 3c 1c       	adc    $0x1c3c0024,%eax

00005b8a <.LBB9_1>:
    5b8a:	1c 44                	sbb    $0x44,%al
    5b8c:	fc                   	cld    
    5b8d:	ff 1c 4c             	lcall  *(%esp,%ecx,2)
    5b90:	02 00                	add    (%eax),%al
    5b92:	84 4c f8 ff          	test   %cl,-0x1(%eax,%edi,8)
    5b96:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5b9a:	3e 40                	ds inc %eax
    5b9c:	f8                   	clc    
    5b9d:	52                   	push   %edx
    5b9e:	0f 44 2f             	cmove  (%edi),%ebp
    5ba1:	83 2d 43 b0 12 b8 69 	subl   $0x69,0xb812b043
    5ba8:	3f                   	aas    
    5ba9:	40                   	inc    %eax
    5baa:	16                   	push   %ss
    5bab:	46                   	inc    %esi
    5bac:	b0 12                	mov    $0x12,%al
    5bae:	58                   	pop    %eax
    5baf:	68 25 3c 1c 44       	push   $0x441c3c25

00005bb2 <.LBB9_2>:
    5bb2:	1c 44                	sbb    $0x44,%al
    5bb4:	fc                   	cld    
    5bb5:	ff 1d 4c 04 00 84    	lcall  *0x8400044c
    5bbb:	4d                   	dec    %ebp
    5bbc:	f6 ff                	idiv   %bh
    5bbe:	1d 4c 02 00 84       	sbb    $0x8400024c,%eax
    5bc3:	4d                   	dec    %ebp
    5bc4:	f4                   	hlt    
    5bc5:	ff 2c 4c             	ljmp   *(%esp,%ecx,2)
    5bc8:	84 4c f2 ff          	test   %cl,-0x1(%edx,%esi,8)
    5bcc:	1c 44                	sbb    $0x44,%al
    5bce:	f6 ff                	idiv   %bh
    5bd0:	82                   	(bad)  
    5bd1:	4c                   	dec    %esp
    5bd2:	08 53 1c             	or     %dl,0x1c(%ebx)
    5bd5:	44                   	inc    %esp
    5bd6:	f4                   	hlt    
    5bd7:	ff 82 4c 06 53 1c    	incl   0x1c53064c(%edx)
    5bdd:	44                   	inc    %esp
    5bde:	f2 ff 82 4c 04 53 3e 	repnz incl 0x3e53044c(%edx)
    5be5:	40                   	inc    %eax
    5be6:	f8                   	clc    
    5be7:	52                   	push   %edx
    5be8:	0f 44 2f             	cmove  (%edi),%ebp
    5beb:	83 2d 43 b0 12 b8 69 	subl   $0x69,0xb812b043
    5bf2:	3f                   	aas    
    5bf3:	40                   	inc    %eax
    5bf4:	40                   	inc    %eax
    5bf5:	46                   	inc    %esi
    5bf6:	b0 12                	mov    $0x12,%al
    5bf8:	58                   	pop    %eax
    5bf9:	68 00 3c 31 50       	push   $0x50313c00

00005bfc <.LBB9_3>:
    5bfc:	31 50 0e             	xor    %edx,0xe(%eax)
    5bff:	00 34 41             	add    %dh,(%ecx,%eax,2)
    5c02:	30 41 04             	xor    %al,0x4(%ecx)

00005c04 <task_add_insert>:
    5c04:	04 12                	add    $0x12,%al
    5c06:	04 41                	add    $0x41,%al
    5c08:	31 80 1a 00 1c 42    	xor    %eax,0x421c001a(%eax)
    5c0e:	f4                   	hlt    
    5c0f:	52                   	push   %edx
    5c10:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5c14:	3c 90                	cmp    $0x90,%al
    5c16:	00 02                	add    %al,(%edx)
    5c18:	03 20                	add    (%eax),%esp
    5c1a:	00 3c 00             	add    %bh,(%eax,%eax,1)

00005c1c <.LBB10_1>:
    5c1c:	00 3c ff             	add    %bh,(%edi,%edi,8)

00005c1e <.LBB10_2>:
    5c1e:	ff                   	(bad)  
    5c1f:	3f                   	aas    

00005c20 <.LBB10_3>:
    5c20:	1c 44                	sbb    $0x44,%al
    5c22:	fe                   	(bad)  
    5c23:	ff 84 4c fc ff 1c 42 	incl   0x421cfffc(%esp,%ecx,2)
    5c2a:	ec                   	in     (%dx),%al
    5c2b:	46                   	inc    %esi
    5c2c:	84 4c f6 ff          	test   %cl,-0x1(%esi,%esi,8)
    5c30:	84 43 f8             	test   %al,-0x8(%ebx)
    5c33:	ff 84 43 fa ff 1c 42 	incl   0x421cfffa(%ebx,%eax,2)
    5c3a:	fe                   	(bad)  
    5c3b:	52                   	push   %edx
    5c3c:	0c 93                	or     $0x93,%al
    5c3e:	27                   	daa    
    5c3f:	20 00                	and    %al,(%eax)
    5c41:	3c 1c                	cmp    $0x1c,%al

00005c42 <.LBB10_4>:
    5c42:	1c 42                	sbb    $0x42,%al
    5c44:	fe                   	(bad)  
    5c45:	52                   	push   %edx
    5c46:	84 4c f4 ff          	test   %cl,-0x1(%esp,%esi,8)
    5c4a:	1c 42                	sbb    $0x42,%al
    5c4c:	fc                   	cld    
    5c4d:	52                   	push   %edx
    5c4e:	84 4c f2 ff          	test   %cl,-0x1(%edx,%esi,8)
    5c52:	1c 42                	sbb    $0x42,%al
    5c54:	fa                   	cli    
    5c55:	52                   	push   %edx
    5c56:	84 4c f0 ff          	test   %cl,-0x1(%eax,%esi,8)
    5c5a:	1c 44                	sbb    $0x44,%al
    5c5c:	fc                   	cld    
    5c5d:	ff 84 4c f4 ff 1c 42 	incl   0x421cfff4(%esp,%ecx,2)
    5c64:	00 53 84             	add    %dl,-0x7c(%ebx)
    5c67:	4c                   	dec    %esp
    5c68:	ee                   	out    %al,(%dx)
    5c69:	ff                   	(bad)  
    5c6a:	3e 40                	ds inc %eax
    5c6c:	06                   	push   %es
    5c6d:	00 0f                	add    %cl,(%edi)
    5c6f:	4c                   	dec    %esp
    5c70:	b0 12                	mov    $0x12,%al
    5c72:	b8 6b 1c 44 f4       	mov    $0xf4441c6b,%eax
    5c77:	ff 8f 4c f8 46 1c    	decl   0x1c46f84c(%edi)
    5c7d:	44                   	inc    %esp
    5c7e:	f2 ff 8f 4c f6 46 1c 	repnz decl 0x1c46f64c(%edi)
    5c85:	44                   	inc    %esp
    5c86:	f0 ff 8f 4c f4 46 27 	lock decl 0x2746f44c(%edi)
    5c8d:	3c 1c                	cmp    $0x1c,%al

00005c8e <.LBB10_5>:
    5c8e:	1c 42                	sbb    $0x42,%al
    5c90:	f8                   	clc    
    5c91:	52                   	push   %edx
    5c92:	84 4c ec ff          	test   %cl,-0x1(%esp,%ebp,8)
    5c96:	1c 42                	sbb    $0x42,%al
    5c98:	08 53 84             	or     %dl,-0x7c(%ebx)
    5c9b:	4c                   	dec    %esp
    5c9c:	ea ff 1c 42 06 53 84 	ljmp   $0x8453,$0x6421cff
    5ca3:	4c                   	dec    %esp
    5ca4:	e8 ff 1c 42 04       	call   44279a8 <__high_dataend+0x44179a6>
    5ca9:	53                   	push   %ebx
    5caa:	84 4c e6 ff          	test   %cl,-0x1(%esi,%eiz,8)
    5cae:	1c 44                	sbb    $0x44,%al
    5cb0:	fc                   	cld    
    5cb1:	ff 84 4c e8 ff 1f 44 	incl   0x441fffe8(%esp,%ecx,2)
    5cb8:	ec                   	in     (%dx),%al
    5cb9:	ff                   	(bad)  
    5cba:	3e 40                	ds inc %eax
    5cbc:	06                   	push   %es
    5cbd:	00 b0 12 b8 6b 1c    	add    %dh,0x1c6bb812(%eax)
    5cc3:	44                   	inc    %esp
    5cc4:	ea ff 8f 4c f8 46 1c 	ljmp   $0x1c46,$0xf84c8fff
    5ccb:	44                   	inc    %esp
    5ccc:	e8 ff 8f 4c f6       	call   f64cecd0 <__high_dataend+0xf64becce>
    5cd1:	46                   	inc    %esi
    5cd2:	1c 44                	sbb    $0x44,%al
    5cd4:	e6 ff                	out    %al,$0xff
    5cd6:	8f                   	(bad)  
    5cd7:	4c                   	dec    %esp
    5cd8:	f4                   	hlt    
    5cd9:	46                   	inc    %esi
    5cda:	00 3c 1f             	add    %bh,(%edi,%ebx,1)

00005cdc <.LBB10_6>:
    5cdc:	1f                   	pop    %ds
    5cdd:	44                   	inc    %esp
    5cde:	fc                   	cld    
    5cdf:	ff                   	(bad)  
    5ce0:	3e 40                	ds inc %eax
    5ce2:	06                   	push   %es
    5ce3:	00 b0 12 b8 6b 1e    	add    %dh,0x1e6bb812(%eax)
    5ce9:	44                   	inc    %esp
    5cea:	fa                   	cli    
    5ceb:	ff 8f 4e f8 46 1e    	decl   0x1e46f84e(%edi)
    5cf1:	44                   	inc    %esp
    5cf2:	f8                   	clc    
    5cf3:	ff 8f 4e f6 46 1e    	decl   0x1e46f64e(%edi)
    5cf9:	44                   	inc    %esp
    5cfa:	f6 ff                	idiv   %bh
    5cfc:	8f                   	(bad)  
    5cfd:	4e                   	dec    %esi
    5cfe:	f4                   	hlt    
    5cff:	46                   	inc    %esi
    5d00:	1e                   	push   %ds
    5d01:	42                   	inc    %edx
    5d02:	00 53 82             	add    %dl,-0x7e(%ebx)
    5d05:	4e                   	dec    %esi
    5d06:	0a 53 1e             	or     0x1e(%ebx),%dl
    5d09:	44                   	inc    %esp
    5d0a:	fe                   	(bad)  
    5d0b:	ff 1e                	lcall  *(%esi)
    5d0d:	53                   	push   %ebx
    5d0e:	84 4e fe             	test   %cl,-0x2(%esi)
    5d11:	ff                   	(bad)  
    5d12:	3e 40                	ds inc %eax
    5d14:	f4                   	hlt    
    5d15:	52                   	push   %edx
    5d16:	0f 44 2f             	cmove  (%edi),%ebp
    5d19:	83 2d 43 b0 12 b8 69 	subl   $0x69,0xb812b043
    5d20:	3f                   	aas    
    5d21:	40                   	inc    %eax
    5d22:	6a 46                	push   $0x46
    5d24:	b0 12                	mov    $0x12,%al
    5d26:	58                   	pop    %eax
    5d27:	68 31 50 1a 00       	push   $0x1a5031
    5d2c:	34 41                	xor    $0x41,%al
    5d2e:	30 41 04             	xor    %al,0x4(%ecx)

00005d30 <task_append_compressed>:
    5d30:	04 12                	add    $0x12,%al
    5d32:	04 41                	add    $0x41,%al
    5d34:	31 80 06 00 1c 42    	xor    %eax,0x421c0006(%eax)
    5d3a:	ea 46 84 4c fe ff 84 	ljmp   $0x84ff,$0xfe4c8446
    5d41:	4c                   	dec    %esp
    5d42:	fc                   	cld    
    5d43:	ff 1d 42 0a 53 3e    	lcall  *0x3e530a42
    5d49:	40                   	inc    %eax
    5d4a:	06                   	push   %es
    5d4b:	00 0f                	add    %cl,(%edi)
    5d4d:	4c                   	dec    %esp
    5d4e:	84 4d fa             	test   %cl,-0x6(%ebp)
    5d51:	ff b0 12 b8 6b 1c    	pushl  0x1c6bb812(%eax)
    5d57:	44                   	inc    %esp
    5d58:	fa                   	cli    
    5d59:	ff 8f 4c 0c 53 1c    	decl   0x1c530c4c(%edi)
    5d5f:	44                   	inc    %esp
    5d60:	fe                   	(bad)  
    5d61:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    5d64:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5d68:	3c 90                	cmp    $0x90,%al
    5d6a:	40                   	inc    %eax
    5d6b:	00 0d 20 00 3c 3e    	add    %cl,0x3e3c0020

00005d70 <.LBB11_1>:
    5d70:	3e 40                	ds inc %eax
    5d72:	ea 46 0f 44 2f 83 2d 	ljmp   $0x2d83,$0x2f440f46
    5d79:	43                   	inc    %ebx
    5d7a:	b0 12                	mov    $0x12,%al
    5d7c:	b8 69 3f 40 94       	mov    $0x94403f69,%eax
    5d81:	46                   	inc    %esi
    5d82:	b0 12                	mov    $0x12,%al
    5d84:	58                   	pop    %eax
    5d85:	68 0c 3c 3e 40       	push   $0x403e3c0c

00005d88 <.LBB11_2>:
    5d88:	3e 40                	ds inc %eax
    5d8a:	ea 46 0f 44 2f 83 2d 	ljmp   $0x2d83,$0x2f440f46
    5d91:	43                   	inc    %ebx
    5d92:	b0 12                	mov    $0x12,%al
    5d94:	b8 69 3f 40 44       	mov    $0x44403f69,%eax
    5d99:	45                   	inc    %ebp
    5d9a:	b0 12                	mov    $0x12,%al
    5d9c:	58                   	pop    %eax
    5d9d:	68 00 3c 31 50       	push   $0x50313c00

00005da0 <.LBB11_3>:
    5da0:	31 50 06             	xor    %edx,0x6(%eax)
    5da3:	00 34 41             	add    %dh,(%ecx,%eax,2)
    5da6:	30 41 04             	xor    %al,0x4(%ecx)

00005da8 <task_print>:
    5da8:	04 12                	add    $0x12,%al
    5daa:	04 41                	add    $0x41,%al
    5dac:	31 80 14 00 0c 41    	xor    %eax,0x410c0014(%eax)
    5db2:	bc 40 00 44 00       	mov    $0x440040,%esp
    5db7:	00 b0 12 84 62 84    	add    %dh,-0x7b9d7bee(%eax)
    5dbd:	43                   	inc    %ebx
    5dbe:	fe                   	(bad)  
    5dbf:	ff 84 4f fa ff 00 3c 	incl   0x3c00fffa(%edi,%ecx,2)

00005dc6 <.LBB12_1>:
    5dc6:	1c 44                	sbb    $0x44,%al
    5dc8:	fe                   	(bad)  
    5dc9:	ff                   	(bad)  
    5dca:	3c 90                	cmp    $0x90,%al
    5dcc:	40                   	inc    %eax
    5dcd:	00 31                	add    %dh,(%ecx)
    5dcf:	2c 00                	sub    $0x0,%al
    5dd1:	3c 1f                	cmp    $0x1f,%al

00005dd2 <.LBB12_2>:
    5dd2:	1f                   	pop    %ds
    5dd3:	44                   	inc    %esp
    5dd4:	fe                   	(bad)  
    5dd5:	ff                   	(bad)  
    5dd6:	3e 40                	ds inc %eax
    5dd8:	06                   	push   %es
    5dd9:	00 b0 12 b8 6b 1e    	add    %dh,0x1e6bb812(%eax)
    5ddf:	4f                   	dec    %edi
    5de0:	0c 53                	or     $0x53,%al
    5de2:	84 4e fc             	test   %cl,-0x4(%esi)
    5de5:	ff 0f                	decl   (%edi)
    5de7:	41                   	inc    %ecx
    5de8:	8f                   	(bad)  
    5de9:	4e                   	dec    %esi
    5dea:	02 00                	add    (%eax),%al
    5dec:	bf 40 14 44 00       	mov    $0x441440,%edi
    5df1:	00 b0 12 84 62 1e    	add    %dh,0x1e628412(%eax)
    5df7:	44                   	inc    %esp
    5df8:	fe                   	(bad)  
    5df9:	ff 0e                	decl   (%esi)
    5dfb:	93                   	xchg   %eax,%ebx
    5dfc:	84 4f f8             	test   %cl,-0x8(%edi)
    5dff:	ff 11                	call   *(%ecx)
    5e01:	24 00                	and    $0x0,%al
    5e03:	3c 1c                	cmp    $0x1c,%al

00005e04 <.LBB12_3>:
    5e04:	1c 44                	sbb    $0x44,%al
    5e06:	fe                   	(bad)  
    5e07:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    5e0a:	3c b0                	cmp    $0xb0,%al
    5e0c:	07                   	pop    %es
    5e0d:	00 0a                	add    %cl,(%edx)
    5e0f:	20 00                	and    %al,(%eax)
    5e11:	3c 0c                	cmp    $0xc,%al

00005e12 <.LBB12_4>:
    5e12:	0c 41                	or     $0x41,%al
    5e14:	bc 40 11 44 00       	mov    $0x441140,%esp
    5e19:	00 b0 12 84 62 84    	add    %dh,-0x7b9d7bee(%eax)
    5e1f:	4f                   	dec    %edi
    5e20:	f6 ff                	idiv   %bh
    5e22:	00 3c 00             	add    %bh,(%eax,%eax,1)

00005e24 <.LBB12_5>:
    5e24:	00 3c 1c             	add    %bh,(%esp,%ebx,1)

00005e26 <.LBB12_6>:
    5e26:	1c 44                	sbb    $0x44,%al
    5e28:	fe                   	(bad)  
    5e29:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    5e2c:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5e30:	ca 3f 0c             	lret   $0xc3f

00005e32 <.LBB12_7>:
    5e32:	0c 41                	or     $0x41,%al
    5e34:	bc 40 11 44 00       	mov    $0x441140,%esp
    5e39:	00 b0 12 84 62 1c    	add    %dh,0x1c628412(%eax)
    5e3f:	42                   	inc    %edx
    5e40:	f2 46                	repnz inc %esi
    5e42:	0d 41 8d 4c 02       	or     $0x24c8d41,%eax
    5e47:	00 bd 40 40 00 04    	add    %bh,0x4004040(%ebp)
    5e4d:	00 bd 40 1a 44 00    	add    %bh,0x441a40(%ebp)
    5e53:	00 84 4f f4 ff b0 12 	add    %al,0x12b0fff4(%edi,%ecx,2)
    5e5a:	84 62 3c             	test   %ah,0x3c(%edx)
    5e5d:	40                   	inc    %eax
    5e5e:	be 46 84 4f f2       	mov    $0xf24f8446,%esi
    5e63:	ff 0f                	decl   (%edi)
    5e65:	4c                   	dec    %esp
    5e66:	b0 12                	mov    $0x12,%al
    5e68:	58                   	pop    %eax
    5e69:	68 31 50 14 00       	push   $0x145031
    5e6e:	34 41                	xor    $0x41,%al
    5e70:	30 41 00             	xor    %al,0x0(%ecx)
	...

00005e74 <task_done>:
    5e74:	04 12                	add    $0x12,%al
    5e76:	04 41                	add    $0x41,%al
    5e78:	31 80 32 00 84 43    	xor    %eax,0x43840032(%eax)
    5e7e:	fe                   	(bad)  
    5e7f:	ff 0c 41             	decl   (%ecx,%eax,2)
    5e82:	bc 40 2a 00 04       	mov    $0x4002a40,%esp
    5e87:	00 9c 43 02 00 bc 40 	add    %bl,0x40bc0002(%ebx,%eax,2)
    5e8e:	37                   	aaa    
    5e8f:	44                   	inc    %esp
    5e90:	00 00                	add    %al,(%eax)
    5e92:	b0 12                	mov    $0x12,%al
    5e94:	84 62 1c             	test   %ah,0x1c(%edx)
    5e97:	44                   	inc    %esp
    5e98:	fe                   	(bad)  
    5e99:	ff                   	(bad)  
    5e9a:	3c 50                	cmp    $0x50,%al
    5e9c:	f8                   	clc    
    5e9d:	01 84 4c fe ff 0c 41 	add    %eax,0x410cfffe(%esp,%ecx,2)
    5ea4:	ac                   	lods   %ds:(%esi),%al
    5ea5:	43                   	inc    %ebx
    5ea6:	04 00                	add    $0x0,%al
    5ea8:	9c                   	pushf  
    5ea9:	43                   	inc    %ebx
    5eaa:	02 00                	add    (%eax),%al
    5eac:	bc 40 4d 44 00       	mov    $0x444d40,%esp
    5eb1:	00 84 4f fa ff b0 12 	add    %al,0x12b0fffa(%edi,%ecx,2)
    5eb8:	84 62 1c             	test   %ah,0x1c(%edx)
    5ebb:	44                   	inc    %esp
    5ebc:	fe                   	(bad)  
    5ebd:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    5ec0:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5ec4:	0c 41                	or     $0x41,%al
    5ec6:	ac                   	lods   %ds:(%esi),%al
    5ec7:	43                   	inc    %ebx
    5ec8:	04 00                	add    $0x0,%al
    5eca:	ac                   	lods   %ds:(%esi),%al
    5ecb:	43                   	inc    %ebx
    5ecc:	02 00                	add    (%eax),%al
    5ece:	bc 40 4d 44 00       	mov    $0x444d40,%esp
    5ed3:	00 84 4f f8 ff b0 12 	add    %al,0x12b0fff8(%edi,%ecx,2)
    5eda:	84 62 1c             	test   %ah,0x1c(%edx)
    5edd:	44                   	inc    %esp
    5ede:	fe                   	(bad)  
    5edf:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    5ee2:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5ee6:	0c 41                	or     $0x41,%al
    5ee8:	ac                   	lods   %ds:(%esi),%al
    5ee9:	43                   	inc    %ebx
    5eea:	04 00                	add    $0x0,%al
    5eec:	bc 40 03 00 02       	mov    $0x2000340,%esp
    5ef1:	00 bc 40 4d 44 00 00 	add    %bh,0x444d(%eax,%eax,2)
    5ef8:	84 4f f6             	test   %cl,-0xa(%edi)
    5efb:	ff b0 12 84 62 1c    	pushl  0x1c628412(%eax)
    5f01:	44                   	inc    %esp
    5f02:	fe                   	(bad)  
    5f03:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    5f06:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5f0a:	0c 41                	or     $0x41,%al
    5f0c:	ac                   	lods   %ds:(%esi),%al
    5f0d:	43                   	inc    %ebx
    5f0e:	04 00                	add    $0x0,%al
    5f10:	ac                   	lods   %ds:(%esi),%al
    5f11:	42                   	inc    %edx
    5f12:	02 00                	add    (%eax),%al
    5f14:	bc 40 4d 44 00       	mov    $0x444d40,%esp
    5f19:	00 84 4f f4 ff b0 12 	add    %al,0x12b0fff4(%edi,%ecx,2)
    5f20:	84 62 1c             	test   %ah,0x1c(%edx)
    5f23:	44                   	inc    %esp
    5f24:	fe                   	(bad)  
    5f25:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    5f28:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5f2c:	0c 41                	or     $0x41,%al
    5f2e:	ac                   	lods   %ds:(%esi),%al
    5f2f:	43                   	inc    %ebx
    5f30:	04 00                	add    $0x0,%al
    5f32:	bc 40 05 00 02       	mov    $0x2000540,%esp
    5f37:	00 bc 40 4d 44 00 00 	add    %bh,0x444d(%eax,%eax,2)
    5f3e:	84 4f f2             	test   %cl,-0xe(%edi)
    5f41:	ff b0 12 84 62 1c    	pushl  0x1c628412(%eax)
    5f47:	44                   	inc    %esp
    5f48:	fe                   	(bad)  
    5f49:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    5f4c:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5f50:	0c 41                	or     $0x41,%al
    5f52:	bc 40 00 0c 04       	mov    $0x40c0040,%esp
    5f57:	00 bc 40 06 00 02 00 	add    %bh,0x20006(%eax,%eax,2)
    5f5e:	bc 40 4d 44 00       	mov    $0x444d40,%esp
    5f63:	00 84 4f f0 ff b0 12 	add    %al,0x12b0fff0(%edi,%ecx,2)
    5f6a:	84 62 1c             	test   %ah,0x1c(%edx)
    5f6d:	44                   	inc    %esp
    5f6e:	fe                   	(bad)  
    5f6f:	ff                   	(bad)  
    5f70:	3c 50                	cmp    $0x50,%al
    5f72:	00 0c 84             	add    %cl,(%esp,%eax,4)
    5f75:	4c                   	dec    %esp
    5f76:	fe                   	(bad)  
    5f77:	ff 0c 41             	decl   (%ecx,%eax,2)
    5f7a:	ac                   	lods   %ds:(%esi),%al
    5f7b:	43                   	inc    %ebx
    5f7c:	04 00                	add    $0x0,%al
    5f7e:	bc 40 07 00 02       	mov    $0x2000740,%esp
    5f83:	00 bc 40 4d 44 00 00 	add    %bh,0x444d(%eax,%eax,2)
    5f8a:	84 4f ee             	test   %cl,-0x12(%edi)
    5f8d:	ff b0 12 84 62 1c    	pushl  0x1c628412(%eax)
    5f93:	44                   	inc    %esp
    5f94:	fe                   	(bad)  
    5f95:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    5f98:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5f9c:	0c 41                	or     $0x41,%al
    5f9e:	ac                   	lods   %ds:(%esi),%al
    5f9f:	43                   	inc    %ebx
    5fa0:	04 00                	add    $0x0,%al
    5fa2:	bc 42 02 00 bc       	mov    $0xbc000242,%esp
    5fa7:	40                   	inc    %eax
    5fa8:	4d                   	dec    %ebp
    5fa9:	44                   	inc    %esp
    5faa:	00 00                	add    %al,(%eax)
    5fac:	84 4f ec             	test   %cl,-0x14(%edi)
    5faf:	ff b0 12 84 62 1c    	pushl  0x1c628412(%eax)
    5fb5:	44                   	inc    %esp
    5fb6:	fe                   	(bad)  
    5fb7:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    5fba:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5fbe:	0c 41                	or     $0x41,%al
    5fc0:	ac                   	lods   %ds:(%esi),%al
    5fc1:	43                   	inc    %ebx
    5fc2:	04 00                	add    $0x0,%al
    5fc4:	bc 40 09 00 02       	mov    $0x2000940,%esp
    5fc9:	00 bc 40 4d 44 00 00 	add    %bh,0x444d(%eax,%eax,2)
    5fd0:	84 4f ea             	test   %cl,-0x16(%edi)
    5fd3:	ff b0 12 84 62 1c    	pushl  0x1c628412(%eax)
    5fd9:	44                   	inc    %esp
    5fda:	fe                   	(bad)  
    5fdb:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    5fde:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    5fe2:	0c 41                	or     $0x41,%al
    5fe4:	ac                   	lods   %ds:(%esi),%al
    5fe5:	43                   	inc    %ebx
    5fe6:	04 00                	add    $0x0,%al
    5fe8:	bc 40 0b 00 02       	mov    $0x2000b40,%esp
    5fed:	00 bc 40 4d 44 00 00 	add    %bh,0x444d(%eax,%eax,2)
    5ff4:	84 4f e8             	test   %cl,-0x18(%edi)
    5ff7:	ff b0 12 84 62 1c    	pushl  0x1c628412(%eax)
    5ffd:	44                   	inc    %esp
    5ffe:	fe                   	(bad)  
    5fff:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    6002:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    6006:	0c 41                	or     $0x41,%al
    6008:	ac                   	lods   %ds:(%esi),%al
    6009:	43                   	inc    %ebx
    600a:	04 00                	add    $0x0,%al
    600c:	bc 40 0c 00 02       	mov    $0x2000c40,%esp
    6011:	00 bc 40 4d 44 00 00 	add    %bh,0x444d(%eax,%eax,2)
    6018:	84 4f e6             	test   %cl,-0x1a(%edi)
    601b:	ff b0 12 84 62 1c    	pushl  0x1c628412(%eax)
    6021:	44                   	inc    %esp
    6022:	fe                   	(bad)  
    6023:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    6026:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    602a:	0c 41                	or     $0x41,%al
    602c:	ac                   	lods   %ds:(%esi),%al
    602d:	43                   	inc    %ebx
    602e:	04 00                	add    $0x0,%al
    6030:	bc 40 0d 00 02       	mov    $0x2000d40,%esp
    6035:	00 bc 40 4d 44 00 00 	add    %bh,0x444d(%eax,%eax,2)
    603c:	84 4f e4             	test   %cl,-0x1c(%edi)
    603f:	ff b0 12 84 62 1c    	pushl  0x1c628412(%eax)
    6045:	44                   	inc    %esp
    6046:	fe                   	(bad)  
    6047:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    604a:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    604e:	0c 41                	or     $0x41,%al
    6050:	bc 40 06 00 04       	mov    $0x4000640,%esp
    6055:	00 bc 40 0e 00 02 00 	add    %bh,0x2000e(%eax,%eax,2)
    605c:	bc 40 4d 44 00       	mov    $0x444d40,%esp
    6061:	00 84 4f e2 ff b0 12 	add    %al,0x12b0ffe2(%edi,%ecx,2)
    6068:	84 62 1c             	test   %ah,0x1c(%edx)
    606b:	44                   	inc    %esp
    606c:	fe                   	(bad)  
    606d:	ff                   	(bad)  
    606e:	3c 50                	cmp    $0x50,%al
    6070:	06                   	push   %es
    6071:	00 84 4c fe ff 0c 41 	add    %al,0x410cfffe(%esp,%ecx,2)
    6078:	bc 40 80 01 04       	mov    $0x4018040,%esp
    607d:	00 bc 40 0f 00 02 00 	add    %bh,0x2000f(%eax,%eax,2)
    6084:	bc 40 4d 44 00       	mov    $0x444d40,%esp
    6089:	00 84 4f e0 ff b0 12 	add    %al,0x12b0ffe0(%edi,%ecx,2)
    6090:	84 62 1c             	test   %ah,0x1c(%edx)
    6093:	44                   	inc    %esp
    6094:	fe                   	(bad)  
    6095:	ff                   	(bad)  
    6096:	3c 50                	cmp    $0x50,%al
    6098:	80 01 84             	addb   $0x84,(%ecx)
    609b:	4c                   	dec    %esp
    609c:	fe                   	(bad)  
    609d:	ff 0c 41             	decl   (%ecx,%eax,2)
    60a0:	bc 40 06 00 04       	mov    $0x4000640,%esp
    60a5:	00 bc 40 10 00 02 00 	add    %bh,0x20010(%eax,%eax,2)
    60ac:	bc 40 4d 44 00       	mov    $0x444d40,%esp
    60b1:	00 84 4f de ff b0 12 	add    %al,0x12b0ffde(%edi,%ecx,2)
    60b8:	84 62 1c             	test   %ah,0x1c(%edx)
    60bb:	44                   	inc    %esp
    60bc:	fe                   	(bad)  
    60bd:	ff                   	(bad)  
    60be:	3c 50                	cmp    $0x50,%al
    60c0:	06                   	push   %es
    60c1:	00 84 4c fe ff 0c 41 	add    %al,0x410cfffe(%esp,%ecx,2)
    60c8:	ac                   	lods   %ds:(%esi),%al
    60c9:	43                   	inc    %ebx
    60ca:	04 00                	add    $0x0,%al
    60cc:	bc 40 11 00 02       	mov    $0x2001140,%esp
    60d1:	00 bc 40 4d 44 00 00 	add    %bh,0x444d(%eax,%eax,2)
    60d8:	84 4f dc             	test   %cl,-0x24(%edi)
    60db:	ff b0 12 84 62 1c    	pushl  0x1c628412(%eax)
    60e1:	44                   	inc    %esp
    60e2:	fe                   	(bad)  
    60e3:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    60e6:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    60ea:	0c 41                	or     $0x41,%al
    60ec:	bc 40 42 00 02       	mov    $0x2004240,%esp
    60f1:	00 bc 40 66 44 00 00 	add    %bh,0x4466(%eax,%eax,2)
    60f8:	84 4f da             	test   %cl,-0x26(%edi)
    60fb:	ff b0 12 84 62 1c    	pushl  0x1c628412(%eax)
    6101:	44                   	inc    %esp
    6102:	fe                   	(bad)  
    6103:	ff                   	(bad)  
    6104:	3c 50                	cmp    $0x50,%al
    6106:	42                   	inc    %edx
    6107:	00 84 4c fe ff 0c 41 	add    %al,0x410cfffe(%esp,%ecx,2)
    610e:	ac                   	lods   %ds:(%esi),%al
    610f:	43                   	inc    %ebx
    6110:	02 00                	add    (%eax),%al
    6112:	bc 40 7e 44 00       	mov    $0x447e40,%esp
    6117:	00 84 4f d8 ff b0 12 	add    %al,0x12b0ffd8(%edi,%ecx,2)
    611e:	84 62 1c             	test   %ah,0x1c(%edx)
    6121:	44                   	inc    %esp
    6122:	fe                   	(bad)  
    6123:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    6126:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    612a:	0d 41 8d 4c 02       	or     $0x24c8d41,%eax
    612f:	00 bd 40 9a 44 00    	add    %bh,0x449a40(%ebp)
    6135:	00 84 4f d6 ff b0 12 	add    %al,0x12b0ffd6(%edi,%ecx,2)
    613c:	84 62 84             	test   %ah,-0x7c(%edx)
    613f:	4f                   	dec    %edi
    6140:	d4 ff                	aam    $0xff
    6142:	31 50 32             	xor    %edx,0x32(%eax)
    6145:	00 34 41             	add    %dh,(%ecx,%eax,2)
    6148:	30 41 00             	xor    %al,0x0(%ecx)
	...

0000614c <_entry_task>:
    614c:	04 12                	add    $0x12,%al
    614e:	04 41                	add    $0x41,%al
    6150:	3f                   	aas    
    6151:	40                   	inc    %eax
    6152:	f0 44                	lock inc %esp
    6154:	b0 12                	mov    $0x12,%al
    6156:	58                   	pop    %eax
    6157:	68 34 41 30 41       	push   $0x41304134

0000615c <_init>:
    615c:	04 12                	add    $0x12,%al
    615e:	04 41                	add    $0x41,%al
    6160:	b0 12                	mov    $0x12,%al
    6162:	20 57 34             	and    %dl,0x34(%edi)
    6165:	41                   	inc    %ecx
    6166:	30 41 04             	xor    %al,0x4(%ecx)

00006168 <init_hw>:
    6168:	04 12                	add    $0x12,%al
    616a:	04 41                	add    $0x41,%al
    616c:	b0 12                	mov    $0x12,%al
    616e:	d0 61 1c             	shlb   0x1c(%ecx)
    6171:	42                   	inc    %edx
    6172:	30 01                	xor    %al,(%ecx)
    6174:	3c f0                	cmp    $0xf0,%al
    6176:	fe                   	(bad)  
    6177:	ff 82 4c 30 01 b0    	incl   -0x4ffecfb4(%edx)
    617d:	12 64 62 34          	adc    0x34(%edx,%eiz,2),%ah
    6181:	41                   	inc    %ecx
    6182:	30 41 04             	xor    %al,0x4(%ecx)

00006184 <acquire_sample>:
    6184:	04 12                	add    $0x12,%al
    6186:	04 41                	add    $0x41,%al
    6188:	31 80 06 00 0c 4f    	xor    %eax,0x4f0c0006(%eax)
    618e:	84 4f fe             	test   %cl,-0x2(%edi)
    6191:	ff 1f                	lcall  *(%edi)
    6193:	53                   	push   %ebx
    6194:	3f                   	aas    
    6195:	f0 03 00             	lock add (%eax),%eax
    6198:	84 4f fc             	test   %cl,-0x4(%edi)
    619b:	ff 84 4c fa ff 31 50 	incl   0x5031fffa(%esp,%ecx,2)
    61a2:	06                   	push   %es
    61a3:	00 34 41             	add    %dh,(%ecx,%eax,2)
    61a6:	30 41 04             	xor    %al,0x4(%ecx)

000061a8 <msp_watchdog_enable>:
    61a8:	04 12                	add    $0x12,%al
    61aa:	04 41                	add    $0x41,%al
    61ac:	21 83 4c 4f c4 4c    	and    %eax,0x4cc44f4c(%ebx)
    61b2:	ff                   	(bad)  
    61b3:	ff 5f 44             	lcall  *0x44(%edi)
    61b6:	ff                   	(bad)  
    61b7:	ff                   	(bad)  
    61b8:	3f                   	aas    
    61b9:	d0 08                	rorb   (%eax)
    61bb:	5a                   	pop    %edx
    61bc:	82                   	(bad)  
    61bd:	4f                   	dec    %edi
    61be:	5c                   	pop    %esp
    61bf:	01 5c 44 ff          	add    %ebx,-0x1(%esp,%eax,2)
    61c3:	ff c2                	inc    %edx
    61c5:	4c                   	dec    %esp
    61c6:	20 1c 21             	and    %bl,(%ecx,%eiz,1)
    61c9:	53                   	push   %ebx
    61ca:	34 41                	xor    $0x41,%al
    61cc:	30 41 00             	xor    %al,0x0(%ecx)
	...

000061d0 <msp_watchdog_disable>:
    61d0:	04 12                	add    $0x12,%al
    61d2:	04 41                	add    $0x41,%al
    61d4:	b2 40                	mov    $0x40,%dl
    61d6:	80 5a 5c 01          	sbbb   $0x1,0x5c(%edx)
    61da:	34 41                	xor    $0x41,%al
    61dc:	30 41 00             	xor    %al,0x0(%ecx)
	...

000061e0 <msp_watchdog_kick>:
    61e0:	04 12                	add    $0x12,%al
    61e2:	04 41                	add    $0x41,%al
    61e4:	5c                   	pop    %esp
    61e5:	42                   	inc    %edx
    61e6:	20 1c 3c             	and    %bl,(%esp,%edi,1)
    61e9:	d0 08                	rorb   (%eax)
    61eb:	5a                   	pop    %edx
    61ec:	82                   	(bad)  
    61ed:	4c                   	dec    %esp
    61ee:	5c                   	pop    %esp
    61ef:	01 34 41             	add    %esi,(%ecx,%eax,2)
    61f2:	30 41 04             	xor    %al,0x4(%ecx)

000061f4 <memcpy>:
    61f4:	04 12                	add    $0x12,%al
    61f6:	04 41                	add    $0x41,%al
    61f8:	0b 12                	or     (%edx),%edx
    61fa:	0a 12                	or     (%edx),%dl
    61fc:	31 80 0e 00 0c 4d    	xor    %eax,0x4d0c000e(%eax)
    6202:	0b 4e 0a             	or     0xa(%esi),%ecx
    6205:	4f                   	dec    %edi
    6206:	84 4f fa             	test   %cl,-0x6(%edi)
    6209:	ff 84 4e f8 ff 84 4d 	incl   0x4d84fff8(%esi,%ecx,2)
    6210:	f6 ff                	idiv   %bh
    6212:	84 43 f4             	test   %al,-0xc(%ebx)
    6215:	ff 84 4c f2 ff 84 4b 	incl   0x4b84fff2(%esp,%ecx,2)
    621c:	f0 ff 84 4a ee ff 00 	lock incl 0x3c00ffee(%edx,%ecx,2)
    6223:	3c 

00006224 <.LBB21_1>:
    6224:	1c 44                	sbb    $0x44,%al
    6226:	f4                   	hlt    
    6227:	ff 1d 44 f6 ff 0c    	lcall  *0xcfff644
    622d:	9d                   	popf   
    622e:	12 2c 00             	adc    (%eax,%eax,1),%ch
    6231:	3c 1c                	cmp    $0x1c,%al

00006232 <.LBB21_2>:
    6232:	1c 44                	sbb    $0x44,%al
    6234:	f8                   	clc    
    6235:	ff 1d 44 f4 ff 0c    	lcall  *0xcfff444
    623b:	5d                   	pop    %ebp
    623c:	6e                   	outsb  %ds:(%esi),(%dx)
    623d:	4c                   	dec    %esp
    623e:	1c 44                	sbb    $0x44,%al
    6240:	fa                   	cli    
    6241:	ff 0c 5d cc 4e 00 00 	decl   0x4ecc(,%ebx,2)
    6248:	1c 44                	sbb    $0x44,%al
    624a:	f4                   	hlt    
    624b:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    624e:	84 4c f4 ff          	test   %cl,-0x1(%esp,%esi,8)
    6252:	e8 3f 1f 44 fa       	call   fa448196 <__high_dataend+0xfa438194>

00006254 <.LBB21_3>:
    6254:	1f                   	pop    %ds
    6255:	44                   	inc    %esp
    6256:	fa                   	cli    
    6257:	ff 31                	pushl  (%ecx)
    6259:	50                   	push   %eax
    625a:	0e                   	push   %cs
    625b:	00 3a                	add    %bh,(%edx)
    625d:	41                   	inc    %ecx
    625e:	3b 41 34             	cmp    0x34(%ecx),%eax
    6261:	41                   	inc    %ecx
    6262:	30 41 04             	xor    %al,0x4(%ecx)

00006264 <msp_clock_setup>:
    6264:	04 12                	add    $0x12,%al
    6266:	04 41                	add    $0x41,%al
    6268:	f2 40                	repnz inc %eax
    626a:	a5                   	movsl  %ds:(%esi),%es:(%edi)
    626b:	ff 61 01             	jmp    *0x1(%ecx)
    626e:	b2 40                	mov    $0x40,%dl
    6270:	0c 00                	or     $0x0,%al
    6272:	62 01                	bound  %eax,(%ecx)
    6274:	b2 40                	mov    $0x40,%dl
    6276:	33 00                	xor    (%eax),%eax
    6278:	64 01 82 43 66 01 34 	add    %eax,%fs:0x34016643(%edx)
    627f:	41                   	inc    %ecx
    6280:	30 41 00             	xor    %al,0x0(%ecx)
	...

00006284 <printf>:
    6284:	04 12                	add    $0x12,%al
    6286:	04 41                	add    $0x41,%al
    6288:	31 80 20 00 1c 44    	xor    %eax,0x441c0020(%eax)
    628e:	04 00                	add    $0x0,%al
    6290:	84 4c fc ff          	test   %cl,-0x1(%esp,%edi,8)
    6294:	0c 44                	or     $0x44,%al
    6296:	3c 50                	cmp    $0x50,%al
    6298:	06                   	push   %es
    6299:	00 84 4c ee ff 00 3c 	add    %al,0x3c00ffee(%esp,%ecx,2)

000062a0 <.LBB23_1>:
    62a0:	1c 44                	sbb    $0x44,%al
    62a2:	fc                   	cld    
    62a3:	ff 0d 4c 1d 53 84    	decl   0x84531d4c
    62a9:	4d                   	dec    %ebp
    62aa:	fc                   	cld    
    62ab:	ff 6e 4c             	ljmp   *0x4c(%esi)
    62ae:	c4 4e fb             	les    -0x5(%esi),%ecx
    62b1:	ff 4e 93             	decl   -0x6d(%esi)
    62b4:	02 20                	add    (%eax),%ah
    62b6:	52                   	push   %edx
    62b7:	3d 00 3c 5c 44       	cmp    $0x445c3c00,%eax

000062ba <.LBB23_2>:
    62ba:	5c                   	pop    %esp
    62bb:	44                   	inc    %esp
    62bc:	fb                   	sti    
    62bd:	ff                   	(bad)  
    62be:	7c 90                	jl     6250 <.LBB21_2+0x1e>
    62c0:	25 00 02 24 40       	and    $0x40240200,%eax
    62c5:	3d 00 3c 84 43       	cmp    $0x43843c00,%eax

000062c8 <.LBB23_3>:
    62c8:	84 43 f2             	test   %al,-0xe(%ebx)
    62cb:	ff 00                	incl   (%eax)
    62cd:	3c 1c                	cmp    $0x1c,%al

000062ce <.LBB23_4>:
    62ce:	1c 44                	sbb    $0x44,%al
    62d0:	fc                   	cld    
    62d1:	ff 0d 4c 1d 53 84    	decl   0x84531d4c
    62d7:	4d                   	dec    %ebp
    62d8:	fc                   	cld    
    62d9:	ff 6c 4c 8c          	ljmp   *-0x74(%esp,%ecx,2)
    62dd:	11 4e 4c             	adc    %ecx,0x4c(%esi)
    62e0:	c4 4e fb             	les    -0x5(%esi),%ecx
    62e3:	ff 0c 93             	decl   (%ebx,%edx,4)
    62e6:	84 4c ec ff          	test   %cl,-0x1(%esp,%ebp,8)
    62ea:	02 20                	add    (%eax),%ah
    62ec:	27                   	daa    
    62ed:	3d 00 3c 1c 44       	cmp    $0x441c3c00,%eax

000062f0 <.LBB23_5>:
    62f0:	1c 44                	sbb    $0x44,%al
    62f2:	ec                   	in     (%dx),%al
    62f3:	ff                   	(bad)  
    62f4:	3c 90                	cmp    $0x90,%al
    62f6:	30 00                	xor    %al,(%eax)
    62f8:	02 20                	add    (%eax),%ah
    62fa:	0f 3d                	(bad)  
    62fc:	00 3c 1c             	add    %bh,(%esp,%ebx,1)

000062fe <.LBB23_6>:
    62fe:	1c 44                	sbb    $0x44,%al
    6300:	ec                   	in     (%dx),%al
    6301:	ff                   	(bad)  
    6302:	3c 90                	cmp    $0x90,%al
    6304:	63 00                	arpl   %ax,(%eax)
    6306:	34 24                	xor    $0x24,%al
    6308:	00 3c 1c             	add    %bh,(%esp,%ebx,1)

0000630a <.LBB23_7>:
    630a:	1c 44                	sbb    $0x44,%al
    630c:	ec                   	in     (%dx),%al
    630d:	ff                   	(bad)  
    630e:	3c 90                	cmp    $0x90,%al
    6310:	69 00 3d 24 00 3c    	imul   $0x3c00243d,(%eax),%eax

00006316 <.LBB23_8>:
    6316:	1c 44                	sbb    $0x44,%al
    6318:	ec                   	in     (%dx),%al
    6319:	ff                   	(bad)  
    631a:	3c 90                	cmp    $0x90,%al
    631c:	6c                   	insb   (%dx),%es:(%edi)
    631d:	00 66 24             	add    %ah,0x24(%esi)
    6320:	00 3c 1c             	add    %bh,(%esp,%ebx,1)

00006322 <.LBB23_9>:
    6322:	1c 44                	sbb    $0x44,%al
    6324:	ec                   	in     (%dx),%al
    6325:	ff                   	(bad)  
    6326:	3c 90                	cmp    $0x90,%al
    6328:	6e                   	outsb  %ds:(%esi),(%dx)
    6329:	00 60 24             	add    %ah,0x24(%eax)
    632c:	00 3c 1c             	add    %bh,(%esp,%ebx,1)

0000632e <.LBB23_10>:
    632e:	1c 44                	sbb    $0x44,%al
    6330:	ec                   	in     (%dx),%al
    6331:	ff                   	(bad)  
    6332:	3c 90                	cmp    $0x90,%al
    6334:	73 00                	jae    6336 <.LBB23_10+0x8>
    6336:	0d 24 00 3c 1c       	or     $0x1c3c0024,%eax

0000633a <.LBB23_11>:
    633a:	1c 44                	sbb    $0x44,%al
    633c:	ec                   	in     (%dx),%al
    633d:	ff                   	(bad)  
    633e:	3c 90                	cmp    $0x90,%al
    6340:	75 00                	jne    6342 <.LBB23_11+0x8>
    6342:	25 24 00 3c 1c       	and    $0x1c3c0024,%eax

00006346 <.LBB23_12>:
    6346:	1c 44                	sbb    $0x44,%al
    6348:	ec                   	in     (%dx),%al
    6349:	ff                   	(bad)  
    634a:	3c 90                	cmp    $0x90,%al
    634c:	78 00                	js     634e <.LBB23_12+0x8>
    634e:	8a 24 f8             	mov    (%eax,%edi,8),%ah
    6351:	3c 1c                	cmp    $0x1c,%al

00006352 <.LBB23_13>:
    6352:	1c 44                	sbb    $0x44,%al
    6354:	ee                   	out    %al,(%dx)
    6355:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    6358:	3c f0                	cmp    $0xf0,%al
    635a:	fe                   	(bad)  
    635b:	ff 0d 4c 2d 53 84    	decl   0x84532d4c
    6361:	4d                   	dec    %ebp
    6362:	ee                   	out    %al,(%dx)
    6363:	ff 2f                	ljmp   *(%edi)
    6365:	4c                   	dec    %esp
    6366:	b0 12                	mov    $0x12,%al
    6368:	28 67 84             	sub    %ah,-0x7c(%edi)
    636b:	4f                   	dec    %edi
    636c:	ea ff ea 3c 1c 44 ee 	ljmp   $0xee44,$0x1c3ceaff

00006370 <.LBB23_14>:
    6370:	1c 44                	sbb    $0x44,%al
    6372:	ee                   	out    %al,(%dx)
    6373:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    6376:	3c f0                	cmp    $0xf0,%al
    6378:	fe                   	(bad)  
    6379:	ff 0d 4c 2d 53 84    	decl   0x84532d4c
    637f:	4d                   	dec    %ebp
    6380:	ee                   	out    %al,(%dx)
    6381:	ff 2f                	ljmp   *(%edi)
    6383:	4c                   	dec    %esp
    6384:	b0 12                	mov    $0x12,%al
    6386:	f4                   	hlt    
    6387:	66 84 4f e8          	data16 test %cl,-0x18(%edi)
    638b:	ff                   	(bad)  
    638c:	db 3c 1c             	fstpt  (%esp,%ebx,1)

0000638e <.LBB23_15>:
    638e:	1c 44                	sbb    $0x44,%al
    6390:	ee                   	out    %al,(%dx)
    6391:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    6394:	3c f0                	cmp    $0xf0,%al
    6396:	fe                   	(bad)  
    6397:	ff 0d 4c 2d 53 84    	decl   0x84532d4c
    639d:	4d                   	dec    %ebp
    639e:	ee                   	out    %al,(%dx)
    639f:	ff 2c 4c             	ljmp   *(%esp,%ecx,2)
    63a2:	84 4c f8 ff          	test   %cl,-0x1(%eax,%edi,8)
    63a6:	5e                   	pop    %esi
    63a7:	44                   	inc    %esp
    63a8:	fb                   	sti    
    63a9:	ff                   	(bad)  
    63aa:	7e 90                	jle    633c <.LBB23_11+0x2>
    63ac:	69 00 13 20 00 3c    	imul   $0x3c002013,(%eax),%eax

000063b2 <.LBB23_16>:
    63b2:	1c 44                	sbb    $0x44,%al
    63b4:	f8                   	clc    
    63b5:	ff 0c 93             	decl   (%ebx,%edx,4)
    63b8:	0e                   	push   %cs
    63b9:	34 00                	xor    $0x0,%al
    63bb:	3c 1c                	cmp    $0x1c,%al

000063bc <.LBB23_17>:
    63bc:	1c 44                	sbb    $0x44,%al
    63be:	f8                   	clc    
    63bf:	ff 0d 43 0d 8c 84    	decl   0x848c0d43
    63c5:	4d                   	dec    %ebp
    63c6:	f8                   	clc    
    63c7:	ff                   	(bad)  
    63c8:	3f                   	aas    
    63c9:	40                   	inc    %eax
    63ca:	2d 00 b0 12 f4       	sub    $0xf412b000,%eax
    63cf:	66 84 4f e6          	data16 test %cl,-0x1a(%edi)
    63d3:	ff 00                	incl   (%eax)
    63d5:	3c 1e                	cmp    $0x1e,%al

000063d6 <.LBB23_18>:
    63d6:	1e                   	push   %ds
    63d7:	44                   	inc    %esp
    63d8:	f8                   	clc    
    63d9:	ff                   	(bad)  
    63da:	3c 40                	cmp    $0x40,%al
    63dc:	14 00                	adc    $0x0,%al
    63de:	3c 50                	cmp    $0x50,%al
    63e0:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
    63e1:	44                   	inc    %esp
    63e2:	0f 43 0d 4c b0 12 70 	cmovae 0x7012b04c,%ecx
    63e9:	65 ac                	lods   %gs:(%esi),%al
    63eb:	3c 1c                	cmp    $0x1c,%al

000063ec <.LBB23_19>:
    63ec:	1c 44                	sbb    $0x44,%al
    63ee:	ee                   	out    %al,(%dx)
    63ef:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    63f2:	3c f0                	cmp    $0xf0,%al
    63f4:	fe                   	(bad)  
    63f5:	ff 0d 4c 2d 53 84    	decl   0x84532d4c
    63fb:	4d                   	dec    %ebp
    63fc:	ee                   	out    %al,(%dx)
    63fd:	ff 2c 4c             	ljmp   *(%esp,%ecx,2)
    6400:	1d 44 ee ff 0e       	sbb    $0xeffee44,%eax
    6405:	4d                   	dec    %ebp
    6406:	2e 53                	cs push %ebx
    6408:	84 4e ee             	test   %cl,-0x12(%esi)
    640b:	ff 2d 4d 84 4d f6    	ljmp   *0xf64d844d
    6411:	ff 84 4c f4 ff 5f 44 	incl   0x445ffff4(%esp,%ecx,2)
    6418:	fb                   	sti    
    6419:	ff                   	(bad)  
    641a:	7f 90                	jg     63ac <.LBB23_15+0x1e>
    641c:	6c                   	insb   (%dx),%es:(%edi)
    641d:	00 19                	add    %bl,(%ecx)
    641f:	20 00                	and    %al,(%eax)
    6421:	3c 1c                	cmp    $0x1c,%al

00006422 <.LBB23_20>:
    6422:	1c 44                	sbb    $0x44,%al
    6424:	f6 ff                	idiv   %bh
    6426:	0c 93                	or     $0x93,%al
    6428:	14 34                	adc    $0x34,%al
    642a:	00 3c 1c             	add    %bh,(%esp,%ebx,1)

0000642c <.LBB23_21>:
    642c:	1c 44                	sbb    $0x44,%al
    642e:	f4                   	hlt    
    642f:	ff 1d 44 f6 ff 0e    	lcall  *0xefff644
    6435:	43                   	inc    %ebx
    6436:	0f 4e 0f             	cmovle (%edi),%ecx
    6439:	8c 0e                	mov    %cs,(%esi)
    643b:	7d 84                	jge    63c1 <.LBB23_17+0x5>
    643d:	4e                   	dec    %esi
    643e:	f6 ff                	idiv   %bh
    6440:	84 4f f4             	test   %cl,-0xc(%edi)
    6443:	ff                   	(bad)  
    6444:	3f                   	aas    
    6445:	40                   	inc    %eax
    6446:	2d 00 b0 12 f4       	sub    $0xf412b000,%eax
    644b:	66 84 4f e4          	data16 test %cl,-0x1c(%edi)
    644f:	ff 00                	incl   (%eax)
    6451:	3c 1f                	cmp    $0x1f,%al

00006452 <.LBB23_22>:
    6452:	1f                   	pop    %ds
    6453:	44                   	inc    %esp
    6454:	f6 ff                	idiv   %bh
    6456:	1e                   	push   %ds
    6457:	44                   	inc    %esp
    6458:	f4                   	hlt    
    6459:	ff                   	(bad)  
    645a:	3d 40 a6 44 b0       	cmp    $0xb044a640,%eax
    645f:	12 70 65             	adc    0x65(%eax),%dh
    6462:	70 3c                	jo     64a0 <.LBB23_24+0x2>

00006464 <.LBB23_23>:
    6464:	1c 44                	sbb    $0x44,%al
    6466:	ee                   	out    %al,(%dx)
    6467:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    646a:	3c f0                	cmp    $0xf0,%al
    646c:	fe                   	(bad)  
    646d:	ff 0d 4c 2d 53 84    	decl   0x84532d4c
    6473:	4d                   	dec    %ebp
    6474:	ee                   	out    %al,(%dx)
    6475:	ff 2c 4c             	ljmp   *(%esp,%ecx,2)
    6478:	84 4c f8 ff          	test   %cl,-0x1(%eax,%edi,8)
    647c:	0c 11                	or     $0x11,%al
    647e:	0c 11                	or     $0x11,%al
    6480:	0c 11                	or     $0x11,%al
    6482:	0c 11                	or     $0x11,%al
    6484:	0c 11                	or     $0x11,%al
    6486:	0c 11                	or     $0x11,%al
    6488:	0c 11                	or     $0x11,%al
    648a:	0c 11                	or     $0x11,%al
    648c:	0c 11                	or     $0x11,%al
    648e:	0c 11                	or     $0x11,%al
    6490:	0c 11                	or     $0x11,%al
    6492:	0c 11                	or     $0x11,%al
    6494:	84 4c f0 ff          	test   %cl,-0x1(%eax,%esi,8)
    6498:	0c 93                	or     $0x93,%al
    649a:	06                   	push   %es
    649b:	20 00                	and    %al,(%eax)
    649d:	3c 1c                	cmp    $0x1c,%al

0000649e <.LBB23_24>:
    649e:	1c 44                	sbb    $0x44,%al
    64a0:	f2 ff 2c 92          	repnz ljmp *(%edx,%edx,4)
    64a4:	06                   	push   %es
    64a5:	38 00                	cmp    %al,(%eax)
    64a7:	3c 1f                	cmp    $0x1f,%al

000064a8 <.LBB23_25>:
    64a8:	1f                   	pop    %ds
    64a9:	44                   	inc    %esp
    64aa:	f0 ff b0 12 bc 66 00 	lock pushl 0x66bc12(%eax)
    64b1:	3c 1c                	cmp    $0x1c,%al

000064b2 <.LBB23_26>:
    64b2:	1c 44                	sbb    $0x44,%al
    64b4:	f8                   	clc    
    64b5:	ff 0c 11             	decl   (%ecx,%edx,1)
    64b8:	0c 11                	or     $0x11,%al
    64ba:	0c 11                	or     $0x11,%al
    64bc:	0c 11                	or     $0x11,%al
    64be:	0c 11                	or     $0x11,%al
    64c0:	0c 11                	or     $0x11,%al
    64c2:	0c 11                	or     $0x11,%al
    64c4:	0c 11                	or     $0x11,%al
    64c6:	84 4c f0 ff          	test   %cl,-0x1(%eax,%esi,8)
    64ca:	0c 93                	or     $0x93,%al
    64cc:	07                   	pop    %es
    64cd:	20 00                	and    %al,(%eax)
    64cf:	3c 1c                	cmp    $0x1c,%al

000064d0 <.LBB23_27>:
    64d0:	1c 44                	sbb    $0x44,%al
    64d2:	f2 ff                	repnz (bad) 
    64d4:	3c 90                	cmp    $0x90,%al
    64d6:	03 00                	add    (%eax),%eax
    64d8:	06                   	push   %es
    64d9:	38 00                	cmp    %al,(%eax)
    64db:	3c 1f                	cmp    $0x1f,%al

000064dc <.LBB23_28>:
    64dc:	1f                   	pop    %ds
    64dd:	44                   	inc    %esp
    64de:	f0 ff b0 12 bc 66 00 	lock pushl 0x66bc12(%eax)
    64e5:	3c 1c                	cmp    $0x1c,%al

000064e6 <.LBB23_29>:
    64e6:	1c 44                	sbb    $0x44,%al
    64e8:	f8                   	clc    
    64e9:	ff 0c 11             	decl   (%ecx,%edx,1)
    64ec:	0c 11                	or     $0x11,%al
    64ee:	0c 11                	or     $0x11,%al
    64f0:	0c 11                	or     $0x11,%al
    64f2:	84 4c f0 ff          	test   %cl,-0x1(%eax,%esi,8)
    64f6:	0c 93                	or     $0x93,%al
    64f8:	06                   	push   %es
    64f9:	20 00                	and    %al,(%eax)
    64fb:	3c 1c                	cmp    $0x1c,%al

000064fc <.LBB23_30>:
    64fc:	1c 44                	sbb    $0x44,%al
    64fe:	f2 ff 2c 93          	repnz ljmp *(%ebx,%edx,4)
    6502:	06                   	push   %es
    6503:	38 00                	cmp    %al,(%eax)
    6505:	3c 1f                	cmp    $0x1f,%al

00006506 <.LBB23_31>:
    6506:	1f                   	pop    %ds
    6507:	44                   	inc    %esp
    6508:	f0 ff b0 12 bc 66 00 	lock pushl 0x66bc12(%eax)
    650f:	3c 1f                	cmp    $0x1f,%al

00006510 <.LBB23_32>:
    6510:	1f                   	pop    %ds
    6511:	44                   	inc    %esp
    6512:	f8                   	clc    
    6513:	ff b0 12 bc 66 15    	pushl  0x1566bc12(%eax)
    6519:	3c 1c                	cmp    $0x1c,%al

0000651a <.LBB23_33>:
    651a:	1c 44                	sbb    $0x44,%al
    651c:	fc                   	cld    
    651d:	ff 0d 4c 1d 53 84    	decl   0x84531d4c
    6523:	4d                   	dec    %ebp
    6524:	fc                   	cld    
    6525:	ff 6e 4c             	ljmp   *0x4c(%esi)
    6528:	c4 4e fb             	les    -0x5(%esi),%ecx
    652b:	ff 5c 44 fb          	lcall  *-0x5(%esp,%eax,2)
    652f:	ff 8c 11 3c 50 d0 ff 	decl   -0x2fafc4(%ecx,%edx,1)
    6536:	84 4c f2 ff          	test   %cl,-0x1(%edx,%esi,8)
    653a:	c9                   	leave  
    653b:	3e 84 43 fe          	test   %al,%ds:-0x2(%ebx)

0000653c <.LBB23_34>:
    653c:	84 43 fe             	test   %al,-0x2(%ebx)
    653f:	ff 10                	call   *(%eax)
    6541:	3c 02                	cmp    $0x2,%al

00006542 <.LBB23_35>:
    6542:	02 3c 0a             	add    (%edx,%ecx,1),%bh

00006544 <.LBB23_36>:
    6544:	0a 3c 00             	or     (%eax,%eax,1),%bh

00006546 <.LBB23_37>:
    6546:	00 3c 5c             	add    %bh,(%esp,%ebx,2)

00006548 <.LBB23_38>:
    6548:	5c                   	pop    %esp
    6549:	44                   	inc    %esp
    654a:	fb                   	sti    
    654b:	ff 8c 11 0f 4c b0 12 	decl   0x12b04c0f(%ecx,%edx,1)
    6552:	f4                   	hlt    
    6553:	66 84 4f e2          	data16 test %cl,-0x1e(%edi)
    6557:	ff 00                	incl   (%eax)
    6559:	3c a2                	cmp    $0xa2,%al

0000655a <.LBB23_39>:
    655a:	a2 3e 84 43 fe       	mov    %al,0xfe43843e

0000655c <.LBB23_40>:
    655c:	84 43 fe             	test   %al,-0x2(%ebx)
    655f:	ff 00                	incl   (%eax)
    6561:	3c 1f                	cmp    $0x1f,%al

00006562 <.LBB23_41>:
    6562:	1f                   	pop    %ds
    6563:	44                   	inc    %esp
    6564:	fe                   	(bad)  
    6565:	ff 31                	pushl  (%ecx)
    6567:	50                   	push   %eax
    6568:	20 00                	and    %al,(%eax)
    656a:	34 41                	xor    $0x41,%al
    656c:	30 41 00             	xor    %al,0x0(%ecx)
	...

00006570 <xtoa>:
    6570:	04 12                	add    $0x12,%al
    6572:	04 41                	add    $0x41,%al
    6574:	0b 12                	or     (%edx),%edx
    6576:	0a 12                	or     (%edx),%dl
    6578:	09 12                	or     %edx,(%edx)
    657a:	31 80 22 00 0c 4f    	xor    %eax,0x4f0c0022(%eax)
    6580:	0b 4e 0a             	or     0xa(%esi),%ecx
    6583:	4d                   	dec    %ebp
    6584:	84 4f f6             	test   %cl,-0xa(%edi)
    6587:	ff 84 4e f4 ff 84 4d 	incl   0x4d84fff4(%esi,%ecx,2)
    658e:	f2 ff 1d 44 f6 ff 1e 	repnz lcall *0x1efff644
    6595:	44                   	inc    %esp
    6596:	f4                   	hlt    
    6597:	ff 0e                	decl   (%esi)
    6599:	dd 0e                	fisttpll (%esi)
    659b:	93                   	xchg   %eax,%ebx
    659c:	84 4c ea ff          	test   %cl,-0x1(%edx,%ebp,8)
    65a0:	84 4a e8             	test   %cl,-0x18(%edx)
    65a3:	ff 84 4b e6 ff 7a 24 	incl   0x247affe6(%ebx,%ecx,2)
    65aa:	00 3c 00             	add    %bh,(%eax,%eax,1)

000065ac <.LBB24_1>:
    65ac:	00 3c 1c             	add    %bh,(%esp,%ebx,1)

000065ae <.LBB24_2>:
    65ae:	1c 44                	sbb    $0x44,%al
    65b0:	f4                   	hlt    
    65b1:	ff 1d 44 f6 ff 1e    	lcall  *0x1efff644
    65b7:	44                   	inc    %esp
    65b8:	f2 ff 2f             	repnz ljmp *(%edi)
    65bb:	4e                   	dec    %esi
    65bc:	1e                   	push   %ds
    65bd:	4e                   	dec    %esi
    65be:	02 00                	add    (%eax),%al
    65c0:	0d 9e 0b 42 1b       	or     $0x1b420b9e,%eax
    65c5:	f3 0c 9f             	repz or $0x9f,%al
    65c8:	0c 42                	or     $0x42,%al
    65ca:	1c f3                	sbb    $0xf3,%al
    65cc:	0d 9e 84 4b e4       	or     $0xe44b849e,%eax
    65d1:	ff 84 4c e2 ff 04 24 	incl   0x2404ffe2(%esp,%ecx,2)
    65d8:	1c 44                	sbb    $0x44,%al
    65da:	e4 ff                	in     $0xff,%al
    65dc:	84 4c e2 ff          	test   %cl,-0x1(%edx,%eiz,8)

000065e0 <.LBB24_4>:
    65e0:	1c 44                	sbb    $0x44,%al
    65e2:	e2 ff                	loop   65e3 <.LBB24_4+0x3>
    65e4:	1c b3                	sbb    $0xb3,%al
    65e6:	07                   	pop    %es
    65e7:	20 00                	and    %al,(%eax)
    65e9:	3c 1c                	cmp    $0x1c,%al

000065ea <.LBB24_5>:
    65ea:	1c 44                	sbb    $0x44,%al
    65ec:	f2 ff 2c 52          	repnz ljmp *(%edx,%edx,2)
    65f0:	84 4c f2 ff          	test   %cl,-0x1(%edx,%esi,8)
    65f4:	dc 3f                	fdivrl (%edi)

000065f6 <.LBB24_6>:
    65f6:	00 3c 1c             	add    %bh,(%esp,%ebx,1)

000065f8 <.LBB24_7>:
    65f8:	1c 44                	sbb    $0x44,%al
    65fa:	f2 ff 0d 4c 2d 52 84 	repnz decl 0x84522d4c
    6601:	4d                   	dec    %ebp
    6602:	f2 ff 2d 4c 1c 4c 02 	repnz ljmp *0x24c1c4c
    6609:	00 84 4c ee ff 84 4d 	add    %al,0x4d84ffee(%esp,%ecx,2)
    6610:	ec                   	in     (%dx),%al
    6611:	ff f4                	push   %esp
    6613:	40                   	inc    %eax
    6614:	30 00                	xor    %al,(%eax)
    6616:	f1                   	icebp  
    6617:	ff 00                	incl   (%eax)
    6619:	3c 1c                	cmp    $0x1c,%al

0000661a <.LBB24_8>:
    661a:	1c 44                	sbb    $0x44,%al
    661c:	f4                   	hlt    
    661d:	ff 1d 44 f6 ff 1e    	lcall  *0x1efff644
    6623:	44                   	inc    %esp
    6624:	ec                   	in     (%dx),%al
    6625:	ff 1f                	lcall  *(%edi)
    6627:	44                   	inc    %esp
    6628:	ee                   	out    %al,(%dx)
    6629:	ff 0d 9f 0b 42 1a    	decl   0x1a420b9f
    662f:	43                   	inc    %ebx
    6630:	09 4a 09             	or     %ecx,0x9(%edx)
    6633:	cb                   	lret   
    6634:	0c 9e                	or     $0x9e,%al
    6636:	0c 42                	or     $0x42,%al
    6638:	0a cc                	or     %ah,%cl
    663a:	0d 9f 84 49 e0       	or     $0xe049849f,%eax
    663f:	ff 84 4a de ff 04 24 	incl   0x2404ffde(%edx,%ecx,2)
    6646:	1c 44                	sbb    $0x44,%al
    6648:	e0 ff                	loopne 6649 <.LBB24_8+0x2f>
    664a:	84 4c de ff          	test   %cl,-0x1(%esi,%ebx,8)

0000664e <.LBB24_10>:
    664e:	1c 44                	sbb    $0x44,%al
    6650:	de ff                	fdivrp %st,%st(7)
    6652:	1c b3                	sbb    $0xb3,%al
    6654:	15 20 00 3c 5c       	adc    $0x5c3c0020,%eax

00006658 <.LBB24_11>:
    6658:	5c                   	pop    %esp
    6659:	44                   	inc    %esp
    665a:	f1                   	icebp  
    665b:	ff 5c 53 c4          	lcall  *-0x3c(%ebx,%edx,2)
    665f:	4c                   	dec    %esp
    6660:	f1                   	icebp  
    6661:	ff 1d 44 ec ff 1e    	lcall  *0x1effec44
    6667:	44                   	inc    %esp
    6668:	ee                   	out    %al,(%dx)
    6669:	ff 1f                	lcall  *(%edi)
    666b:	44                   	inc    %esp
    666c:	f4                   	hlt    
    666d:	ff 1b                	lcall  *(%ebx)
    666f:	44                   	inc    %esp
    6670:	f6 ff                	idiv   %bh
    6672:	0f 8d 0b 7e 84 4b    	jge    4b84e483 <__high_dataend+0x4b83e481>
    6678:	f6 ff                	idiv   %bh
    667a:	84 4f f4             	test   %cl,-0xc(%edi)
    667d:	ff cd                	dec    %ebp
    667f:	3f                   	aas    

00006680 <.LBB24_12>:
    6680:	5c                   	pop    %esp
    6681:	44                   	inc    %esp
    6682:	f1                   	icebp  
    6683:	ff 8c 11 0f 4c b0 12 	decl   0x12b04c0f(%ecx,%edx,1)
    668a:	f4                   	hlt    
    668b:	66 84 4f dc          	data16 test %cl,-0x24(%edi)
    668f:	ff 00                	incl   (%eax)
    6691:	3c 5c                	cmp    $0x5c,%al

00006692 <.LBB24_13>:
    6692:	5c                   	pop    %esp
    6693:	44                   	inc    %esp
    6694:	ec                   	in     (%dx),%al
    6695:	ff 5c b3 af          	lcall  *-0x51(%ebx,%esi,4)
    6699:	27                   	daa    
    669a:	00 3c 07             	add    %bh,(%edi,%eax,1)

0000669c <.LBB24_14>:
    669c:	07                   	pop    %es
    669d:	3c 3f                	cmp    $0x3f,%al

0000669e <.LBB24_15>:
    669e:	3f                   	aas    
    669f:	40                   	inc    %eax
    66a0:	30 00                	xor    %al,(%eax)
    66a2:	b0 12                	mov    $0x12,%al
    66a4:	f4                   	hlt    
    66a5:	66 84 4f da          	data16 test %cl,-0x26(%edi)
    66a9:	ff 00                	incl   (%eax)
    66ab:	3c 31                	cmp    $0x31,%al

000066ac <.LBB24_16>:
    66ac:	31 50 22             	xor    %edx,0x22(%eax)
    66af:	00 39                	add    %bh,(%ecx)
    66b1:	41                   	inc    %ecx
    66b2:	3a 41 3b             	cmp    0x3b(%ecx),%al
    66b5:	41                   	inc    %ecx
    66b6:	34 41                	xor    $0x41,%al
    66b8:	30 41 00             	xor    %al,0x0(%ecx)
	...

000066bc <puth>:
    66bc:	04 12                	add    $0x12,%al
    66be:	04 41                	add    $0x41,%al
    66c0:	31 80 06 00 0c 4f    	xor    %eax,0x4f0c0006(%eax)
    66c6:	84 4f fe             	test   %cl,-0x2(%edi)
    66c9:	ff                   	(bad)  
    66ca:	3f                   	aas    
    66cb:	f0 0f 00 5f 4f       	lock ltr 0x4f(%edi)
    66d0:	ce                   	into   
    66d1:	44                   	inc    %esp
    66d2:	8f                   	(bad)  
    66d3:	11 84 4c fc ff b0 12 	adc    %eax,0x12b0fffc(%esp,%ecx,2)
    66da:	f4                   	hlt    
    66db:	66 84 4f fa          	data16 test %cl,-0x6(%edi)
    66df:	ff 31                	pushl  (%ecx)
    66e1:	50                   	push   %eax
    66e2:	06                   	push   %es
    66e3:	00 34 41             	add    %dh,(%ecx,%eax,2)
    66e6:	30 41 04             	xor    %al,0x4(%ecx)

000066e8 <mspconsole_init>:
    66e8:	04 12                	add    $0x12,%al
    66ea:	04 41                	add    $0x41,%al
    66ec:	b0 12                	mov    $0x12,%al
    66ee:	c6                   	(bad)  
    66ef:	6b 34 41 30          	imul   $0x30,(%ecx,%eax,2),%esi
    66f3:	41                   	inc    %ecx

000066f4 <io_putchar>:
    66f4:	04 12                	add    $0x12,%al
    66f6:	04 41                	add    $0x41,%al
    66f8:	31 80 06 00 0c 4f    	xor    %eax,0x4f0c0006(%eax)
    66fe:	84 4f fe             	test   %cl,-0x2(%edi)
    6701:	ff 5d 44             	lcall  *0x44(%ebp)
    6704:	fe                   	(bad)  
    6705:	ff c4                	inc    %esp
    6707:	4d                   	dec    %ebp
    6708:	fd                   	std    
    6709:	ff 0f                	decl   (%edi)
    670b:	44                   	inc    %esp
    670c:	3f                   	aas    
    670d:	80 03 00             	addb   $0x0,(%ebx)
    6710:	1e                   	push   %ds
    6711:	43                   	inc    %ebx
    6712:	84 4c fa ff          	test   %cl,-0x1(%edx,%edi,8)
    6716:	b0 12                	mov    $0x12,%al
    6718:	52                   	push   %edx
    6719:	6c                   	insb   (%dx),%es:(%edi)
    671a:	1f                   	pop    %ds
    671b:	44                   	inc    %esp
    671c:	fe                   	(bad)  
    671d:	ff 31                	pushl  (%ecx)
    671f:	50                   	push   %eax
    6720:	06                   	push   %es
    6721:	00 34 41             	add    %dh,(%ecx,%eax,2)
    6724:	30 41 00             	xor    %al,0x0(%ecx)
	...

00006728 <io_puts_no_newline>:
    6728:	04 12                	add    $0x12,%al
    672a:	04 41                	add    $0x41,%al
    672c:	31 82 0c 4f 84 4f    	xor    %eax,0x4f844f0c(%edx)
    6732:	fe                   	(bad)  
    6733:	ff 84 43 fc ff 1f 44 	incl   0x441ffffc(%ebx,%eax,2)
    673a:	fe                   	(bad)  
    673b:	ff 84 4f fa ff 84 4c 	incl   0x4c84fffa(%edi,%ecx,2)
    6742:	f8                   	clc    
    6743:	ff 00                	incl   (%eax)
    6745:	3c 1c                	cmp    $0x1c,%al

00006746 <.LBB28_1>:
    6746:	1c 44                	sbb    $0x44,%al
    6748:	fa                   	cli    
    6749:	ff 0d 4c 1d 53 84    	decl   0x84531d4c
    674f:	4d                   	dec    %ebp
    6750:	fa                   	cli    
    6751:	ff 6e 4c             	ljmp   *0x4c(%esi)
    6754:	4e                   	dec    %esi
    6755:	93                   	xchg   %eax,%ebx
    6756:	07                   	pop    %es
    6757:	24 00                	and    $0x0,%al
    6759:	3c 1c                	cmp    $0x1c,%al

0000675a <.LBB28_2>:
    675a:	1c 44                	sbb    $0x44,%al
    675c:	fc                   	cld    
    675d:	ff 1c 53             	lcall  *(%ebx,%edx,2)
    6760:	84 4c fc ff          	test   %cl,-0x1(%esp,%edi,8)
    6764:	f0 3f                	lock aas 

00006766 <.LBB28_3>:
    6766:	1f                   	pop    %ds
    6767:	44                   	inc    %esp
    6768:	fe                   	(bad)  
    6769:	ff 1e                	lcall  *(%esi)
    676b:	44                   	inc    %esp
    676c:	fc                   	cld    
    676d:	ff b0 12 52 6c 1f    	pushl  0x1f6c5212(%eax)
    6773:	44                   	inc    %esp
    6774:	fc                   	cld    
    6775:	ff 31                	pushl  (%ecx)
    6777:	52                   	push   %edx
    6778:	34 41                	xor    $0x41,%al
    677a:	30 41 04             	xor    %al,0x4(%ecx)

0000677c <io_puts>:
    677c:	04 12                	add    $0x12,%al
    677e:	04 41                	add    $0x41,%al
    6780:	31 82 0c 4f 84 4f    	xor    %eax,0x4f844f0c(%edx)
    6786:	fe                   	(bad)  
    6787:	ff 84 4c fa ff b0 12 	incl   0x12b0fffa(%esp,%ecx,2)
    678e:	28 67 84             	sub    %ah,-0x7c(%edi)
    6791:	4f                   	dec    %edi
    6792:	fc                   	cld    
    6793:	ff                   	(bad)  
    6794:	3f                   	aas    
    6795:	40                   	inc    %eax
    6796:	0a 00                	or     (%eax),%al
    6798:	b0 12                	mov    $0x12,%al
    679a:	f4                   	hlt    
    679b:	66 1c 44             	data16 sbb $0x44,%al
    679e:	fc                   	cld    
    679f:	ff 84 4f f8 ff 0f 4c 	incl   0x4c0ffff8(%edi,%ecx,2)
    67a6:	31 52 34             	xor    %edx,0x34(%edx)
    67a9:	41                   	inc    %ecx
    67aa:	30 41 04             	xor    %al,0x4(%ecx)

000067ac <task_prologue>:
    67ac:	04 12                	add    $0x12,%al
    67ae:	04 41                	add    $0x41,%al
    67b0:	31 80 06 00 1c 42    	xor    %eax,0x421c0006(%eax)
    67b6:	d4 54                	aam    $0x54
    67b8:	1c 4c                	sbb    $0x4c,%al
    67ba:	04 00                	add    $0x0,%al
    67bc:	2c 4c                	sub    $0x4c,%al
    67be:	84 4c fe ff          	test   %cl,-0x1(%esi,%edi,8)
    67c2:	1c 42                	sbb    $0x42,%al
    67c4:	d4 54                	aam    $0x54
    67c6:	1c 4c                	sbb    $0x4c,%al
    67c8:	02 00                	add    (%eax),%al
    67ca:	1d 44 fe ff 1d       	sbb    $0x1dfffe44,%eax
    67cf:	4d                   	dec    %ebp
    67d0:	08 00                	or     %al,(%eax)
    67d2:	0c 9d                	or     $0x9d,%al
    67d4:	3a 24 00             	cmp    (%eax,%eax,1),%ah
    67d7:	3c 00                	cmp    $0x0,%al

000067d8 <.LBB30_1>:
    67d8:	00 3c 1c             	add    %bh,(%esp,%ebx,1)

000067da <.LBB30_2>:
    67da:	1c 42                	sbb    $0x42,%al
    67dc:	b6 54                	mov    $0x54,%dh
    67de:	1d 42 b8 54 0c       	sbb    $0xc54b842,%eax
    67e3:	9d                   	popf   
    67e4:	25 2c 00 3c 1c       	and    $0x1c3c002c,%eax

000067e8 <.LBB30_3>:
    67e8:	1c 42                	sbb    $0x42,%al
    67ea:	b6 54                	mov    $0x54,%dh
    67ec:	0c 5c                	or     $0x5c,%al
    67ee:	1c 4c                	sbb    $0x4c,%al
    67f0:	d8 54 84 4c          	fcoms  0x4c(%esp,%eax,4)
    67f4:	fc                   	cld    
    67f5:	ff 0c 93             	decl   (%ebx,%edx,4)
    67f8:	15 24 00 3c 1c       	adc    $0x1c3c0024,%eax

000067fc <.LBB30_4>:
    67fc:	1c 42                	sbb    $0x42,%al
    67fe:	b6 54                	mov    $0x54,%dh
    6800:	0c 5c                	or     $0x5c,%al
    6802:	1c 4c                	sbb    $0x4c,%al
    6804:	1a 55 84             	sbb    -0x7c(%ebp),%dl
    6807:	4c                   	dec    %esp
    6808:	fa                   	cli    
    6809:	ff 1f                	lcall  *(%edi)
    680b:	44                   	inc    %esp
    680c:	fc                   	cld    
    680d:	ff 1c 42             	lcall  *(%edx,%eax,2)
    6810:	b6 54                	mov    $0x54,%dh
    6812:	0c 5c                	or     $0x5c,%al
    6814:	3c 50                	cmp    $0x50,%al
    6816:	5c                   	pop    %esp
    6817:	55                   	push   %ebp
    6818:	1d 44 fa ff 0e       	sbb    $0xefffa44,%eax
    681d:	4c                   	dec    %esp
    681e:	b0 12                	mov    $0x12,%al
    6820:	f4                   	hlt    
    6821:	61                   	popa   
    6822:	00 3c 1c             	add    %bh,(%esp,%ebx,1)

00006824 <.LBB30_5>:
    6824:	1c 42                	sbb    $0x42,%al
    6826:	b6 54                	mov    $0x54,%dh
    6828:	1c 53                	sbb    $0x53,%al
    682a:	82                   	(bad)  
    682b:	4c                   	dec    %esp
    682c:	b6 54                	mov    $0x54,%dh
    682e:	d5 3f                	aad    $0x3f

00006830 <.LBB30_6>:
    6830:	82                   	(bad)  
    6831:	43                   	inc    %ebx
    6832:	b8 54 82 43 b6       	mov    $0xb6438254,%eax
    6837:	54                   	push   %esp
    6838:	1c 42                	sbb    $0x42,%al
    683a:	d4 54                	aam    $0x54
    683c:	1c 4c                	sbb    $0x4c,%al
    683e:	02 00                	add    (%eax),%al
    6840:	1d 44 fe ff 8d       	sbb    $0x8dfffe44,%eax
    6845:	4c                   	dec    %esp
    6846:	08 00                	or     %al,(%eax)
    6848:	03 3c 82             	add    (%edx,%eax,4),%edi

0000684a <.LBB30_7>:
    684a:	82                   	(bad)  
    684b:	43                   	inc    %ebx
    684c:	b8 54 00 3c 31       	mov    $0x313c0054,%eax

00006850 <.LBB30_8>:
    6850:	31 50 06             	xor    %edx,0x6(%eax)
    6853:	00 34 41             	add    %dh,(%ecx,%eax,2)
    6856:	30 41 04             	xor    %al,0x4(%ecx)

00006858 <transition_to>:
    6858:	04 12                	add    $0x12,%al
    685a:	04 41                	add    $0x41,%al
    685c:	31 80 0a 00 0c 4f    	xor    %eax,0x4f0c000a(%eax)
    6862:	84 4f fe             	test   %cl,-0x2(%edi)
    6865:	ff 1f                	lcall  *(%edi)
    6867:	42                   	inc    %edx
    6868:	d4 54                	aam    $0x54
    686a:	3d 40 ce 54 3e       	cmp    $0x3e54ce40,%eax
    686f:	40                   	inc    %eax
    6870:	c2 54 0f             	ret    $0xf54
    6873:	9d                   	popf   
    6874:	84 4c fa ff          	test   %cl,-0x1(%edx,%edi,8)
    6878:	84 4d f8             	test   %cl,-0x8(%ebp)
    687b:	ff 84 4e f6 ff 04 24 	incl   0x2404fff6(%esi,%ecx,2)
    6882:	1c 44                	sbb    $0x44,%al
    6884:	f8                   	clc    
    6885:	ff 84 4c f6 ff 1c 44 	incl   0x441cfff6(%esp,%ecx,2)

0000688a <.LBB31_2>:
    688a:	1c 44                	sbb    $0x44,%al
    688c:	f6 ff                	idiv   %bh
    688e:	84 4c fc ff          	test   %cl,-0x1(%esp,%edi,8)
    6892:	1d 44 fe ff 8c       	sbb    $0x8cfffe44,%eax
    6897:	4d                   	dec    %ebp
    6898:	00 00                	add    %al,(%eax)
    689a:	1c 42                	sbb    $0x42,%al
    689c:	d4 54                	aam    $0x54
    689e:	1c 4c                	sbb    $0x4c,%al
    68a0:	02 00                	add    (%eax),%al
    68a2:	1c 53                	sbb    $0x53,%al
    68a4:	1d 44 fc ff 8d       	sbb    $0x8dfffc44,%eax
    68a9:	4c                   	dec    %esp
    68aa:	02 00                	add    (%eax),%al
    68ac:	1c 42                	sbb    $0x42,%al
    68ae:	d4 54                	aam    $0x54
    68b0:	1c 4c                	sbb    $0x4c,%al
    68b2:	02 00                	add    (%eax),%al
    68b4:	1d 44 fc ff 1d       	sbb    $0x1dfffc44,%eax
    68b9:	4d                   	dec    %ebp
    68ba:	04 00                	add    $0x0,%al
    68bc:	8d 4c 02 00          	lea    0x0(%edx,%eax,1),%ecx
    68c0:	1c 42                	sbb    $0x42,%al
    68c2:	d4 54                	aam    $0x54
    68c4:	2c 4c                	sub    $0x4c,%al
    68c6:	1d 44 fc ff 1d       	sbb    $0x1dfffc44,%eax
    68cb:	4d                   	dec    %ebp
    68cc:	04 00                	add    $0x0,%al
    68ce:	8d 4c 00 00          	lea    0x0(%eax,%eax,1),%ecx
    68d2:	1c 44                	sbb    $0x44,%al
    68d4:	fc                   	cld    
    68d5:	ff 82 4c d4 54 b0    	incl   -0x4fab2bb4(%edx)
    68db:	12 ac 67 1c 44 fe ff 	adc    -0x1bbe4(%edi,%eiz,2),%ch
    68e2:	2c 4c                	sub    $0x4c,%al
    68e4:	31 40 00             	xor    %eax,0x0(%eax)
    68e7:	24 00                	and    $0x0,%al
    68e9:	4c                   	dec    %esp
    68ea:	31 50 0a             	xor    %edx,0xa(%eax)
    68ed:	00 34 41             	add    %dh,(%ecx,%eax,2)
    68f0:	30 41 00             	xor    %al,0x0(%ecx)
	...

000068f4 <chan_in>:
    68f4:	04 12                	add    $0x12,%al
    68f6:	04 41                	add    $0x41,%al
    68f8:	0b 12                	or     (%edx),%edx
    68fa:	0a 12                	or     (%edx),%dl
    68fc:	31 80 18 00 0c 4d    	xor    %eax,0x4d0c0018(%eax)
    6902:	0b 4e 0a             	or     0xa(%esi),%ecx
    6905:	4f                   	dec    %edi
    6906:	84 4f fa             	test   %cl,-0x6(%edi)
    6909:	ff 84 4e f8 ff 84 4d 	incl   0x4d84fff8(%esi,%ecx,2)
    6910:	f6 ff                	idiv   %bh
    6912:	84 43 f2             	test   %al,-0xe(%ebx)
    6915:	ff 1d 44 f8 ff 2d    	lcall  *0x2dfff844
    691b:	53                   	push   %ebx
    691c:	84 4d ee             	test   %cl,-0x12(%ebp)
    691f:	ff 1d 44 f8 ff 84    	lcall  *0x84fff844
    6925:	4d                   	dec    %ebp
    6926:	ec                   	in     (%dx),%al
    6927:	ff 1d 44 ee ff 1e    	lcall  *0x1effee44
    692d:	44                   	inc    %esp
    692e:	f6 ff                	idiv   %bh
    6930:	0d 5e 84 4d ea       	or     $0xea4d845e,%eax
    6935:	ff 84 4d f0 ff 0f 4d 	incl   0x4d0ffff0(%ebp,%ecx,2)
    693c:	84 4c e8 ff          	test   %cl,-0x1(%eax,%ebp,8)
    6940:	84 4b e6             	test   %cl,-0x1a(%ebx)
    6943:	ff 84 4a e4 ff 31 50 	incl   0x5031ffe4(%edx,%ecx,2)
    694a:	18 00                	sbb    %al,(%eax)
    694c:	3a 41 3b             	cmp    0x3b(%ecx),%al
    694f:	41                   	inc    %ecx
    6950:	34 41                	xor    $0x41,%al
    6952:	30 41 04             	xor    %al,0x4(%ecx)

00006954 <chan_out>:
    6954:	04 12                	add    $0x12,%al
    6956:	04 41                	add    $0x41,%al
    6958:	31 80 14 00 1c 44    	xor    %eax,0x441c0014(%eax)
    695e:	0a 00                	or     (%eax),%al
    6960:	1d 44 08 00 1e       	sbb    $0x1e000844,%eax
    6965:	44                   	inc    %esp
    6966:	06                   	push   %es
    6967:	00 1f                	add    %bl,(%edi)
    6969:	44                   	inc    %esp
    696a:	04 00                	add    $0x0,%al
    696c:	84 4f fe             	test   %cl,-0x2(%edi)
    696f:	ff 84 4e fc ff 84 4d 	incl   0x4d84fffc(%esi,%ecx,2)
    6976:	fa                   	cli    
    6977:	ff 84 4c f8 ff 1c 44 	incl   0x441cfff8(%esp,%ecx,2)
    697e:	fa                   	cli    
    697f:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    6982:	84 4c f0 ff          	test   %cl,-0x1(%eax,%esi,8)
    6986:	1c 44                	sbb    $0x44,%al
    6988:	fa                   	cli    
    6989:	ff 84 4c ee ff 1c 44 	incl   0x441cffee(%esp,%ecx,2)
    6990:	f0 ff 1d 44 f8 ff 0c 	lock lcall *0xcfff844
    6997:	5d                   	pop    %ebp
    6998:	84 4c ec ff          	test   %cl,-0x1(%esp,%ebp,8)
    699c:	84 4c f2 ff          	test   %cl,-0x1(%edx,%esi,8)
    69a0:	1e                   	push   %ds
    69a1:	44                   	inc    %esp
    69a2:	fe                   	(bad)  
    69a3:	ff 1d 44 fc ff 0f    	lcall  *0xffffc44
    69a9:	4c                   	dec    %esp
    69aa:	b0 12                	mov    $0x12,%al
    69ac:	f4                   	hlt    
    69ad:	61                   	popa   
    69ae:	31 50 14             	xor    %edx,0x14(%eax)
    69b1:	00 34 41             	add    %dh,(%ecx,%eax,2)
    69b4:	30 41 00             	xor    %al,0x0(%ecx)
	...

000069b8 <write_to_gbuf>:
    69b8:	04 12                	add    $0x12,%al
    69ba:	04 41                	add    $0x41,%al
    69bc:	0b 12                	or     (%edx),%edx
    69be:	0a 12                	or     (%edx),%dl
    69c0:	31 80 12 00 0c 4d    	xor    %eax,0x4d0c0012(%eax)
    69c6:	0b 4e 0a             	or     0xa(%esi),%ecx
    69c9:	4f                   	dec    %edi
    69ca:	84 4f fa             	test   %cl,-0x6(%edi)
    69cd:	ff 84 4e f8 ff 84 4d 	incl   0x4d84fff8(%esi,%ecx,2)
    69d4:	f6 ff                	idiv   %bh
    69d6:	1d 42 b8 54 0d       	sbb    $0xd54b842,%eax
    69db:	5d                   	pop    %ebp
    69dc:	3d 50 5c 55 1e       	cmp    $0x1e555c50,%eax
    69e1:	44                   	inc    %esp
    69e2:	fa                   	cli    
    69e3:	ff 1f                	lcall  *(%edi)
    69e5:	44                   	inc    %esp
    69e6:	f6 ff                	idiv   %bh
    69e8:	84 4f f0             	test   %cl,-0x10(%edi)
    69eb:	ff 0f                	decl   (%edi)
    69ed:	4d                   	dec    %ebp
    69ee:	1d 44 f0 ff 84       	sbb    $0x84fff044,%eax
    69f3:	4c                   	dec    %esp
    69f4:	ee                   	out    %al,(%dx)
    69f5:	ff 84 4b ec ff 84 4a 	incl   0x4a84ffec(%ebx,%ecx,2)
    69fc:	ea ff b0 12 f4 61 1c 	ljmp   $0x1c61,$0xf412b0ff
    6a03:	44                   	inc    %esp
    6a04:	f6 ff                	idiv   %bh
    6a06:	1d 42 b8 54 0d       	sbb    $0xd54b842,%eax
    6a0b:	5d                   	pop    %ebp
    6a0c:	8d 4c 1a 55          	lea    0x55(%edx,%ebx,1),%ecx
    6a10:	1c 44                	sbb    $0x44,%al
    6a12:	f8                   	clc    
    6a13:	ff 1d 42 b8 54 0d    	lcall  *0xd54b842
    6a19:	5d                   	pop    %ebp
    6a1a:	8d 4c d8 54          	lea    0x54(%eax,%ebx,8),%ecx
    6a1e:	1c 44                	sbb    $0x44,%al
    6a20:	f6 ff                	idiv   %bh
    6a22:	3c 90                	cmp    $0x90,%al
    6a24:	03 00                	add    (%eax),%eax
    6a26:	2a 28                	sub    (%eax),%ch
    6a28:	00 3c 1c             	add    %bh,(%esp,%ebx,1)

00006a2a <.LBB34_1>:
    6a2a:	1c 44                	sbb    $0x44,%al
    6a2c:	f6 ff                	idiv   %bh
    6a2e:	3c 53                	cmp    $0x53,%al
    6a30:	12 c3                	adc    %bl,%al
    6a32:	0c 10                	or     $0x10,%al
    6a34:	1c 53                	sbb    $0x53,%al
    6a36:	84 4c f4 ff          	test   %cl,-0x1(%esp,%esi,8)
    6a3a:	94                   	xchg   %eax,%esp
    6a3b:	43                   	inc    %ebx
    6a3c:	f2 ff 00             	repnz incl (%eax)
    6a3f:	3c 1c                	cmp    $0x1c,%al

00006a40 <.LBB34_2>:
    6a40:	1c 44                	sbb    $0x44,%al
    6a42:	f2 ff 1d 44 f4 ff 0c 	repnz lcall *0xcfff444
    6a49:	9d                   	popf   
    6a4a:	10 2c 00             	adc    %ch,(%eax,%eax,1)
    6a4d:	3c 1c                	cmp    $0x1c,%al

00006a4e <.LBB34_3>:
    6a4e:	1c 42                	sbb    $0x42,%al
    6a50:	b8 54 1d 44 f2       	mov    $0xf2441d54,%eax
    6a55:	ff 0c 5d 0c 5c 8c 43 	decl   0x438c5c0c(,%ebx,2)
    6a5c:	d8 54 00 3c          	fcoms  0x3c(%eax,%eax,1)

00006a60 <.LBB34_4>:
    6a60:	1c 44                	sbb    $0x44,%al
    6a62:	f2 ff 1c 53          	repnz lcall *(%ebx,%edx,2)
    6a66:	84 4c f2 ff          	test   %cl,-0x1(%edx,%esi,8)
    6a6a:	ea 3f 1c 44 f4 ff 1d 	ljmp   $0x1dff,$0xf4441c3f

00006a6c <.LBB34_5>:
    6a6c:	1c 44                	sbb    $0x44,%al
    6a6e:	f4                   	hlt    
    6a6f:	ff 1d 42 b8 54 0d    	lcall  *0xd54b842
    6a75:	5c                   	pop    %esp
    6a76:	82                   	(bad)  
    6a77:	4d                   	dec    %ebp
    6a78:	b8 54 06 3c 1c       	mov    $0x1c3c0654,%eax

00006a7c <.LBB34_6>:
    6a7c:	1c 42                	sbb    $0x42,%al
    6a7e:	b8 54 1c 53 82       	mov    $0x82531c54,%eax
    6a83:	4c                   	dec    %esp
    6a84:	b8 54 00 3c 31       	mov    $0x313c0054,%eax

00006a88 <.LBB34_7>:
    6a88:	31 50 12             	xor    %edx,0x12(%eax)
    6a8b:	00 3a                	add    %bh,(%edx)
    6a8d:	41                   	inc    %ecx
    6a8e:	3b 41 34             	cmp    0x34(%ecx),%eax
    6a91:	41                   	inc    %ecx
    6a92:	30 41 04             	xor    %al,0x4(%ecx)

00006a94 <chan_out_gbuf>:
    6a94:	04 12                	add    $0x12,%al
    6a96:	04 41                	add    $0x41,%al
    6a98:	31 80 18 00 1c 44    	xor    %eax,0x441c0018(%eax)
    6a9e:	0a 00                	or     (%eax),%al
    6aa0:	1d 44 08 00 1e       	sbb    $0x1e000844,%eax
    6aa5:	44                   	inc    %esp
    6aa6:	06                   	push   %es
    6aa7:	00 1f                	add    %bl,(%edi)
    6aa9:	44                   	inc    %esp
    6aaa:	04 00                	add    $0x0,%al
    6aac:	84 4f fe             	test   %cl,-0x2(%edi)
    6aaf:	ff 84 4e fc ff 84 4d 	incl   0x4d84fffc(%esi,%ecx,2)
    6ab6:	fa                   	cli    
    6ab7:	ff 84 4c f8 ff 1c 44 	incl   0x441cfff8(%esp,%ecx,2)
    6abe:	fa                   	cli    
    6abf:	ff 2c 53             	ljmp   *(%ebx,%edx,2)
    6ac2:	84 4c f0 ff          	test   %cl,-0x1(%eax,%esi,8)
    6ac6:	1c 44                	sbb    $0x44,%al
    6ac8:	fa                   	cli    
    6ac9:	ff 84 4c ee ff 1c 44 	incl   0x441cffee(%esp,%ecx,2)
    6ad0:	f0 ff 1d 44 f8 ff 0c 	lock lcall *0xcfff844
    6ad7:	5d                   	pop    %ebp
    6ad8:	84 4c ec ff          	test   %cl,-0x1(%esp,%ebp,8)
    6adc:	1c 42                	sbb    $0x42,%al
    6ade:	b8 54 0c 5c 3c       	mov    $0x3c5c0c54,%eax
    6ae3:	50                   	push   %eax
    6ae4:	5c                   	pop    %esp
    6ae5:	55                   	push   %ebp
    6ae6:	1e                   	push   %ds
    6ae7:	44                   	inc    %esp
    6ae8:	fe                   	(bad)  
    6ae9:	ff 1d 44 fc ff 0f    	lcall  *0xffffc44
    6aef:	4c                   	dec    %esp
    6af0:	b0 12                	mov    $0x12,%al
    6af2:	f4                   	hlt    
    6af3:	61                   	popa   
    6af4:	1c 44                	sbb    $0x44,%al
    6af6:	fc                   	cld    
    6af7:	ff 1d 42 b8 54 0d    	lcall  *0xd54b842
    6afd:	5d                   	pop    %ebp
    6afe:	8d 4c 1a 55          	lea    0x55(%edx,%ebx,1),%ecx
    6b02:	1c 44                	sbb    $0x44,%al
    6b04:	ec                   	in     (%dx),%al
    6b05:	ff 84 4c f2 ff 1d 42 	incl   0x421dfff2(%esp,%ecx,2)
    6b0c:	b8 54 0d 5d 8d       	mov    $0x8d5d0d54,%eax
    6b11:	4c                   	dec    %esp
    6b12:	d8 54 1c 44          	fcoms  0x44(%esp,%ebx,1)
    6b16:	fc                   	cld    
    6b17:	ff                   	(bad)  
    6b18:	3c 90                	cmp    $0x90,%al
    6b1a:	03 00                	add    (%eax),%eax
    6b1c:	2a 28                	sub    (%eax),%ch
    6b1e:	00 3c 1c             	add    %bh,(%esp,%ebx,1)

00006b20 <.LBB35_1>:
    6b20:	1c 44                	sbb    $0x44,%al
    6b22:	fc                   	cld    
    6b23:	ff                   	(bad)  
    6b24:	3c 53                	cmp    $0x53,%al
    6b26:	12 c3                	adc    %bl,%al
    6b28:	0c 10                	or     $0x10,%al
    6b2a:	1c 53                	sbb    $0x53,%al
    6b2c:	84 4c ea ff          	test   %cl,-0x1(%edx,%ebp,8)
    6b30:	94                   	xchg   %eax,%esp
    6b31:	43                   	inc    %ebx
    6b32:	e8 ff 00 3c 1c       	call   1c3c6c36 <__high_dataend+0x1c3b6c34>

00006b36 <.LBB35_2>:
    6b36:	1c 44                	sbb    $0x44,%al
    6b38:	e8 ff 1d 44 ea       	call   ea44893c <__high_dataend+0xea43893a>
    6b3d:	ff 0c 9d 10 2c 00 3c 	decl   0x3c002c10(,%ebx,4)

00006b44 <.LBB35_3>:
    6b44:	1c 42                	sbb    $0x42,%al
    6b46:	b8 54 1d 44 e8       	mov    $0xe8441d54,%eax
    6b4b:	ff 0c 5d 0c 5c 8c 43 	decl   0x438c5c0c(,%ebx,2)
    6b52:	d8 54 00 3c          	fcoms  0x3c(%eax,%eax,1)

00006b56 <.LBB35_4>:
    6b56:	1c 44                	sbb    $0x44,%al
    6b58:	e8 ff 1c 53 84       	call   8453885c <__high_dataend+0x8452885a>
    6b5d:	4c                   	dec    %esp
    6b5e:	e8 ff ea 3f 1c       	call   1c405662 <__high_dataend+0x1c3f5660>

00006b62 <.LBB35_5>:
    6b62:	1c 44                	sbb    $0x44,%al
    6b64:	ea ff 1d 42 b8 54 0d 	ljmp   $0xd54,$0xb8421dff
    6b6b:	5c                   	pop    %esp
    6b6c:	82                   	(bad)  
    6b6d:	4d                   	dec    %ebp
    6b6e:	b8 54 06 3c 1c       	mov    $0x1c3c0654,%eax

00006b72 <.LBB35_6>:
    6b72:	1c 42                	sbb    $0x42,%al
    6b74:	b8 54 1c 53 82       	mov    $0x82531c54,%eax
    6b79:	4c                   	dec    %esp
    6b7a:	b8 54 00 3c 31       	mov    $0x313c0054,%eax

00006b7e <.LBB35_7>:
    6b7e:	31 50 18             	xor    %edx,0x18(%eax)
    6b81:	00 34 41             	add    %dh,(%ecx,%eax,2)
    6b84:	30 41 00             	xor    %al,0x0(%ecx)
	...

00006b88 <main>:
    6b88:	04 12                	add    $0x12,%al
    6b8a:	04 41                	add    $0x41,%al
    6b8c:	21 83 84 43 fe ff    	and    %eax,-0x1bc7c(%ebx)
    6b92:	b0 12                	mov    $0x12,%al
    6b94:	5c                   	pop    %esp
    6b95:	61                   	popa   
    6b96:	1c 42                	sbb    $0x42,%al
    6b98:	d6                   	(bad)  
    6b99:	54                   	push   %esp
    6b9a:	1c 53                	sbb    $0x53,%al
    6b9c:	82                   	(bad)  
    6b9d:	4c                   	dec    %esp
    6b9e:	d6                   	(bad)  
    6b9f:	54                   	push   %esp
    6ba0:	b0 12                	mov    $0x12,%al
    6ba2:	ac                   	lods   %ds:(%esi),%al
    6ba3:	67 1c 42             	addr16 sbb $0x42,%al
    6ba6:	d4 54                	aam    $0x54
    6ba8:	2c 4c                	sub    $0x4c,%al
    6baa:	2c 4c                	sub    $0x4c,%al
    6bac:	00 4c 0f 43          	add    %cl,0x43(%edi,%ecx,1)
    6bb0:	21 53 34             	and    %edx,0x34(%ebx)
    6bb3:	41                   	inc    %ecx
    6bb4:	30 41 00             	xor    %al,0x0(%ecx)
	...

00006bb8 <__mulhi3hw_noint>:
    6bb8:	82                   	(bad)  
    6bb9:	4f                   	dec    %edi
    6bba:	c0 04 82 4e          	rolb   $0x4e,(%edx,%eax,4)
    6bbe:	c8 04 1f 42          	enter  $0x1f04,$0x42
    6bc2:	ca 04 30             	lret   $0x3004
    6bc5:	41                   	inc    %ecx

00006bc6 <UART_init>:
    6bc6:	92                   	xchg   %eax,%edx
    6bc7:	43                   	inc    %ebx
    6bc8:	c0 05 b2 d0 80 00 c0 	rolb   $0xc0,0x80d0b2

00006bca <.Loc.36.1>:
    6bca:	b2 d0                	mov    $0xd0,%dl
    6bcc:	80 00 c0             	addb   $0xc0,(%eax)
    6bcf:	05 e2 42 c6 05       	add    $0x5c642e2,%eax

00006bd0 <.Loc.69.1>:
    6bd0:	e2 42                	loop   6c14 <.Loc.109.1>
    6bd2:	c6 05 c2 43 c7 05 b2 	movb   $0xb2,0x5c743c2

00006bd4 <.Loc.70.1>:
    6bd4:	c2 43 c7             	ret    $0xc743
    6bd7:	05 b2 40 41 55       	add    $0x554140b2,%eax

00006bd8 <.Loc.71.1>:
    6bd8:	b2 40                	mov    $0x40,%dl
    6bda:	41                   	inc    %ecx
    6bdb:	55                   	push   %ebp
    6bdc:	c8 05 d2 c3          	enter  $0xd205,$0xc3

00006bde <.Loc.76.1>:
    6bde:	d2 c3                	rol    %cl,%bl
    6be0:	0b 02                	or     (%edx),%eax

00006be2 <.Loc.77.1>:
    6be2:	d2 d3                	rcl    %cl,%bl
    6be4:	0d 02 e2 c3 0b       	or     $0xbc3e202,%eax

00006be6 <.Loc.79.1>:
    6be6:	e2 c3                	loop   6bab <main+0x23>
    6be8:	0b 02                	or     (%edx),%eax

00006bea <.Loc.80.1>:
    6bea:	e2 d3                	loop   6bbf <__mulhi3hw_noint+0x7>
    6bec:	0d 02 92 c3 c0       	or     $0xc0c39202,%eax

00006bee <.Loc.91.1>:
    6bee:	92                   	xchg   %eax,%edx
    6bef:	c3                   	ret    
    6bf0:	c0 05 3c 40 22 1c cc 	rolb   $0xcc,0x1c22403c

00006bf2 <.Loc.94.1>:
    6bf2:	3c 40                	cmp    $0x40,%al
    6bf4:	22 1c cc             	and    (%esp,%ecx,8),%bl
    6bf7:	43                   	inc    %ebx
	...

00006bfa <.Loc.95.1>:
    6bfa:	8c 43 04             	mov    %es,0x4(%ebx)
	...

00006bfe <.Loc.96.1>:
    6bfe:	cc                   	int3   
    6bff:	43                   	inc    %ebx
    6c00:	06                   	push   %es
	...

00006c02 <.Loc.97.1>:
    6c02:	8c 43 0a             	mov    %es,0xa(%ebx)
	...

00006c06 <.Loc.99.1>:
    6c06:	30 41 d2             	xor    %al,-0x2e(%ecx)

00006c08 <UART_teardown>:
    6c08:	d2 c3                	rol    %cl,%bl
    6c0a:	0b 02                	or     (%edx),%eax

00006c0c <.Loc.107.1>:
    6c0c:	d2 c3                	rol    %cl,%bl
    6c0e:	0d 02 e2 c3 0b       	or     $0xbc3e202,%eax

00006c10 <.Loc.108.1>:
    6c10:	e2 c3                	loop   6bd5 <.Loc.70.1+0x1>
    6c12:	0b 02                	or     (%edx),%eax

00006c14 <.Loc.109.1>:
    6c14:	e2 c3                	loop   6bd9 <.Loc.71.1+0x1>
    6c16:	0d 02 92 43 c0       	or     $0xc0439202,%eax

00006c18 <.Loc.110.1>:
    6c18:	92                   	xchg   %eax,%edx
    6c19:	43                   	inc    %ebx
    6c1a:	c0 05 c2 43 c6 05 82 	rolb   $0x82,0x5c643c2

00006c1c <.Loc.111.1>:
    6c1c:	c2 43 c6             	ret    $0xc643
    6c1f:	05 82 43 c8 05       	add    $0x5c84382,%eax

00006c20 <.Loc.112.1>:
    6c20:	82                   	(bad)  
    6c21:	43                   	inc    %ebx
    6c22:	c8 05 82 43          	enter  $0x8205,$0x43

00006c24 <.Loc.113.1>:
    6c24:	82                   	(bad)  
    6c25:	43                   	inc    %ebx
    6c26:	da 05 82 43 dc 05    	fiaddl 0x5dc4382

00006c28 <.Loc.114.1>:
    6c28:	82                   	(bad)  
    6c29:	43                   	inc    %ebx
    6c2a:	dc 05 30 41 3f 40    	faddl  0x403f4130

00006c2c <.Loc.115.1>:
    6c2c:	30 41 3f             	xor    %al,0x3f(%ecx)

00006c2e <UART_asyncSend>:
    6c2e:	3f                   	aas    
    6c2f:	40                   	inc    %eax
    6c30:	22 1c 6e             	and    (%esi,%ebp,2),%bl

00006c32 <.L4>:
    6c32:	6e                   	outsb  %ds:(%esi),(%dx)
    6c33:	4f                   	dec    %edi
    6c34:	0e                   	push   %cs
    6c35:	93                   	xchg   %eax,%ebx
    6c36:	fd                   	std    
    6c37:	23 3e                	and    (%esi),%edi

00006c38 <.Loc.131.1>:
    6c38:	3e 40                	ds inc %eax
    6c3a:	22 1c de             	and    (%esi,%ebx,8),%bl
    6c3d:	43                   	inc    %ebx
	...

00006c40 <.Loc.132.1>:
    6c40:	8e 4c 02 00          	mov    0x0(%edx,%eax,1),%cs

00006c44 <.Loc.133.1>:
    6c44:	8e 4d 04             	mov    0x4(%ebp),%cs
	...

00006c48 <.Loc.135.1>:
    6c48:	a2 c2 dc 05 a2       	mov    %al,0xa205dcc2

00006c4c <.Loc.137.1>:
    6c4c:	a2 d3 da 05 30       	mov    %al,0x3005dad3

00006c50 <.Loc.143.1>:
    6c50:	30 41 b0             	xor    %al,-0x50(%ecx)

00006c52 <UART_send>:
    6c52:	b0 12                	mov    $0x12,%al
    6c54:	2e 6c                	cs insb (%dx),%es:(%edi)

00006c56 <.LVL2>:
    6c56:	3d 40 22 1c 6c       	cmp    $0x6c1c2240,%eax

00006c5a <.L7>:
    6c5a:	6c                   	insb   (%dx),%es:(%edi)
    6c5b:	4d                   	dec    %ebp
    6c5c:	0c 93                	or     $0x93,%al
    6c5e:	fd                   	std    
    6c5f:	23 30                	and    (%eax),%esi

00006c60 <.Loc.159.1>:
    6c60:	30 41 3f             	xor    %al,0x3f(%ecx)

00006c62 <UART_critSend>:
    6c62:	3f                   	aas    
    6c63:	40                   	inc    %eax
    6c64:	22 1c 6e             	and    (%esi,%ebp,2),%bl

00006c66 <.L10>:
    6c66:	6e                   	outsb  %ds:(%esi),(%dx)
    6c67:	4f                   	dec    %edi
    6c68:	0e                   	push   %cs
    6c69:	93                   	xchg   %eax,%ebx
    6c6a:	fd                   	std    
    6c6b:	23 3e                	and    (%esi),%edi

00006c6c <.Loc.172.1>:
    6c6c:	3e 40                	ds inc %eax
    6c6e:	22 1c de             	and    (%esi,%ebx,8),%bl
    6c71:	43                   	inc    %ebx
	...

00006c74 <.Loc.173.1>:
    6c74:	8e 4c 02 00          	mov    0x0(%edx,%eax,1),%cs

00006c78 <.Loc.174.1>:
    6c78:	8e 4d 04             	mov    0x4(%ebp),%cs
	...

00006c7c <.Loc.176.1>:
    6c7c:	a2 c2 de 05 1c       	mov    %al,0x1c05dec2

00006c80 <.Loc.178.1>:
    6c80:	1c 4e                	sbb    $0x4e,%al
    6c82:	04 00                	add    $0x0,%al

00006c84 <.LVL4>:
    6c84:	0d 4c 3d 53 8e       	or     $0x8e533d4c,%eax

00006c86 <.LVL5>:
    6c86:	3d 53 8e 4d 04       	cmp    $0x44d8e53,%eax
	...

00006c8c <.LVL6>:
    6c8c:	0c 93                	or     $0x93,%al
    6c8e:	19 24 0c             	sbb    %esp,(%esp,%ecx,1)

00006c90 <.Loc.179.1>:
    6c90:	0c 4e                	or     $0x4e,%al

00006c92 <.L14>:
    6c92:	1d 4c 02 00 0e       	sbb    $0xe00024c,%eax
    6c97:	4d                   	dec    %ebp
    6c98:	1e                   	push   %ds
    6c99:	53                   	push   %ebx
    6c9a:	8c 4e 02             	mov    %cs,0x2(%esi)
    6c9d:	00 6d 4d             	add    %ch,0x4d(%ebp)
    6ca0:	3d f0 ff 00 82       	cmp    $0x8200fff0,%eax
    6ca5:	4d                   	dec    %ebp
    6ca6:	ce                   	into   
    6ca7:	05 a2 b3 dc 05       	add    $0x5dcb3a2,%eax

00006ca8 <.L12>:
    6ca8:	a2 b3 dc 05 fd       	mov    %al,0xfd05dcb3
    6cad:	27                   	daa    

00006cae <.Loc.182.1>:
    6cae:	a2 c3 dc 05 1d       	mov    %al,0x1d05dcc3

00006cb2 <.Loc.178.1>:
    6cb2:	1d 4c 04 00 0e       	sbb    $0xe00044c,%eax
    6cb7:	4d                   	dec    %ebp
    6cb8:	3e 53                	ds push %ebx
    6cba:	8c 4e 04             	mov    %cs,0x4(%esi)
    6cbd:	00 0d 93 e8 23 c2    	add    %cl,0xc223e893

00006cc2 <.L11>:
    6cc2:	c2 43 22             	ret    $0x2243
    6cc5:	1c 30                	sbb    $0x30,%al

00006cc6 <.Loc.186.1>:
    6cc6:	30 41 5c             	xor    %al,0x5c(%ecx)

00006cc8 <UART_isTxBusy>:
    6cc8:	5c                   	pop    %esp
    6cc9:	42                   	inc    %edx
    6cca:	22 1c 30             	and    (%eax,%esi,1),%bl
    6ccd:	41                   	inc    %ecx

00006cce <UART_asyncReceive>:
    6cce:	3f                   	aas    
    6ccf:	40                   	inc    %eax
    6cd0:	22 1c 5e             	and    (%esi,%ebx,2),%bl

00006cd2 <.L20>:
    6cd2:	5e                   	pop    %esi
    6cd3:	4f                   	dec    %edi
    6cd4:	06                   	push   %es
    6cd5:	00 0e                	add    %cl,(%esi)
    6cd7:	93                   	xchg   %eax,%ebx
    6cd8:	fc                   	cld    
    6cd9:	23 3e                	and    (%esi),%edi

00006cda <.Loc.208.1>:
    6cda:	3e 40                	ds inc %eax
    6cdc:	22 1c de             	and    (%esi,%ebx,8),%bl
    6cdf:	43                   	inc    %ebx
    6ce0:	06                   	push   %es
	...

00006ce2 <.Loc.209.1>:
    6ce2:	8e 4c 08 00          	mov    0x0(%eax,%ecx,1),%cs

00006ce6 <.Loc.210.1>:
    6ce6:	8e 4d 0a             	mov    0xa(%ebp),%cs
	...

00006cea <.Loc.212.1>:
    6cea:	92                   	xchg   %eax,%edx
    6ceb:	c3                   	ret    
    6cec:	dc 05 92 d3 da 05    	faddl  0x5dad392

00006cee <.Loc.214.1>:
    6cee:	92                   	xchg   %eax,%edx
    6cef:	d3 da                	rcr    %cl,%edx
    6cf1:	05 30 41 b0 12       	add    $0x12b04130,%eax

00006cf2 <.Loc.219.1>:
    6cf2:	30 41 b0             	xor    %al,-0x50(%ecx)

00006cf4 <UART_receive>:
    6cf4:	b0 12                	mov    $0x12,%al
    6cf6:	ce                   	into   
    6cf7:	6c                   	insb   (%dx),%es:(%edi)

00006cf8 <.LVL9>:
    6cf8:	3d 40 22 1c 5c       	cmp    $0x5c1c2240,%eax

00006cfc <.L23>:
    6cfc:	5c                   	pop    %esp
    6cfd:	4d                   	dec    %ebp
    6cfe:	06                   	push   %es
    6cff:	00 0c 93             	add    %cl,(%ebx,%edx,4)
    6d02:	fc                   	cld    
    6d03:	23 30                	and    (%eax),%esi

00006d04 <.Loc.235.1>:
    6d04:	30 41 3f             	xor    %al,0x3f(%ecx)

00006d06 <UART_critReceive>:
    6d06:	3f                   	aas    
    6d07:	40                   	inc    %eax
    6d08:	22 1c 5e             	and    (%esi,%ebx,2),%bl

00006d0a <.L26>:
    6d0a:	5e                   	pop    %esi
    6d0b:	4f                   	dec    %edi
    6d0c:	06                   	push   %es
    6d0d:	00 0e                	add    %cl,(%esi)
    6d0f:	93                   	xchg   %eax,%ebx
    6d10:	fc                   	cld    
    6d11:	23 3e                	and    (%esi),%edi

00006d12 <.Loc.248.1>:
    6d12:	3e 40                	ds inc %eax
    6d14:	22 1c de             	and    (%esi,%ebx,8),%bl
    6d17:	43                   	inc    %ebx
    6d18:	06                   	push   %es
	...

00006d1a <.Loc.249.1>:
    6d1a:	8e 4c 08 00          	mov    0x0(%eax,%ecx,1),%cs

00006d1e <.Loc.250.1>:
    6d1e:	8e 4d 0a             	mov    0xa(%ebp),%cs
	...

00006d22 <.Loc.252.1>:
    6d22:	92                   	xchg   %eax,%edx
    6d23:	c3                   	ret    
    6d24:	dc 05 1c 4e 0a 00    	faddl  0xa4e1c

00006d26 <.Loc.254.1>:
    6d26:	1c 4e                	sbb    $0x4e,%al
    6d28:	0a 00                	or     (%eax),%al

00006d2a <.LVL11>:
    6d2a:	0d 4c 3d 53 8e       	or     $0x8e533d4c,%eax

00006d2c <.LVL12>:
    6d2c:	3d 53 8e 4d 0a       	cmp    $0xa4d8e53,%eax
	...

00006d32 <.LVL13>:
    6d32:	0c 93                	or     $0x93,%al
    6d34:	18 24 0c             	sbb    %ah,(%esp,%ecx,1)

00006d36 <.LBB2>:
    6d36:	0c 4e                	or     $0x4e,%al

00006d38 <.L28>:
    6d38:	92                   	xchg   %eax,%edx
    6d39:	b3 dc                	mov    $0xdc,%bl
    6d3b:	05 fd 27 92 c3       	add    $0xc39227fd,%eax

00006d3e <.Loc.257.1>:
    6d3e:	92                   	xchg   %eax,%edx
    6d3f:	c3                   	ret    
    6d40:	dc 05 1e 42 cc 05    	faddl  0x5cc421e

00006d42 <.Loc.259.1>:
    6d42:	1e                   	push   %ds
    6d43:	42                   	inc    %edx
    6d44:	cc                   	int3   
    6d45:	05 1d 4c 08 00       	add    $0x84c1d,%eax

00006d46 <.LVL14>:
    6d46:	1d 4c 08 00 0f       	sbb    $0xf00084c,%eax
    6d4b:	4d                   	dec    %ebp
    6d4c:	1f                   	pop    %ds
    6d4d:	53                   	push   %ebx
    6d4e:	8c 4f 08             	mov    %cs,0x8(%edi)
	...

00006d52 <.Loc.259.1>:
    6d52:	cd 4e                	int    $0x4e
	...

00006d56 <.LBE2>:
    6d56:	1d 4c 0a 00 0e       	sbb    $0xe000a4c,%eax
    6d5b:	4d                   	dec    %ebp

00006d5c <.LVL15>:
    6d5c:	3e 53                	ds push %ebx
    6d5e:	8c 4e 0a             	mov    %cs,0xa(%esi)
    6d61:	00 0d 93 e9 23 c2    	add    %cl,0xc223e993

00006d66 <.L27>:
    6d66:	c2 43 28             	ret    $0x2843
    6d69:	1c 30                	sbb    $0x30,%al

00006d6a <.Loc.264.1>:
    6d6a:	30 41 5c             	xor    %al,0x5c(%ecx)

00006d6c <UART_isRxBusy>:
    6d6c:	5c                   	pop    %esp
    6d6d:	42                   	inc    %edx
    6d6e:	28 1c 30             	sub    %bl,(%eax,%esi,1)
    6d71:	41                   	inc    %ecx

00006d72 <UART_isRxDone>:
    6d72:	5c                   	pop    %esp
    6d73:	42                   	inc    %edx
    6d74:	28 1c 3c             	sub    %bl,(%esp,%edi,1)
    6d77:	53                   	push   %ebx

00006d78 <.Loc.280.1>:
    6d78:	5c                   	pop    %esp
    6d79:	03 4d 18             	add    0x18(%ebp),%ecx
    6d7c:	0c 11                	or     $0x11,%al
    6d7e:	30 41 3f             	xor    %al,0x3f(%ecx)

00006d80 <USCI_A0_ISR>:
    6d80:	3f                   	aas    
    6d81:	15 1c 42 de 05       	adc    $0x5de421c,%eax

00006d82 <.LCFI0>:
    6d82:	1c 42                	sbb    $0x42,%al
    6d84:	de 05 2c 93 03 24    	fiadd  0x2403932c
    6d8a:	2c 92                	sub    $0x92,%al
    6d8c:	1e                   	push   %ds
    6d8d:	24 38                	and    $0x38,%al
    6d8f:	3c 3d                	cmp    $0x3d,%al

00006d90 <.L38>:
    6d90:	3d 40 22 1c 1c       	cmp    $0x1c1c2240,%eax
    6d95:	4d                   	dec    %ebp
    6d96:	0a 00                	or     (%eax),%al
    6d98:	0e                   	push   %cs
    6d99:	4c                   	dec    %esp
    6d9a:	3e 53                	ds push %ebx
    6d9c:	8d 4e 0a             	lea    0xa(%esi),%ecx
    6d9f:	00 0c 93             	add    %cl,(%ebx,%edx,4)
    6da2:	0a 24 1e             	or     (%esi,%ebx,1),%ah

00006da4 <.Loc.302.1>:
    6da4:	1e                   	push   %ds
    6da5:	42                   	inc    %edx
    6da6:	cc                   	int3   
    6da7:	05 1c 4d 08 00       	add    $0x84d1c,%eax

00006da8 <.LVL16>:
    6da8:	1c 4d                	sbb    $0x4d,%al
    6daa:	08 00                	or     %al,(%eax)
    6dac:	0f 4c 1f             	cmovl  (%edi),%ebx
    6daf:	53                   	push   %ebx
    6db0:	8d 4f 08             	lea    0x8(%edi),%ecx
	...

00006db4 <.Loc.302.1>:
    6db4:	cc                   	int3   
    6db5:	4e                   	dec    %esi
	...

00006db8 <.L40>:
    6db8:	1c 42                	sbb    $0x42,%al
    6dba:	2c 1c                	sub    $0x1c,%al
    6dbc:	0c 93                	or     $0x93,%al
    6dbe:	20 20                	and    %ah,(%eax)

00006dc0 <.Loc.307.1>:
    6dc0:	92                   	xchg   %eax,%edx
    6dc1:	c3                   	ret    
    6dc2:	da 05 c2 43 28 1c    	fiaddl 0x1c2843c2

00006dc4 <.Loc.308.1>:
    6dc4:	c2 43 28             	ret    $0x2843
    6dc7:	1c 1b                	sbb    $0x1b,%al
    6dc9:	3c 3c                	cmp    $0x3c,%al

00006dca <.L39>:
    6dca:	3c 40                	cmp    $0x40,%al
    6dcc:	22 1c 1d 4c 02 00 0e 	and    0xe00024c(,%ebx,1),%bl
    6dd3:	4d                   	dec    %ebp
    6dd4:	1e                   	push   %ds
    6dd5:	53                   	push   %ebx
    6dd6:	8c 4e 02             	mov    %cs,0x2(%esi)
    6dd9:	00 6d 4d             	add    %ch,0x4d(%ebp)
    6ddc:	3d f0 ff 00 82       	cmp    $0x8200fff0,%eax
    6de1:	4d                   	dec    %ebp
    6de2:	ce                   	into   
    6de3:	05 1d 4c 04 00       	add    $0x44c1d,%eax

00006de4 <.Loc.314.1>:
    6de4:	1d 4c 04 00 3d       	sbb    $0x3d00044c,%eax
    6de9:	53                   	push   %ebx
    6dea:	8c 4d 04             	mov    %cs,0x4(%ebp)
    6ded:	00 0d 93 07 20 d2    	add    %cl,0xd2200793

00006df2 <.L42>:
    6df2:	d2                   	(bad)  
    6df3:	b3 ca                	mov    $0xca,%bl
    6df5:	05 fd 23 a2 c3       	add    $0xc3a223fd,%eax

00006df8 <.Loc.317.1>:
    6df8:	a2 c3 da 05 c2       	mov    %al,0xc205dac3

00006dfc <.Loc.318.1>:
    6dfc:	c2 43 22             	ret    $0x2243
    6dff:	1c 3c                	sbb    $0x3c,%al

00006e00 <.L36>:
    6e00:	3c 17                	cmp    $0x17,%al
    6e02:	00 13                	add    %dl,(%ebx)

00006e04 <memmove>:
    6e04:	0a 15 0d 9c 10 2c    	or     0x2c109c0d,%dl

00006e06 <.LCFI0>:
    6e06:	0d 9c 10 2c 0b       	or     $0xb2c109c,%eax

00006e08 <L0>:
    6e08:	10 2c 0b             	adc    %ch,(%ebx,%ecx,1)

00006e0a <.Loc.69.1>:
    6e0a:	0b 4d 0b             	or     0xb(%ebp),%ecx
    6e0d:	5e                   	pop    %esi
    6e0e:	0c 9b                	or     $0x9b,%al
    6e10:	0c 2c                	or     $0x2c,%al

00006e12 <.LVL2>:
    6e12:	0d 4e 3d 53 3d       	or     $0x3d533d4e,%eax

00006e14 <.L3>:
    6e14:	3d 53 3d 93 13       	cmp    $0x13933d53,%eax

00006e16 <.LVL4>:
    6e16:	3d 93 13 24 0f       	cmp    $0xf241393,%eax

00006e1a <.LVL5>:
    6e1a:	0f 4d 0f             	cmovge (%edi),%ecx
    6e1d:	8e 0f                	mov    (%edi),%cs
    6e1f:	5b                   	pop    %ebx
    6e20:	0a 4c 0a 5d          	or     0x5d(%edx,%ecx,1),%cl

00006e24 <.Loc.76.1>:
    6e24:	ea 4f 00 00 f5 3f 0f 	ljmp   $0xf3f,$0xf500004f

00006e2a <.L8>:
    6e2a:	0f 43 0f             	cmovae (%edi),%ecx

00006e2c <.L10>:
    6e2c:	0f 9e 08             	setle  (%eax)
    6e2f:	24 0a                	and    $0xa,%al

00006e30 <.LVL8>:
    6e30:	0a 4d 0a             	or     0xa(%ebp),%cl
    6e33:	5f                   	pop    %edi
    6e34:	0b 4c 0b 5f          	or     0x5f(%ebx,%ecx,1),%ecx

00006e38 <.Loc.83.1>:
    6e38:	eb 4a                	jmp    6e84 <.Loc.19.1+0x2>
    6e3a:	00 00                	add    %al,(%eax)
    6e3c:	1f                   	pop    %ds
    6e3d:	53                   	push   %ebx

00006e3e <.LVL9>:
    6e3e:	f6 3f                	idivb  (%edi)

00006e40 <.L9>:
    6e40:	0a 17                	or     (%edi),%dl
    6e42:	30 41 0f             	xor    %al,0xf(%ecx)

00006e44 <memset>:
    6e44:	0f 4c 0e             	cmovl  (%esi),%ecx
    6e47:	5c                   	pop    %esp

00006e48 <L0>:
    6e48:	0f 9e 04 24          	setle  (%esp)

00006e4c <.LVL3>:
    6e4c:	cf                   	iret   
    6e4d:	4d                   	dec    %ebp
    6e4e:	00 00                	add    %al,(%eax)
    6e50:	1f                   	pop    %ds
    6e51:	53                   	push   %ebx

00006e52 <.LVL4>:
    6e52:	fa                   	cli    
    6e53:	3f                   	aas    

00006e54 <.L5>:
    6e54:	30 41 0a             	xor    %al,0xa(%ecx)

00006e56 <__do_global_ctors_aux>:
    6e56:	0a 15 1c 42 e8 44    	or     0x44e8421c,%dl

00006e58 <L0>:
    6e58:	1c 42                	sbb    $0x42,%al
    6e5a:	e8 44 3c 93 08       	call   893aaa3 <__high_dataend+0x892aaa1>
    6e5f:	24 3a                	and    $0x3a,%al
    6e61:	40                   	inc    %eax
    6e62:	e8 44 8c 12 3a       	call   3a12faab <__high_dataend+0x3a11faa9>

00006e64 <.L3>:
    6e64:	8c 12                	mov    %ss,(%edx)
    6e66:	3a 50 fe             	cmp    -0x2(%eax),%dl
    6e69:	ff 2c 4a             	ljmp   *(%edx,%ecx,2)
    6e6c:	3c 93                	cmp    $0x93,%al
    6e6e:	fa                   	cli    
    6e6f:	23 0a                	and    (%edx),%ecx

00006e70 <.L1>:
    6e70:	0a 17                	or     (%edi),%dl
    6e72:	30 41 30             	xor    %al,0x30(%ecx)

00006e74 <call___do_global_ctors_aux>:
    6e74:	30 41 b0             	xor    %al,-0x50(%ecx)

00006e76 <__msp430_init>:
    6e76:	b0 12                	mov    $0x12,%al
    6e78:	a0 56 b0 12 56       	mov    0x5612b056,%al
    6e7d:	6e                   	outsb  %ds:(%esi),(%dx)

00006e7e <L0>:
    6e7e:	b0 12                	mov    $0x12,%al
    6e80:	e0 55                	loopne 6ed7 <__TMC_END__+0x45>

00006e82 <.Loc.19.1>:
    6e82:	b0 12                	mov    $0x12,%al
    6e84:	d4 55                	aam    $0x55

00006e86 <.Loc.20.1>:
    6e86:	30 41 b0             	xor    %al,-0x50(%ecx)

00006e88 <__msp430_fini>:
    6e88:	b0 12                	mov    $0x12,%al
    6e8a:	ec                   	in     (%dx),%al
    6e8b:	55                   	push   %ebp

00006e8c <L0>:
    6e8c:	b0 12                	mov    $0x12,%al
    6e8e:	52                   	push   %edx
    6e8f:	56                   	push   %esi

00006e90 <L0>:
    6e90:	30                   	.byte 0x30
    6e91:	41                   	inc    %ecx

Disassembly of section .MP430.attributes:

00000000 <.MP430.attributes>:
   0:	41                   	inc    %ecx
   1:	16                   	push   %ss
   2:	00 00                	add    %al,(%eax)
   4:	00 6d 73             	add    %ch,0x73(%ebp)
   7:	70 61                	jo     6a <L0+0x1a>
   9:	62 69 00             	bound  %ebp,0x0(%ecx)
   c:	01 0b                	add    %ecx,(%ebx)
   e:	00 00                	add    %al,(%eax)
  10:	00 04 02             	add    %al,(%edx,%eax,1)
  13:	06                   	push   %es
  14:	01 08                	add    %ecx,(%eax)
  16:	01 41 16             	add    %eax,0x16(%ecx)
  19:	00 00                	add    %al,(%eax)
  1b:	00 6d 73             	add    %ch,0x73(%ebp)
  1e:	70 61                	jo     81 <L0+0x11>
  20:	62 69 00             	bound  %ebp,0x0(%ecx)
  23:	01 0b                	add    %ecx,(%ebx)
  25:	00 00                	add    %al,(%eax)
  27:	00 04 02             	add    %al,(%edx,%eax,1)
  2a:	06                   	push   %es
  2b:	01 08                	add    %ecx,(%eax)
  2d:	01 41 16             	add    %eax,0x16(%ecx)
  30:	00 00                	add    %al,(%eax)
  32:	00 6d 73             	add    %ch,0x73(%ebp)
  35:	70 61                	jo     98 <L0+0x8>
  37:	62 69 00             	bound  %ebp,0x0(%ecx)
  3a:	01 0b                	add    %ecx,(%ebx)
  3c:	00 00                	add    %al,(%eax)
  3e:	00 04 02             	add    %al,(%edx,%eax,1)
  41:	06                   	push   %es
  42:	01 08                	add    %ecx,(%eax)
  44:	01 41 16             	add    %eax,0x16(%ecx)
  47:	00 00                	add    %al,(%eax)
  49:	00 6d 73             	add    %ch,0x73(%ebp)
  4c:	70 61                	jo     af <L0+0x1f>
  4e:	62 69 00             	bound  %ebp,0x0(%ecx)
  51:	01 0b                	add    %ecx,(%ebx)
  53:	00 00                	add    %al,(%eax)
  55:	00 04 02             	add    %al,(%edx,%eax,1)
  58:	06                   	push   %es
  59:	01 08                	add    %ecx,(%eax)
  5b:	01 41 16             	add    %eax,0x16(%ecx)
  5e:	00 00                	add    %al,(%eax)
  60:	00 6d 73             	add    %ch,0x73(%ebp)
  63:	70 61                	jo     c6 <L0+0x36>
  65:	62 69 00             	bound  %ebp,0x0(%ecx)
  68:	01 0b                	add    %ecx,(%ebx)
  6a:	00 00                	add    %al,(%eax)
  6c:	00 04 02             	add    %al,(%edx,%eax,1)
  6f:	06                   	push   %es
  70:	01 08                	add    %ecx,(%eax)
  72:	01 41 16             	add    %eax,0x16(%ecx)
  75:	00 00                	add    %al,(%eax)
  77:	00 6d 73             	add    %ch,0x73(%ebp)
  7a:	70 61                	jo     dd <L0+0x4d>
  7c:	62 69 00             	bound  %ebp,0x0(%ecx)
  7f:	01 0b                	add    %ecx,(%ebx)
  81:	00 00                	add    %al,(%eax)
  83:	00 04 02             	add    %al,(%edx,%eax,1)
  86:	06                   	push   %es
  87:	01 08                	add    %ecx,(%eax)
  89:	01 41 16             	add    %eax,0x16(%ecx)
  8c:	00 00                	add    %al,(%eax)
  8e:	00 6d 73             	add    %ch,0x73(%ebp)
  91:	70 61                	jo     f4 <L0+0x4>
  93:	62 69 00             	bound  %ebp,0x0(%ecx)
  96:	01 0b                	add    %ecx,(%ebx)
  98:	00 00                	add    %al,(%eax)
  9a:	00 04 02             	add    %al,(%edx,%eax,1)
  9d:	06                   	push   %es
  9e:	01 08                	add    %ecx,(%eax)
  a0:	01 41 16             	add    %eax,0x16(%ecx)
  a3:	00 00                	add    %al,(%eax)
  a5:	00 6d 73             	add    %ch,0x73(%ebp)
  a8:	70 61                	jo     10b <L0+0xc>
  aa:	62 69 00             	bound  %ebp,0x0(%ecx)
  ad:	01 0b                	add    %ecx,(%ebx)
  af:	00 00                	add    %al,(%eax)
  b1:	00 04 02             	add    %al,(%edx,%eax,1)
  b4:	06                   	push   %es
  b5:	01 08                	add    %ecx,(%eax)
  b7:	01 41 16             	add    %eax,0x16(%ecx)
  ba:	00 00                	add    %al,(%eax)
  bc:	00 6d 73             	add    %ch,0x73(%ebp)
  bf:	70 61                	jo     122 <L0+0x23>
  c1:	62 69 00             	bound  %ebp,0x0(%ecx)
  c4:	01 0b                	add    %ecx,(%ebx)
  c6:	00 00                	add    %al,(%eax)
  c8:	00 04 02             	add    %al,(%edx,%eax,1)
  cb:	06                   	push   %es
  cc:	01 08                	add    %ecx,(%eax)
  ce:	01 41 16             	add    %eax,0x16(%ecx)
  d1:	00 00                	add    %al,(%eax)
  d3:	00 6d 73             	add    %ch,0x73(%ebp)
  d6:	70 61                	jo     139 <L0+0x3a>
  d8:	62 69 00             	bound  %ebp,0x0(%ecx)
  db:	01 0b                	add    %ecx,(%ebx)
  dd:	00 00                	add    %al,(%eax)
  df:	00 04 02             	add    %al,(%edx,%eax,1)
  e2:	06                   	push   %es
  e3:	01 08                	add    %ecx,(%eax)
  e5:	01 41 16             	add    %eax,0x16(%ecx)
  e8:	00 00                	add    %al,(%eax)
  ea:	00 6d 73             	add    %ch,0x73(%ebp)
  ed:	70 61                	jo     150 <L0+0x51>
  ef:	62 69 00             	bound  %ebp,0x0(%ecx)
  f2:	01 0b                	add    %ecx,(%ebx)
  f4:	00 00                	add    %al,(%eax)
  f6:	00 04 02             	add    %al,(%edx,%eax,1)
  f9:	06                   	push   %es
  fa:	01 08                	add    %ecx,(%eax)
  fc:	01 41 16             	add    %eax,0x16(%ecx)
  ff:	00 00                	add    %al,(%eax)
 101:	00 6d 73             	add    %ch,0x73(%ebp)
 104:	70 61                	jo     167 <L0+0x68>
 106:	62 69 00             	bound  %ebp,0x0(%ecx)
 109:	01 0b                	add    %ecx,(%ebx)
 10b:	00 00                	add    %al,(%eax)
 10d:	00 04 02             	add    %al,(%edx,%eax,1)
 110:	06                   	push   %es
 111:	01 08                	add    %ecx,(%eax)
 113:	01                   	.byte 0x1

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 47 4e             	sub    %al,0x4e(%edi)
   8:	55                   	push   %ebp
   9:	29 20                	sub    %esp,(%eax)
   b:	34 2e                	xor    $0x2e,%al
   d:	39 2e                	cmp    %ebp,(%esi)
   f:	31 20                	xor    %esp,(%eax)
  11:	32 30                	xor    (%eax),%dh
  13:	31 34 30             	xor    %esi,(%eax,%esi,1)
  16:	37                   	aaa    
  17:	30 37                	xor    %dh,(%edi)
  19:	20 28                	and    %ch,(%eax)
  1b:	70 72                	jo     8f <L0+0x1f>
  1d:	65 72 65             	gs jb  85 <L0+0x15>
  20:	6c                   	insb   (%dx),%es:(%edi)
  21:	65 61                	gs popa 
  23:	73 65                	jae    8a <L0+0x1a>
  25:	20 28                	and    %ch,(%eax)
  27:	6d                   	insl   (%dx),%es:(%edi)
  28:	73 70                	jae    9a <L0+0xa>
  2a:	34 33                	xor    $0x33,%al
  2c:	30 2d 31 34 72 31    	xor    %ch,0x31723431
  32:	2d 33 36 34 29       	sub    $0x29343633,%eax
  37:	29 20                	sub    %esp,(%eax)
  39:	28 47 4e             	sub    %al,0x4e(%edi)
  3c:	55                   	push   %ebp
  3d:	50                   	push   %eax
  3e:	72 6f                	jb     af <L0+0x1f>
  40:	20 31                	and    %dh,(%ecx)
  42:	34 72                	xor    $0x72,%al
  44:	31 29                	xor    %ebp,(%ecx)
  46:	20 28                	and    %ch,(%eax)
  48:	42                   	inc    %edx
  49:	61                   	popa   
  4a:	73 65                	jae    b1 <L0+0x21>
  4c:	64 20 6f 6e          	and    %ch,%fs:0x6e(%edi)
  50:	3a 20                	cmp    (%eax),%ah
  52:	47                   	inc    %edi
  53:	43                   	inc    %ebx
  54:	43                   	inc    %ebx
  55:	20 34 2e             	and    %dh,(%esi,%ebp,1)
  58:	38 20                	cmp    %ah,(%eax)
  5a:	47                   	inc    %edi
  5b:	44                   	inc    %esp
  5c:	42                   	inc    %edx
  5d:	20 37                	and    %dh,(%edi)
  5f:	2e 37                	cs aaa 
  61:	20 42 69             	and    %al,0x69(%edx)
  64:	6e                   	outsb  %ds:(%esi),(%dx)
  65:	75 74                	jne    db <L0+0x4b>
  67:	69 6c 73 20 32 2e 32 	imul   $0x34322e32,0x20(%ebx,%esi,2),%ebp
  6e:	34 
  6f:	20 4e 65             	and    %cl,0x65(%esi)
  72:	77 6c                	ja     e0 <L0+0x50>
  74:	69 62 20 32 2e 31 29 	imul   $0x29312e32,0x20(%edx),%esp
  7b:	00 63 6c             	add    %ah,0x6c(%ebx)
  7e:	61                   	popa   
  7f:	6e                   	outsb  %ds:(%esi),(%dx)
  80:	67 20 76 65          	and    %dh,0x65(%bp)
  84:	72 73                	jb     f9 <L0+0x9>
  86:	69 6f 6e 20 33 2e 38 	imul   $0x382e3320,0x6e(%edi),%ebp
  8d:	2e 30 20             	xor    %ah,%cs:(%eax)
  90:	28 68 74             	sub    %ch,0x74(%eax)
  93:	74 70                	je     105 <L0+0x6>
  95:	3a 2f                	cmp    (%edi),%ch
  97:	2f                   	das    
  98:	6c                   	insb   (%dx),%es:(%edi)
  99:	6c                   	insb   (%dx),%es:(%edi)
  9a:	76 6d                	jbe    109 <L0+0xa>
  9c:	2e 6f                	outsl  %cs:(%esi),(%dx)
  9e:	72 67                	jb     107 <L0+0x8>
  a0:	2f                   	das    
  a1:	67 69 74 2f 63 6c 61 	imul   $0x6e616c63,0x2f(%si),%esi
  a8:	6e 
  a9:	67 2e 67 69 74 20 35 	addr16 imul $0x64653235,%cs:0x20(%si),%esi
  b0:	32 65 64 
  b3:	35 65 63 36 33       	xor    $0x33366365,%eax
  b8:	31 62 30             	xor    %esp,0x30(%edx)
  bb:	62 62 66             	bound  %esp,0x66(%edx)
  be:	35 63 37 31 34       	xor    $0x34313763,%eax
  c3:	62 61 61             	bound  %esp,0x61(%ecx)
  c6:	30 63 64             	xor    %ah,0x64(%ebx)
  c9:	38 33                	cmp    %dh,(%ebx)
  cb:	63 33                	arpl   %si,(%ebx)
  cd:	33 65 62             	xor    0x62(%ebp),%esp
  d0:	66 65 30 63 36       	data16 xor %ah,%gs:0x36(%ebx)
  d5:	61                   	popa   
  d6:	61                   	popa   
  d7:	29 20                	sub    %esp,(%eax)
  d9:	28 68 74             	sub    %ch,0x74(%eax)
  dc:	74 70                	je     14e <L0+0x4f>
  de:	3a 2f                	cmp    (%edi),%ch
  e0:	2f                   	das    
  e1:	6c                   	insb   (%dx),%es:(%edi)
  e2:	6c                   	insb   (%dx),%es:(%edi)
  e3:	76 6d                	jbe    152 <L0+0x53>
  e5:	2e 6f                	outsl  %cs:(%esi),(%dx)
  e7:	72 67                	jb     150 <L0+0x51>
  e9:	2f                   	das    
  ea:	67 69 74 2f 6c 6c 76 	imul   $0x6d766c6c,0x2f(%si),%esi
  f1:	6d 
  f2:	2e 67 69 74 20 38 31 	imul   $0x38333138,%cs:0x20(%si),%esi
  f9:	33 38 
  fb:	36 64 34 62          	ss fs xor $0x62,%al
  ff:	34 66                	xor    $0x66,%al
 101:	64 64 38 30          	fs cmp %dh,%fs:(%eax)
 105:	66 30 33             	data16 xor %dh,(%ebx)
 108:	38 66 64             	cmp    %ah,0x64(%esi)
 10b:	34 65                	xor    $0x65,%al
 10d:	62 64 64 63          	bound  %esp,0x63(%esp,%eiz,2)
 111:	35 39 36 31 33       	xor    $0x33313639,%eax
 116:	37                   	aaa    
 117:	37                   	aaa    
 118:	30 65 61             	xor    %ah,0x61(%ebp)
 11b:	32 33                	xor    (%ebx),%dh
 11d:	36 63 29             	arpl   %bp,%ss:(%ecx)
	...

Disassembly of section .debug_aranges:

00000000 <L0>:
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	00 00                	add    %al,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	04 00                	add    $0x0,%al
   c:	00 00                	add    %al,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	a4                   	movsb  %ds:(%esi),%es:(%edi)
  11:	55                   	push   %ebp
  12:	00 00                	add    %al,(%eax)
  14:	04 00                	add    $0x0,%al
  16:	00 00                	add    %al,(%eax)
  18:	d4 55                	aam    $0x55
  1a:	00 00                	add    %al,(%eax)
  1c:	3c 00                	cmp    $0x0,%al
  1e:	00 00                	add    %al,(%eax)
  20:	88 6e 00             	mov    %ch,0x0(%esi)
  23:	00 04 00             	add    %al,(%eax,%eax,1)
	...
  2e:	00 00                	add    %al,(%eax)
  30:	1c 00                	sbb    $0x0,%al
  32:	00 00                	add    %al,(%eax)
  34:	02 00                	add    (%eax),%al
  36:	ce                   	into   
  37:	00 00                	add    %al,(%eax)
  39:	00 04 00             	add    %al,(%eax,%eax,1)
  3c:	00 00                	add    %al,(%eax)
  3e:	00 00                	add    %al,(%eax)
  40:	c6                   	(bad)  
  41:	6b 00 00             	imul   $0x0,(%eax),%eax
  44:	3e 02 00             	add    %ds:(%eax),%al
	...

00000050 <L0>:
  50:	1c 00                	sbb    $0x0,%al
  52:	00 00                	add    %al,(%eax)
  54:	02 00                	add    (%eax),%al
  56:	b1 04                	mov    $0x4,%cl
  58:	00 00                	add    %al,(%eax)
  5a:	04 00                	add    $0x0,%al
  5c:	00 00                	add    %al,(%eax)
  5e:	00 00                	add    %al,(%eax)
  60:	a8 55                	test   $0x55,%al
  62:	00 00                	add    %al,(%eax)
  64:	0e                   	push   %cs
	...

00000070 <L0>:
  70:	1c 00                	sbb    $0x0,%al
  72:	00 00                	add    %al,(%eax)
  74:	02 00                	add    (%eax),%al
  76:	83 05 00 00 04 00 00 	addl   $0x0,0x40000
  7d:	00 00                	add    %al,(%eax)
  7f:	00 b6 55 00 00 14    	add    %dh,0x14000055(%esi)
	...

00000090 <L0>:
  90:	1c 00                	sbb    $0x0,%al
  92:	00 00                	add    %al,(%eax)
  94:	02 00                	add    (%eax),%al
  96:	55                   	push   %ebp
  97:	06                   	push   %es
  98:	00 00                	add    %al,(%eax)
  9a:	04 00                	add    $0x0,%al
  9c:	00 00                	add    %al,(%eax)
  9e:	00 00                	add    %al,(%eax)
  a0:	ca 55 00             	lret   $0x55
  a3:	00 0a                	add    %cl,(%edx)
	...
  ad:	00 00                	add    %al,(%eax)
  af:	00 1c 00             	add    %bl,(%eax,%eax,1)
  b2:	00 00                	add    %al,(%eax)
  b4:	02 00                	add    (%eax),%al
  b6:	27                   	daa    
  b7:	07                   	pop    %es
  b8:	00 00                	add    %al,(%eax)
  ba:	04 00                	add    $0x0,%al
  bc:	00 00                	add    %al,(%eax)
  be:	00 00                	add    %al,(%eax)
  c0:	04 6e                	add    $0x6e,%al
  c2:	00 00                	add    %al,(%eax)
  c4:	40                   	inc    %eax
	...
  cd:	00 00                	add    %al,(%eax)
  cf:	00 1c 00             	add    %bl,(%eax,%eax,1)
  d2:	00 00                	add    %al,(%eax)
  d4:	02 00                	add    (%eax),%al
  d6:	25 08 00 00 04       	and    $0x4000008,%eax
  db:	00 00                	add    %al,(%eax)
  dd:	00 00                	add    %al,(%eax)
  df:	00 44 6e 00          	add    %al,0x0(%esi,%ebp,2)
  e3:	00 12                	add    %dl,(%edx)
	...

000000f0 <L0>:
  f0:	24 00                	and    $0x0,%al
  f2:	00 00                	add    %al,(%eax)
  f4:	02 00                	add    (%eax),%al
  f6:	f4                   	hlt    
  f7:	08 00                	or     %al,(%eax)
  f9:	00 04 00             	add    %al,(%eax,%eax,1)
  fc:	00 00                	add    %al,(%eax)
  fe:	00 00                	add    %al,(%eax)
 100:	7e 6e                	jle    170 <L0+0x71>
 102:	00 00                	add    %al,(%eax)
 104:	0a 00                	or     (%eax),%al
 106:	00 00                	add    %al,(%eax)
 108:	90                   	nop
 109:	6e                   	outsb  %ds:(%esi),(%dx)
 10a:	00 00                	add    %al,(%eax)
 10c:	02 00                	add    (%eax),%al
	...

Disassembly of section .debug_info:

00000000 <L0>:
   0:	ca 00 00             	lret   $0x0
   3:	00 02                	add    %al,(%edx)
   5:	00 00                	add    %al,(%eax)
   7:	00 00                	add    %al,(%eax)
   9:	00 04 01             	add    %al,(%ecx,%eax,1)
	...
  14:	2f                   	das    
  15:	6f                   	outsl  %ds:(%esi),(%dx)
  16:	70 74                	jo     8c <L0+0x1c>
  18:	2f                   	das    
  19:	72 65                	jb     80 <L0+0x10>
  1b:	64 68 61 74 2f 6d    	fs push $0x6d2f7461
  21:	73 70                	jae    93 <L0+0x3>
  23:	34 33                	xor    $0x33,%al
  25:	30 2d 31 34 72 31    	xor    %ch,0x31723431
  2b:	2d 33 36 34 2f       	sub    $0x2f343633,%eax
  30:	73 6f                	jae    a1 <L0+0x11>
  32:	75 72                	jne    a6 <L0+0x16>
  34:	63 65 73             	arpl   %sp,0x73(%ebp)
  37:	2f                   	das    
  38:	74 6f                	je     a9 <L0+0x19>
  3a:	6f                   	outsl  %ds:(%esi),(%dx)
  3b:	6c                   	insb   (%dx),%es:(%edi)
  3c:	73 2f                	jae    6d <L0+0x1d>
  3e:	6c                   	insb   (%dx),%es:(%edi)
  3f:	69 62 67 6c 6f 73 73 	imul   $0x73736f6c,0x67(%edx),%esp
  46:	2f                   	das    
  47:	6d                   	insl   (%dx),%es:(%edi)
  48:	73 70                	jae    ba <L0+0x2a>
  4a:	34 33                	xor    $0x33,%al
  4c:	30 2f                	xor    %ch,(%edi)
  4e:	63 72 74             	arpl   %si,0x74(%edx)
  51:	30 2e                	xor    %ch,(%esi)
  53:	53                   	push   %ebx
  54:	00 2f                	add    %ch,(%edi)
  56:	65 73 2f             	gs jae 88 <L0+0x18>
  59:	62 75 69             	bound  %esi,0x69(%ebp)
  5c:	6c                   	insb   (%dx),%es:(%edi)
  5d:	64 2f                	fs das 
  5f:	6d                   	insl   (%dx),%es:(%edi)
  60:	73 70                	jae    d2 <L0+0x42>
  62:	34 33                	xor    $0x33,%al
  64:	30 2d 31 34 72 31    	xor    %ch,0x31723431
  6a:	2f                   	das    
  6b:	33 36                	xor    (%esi),%esi
  6d:	34 2f                	xor    $0x2f,%al
  6f:	69 36 38 36 2d 72    	imul   $0x722d3638,(%esi),%esi
  75:	65 64 68 61 74 2d 6c 	gs fs push $0x6c2d7461
  7c:	69 6e 75 78 2f 58 2d 	imul   $0x2d582f78,0x75(%esi),%ebp
  83:	69 36 38 36 2d 72    	imul   $0x722d3638,(%esi),%esi
  89:	65 64 68 61 74 2d 6c 	gs fs push $0x6c2d7461
  90:	69 6e 75 78 2d 78 2d 	imul   $0x2d782d78,0x75(%esi),%ebp
  97:	6d                   	insl   (%dx),%es:(%edi)
  98:	73 70                	jae    10a <L0+0xb>
  9a:	34 33                	xor    $0x33,%al
  9c:	30 2d 65 6c 66 2f    	xor    %ch,0x2f666c65
  a2:	6d                   	insl   (%dx),%es:(%edi)
  a3:	73 70                	jae    115 <L0+0x16>
  a5:	34 33                	xor    $0x33,%al
  a7:	30 2d 65 6c 66 2f    	xor    %ch,0x2f666c65
  ad:	6c                   	insb   (%dx),%es:(%edi)
  ae:	69 62 67 6c 6f 73 73 	imul   $0x73736f6c,0x67(%edx),%esp
  b5:	2f                   	das    
  b6:	6d                   	insl   (%dx),%es:(%edi)
  b7:	73 70                	jae    129 <L0+0x2a>
  b9:	34 33                	xor    $0x33,%al
  bb:	30 00                	xor    %al,(%eax)
  bd:	47                   	inc    %edi
  be:	4e                   	dec    %esi
  bf:	55                   	push   %ebp
  c0:	20 41 53             	and    %al,0x53(%ecx)
  c3:	20 32                	and    %dh,(%edx)
  c5:	2e 32 34 2e          	xor    %cs:(%esi,%ebp,1),%dh
  c9:	35 31 00 01 80       	xor    $0x80010031,%eax
  ce:	df 03                	fild   (%ebx)
  d0:	00 00                	add    %al,(%eax)
  d2:	04 00                	add    $0x0,%al
  d4:	12 00                	adc    (%eax),%al
  d6:	00 00                	add    %al,(%eax)
  d8:	04 01                	add    $0x1,%al
  da:	db 01                	fildl  (%ecx)
  dc:	00 00                	add    %al,(%eax)
  de:	01 60 00             	add    %esp,0x0(%eax)
  e1:	00 00                	add    %al,(%eax)
  e3:	df 00                	fild   (%eax)
  e5:	00 00                	add    %al,(%eax)
  e7:	c6                   	(bad)  
  e8:	6b 00 00             	imul   $0x0,(%eax),%eax
  eb:	3e 02 00             	add    %ds:(%eax),%al
  ee:	00 ff                	add    %bh,%bh
  f0:	00 00                	add    %al,(%eax)
  f2:	00 02                	add    %al,(%edx)
  f4:	02 07                	add    (%edi),%al
  f6:	79 01                	jns    f9 <L0+0x9>
  f8:	00 00                	add    %al,(%eax)
  fa:	02 01                	add    (%ecx),%al
  fc:	06                   	push   %es
  fd:	59                   	pop    %ecx
  fe:	01 00                	add    %eax,(%eax)
 100:	00 03                	add    %al,(%ebx)
 102:	27                   	daa    
 103:	01 00                	add    %eax,(%eax)
 105:	00 02                	add    %al,(%edx)
 107:	1c 3e                	sbb    $0x3e,%al
 109:	00 00                	add    %al,(%eax)
 10b:	00 02                	add    %al,(%edx)
 10d:	01 08                	add    %ecx,(%eax)
 10f:	57                   	push   %edi
 110:	01 00                	add    %eax,(%eax)
 112:	00 02                	add    %al,(%edx)
 114:	02 05 26 00 00 00    	add    0x26,%al
 11a:	03 4d 00             	add    0x0(%ebp),%ecx
 11d:	00 00                	add    %al,(%eax)
 11f:	02 26                	add    (%esi),%ah
 121:	57                   	push   %edi
 122:	00 00                	add    %al,(%eax)
 124:	00 02                	add    %al,(%edx)
 126:	02 07                	add    (%edi),%al
 128:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
 129:	01 00                	add    %eax,(%eax)
 12b:	00 02                	add    %al,(%edx)
 12d:	04 05                	add    $0x5,%al
 12f:	c6 00 00             	movb   $0x0,(%eax)
 132:	00 02                	add    %al,(%edx)
 134:	04 07                	add    $0x7,%al
 136:	74 01                	je     139 <L0+0x3a>
 138:	00 00                	add    %al,(%eax)
 13a:	02 08                	add    (%eax),%cl
 13c:	05 c1 00 00 00       	add    $0xc1,%eax
 141:	02 08                	add    (%eax),%cl
 143:	07                   	pop    %es
 144:	6f                   	outsl  %ds:(%esi),(%dx)
 145:	01 00                	add    %eax,(%eax)
 147:	00 04 02             	add    %al,(%edx,%eax,1)
 14a:	05 69 6e 74 00       	add    $0x746e69,%eax
 14f:	03 29                	add    (%ecx),%ebp
 151:	01 00                	add    %eax,(%eax)
 153:	00 03                	add    %al,(%ebx)
 155:	2a 33                	sub    (%ebx),%dh
 157:	00 00                	add    %al,(%eax)
 159:	00 03                	add    %al,(%ebx)
 15b:	4f                   	dec    %edi
 15c:	00 00                	add    %al,(%eax)
 15e:	00 03                	add    %al,(%ebx)
 160:	36 4c                	ss dec %esp
 162:	00 00                	add    %al,(%eax)
 164:	00 05 02 81 00 00    	add    %al,0x8102
 16a:	00 06                	add    %al,(%esi)
 16c:	0c 01                	or     $0x1,%al
 16e:	0f ee 00             	pmaxsw (%eax),%mm0
 171:	00 00                	add    %al,(%eax)
 173:	07                   	pop    %es
 174:	05 00 00 00 01       	add    $0x1000000,%eax
 179:	10 81 00 00 00 00    	adc    %al,0x0(%ecx)
 17f:	07                   	pop    %es
 180:	51                   	push   %ecx
 181:	01 00                	add    %eax,(%eax)
 183:	00 01                	add    %al,(%ecx)
 185:	11 97 00 00 00 02    	adc    %edx,0x2000000(%edi)
 18b:	07                   	pop    %es
 18c:	9d                   	popf   
 18d:	00 00                	add    %al,(%eax)
 18f:	00 01                	add    %al,(%ecx)
 191:	12 8c 00 00 00 04 07 	adc    0x7040000(%eax,%eax,1),%cl
 198:	1d 00 00 00 01       	sbb    $0x1000000,%eax
 19d:	14 81                	adc    $0x81,%al
 19f:	00 00                	add    %al,(%eax)
 1a1:	00 06                	add    %al,(%esi)
 1a3:	07                   	pop    %es
 1a4:	ad                   	lods   %ds:(%esi),%eax
 1a5:	02 00                	add    (%eax),%al
 1a7:	00 01                	add    %al,(%ecx)
 1a9:	15 97 00 00 00       	adc    $0x97,%eax
 1ae:	08 07                	or     %al,(%edi)
 1b0:	96                   	xchg   %eax,%esi
 1b1:	01 00                	add    %eax,(%eax)
 1b3:	00 01                	add    %al,(%ecx)
 1b5:	16                   	push   %ss
 1b6:	8c 00                	mov    %es,(%eax)
 1b8:	00 00                	add    %al,(%eax)
 1ba:	0a 00                	or     (%eax),%al
 1bc:	03 0e                	add    (%esi),%ecx
 1be:	00 00                	add    %al,(%eax)
 1c0:	00 01                	add    %al,(%ecx)
 1c2:	17                   	pop    %ss
 1c3:	9d                   	popf   
 1c4:	00 00                	add    %al,(%eax)
 1c6:	00 08                	add    %cl,(%eax)
 1c8:	89 02                	mov    %eax,(%edx)
 1ca:	00 00                	add    %al,(%eax)
 1cc:	01 20                	add    %esp,(%eax)
 1ce:	c6                   	(bad)  
 1cf:	6b 00 00             	imul   $0x0,(%eax),%eax
 1d2:	42                   	inc    %edx
 1d3:	00 00                	add    %al,(%eax)
 1d5:	00 01                	add    %al,(%ecx)
 1d7:	9c                   	pushf  
 1d8:	08 30                	or     %dh,(%eax)
 1da:	00 00                	add    %al,(%eax)
 1dc:	00 01                	add    %al,(%ecx)
 1de:	65 08 6c 00 00       	or     %ch,%gs:0x0(%eax,%eax,1)
 1e3:	26 00 00             	add    %al,%es:(%eax)
 1e6:	00 01                	add    %al,(%ecx)
 1e8:	9c                   	pushf  
 1e9:	09 3e                	or     %edi,(%esi)
 1eb:	00 00                	add    %al,(%eax)
 1ed:	00 01                	add    %al,(%ecx)
 1ef:	7c 2e                	jl     21f <L0+0x120>
 1f1:	6c                   	insb   (%dx),%es:(%edi)
 1f2:	00 00                	add    %al,(%eax)
 1f4:	24 00                	and    $0x0,%al
 1f6:	00 00                	add    %al,(%eax)
 1f8:	01 9c 4b 01 00 00 0a 	add    %ebx,0xa000001(%ebx,%ecx,2)
 1ff:	ae                   	scas   %es:(%edi),%al
 200:	00 00                	add    %al,(%eax)
 202:	00 01                	add    %al,(%ecx)
 204:	7c 97                	jl     19d <L0+0x9e>
 206:	00 00                	add    %al,(%eax)
 208:	00 01                	add    %al,(%ecx)
 20a:	5c                   	pop    %esp
 20b:	0a ba 02 00 00 01    	or     0x1000002(%edx),%bh
 211:	7c 8c                	jl     19f <L0+0xa0>
 213:	00 00                	add    %al,(%eax)
 215:	00 01                	add    %al,(%ecx)
 217:	5d                   	pop    %ebp
 218:	00 09                	add    %cl,(%ecx)
 21a:	ba 01 00 00 01       	mov    $0x1000001,%edx
 21f:	98                   	cwtl   
 220:	52                   	push   %edx
 221:	6c                   	insb   (%dx),%es:(%edi)
 222:	00 00                	add    %al,(%eax)
 224:	10 00                	adc    %al,(%eax)
 226:	00 00                	add    %al,(%eax)
 228:	01 9c 97 01 00 00 0b 	add    %ebx,0xb000001(%edi,%edx,4)
 22f:	ae                   	scas   %es:(%edi),%al
 230:	00 00                	add    %al,(%eax)
 232:	00 01                	add    %al,(%ecx)
 234:	98                   	cwtl   
 235:	97                   	xchg   %eax,%edi
 236:	00 00                	add    %al,(%eax)
 238:	00 00                	add    %al,(%eax)
 23a:	00 00                	add    %al,(%eax)
 23c:	00 0b                	add    %cl,(%ebx)
 23e:	ba 02 00 00 01       	mov    $0x1000002,%edx
 243:	98                   	cwtl   
 244:	8c 00                	mov    %es,(%eax)
 246:	00 00                	add    %al,(%eax)
 248:	21 00                	and    %eax,(%eax)
 24a:	00 00                	add    %al,(%eax)
 24c:	0c 56                	or     $0x56,%al
 24e:	6c                   	insb   (%dx),%es:(%edi)
 24f:	00 00                	add    %al,(%eax)
 251:	1b 01                	sbb    (%ecx),%eax
 253:	00 00                	add    %al,(%eax)
 255:	0d 01 5d 03 f3       	or     $0xf3035d01,%eax
 25a:	01 5d 0d             	add    %ebx,0xd(%ebp)
 25d:	01 5c 03 f3          	add    %ebx,-0xd(%ebx,%eax,1)
 261:	01 5c 00 00          	add    %ebx,0x0(%eax,%eax,1)
 265:	09 77 00             	or     %esi,0x0(%edi)
 268:	00 00                	add    %al,(%eax)
 26a:	01 a5 62 6c 00 00    	add    %esp,0x6c62(%ebp)
 270:	66 00 00             	data16 add %al,(%eax)
 273:	00 01                	add    %al,(%ecx)
 275:	9c                   	pushf  
 276:	cb                   	lret   
 277:	01 00                	add    %eax,(%eax)
 279:	00 0b                	add    %cl,(%ebx)
 27b:	ae                   	scas   %es:(%edi),%al
 27c:	00 00                	add    %al,(%eax)
 27e:	00 01                	add    %al,(%ecx)
 280:	a5                   	movsl  %ds:(%esi),%es:(%edi)
 281:	97                   	xchg   %eax,%edi
 282:	00 00                	add    %al,(%eax)
 284:	00 42 00             	add    %al,0x0(%edx)
 287:	00 00                	add    %al,(%eax)
 289:	0b ba 02 00 00 01    	or     0x1000002(%edx),%edi
 28f:	a5                   	movsl  %ds:(%esi),%es:(%edi)
 290:	8c 00                	mov    %es,(%eax)
 292:	00 00                	add    %al,(%eax)
 294:	63 00                	arpl   %ax,(%eax)
 296:	00 00                	add    %al,(%eax)
 298:	00 0e                	add    %cl,(%esi)
 29a:	00 00                	add    %al,(%eax)
 29c:	00 00                	add    %al,(%eax)
 29e:	01 bf 81 00 00 00    	add    %edi,0x81(%edi)
 2a4:	c8 6c 00 00          	enter  $0x6c,$0x0
 2a8:	06                   	push   %es
 2a9:	00 00                	add    %al,(%eax)
 2ab:	00 01                	add    %al,(%ecx)
 2ad:	9c                   	pushf  
 2ae:	09 38                	or     %edi,(%eax)
 2b0:	01 00                	add    %eax,(%eax)
 2b2:	00 01                	add    %al,(%ecx)
 2b4:	c9                   	leave  
 2b5:	ce                   	into   
 2b6:	6c                   	insb   (%dx),%es:(%edi)
 2b7:	00 00                	add    %al,(%eax)
 2b9:	26 00 00             	add    %al,%es:(%eax)
 2bc:	00 01                	add    %al,(%ecx)
 2be:	9c                   	pushf  
 2bf:	10 02                	adc    %al,(%edx)
 2c1:	00 00                	add    %al,(%eax)
 2c3:	0a c4                	or     %ah,%al
 2c5:	01 00                	add    %eax,(%eax)
 2c7:	00 01                	add    %al,(%ecx)
 2c9:	c9                   	leave  
 2ca:	97                   	xchg   %eax,%edi
 2cb:	00 00                	add    %al,(%eax)
 2cd:	00 01                	add    %al,(%ecx)
 2cf:	5c                   	pop    %esp
 2d0:	0a ba 02 00 00 01    	or     0x1000002(%edx),%bh
 2d6:	c9                   	leave  
 2d7:	8c 00                	mov    %es,(%eax)
 2d9:	00 00                	add    %al,(%eax)
 2db:	01 5d 00             	add    %ebx,0x0(%ebp)
 2de:	09 b4 00 00 00 01 e4 	or     %esi,-0x1bff0000(%eax,%eax,1)
 2e5:	f4                   	hlt    
 2e6:	6c                   	insb   (%dx),%es:(%edi)
 2e7:	00 00                	add    %al,(%eax)
 2e9:	12 00                	adc    (%eax),%al
 2eb:	00 00                	add    %al,(%eax)
 2ed:	01 9c 5c 02 00 00 0b 	add    %ebx,0xb000002(%esp,%ebx,2)
 2f4:	c4 01                	les    (%ecx),%eax
 2f6:	00 00                	add    %al,(%eax)
 2f8:	01 e4                	add    %esp,%esp
 2fa:	97                   	xchg   %eax,%edi
 2fb:	00 00                	add    %al,(%eax)
 2fd:	00 93 00 00 00 0b    	add    %dl,0xb000000(%ebx)
 303:	ba 02 00 00 01       	mov    $0x1000002,%edx
 308:	e4 8c                	in     $0x8c,%al
 30a:	00 00                	add    %al,(%eax)
 30c:	00 b4 00 00 00 0c f8 	add    %dh,-0x7f40000(%eax,%eax,1)
 313:	6c                   	insb   (%dx),%es:(%edi)
 314:	00 00                	add    %al,(%eax)
 316:	e0 01                	loopne 319 <L0+0x21a>
 318:	00 00                	add    %al,(%eax)
 31a:	0d 01 5d 03 f3       	or     $0xf3035d01,%eax
 31f:	01 5d 0d             	add    %ebx,0xd(%ebp)
 322:	01 5c 03 f3          	add    %ebx,-0xd(%ebx,%eax,1)
 326:	01 5c 00 00          	add    %ebx,0x0(%eax,%eax,1)
 32a:	09 f3                	or     %esi,%ebx
 32c:	02 00                	add    (%eax),%al
 32e:	00 01                	add    %al,(%ecx)
 330:	f1                   	icebp  
 331:	06                   	push   %es
 332:	6d                   	insl   (%dx),%es:(%edi)
 333:	00 00                	add    %al,(%eax)
 335:	66 00 00             	data16 add %al,(%eax)
 338:	00 01                	add    %al,(%ecx)
 33a:	9c                   	pushf  
 33b:	aa                   	stos   %al,%es:(%edi)
 33c:	02 00                	add    (%eax),%al
 33e:	00 0b                	add    %cl,(%ebx)
 340:	c4 01                	les    (%ecx),%eax
 342:	00 00                	add    %al,(%eax)
 344:	01 f1                	add    %esi,%ecx
 346:	97                   	xchg   %eax,%edi
 347:	00 00                	add    %al,(%eax)
 349:	00 d5                	add    %dl,%ch
 34b:	00 00                	add    %al,(%eax)
 34d:	00 0b                	add    %cl,(%ebx)
 34f:	ba 02 00 00 01       	mov    $0x1000002,%edx
 354:	f1                   	icebp  
 355:	8c 00                	mov    %es,(%eax)
 357:	00 00                	add    %al,(%eax)
 359:	f6 00 00             	testb  $0x0,(%eax)
 35c:	00 0f                	add    %cl,(%edi)
 35e:	36 6d                	ss insl (%dx),%es:(%edi)
 360:	00 00                	add    %al,(%eax)
 362:	20 00                	and    %al,(%eax)
 364:	00 00                	add    %al,(%eax)
 366:	10 72 65             	adc    %dh,0x65(%edx)
 369:	63 00                	arpl   %ax,(%eax)
 36b:	01 03                	add    %eax,(%ebx)
 36d:	01 81 00 00 00 26    	add    %eax,0x26000000(%ecx)
 373:	01 00                	add    %eax,(%eax)
 375:	00 00                	add    %al,(%eax)
 377:	00 11                	add    %dl,(%ecx)
 379:	18 00                	sbb    %al,(%eax)
 37b:	00 00                	add    %al,(%eax)
 37d:	01 0d 01 81 00 00    	add    %ecx,0x8101
 383:	00 6c 6d 00          	add    %ch,0x0(%ebp,%ebp,2)
 387:	00 06                	add    %al,(%esi)
 389:	00 00                	add    %al,(%eax)
 38b:	00 01                	add    %al,(%ecx)
 38d:	9c                   	pushf  
 38e:	11 d9                	adc    %ebx,%ecx
 390:	02 00                	add    (%eax),%al
 392:	00 01                	add    %al,(%ecx)
 394:	16                   	push   %ss
 395:	01 81 00 00 00 72    	add    %eax,0x72000000(%ecx)
 39b:	6d                   	insl   (%dx),%es:(%edi)
 39c:	00 00                	add    %al,(%eax)
 39e:	0e                   	push   %cs
 39f:	00 00                	add    %al,(%eax)
 3a1:	00 01                	add    %al,(%ecx)
 3a3:	9c                   	pushf  
 3a4:	12 e7                	adc    %bh,%ah
 3a6:	02 00                	add    (%eax),%al
 3a8:	00 01                	add    %al,(%ecx)
 3aa:	22 01                	and    (%ecx),%al
 3ac:	80 6d 00 00          	subb   $0x0,0x0(%ebp)
 3b0:	84 00                	test   %al,(%eax)
 3b2:	00 00                	add    %al,(%eax)
 3b4:	01 9c fd 02 00 00 10 	add    %ebx,0x10000002(%ebp,%edi,8)
 3bb:	72 65                	jb     422 <L0+0x323>
 3bd:	63 00                	arpl   %ax,(%eax)
 3bf:	01 27                	add    %esp,(%edi)
 3c1:	01 81 00 00 00 39    	add    %eax,0x39000000(%ecx)
 3c7:	01 00                	add    %eax,(%eax)
 3c9:	00 00                	add    %al,(%eax)
 3cb:	13 58 00             	adc    0x0(%eax),%ebx
 3ce:	00 00                	add    %al,(%eax)
 3d0:	01 19                	add    %ebx,(%ecx)
 3d2:	0e                   	push   %cs
 3d3:	03 00                	add    (%eax),%eax
 3d5:	00 05 03 22 1c 00    	add    %al,0x1c2203
 3db:	00 14 ee             	add    %dl,(%esi,%ebp,8)
 3de:	00 00                	add    %al,(%eax)
 3e0:	00 15 20 03 00 00    	add    %dl,0x320
 3e6:	04 0c                	add    $0xc,%al
 3e8:	0b 8d 01 00 00 23    	or     0x23000001(%ebp),%ecx
 3ee:	03 00                	add    (%eax),%eax
 3f0:	00 14 3e             	add    %dl,(%esi,%edi,1)
 3f3:	00 00                	add    %al,(%eax)
 3f5:	00 15 a4 02 00 00    	add    %dl,0x2a4
 3fb:	04 10                	add    $0x10,%al
 3fd:	0b cf                	or     %edi,%ecx
 3ff:	00 00                	add    %al,(%eax)
 401:	00 23                	add    %ah,(%ebx)
 403:	03 00                	add    (%eax),%eax
 405:	00 15 65 01 00 00    	add    %dl,0x165
 40b:	04 09                	add    $0x9,%al
 40d:	10 31                	adc    %dh,(%ecx)
 40f:	01 00                	add    %eax,(%eax)
 411:	00 48 03             	add    %cl,0x3(%eax)
 414:	00 00                	add    %al,(%eax)
 416:	14 25                	adc    $0x25,%al
 418:	00 00                	add    %al,(%eax)
 41a:	00 15 ca 01 00 00    	add    %dl,0x1ca
 420:	04 11                	add    $0x11,%al
 422:	10 4a 01             	adc    %cl,0x1(%edx)
 425:	00 00                	add    %al,(%eax)
 427:	23 03                	and    (%ebx),%eax
 429:	00 00                	add    %al,(%eax)
 42b:	15 04 03 00 00       	adc    $0x304,%eax
 430:	04 12                	add    $0x12,%al
 432:	10 c6                	adc    %al,%dh
 434:	02 00                	add    (%eax),%al
 436:	00 23                	add    %ah,(%ebx)
 438:	03 00                	add    (%eax),%eax
 43a:	00 15 0e 03 00 00    	add    %dl,0x30e
 440:	04 19                	add    $0x19,%al
 442:	10 d4                	adc    %dl,%ah
 444:	01 00                	add    %eax,(%eax)
 446:	00 48 03             	add    %cl,0x3(%eax)
 449:	00 00                	add    %al,(%eax)
 44b:	15 8c 00 00 00       	adc    $0x8c,%eax
 450:	04 1b                	add    $0x1b,%al
 452:	10 82 02 00 00 23    	adc    %al,0x23000002(%edx)
 458:	03 00                	add    (%eax),%eax
 45a:	00 15 cf 02 00 00    	add    %dl,0x2cf
 460:	04 1f                	add    $0x1f,%al
 462:	10 93 02 00 00 9d    	adc    %dl,-0x62fffffe(%ebx)
 468:	03 00                	add    (%eax),%eax
 46a:	00 16                	add    %dl,(%esi)
 46c:	48                   	dec    %eax
 46d:	03 00                	add    (%eax),%eax
 46f:	00 15 9a 02 00 00    	add    %dl,0x29a
 475:	04 23                	add    $0x23,%al
 477:	10 86 01 00 00 48    	adc    %al,0x48000001(%esi)
 47d:	03 00                	add    (%eax),%eax
 47f:	00 15 96 00 00 00    	add    %dl,0x96
 485:	04 2f                	add    $0x2f,%al
 487:	10 b3 02 00 00 48    	adc    %dh,0x48000002(%ebx)
 48d:	03 00                	add    (%eax),%eax
 48f:	00 15 18 03 00 00    	add    %dl,0x318
 495:	04 33                	add    $0x33,%al
 497:	10 85 00 00 00 48    	adc    %al,0x48000000(%ebp)
 49d:	03 00                	add    (%eax),%eax
 49f:	00 15 d8 00 00 00    	add    %dl,0xd8
 4a5:	04 35                	add    $0x35,%al
 4a7:	10 bf 02 00 00 48    	adc    %bh,0x48000002(%edi)
 4ad:	03 00                	add    (%eax),%eax
	...

000004b1 <L0>:
 4b1:	ce                   	into   
 4b2:	00 00                	add    %al,(%eax)
 4b4:	00 02                	add    %al,(%edx)
 4b6:	00 67 01             	add    %ah,0x1(%edi)
 4b9:	00 00                	add    %al,(%eax)
 4bb:	04 01                	add    $0x1,%al
 4bd:	7a 04                	jp     4c3 <L0+0x12>
 4bf:	00 00                	add    %al,(%eax)
 4c1:	a8 55                	test   $0x55,%al
 4c3:	00 00                	add    %al,(%eax)
 4c5:	b6 55                	mov    $0x55,%dh
 4c7:	00 00                	add    %al,(%eax)
 4c9:	2f                   	das    
 4ca:	6f                   	outsl  %ds:(%esi),(%dx)
 4cb:	70 74                	jo     541 <L0+0x43>
 4cd:	2f                   	das    
 4ce:	72 65                	jb     535 <L0+0x37>
 4d0:	64 68 61 74 2f 6d    	fs push $0x6d2f7461
 4d6:	73 70                	jae    548 <L0+0x4a>
 4d8:	34 33                	xor    $0x33,%al
 4da:	30 2d 31 34 72 31    	xor    %ch,0x31723431
 4e0:	2d 33 36 34 2f       	sub    $0x2f343633,%eax
 4e5:	73 6f                	jae    556 <L0+0x58>
 4e7:	75 72                	jne    55b <L0+0x5d>
 4e9:	63 65 73             	arpl   %sp,0x73(%ebp)
 4ec:	2f                   	das    
 4ed:	74 6f                	je     55e <L0+0x60>
 4ef:	6f                   	outsl  %ds:(%esi),(%dx)
 4f0:	6c                   	insb   (%dx),%es:(%edi)
 4f1:	73 2f                	jae    522 <L0+0x24>
 4f3:	6c                   	insb   (%dx),%es:(%edi)
 4f4:	69 62 67 6c 6f 73 73 	imul   $0x73736f6c,0x67(%edx),%esp
 4fb:	2f                   	das    
 4fc:	6d                   	insl   (%dx),%es:(%edi)
 4fd:	73 70                	jae    56f <L0+0x71>
 4ff:	34 33                	xor    $0x33,%al
 501:	30 2f                	xor    %ch,(%edi)
 503:	63 72 74             	arpl   %si,0x74(%edx)
 506:	30 2e                	xor    %ch,(%esi)
 508:	53                   	push   %ebx
 509:	00 2f                	add    %ch,(%edi)
 50b:	65 73 2f             	gs jae 53d <L0+0x3f>
 50e:	62 75 69             	bound  %esi,0x69(%ebp)
 511:	6c                   	insb   (%dx),%es:(%edi)
 512:	64 2f                	fs das 
 514:	6d                   	insl   (%dx),%es:(%edi)
 515:	73 70                	jae    587 <L0+0x4>
 517:	34 33                	xor    $0x33,%al
 519:	30 2d 31 34 72 31    	xor    %ch,0x31723431
 51f:	2f                   	das    
 520:	33 36                	xor    (%esi),%esi
 522:	34 2f                	xor    $0x2f,%al
 524:	69 36 38 36 2d 72    	imul   $0x722d3638,(%esi),%esi
 52a:	65 64 68 61 74 2d 6c 	gs fs push $0x6c2d7461
 531:	69 6e 75 78 2f 58 2d 	imul   $0x2d582f78,0x75(%esi),%ebp
 538:	69 36 38 36 2d 72    	imul   $0x722d3638,(%esi),%esi
 53e:	65 64 68 61 74 2d 6c 	gs fs push $0x6c2d7461
 545:	69 6e 75 78 2d 78 2d 	imul   $0x2d782d78,0x75(%esi),%ebp
 54c:	6d                   	insl   (%dx),%es:(%edi)
 54d:	73 70                	jae    5bf <L0+0x31>
 54f:	34 33                	xor    $0x33,%al
 551:	30 2d 65 6c 66 2f    	xor    %ch,0x2f666c65
 557:	6d                   	insl   (%dx),%es:(%edi)
 558:	73 70                	jae    5ca <L0+0x3c>
 55a:	34 33                	xor    $0x33,%al
 55c:	30 2d 65 6c 66 2f    	xor    %ch,0x2f666c65
 562:	6c                   	insb   (%dx),%es:(%edi)
 563:	69 62 67 6c 6f 73 73 	imul   $0x73736f6c,0x67(%edx),%esp
 56a:	2f                   	das    
 56b:	6d                   	insl   (%dx),%es:(%edi)
 56c:	73 70                	jae    5de <L0+0x50>
 56e:	34 33                	xor    $0x33,%al
 570:	30 00                	xor    %al,(%eax)
 572:	47                   	inc    %edi
 573:	4e                   	dec    %esi
 574:	55                   	push   %ebp
 575:	20 41 53             	and    %al,0x53(%ecx)
 578:	20 32                	and    %dh,(%edx)
 57a:	2e 32 34 2e          	xor    %cs:(%esi,%ebp,1),%dh
 57e:	35 31 00 01 80       	xor    $0x80010031,%eax

00000583 <L0>:
 583:	ce                   	into   
 584:	00 00                	add    %al,(%eax)
 586:	00 02                	add    %al,(%edx)
 588:	00 7b 01             	add    %bh,0x1(%ebx)
 58b:	00 00                	add    %al,(%eax)
 58d:	04 01                	add    $0x1,%al
 58f:	fe 04 00             	incb   (%eax,%eax,1)
 592:	00 b6 55 00 00 ca    	add    %dh,-0x35ffffab(%esi)
 598:	55                   	push   %ebp
 599:	00 00                	add    %al,(%eax)
 59b:	2f                   	das    
 59c:	6f                   	outsl  %ds:(%esi),(%dx)
 59d:	70 74                	jo     613 <.Ldebug_line_start+0x7>
 59f:	2f                   	das    
 5a0:	72 65                	jb     607 <L0+0x79>
 5a2:	64 68 61 74 2f 6d    	fs push $0x6d2f7461
 5a8:	73 70                	jae    61a <.Ldebug_line_start+0xe>
 5aa:	34 33                	xor    $0x33,%al
 5ac:	30 2d 31 34 72 31    	xor    %ch,0x31723431
 5b2:	2d 33 36 34 2f       	sub    $0x2f343633,%eax
 5b7:	73 6f                	jae    628 <.Ldebug_line_start+0x1c>
 5b9:	75 72                	jne    62d <.Ldebug_line_start+0x21>
 5bb:	63 65 73             	arpl   %sp,0x73(%ebp)
 5be:	2f                   	das    
 5bf:	74 6f                	je     630 <.Ldebug_line_start+0x24>
 5c1:	6f                   	outsl  %ds:(%esi),(%dx)
 5c2:	6c                   	insb   (%dx),%es:(%edi)
 5c3:	73 2f                	jae    5f4 <L0+0x66>
 5c5:	6c                   	insb   (%dx),%es:(%edi)
 5c6:	69 62 67 6c 6f 73 73 	imul   $0x73736f6c,0x67(%edx),%esp
 5cd:	2f                   	das    
 5ce:	6d                   	insl   (%dx),%es:(%edi)
 5cf:	73 70                	jae    641 <.Ldebug_line_start+0x35>
 5d1:	34 33                	xor    $0x33,%al
 5d3:	30 2f                	xor    %ch,(%edi)
 5d5:	63 72 74             	arpl   %si,0x74(%edx)
 5d8:	30 2e                	xor    %ch,(%esi)
 5da:	53                   	push   %ebx
 5db:	00 2f                	add    %ch,(%edi)
 5dd:	65 73 2f             	gs jae 60f <.Ldebug_line_start+0x3>
 5e0:	62 75 69             	bound  %esi,0x69(%ebp)
 5e3:	6c                   	insb   (%dx),%es:(%edi)
 5e4:	64 2f                	fs das 
 5e6:	6d                   	insl   (%dx),%es:(%edi)
 5e7:	73 70                	jae    659 <L0+0x4>
 5e9:	34 33                	xor    $0x33,%al
 5eb:	30 2d 31 34 72 31    	xor    %ch,0x31723431
 5f1:	2f                   	das    
 5f2:	33 36                	xor    (%esi),%esi
 5f4:	34 2f                	xor    $0x2f,%al
 5f6:	69 36 38 36 2d 72    	imul   $0x722d3638,(%esi),%esi
 5fc:	65 64 68 61 74 2d 6c 	gs fs push $0x6c2d7461
 603:	69 6e 75 78 2f 58 2d 	imul   $0x2d582f78,0x75(%esi),%ebp
 60a:	69 36 38 36 2d 72    	imul   $0x722d3638,(%esi),%esi
 610:	65 64 68 61 74 2d 6c 	gs fs push $0x6c2d7461
 617:	69 6e 75 78 2d 78 2d 	imul   $0x2d782d78,0x75(%esi),%ebp
 61e:	6d                   	insl   (%dx),%es:(%edi)
 61f:	73 70                	jae    691 <L0+0x3c>
 621:	34 33                	xor    $0x33,%al
 623:	30 2d 65 6c 66 2f    	xor    %ch,0x2f666c65
 629:	6d                   	insl   (%dx),%es:(%edi)
 62a:	73 70                	jae    69c <L0+0x47>
 62c:	34 33                	xor    $0x33,%al
 62e:	30 2d 65 6c 66 2f    	xor    %ch,0x2f666c65
 634:	6c                   	insb   (%dx),%es:(%edi)
 635:	69 62 67 6c 6f 73 73 	imul   $0x73736f6c,0x67(%edx),%esp
 63c:	2f                   	das    
 63d:	6d                   	insl   (%dx),%es:(%edi)
 63e:	73 70                	jae    6b0 <L0+0x5b>
 640:	34 33                	xor    $0x33,%al
 642:	30 00                	xor    %al,(%eax)
 644:	47                   	inc    %edi
 645:	4e                   	dec    %esi
 646:	55                   	push   %ebp
 647:	20 41 53             	and    %al,0x53(%ecx)
 64a:	20 32                	and    %dh,(%edx)
 64c:	2e 32 34 2e          	xor    %cs:(%esi,%ebp,1),%dh
 650:	35 31 00 01 80       	xor    $0x80010031,%eax

00000655 <L0>:
 655:	ce                   	into   
 656:	00 00                	add    %al,(%eax)
 658:	00 02                	add    %al,(%edx)
 65a:	00 8f 01 00 00 04    	add    %cl,0x4000001(%edi)
 660:	01 8e 05 00 00 ca    	add    %ecx,-0x35fffffb(%esi)
 666:	55                   	push   %ebp
 667:	00 00                	add    %al,(%eax)
 669:	d4 55                	aam    $0x55
 66b:	00 00                	add    %al,(%eax)
 66d:	2f                   	das    
 66e:	6f                   	outsl  %ds:(%esi),(%dx)
 66f:	70 74                	jo     6e5 <L0+0x90>
 671:	2f                   	das    
 672:	72 65                	jb     6d9 <L0+0x84>
 674:	64 68 61 74 2f 6d    	fs push $0x6d2f7461
 67a:	73 70                	jae    6ec <L0+0x97>
 67c:	34 33                	xor    $0x33,%al
 67e:	30 2d 31 34 72 31    	xor    %ch,0x31723431
 684:	2d 33 36 34 2f       	sub    $0x2f343633,%eax
 689:	73 6f                	jae    6fa <L0+0xa5>
 68b:	75 72                	jne    6ff <L0+0xaa>
 68d:	63 65 73             	arpl   %sp,0x73(%ebp)
 690:	2f                   	das    
 691:	74 6f                	je     702 <L0+0xad>
 693:	6f                   	outsl  %ds:(%esi),(%dx)
 694:	6c                   	insb   (%dx),%es:(%edi)
 695:	73 2f                	jae    6c6 <L0+0x71>
 697:	6c                   	insb   (%dx),%es:(%edi)
 698:	69 62 67 6c 6f 73 73 	imul   $0x73736f6c,0x67(%edx),%esp
 69f:	2f                   	das    
 6a0:	6d                   	insl   (%dx),%es:(%edi)
 6a1:	73 70                	jae    713 <L0+0xbe>
 6a3:	34 33                	xor    $0x33,%al
 6a5:	30 2f                	xor    %ch,(%edi)
 6a7:	63 72 74             	arpl   %si,0x74(%edx)
 6aa:	30 2e                	xor    %ch,(%esi)
 6ac:	53                   	push   %ebx
 6ad:	00 2f                	add    %ch,(%edi)
 6af:	65 73 2f             	gs jae 6e1 <L0+0x8c>
 6b2:	62 75 69             	bound  %esi,0x69(%ebp)
 6b5:	6c                   	insb   (%dx),%es:(%edi)
 6b6:	64 2f                	fs das 
 6b8:	6d                   	insl   (%dx),%es:(%edi)
 6b9:	73 70                	jae    72b <L0+0xd6>
 6bb:	34 33                	xor    $0x33,%al
 6bd:	30 2d 31 34 72 31    	xor    %ch,0x31723431
 6c3:	2f                   	das    
 6c4:	33 36                	xor    (%esi),%esi
 6c6:	34 2f                	xor    $0x2f,%al
 6c8:	69 36 38 36 2d 72    	imul   $0x722d3638,(%esi),%esi
 6ce:	65 64 68 61 74 2d 6c 	gs fs push $0x6c2d7461
 6d5:	69 6e 75 78 2f 58 2d 	imul   $0x2d582f78,0x75(%esi),%ebp
 6dc:	69 36 38 36 2d 72    	imul   $0x722d3638,(%esi),%esi
 6e2:	65 64 68 61 74 2d 6c 	gs fs push $0x6c2d7461
 6e9:	69 6e 75 78 2d 78 2d 	imul   $0x2d782d78,0x75(%esi),%ebp
 6f0:	6d                   	insl   (%dx),%es:(%edi)
 6f1:	73 70                	jae    763 <L0+0x10e>
 6f3:	34 33                	xor    $0x33,%al
 6f5:	30 2d 65 6c 66 2f    	xor    %ch,0x2f666c65
 6fb:	6d                   	insl   (%dx),%es:(%edi)
 6fc:	73 70                	jae    76e <.Ldebug_line_start+0xa>
 6fe:	34 33                	xor    $0x33,%al
 700:	30 2d 65 6c 66 2f    	xor    %ch,0x2f666c65
 706:	6c                   	insb   (%dx),%es:(%edi)
 707:	69 62 67 6c 6f 73 73 	imul   $0x73736f6c,0x67(%edx),%esp
 70e:	2f                   	das    
 70f:	6d                   	insl   (%dx),%es:(%edi)
 710:	73 70                	jae    782 <.Ldebug_line_start+0x1e>
 712:	34 33                	xor    $0x33,%al
 714:	30 00                	xor    %al,(%eax)
 716:	47                   	inc    %edi
 717:	4e                   	dec    %esi
 718:	55                   	push   %ebp
 719:	20 41 53             	and    %al,0x53(%ecx)
 71c:	20 32                	and    %dh,(%edx)
 71e:	2e 32 34 2e          	xor    %cs:(%esi,%ebp,1),%dh
 722:	35 31 00 01 80       	xor    $0x80010031,%eax
 727:	fa                   	cli    
 728:	00 00                	add    %al,(%eax)
 72a:	00 04 00             	add    %al,(%eax,%eax,1)
 72d:	a3 01 00 00 04       	mov    %eax,0x4000001
 732:	01 98 03 00 00 01    	add    %ebx,0x1000003(%eax)
 738:	51                   	push   %ecx
 739:	03 00                	add    (%eax),%eax
 73b:	00 28                	add    %ch,(%eax)
 73d:	00 00                	add    %al,(%eax)
 73f:	00 00                	add    %al,(%eax)
 741:	00 00                	add    %al,(%eax)
 743:	00 0c 06             	add    %cl,(%esi,%eax,1)
 746:	00 00                	add    %al,(%eax)
 748:	02 02                	add    (%edx),%al
 74a:	05 69 6e 74 00       	add    $0x746e69,%eax
 74f:	03 31                	add    (%ecx),%esi
 751:	03 00                	add    (%eax),%eax
 753:	00 02                	add    %al,(%edx)
 755:	d4 33                	aam    $0x33
 757:	00 00                	add    %al,(%eax)
 759:	00 04 02             	add    %al,(%edx,%eax,1)
 75c:	07                   	pop    %es
 75d:	79 01                	jns    760 <L0+0x10b>
 75f:	00 00                	add    %al,(%eax)
 761:	04 04                	add    $0x4,%al
 763:	05 c6 00 00 00       	add    $0xc6,%eax
 768:	04 01                	add    $0x1,%al
 76a:	06                   	push   %es
 76b:	59                   	pop    %ecx
 76c:	01 00                	add    %eax,(%eax)
 76e:	00 04 01             	add    %al,(%ecx,%eax,1)
 771:	08 57 01             	or     %dl,0x1(%edi)
 774:	00 00                	add    %al,(%eax)
 776:	04 02                	add    $0x2,%al
 778:	05 26 00 00 00       	add    $0x26,%eax
 77d:	04 02                	add    $0x2,%al
 77f:	07                   	pop    %es
 780:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
 781:	01 00                	add    %eax,(%eax)
 783:	00 04 04             	add    %al,(%esp,%eax,1)
 786:	07                   	pop    %es
 787:	74 01                	je     78a <.Ldebug_line_start+0x26>
 789:	00 00                	add    %al,(%eax)
 78b:	04 08                	add    $0x8,%al
 78d:	05 c1 00 00 00       	add    $0xc1,%eax
 792:	04 08                	add    $0x8,%al
 794:	07                   	pop    %es
 795:	6f                   	outsl  %ds:(%esi),(%dx)
 796:	01 00                	add    %eax,(%eax)
 798:	00 04 02             	add    %al,(%edx,%eax,1)
 79b:	07                   	pop    %es
 79c:	50                   	push   %eax
 79d:	04 00                	add    $0x0,%al
 79f:	00 05 02 06 02 81    	add    %al,0x81020602
 7a5:	00 00                	add    %al,(%eax)
 7a7:	00 04 01             	add    %al,(%ecx,%eax,1)
 7aa:	08 60 01             	or     %ah,0x1(%eax)
 7ad:	00 00                	add    %al,(%eax)
 7af:	06                   	push   %es
 7b0:	02 8e 00 00 00 07    	add    0x7000000(%esi),%cl
 7b6:	81 00 00 00 08 29    	addl   $0x29080000,(%eax)
 7bc:	03 00                	add    (%eax),%eax
 7be:	00 03                	add    %al,(%ebx)
 7c0:	18 79 00             	sbb    %bh,0x0(%ecx)
 7c3:	00 00                	add    %al,(%eax)
 7c5:	04 6e                	add    $0x6e,%al
 7c7:	00 00                	add    %al,(%eax)
 7c9:	40                   	inc    %eax
 7ca:	00 00                	add    %al,(%eax)
 7cc:	00 01                	add    %al,(%ecx)
 7ce:	9c                   	pushf  
 7cf:	f6 00 00             	testb  $0x0,(%eax)
 7d2:	00 09                	add    %cl,(%ecx)
 7d4:	3f                   	aas    
 7d5:	03 00                	add    (%eax),%eax
 7d7:	00 01                	add    %al,(%ecx)
 7d9:	3c 79                	cmp    $0x79,%al
 7db:	00 00                	add    %al,(%eax)
 7dd:	00 01                	add    %al,(%ecx)
 7df:	5c                   	pop    %esp
 7e0:	0a 48 03             	or     0x3(%eax),%cl
 7e3:	00 00                	add    %al,(%eax)
 7e5:	01 3c f6             	add    %edi,(%esi,%esi,8)
 7e8:	00 00                	add    %al,(%eax)
 7ea:	00 4c 01 00          	add    %cl,0x0(%ecx,%eax,1)
 7ee:	00 0a                	add    %cl,(%edx)
 7f0:	38 03                	cmp    %al,(%ebx)
 7f2:	00 00                	add    %al,(%eax)
 7f4:	01 3c 28             	add    %edi,(%eax,%ebp,1)
 7f7:	00 00                	add    %al,(%eax)
 7f9:	00 86 01 00 00 0b    	add    %al,0xb000001(%esi)
 7ff:	64 73 74             	fs jae 876 <.Ldebug_line_start+0x112>
 802:	00 01                	add    %al,(%ecx)
 804:	42                   	inc    %edx
 805:	7b 00                	jnp    807 <.Ldebug_line_start+0xa3>
 807:	00 00                	add    %al,(%eax)
 809:	d0 01                	rolb   (%ecx)
 80b:	00 00                	add    %al,(%eax)
 80d:	0b 73 72             	or     0x72(%ebx),%esi
 810:	63 00                	arpl   %ax,(%eax)
 812:	01 43 88             	add    %eax,-0x78(%ebx)
 815:	00 00                	add    %al,(%eax)
 817:	00 62 02             	add    %ah,0x2(%edx)
 81a:	00 00                	add    %al,(%eax)
 81c:	00 06                	add    %al,(%esi)
 81e:	02 fc                	add    %ah,%bh
 820:	00 00                	add    %al,(%eax)
 822:	00 0c 00             	add    %cl,(%eax,%eax,1)
 825:	cb                   	lret   
 826:	00 00                	add    %al,(%eax)
 828:	00 04 00             	add    %al,(%eax,%eax,1)
 82b:	3d 02 00 00 04       	cmp    $0x4000002,%eax
 830:	01 98 03 00 00 01    	add    %ebx,0x1000003(%eax)
 836:	59                   	pop    %ecx
 837:	04 00                	add    $0x0,%al
 839:	00 38                	add    %bh,(%eax)
 83b:	00 00                	add    %al,(%eax)
 83d:	00 00                	add    %al,(%eax)
 83f:	00 00                	add    %al,(%eax)
 841:	00 64 07 00          	add    %ah,0x0(%edi,%eax,1)
 845:	00 02                	add    %al,(%edx)
 847:	02 05 69 6e 74 00    	add    0x746e69,%al
 84d:	03 31                	add    (%ecx),%esi
 84f:	03 00                	add    (%eax),%eax
 851:	00 02                	add    %al,(%edx)
 853:	d4 33                	aam    $0x33
 855:	00 00                	add    %al,(%eax)
 857:	00 04 02             	add    %al,(%edx,%eax,1)
 85a:	07                   	pop    %es
 85b:	79 01                	jns    85e <.Ldebug_line_start+0xfa>
 85d:	00 00                	add    %al,(%eax)
 85f:	04 04                	add    $0x4,%al
 861:	05 c6 00 00 00       	add    $0xc6,%eax
 866:	04 01                	add    $0x1,%al
 868:	06                   	push   %es
 869:	59                   	pop    %ecx
 86a:	01 00                	add    %eax,(%eax)
 86c:	00 04 01             	add    %al,(%ecx,%eax,1)
 86f:	08 57 01             	or     %dl,0x1(%edi)
 872:	00 00                	add    %al,(%eax)
 874:	04 02                	add    $0x2,%al
 876:	05 26 00 00 00       	add    $0x26,%eax
 87b:	04 02                	add    $0x2,%al
 87d:	07                   	pop    %es
 87e:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
 87f:	01 00                	add    %eax,(%eax)
 881:	00 04 04             	add    %al,(%esp,%eax,1)
 884:	07                   	pop    %es
 885:	74 01                	je     888 <.Ldebug_line_start+0x124>
 887:	00 00                	add    %al,(%eax)
 889:	04 08                	add    $0x8,%al
 88b:	05 c1 00 00 00       	add    $0xc1,%eax
 890:	04 08                	add    $0x8,%al
 892:	07                   	pop    %es
 893:	6f                   	outsl  %ds:(%esi),(%dx)
 894:	01 00                	add    %eax,(%eax)
 896:	00 04 02             	add    %al,(%edx,%eax,1)
 899:	07                   	pop    %es
 89a:	50                   	push   %eax
 89b:	04 00                	add    $0x0,%al
 89d:	00 05 02 06 02 81    	add    %al,0x81020602
 8a3:	00 00                	add    %al,(%eax)
 8a5:	00 04 01             	add    %al,(%ecx,%eax,1)
 8a8:	08 60 01             	or     %ah,0x1(%eax)
 8ab:	00 00                	add    %al,(%eax)
 8ad:	07                   	pop    %es
 8ae:	9f                   	lahf   
 8af:	04 00                	add    $0x0,%al
 8b1:	00 03                	add    %al,(%ebx)
 8b3:	19 79 00             	sbb    %edi,0x0(%ecx)
 8b6:	00 00                	add    %al,(%eax)
 8b8:	44                   	inc    %esp
 8b9:	6e                   	outsb  %ds:(%esi),(%dx)
 8ba:	00 00                	add    %al,(%eax)
 8bc:	12 00                	adc    (%eax),%al
 8be:	00 00                	add    %al,(%eax)
 8c0:	01 9c 08 6d 00 01 2d 	add    %ebx,0x2d01006d(%eax,%ecx,1)
 8c7:	79 00                	jns    8c9 <L0+0x2c>
 8c9:	00 00                	add    %al,(%eax)
 8cb:	01 5c 08 63          	add    %ebx,0x63(%eax,%ecx,1)
 8cf:	00 01                	add    %al,(%ecx)
 8d1:	2d 21 00 00 00       	sub    $0x21,%eax
 8d6:	01 5d 09             	add    %ebx,0x9(%ebp)
 8d9:	6e                   	outsb  %ds:(%esi),(%dx)
 8da:	00 01                	add    %al,(%ecx)
 8dc:	2d 28 00 00 00       	sub    $0x28,%eax
 8e1:	f8                   	clc    
 8e2:	02 00                	add    (%eax),%al
 8e4:	00 0a                	add    %cl,(%edx)
 8e6:	73 00                	jae    8e8 <L0+0x4b>
 8e8:	01 32                	add    %esi,(%edx)
 8ea:	7b 00                	jnp    8ec <L0+0x4f>
 8ec:	00 00                	add    %al,(%eax)
 8ee:	49                   	dec    %ecx
 8ef:	03 00                	add    (%eax),%eax
 8f1:	00 00                	add    %al,(%eax)
	...

000008f4 <L0>:
 8f4:	ca 00 00             	lret   $0x0
 8f7:	00 02                	add    %al,(%edx)
 8f9:	00 c9                	add    %cl,%cl
 8fb:	02 00                	add    (%eax),%al
 8fd:	00 04 01             	add    %al,(%ecx,%eax,1)
 900:	9d                   	popf   
 901:	08 00                	or     %al,(%eax)
 903:	00 48 00             	add    %cl,0x0(%eax)
 906:	00 00                	add    %al,(%eax)
 908:	2f                   	das    
 909:	6f                   	outsl  %ds:(%esi),(%dx)
 90a:	70 74                	jo     980 <L0+0x8c>
 90c:	2f                   	das    
 90d:	72 65                	jb     974 <L0+0x80>
 90f:	64 68 61 74 2f 6d    	fs push $0x6d2f7461
 915:	73 70                	jae    987 <L0+0x93>
 917:	34 33                	xor    $0x33,%al
 919:	30 2d 31 34 72 31    	xor    %ch,0x31723431
 91f:	2d 33 36 34 2f       	sub    $0x2f343633,%eax
 924:	73 6f                	jae    995 <L0+0xa1>
 926:	75 72                	jne    99a <L0+0xa6>
 928:	63 65 73             	arpl   %sp,0x73(%ebp)
 92b:	2f                   	das    
 92c:	74 6f                	je     99d <L0+0xa9>
 92e:	6f                   	outsl  %ds:(%esi),(%dx)
 92f:	6c                   	insb   (%dx),%es:(%edi)
 930:	73 2f                	jae    961 <L0+0x6d>
 932:	6c                   	insb   (%dx),%es:(%edi)
 933:	69 62 67 6c 6f 73 73 	imul   $0x73736f6c,0x67(%edx),%esp
 93a:	2f                   	das    
 93b:	6d                   	insl   (%dx),%es:(%edi)
 93c:	73 70                	jae    9ae <L0+0xba>
 93e:	34 33                	xor    $0x33,%al
 940:	30 2f                	xor    %ch,(%edi)
 942:	63 72 74             	arpl   %si,0x74(%edx)
 945:	6e                   	outsb  %ds:(%esi),(%dx)
 946:	2e 53                	cs push %ebx
 948:	00 2f                	add    %ch,(%edi)
 94a:	65 73 2f             	gs jae 97c <L0+0x88>
 94d:	62 75 69             	bound  %esi,0x69(%ebp)
 950:	6c                   	insb   (%dx),%es:(%edi)
 951:	64 2f                	fs das 
 953:	6d                   	insl   (%dx),%es:(%edi)
 954:	73 70                	jae    9c6 <L0+0xd2>
 956:	34 33                	xor    $0x33,%al
 958:	30 2d 31 34 72 31    	xor    %ch,0x31723431
 95e:	2f                   	das    
 95f:	33 36                	xor    (%esi),%esi
 961:	34 2f                	xor    $0x2f,%al
 963:	69 36 38 36 2d 72    	imul   $0x722d3638,(%esi),%esi
 969:	65 64 68 61 74 2d 6c 	gs fs push $0x6c2d7461
 970:	69 6e 75 78 2f 58 2d 	imul   $0x2d582f78,0x75(%esi),%ebp
 977:	69 36 38 36 2d 72    	imul   $0x722d3638,(%esi),%esi
 97d:	65 64 68 61 74 2d 6c 	gs fs push $0x6c2d7461
 984:	69 6e 75 78 2d 78 2d 	imul   $0x2d782d78,0x75(%esi),%ebp
 98b:	6d                   	insl   (%dx),%es:(%edi)
 98c:	73 70                	jae    9fe <L0+0x10a>
 98e:	34 33                	xor    $0x33,%al
 990:	30 2d 65 6c 66 2f    	xor    %ch,0x2f666c65
 996:	6d                   	insl   (%dx),%es:(%edi)
 997:	73 70                	jae    a09 <L0+0x115>
 999:	34 33                	xor    $0x33,%al
 99b:	30 2d 65 6c 66 2f    	xor    %ch,0x2f666c65
 9a1:	6c                   	insb   (%dx),%es:(%edi)
 9a2:	69 62 67 6c 6f 73 73 	imul   $0x73736f6c,0x67(%edx),%esp
 9a9:	2f                   	das    
 9aa:	6d                   	insl   (%dx),%es:(%edi)
 9ab:	73 70                	jae    a1d <L0+0x129>
 9ad:	34 33                	xor    $0x33,%al
 9af:	30 00                	xor    %al,(%eax)
 9b1:	47                   	inc    %edi
 9b2:	4e                   	dec    %esi
 9b3:	55                   	push   %ebp
 9b4:	20 41 53             	and    %al,0x53(%ecx)
 9b7:	20 32                	and    %dh,(%edx)
 9b9:	2e 32 34 2e          	xor    %cs:(%esi,%ebp,1),%dh
 9bd:	35 31 00 01 80       	xor    $0x80010031,%eax

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%ecx)
   2:	00 10                	add    %dl,(%eax)
   4:	06                   	push   %es
   5:	55                   	push   %ebp
   6:	06                   	push   %es
   7:	03 08                	add    (%eax),%ecx
   9:	1b 08                	sbb    (%eax),%ecx
   b:	25 08 13 05 00       	and    $0x51308,%eax
  10:	00 00                	add    %al,(%eax)
  12:	01 11                	add    %edx,(%ecx)
  14:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
  1a:	0e                   	push   %cs
  1b:	1b 0e                	sbb    (%esi),%ecx
  1d:	11 01                	adc    %eax,(%ecx)
  1f:	12 06                	adc    (%esi),%al
  21:	10 17                	adc    %dl,(%edi)
  23:	00 00                	add    %al,(%eax)
  25:	02 24 00             	add    (%eax,%eax,1),%ah
  28:	0b 0b                	or     (%ebx),%ecx
  2a:	3e 0b 03             	or     %ds:(%ebx),%eax
  2d:	0e                   	push   %cs
  2e:	00 00                	add    %al,(%eax)
  30:	03 16                	add    (%esi),%edx
  32:	00 03                	add    %al,(%ebx)
  34:	0e                   	push   %cs
  35:	3a 0b                	cmp    (%ebx),%cl
  37:	3b 0b                	cmp    (%ebx),%ecx
  39:	49                   	dec    %ecx
  3a:	13 00                	adc    (%eax),%eax
  3c:	00 04 24             	add    %al,(%esp)
  3f:	00 0b                	add    %cl,(%ebx)
  41:	0b 3e                	or     (%esi),%edi
  43:	0b 03                	or     (%ebx),%eax
  45:	08 00                	or     %al,(%eax)
  47:	00 05 0f 00 0b 0b    	add    %al,0xb0b000f
  4d:	49                   	dec    %ecx
  4e:	13 00                	adc    (%eax),%eax
  50:	00 06                	add    %al,(%esi)
  52:	13 01                	adc    (%ecx),%eax
  54:	0b 0b                	or     (%ebx),%ecx
  56:	3a 0b                	cmp    (%ebx),%cl
  58:	3b 0b                	cmp    (%ebx),%ecx
  5a:	01 13                	add    %edx,(%ebx)
  5c:	00 00                	add    %al,(%eax)
  5e:	07                   	pop    %es
  5f:	0d 00 03 0e 3a       	or     $0x3a0e0300,%eax
  64:	0b 3b                	or     (%ebx),%edi
  66:	0b 49 13             	or     0x13(%ecx),%ecx
  69:	38 0b                	cmp    %cl,(%ebx)
  6b:	00 00                	add    %al,(%eax)
  6d:	08 2e                	or     %ch,(%esi)
  6f:	00 3f                	add    %bh,(%edi)
  71:	19 03                	sbb    %eax,(%ebx)
  73:	0e                   	push   %cs
  74:	3a 0b                	cmp    (%ebx),%cl
  76:	3b 0b                	cmp    (%ebx),%ecx
  78:	27                   	daa    
  79:	19 11                	sbb    %edx,(%ecx)
  7b:	01 12                	add    %edx,(%edx)
  7d:	06                   	push   %es
  7e:	40                   	inc    %eax
  7f:	18 97 42 19 00 00    	sbb    %dl,0x1942(%edi)
  85:	09 2e                	or     %ebp,(%esi)
  87:	01 3f                	add    %edi,(%edi)
  89:	19 03                	sbb    %eax,(%ebx)
  8b:	0e                   	push   %cs
  8c:	3a 0b                	cmp    (%ebx),%cl
  8e:	3b 0b                	cmp    (%ebx),%ecx
  90:	27                   	daa    
  91:	19 11                	sbb    %edx,(%ecx)
  93:	01 12                	add    %edx,(%edx)
  95:	06                   	push   %es
  96:	40                   	inc    %eax
  97:	18 97 42 19 01 13    	sbb    %dl,0x13011942(%edi)
  9d:	00 00                	add    %al,(%eax)
  9f:	0a 05 00 03 0e 3a    	or     0x3a0e0300,%al
  a5:	0b 3b                	or     (%ebx),%edi
  a7:	0b 49 13             	or     0x13(%ecx),%ecx
  aa:	02 18                	add    (%eax),%bl
  ac:	00 00                	add    %al,(%eax)
  ae:	0b 05 00 03 0e 3a    	or     0x3a0e0300,%eax
  b4:	0b 3b                	or     (%ebx),%edi
  b6:	0b 49 13             	or     0x13(%ecx),%ecx
  b9:	02 17                	add    (%edi),%dl
  bb:	00 00                	add    %al,(%eax)
  bd:	0c 89                	or     $0x89,%al
  bf:	82                   	(bad)  
  c0:	01 01                	add    %eax,(%ecx)
  c2:	11 01                	adc    %eax,(%ecx)
  c4:	31 13                	xor    %edx,(%ebx)
  c6:	00 00                	add    %al,(%eax)
  c8:	0d 8a 82 01 00       	or     $0x1828a,%eax
  cd:	02 18                	add    (%eax),%bl
  cf:	91                   	xchg   %eax,%ecx
  d0:	42                   	inc    %edx
  d1:	18 00                	sbb    %al,(%eax)
  d3:	00 0e                	add    %cl,(%esi)
  d5:	2e 00 3f             	add    %bh,%cs:(%edi)
  d8:	19 03                	sbb    %eax,(%ebx)
  da:	0e                   	push   %cs
  db:	3a 0b                	cmp    (%ebx),%cl
  dd:	3b 0b                	cmp    (%ebx),%ecx
  df:	49                   	dec    %ecx
  e0:	13 11                	adc    (%ecx),%edx
  e2:	01 12                	add    %edx,(%edx)
  e4:	06                   	push   %es
  e5:	40                   	inc    %eax
  e6:	18 97 42 19 00 00    	sbb    %dl,0x1942(%edi)
  ec:	0f 0b                	ud2    
  ee:	01 11                	add    %edx,(%ecx)
  f0:	01 12                	add    %edx,(%edx)
  f2:	06                   	push   %es
  f3:	00 00                	add    %al,(%eax)
  f5:	10 34 00             	adc    %dh,(%eax,%eax,1)
  f8:	03 08                	add    (%eax),%ecx
  fa:	3a 0b                	cmp    (%ebx),%cl
  fc:	3b 05 49 13 02 17    	cmp    0x17021349,%eax
 102:	00 00                	add    %al,(%eax)
 104:	11 2e                	adc    %ebp,(%esi)
 106:	00 3f                	add    %bh,(%edi)
 108:	19 03                	sbb    %eax,(%ebx)
 10a:	0e                   	push   %cs
 10b:	3a 0b                	cmp    (%ebx),%cl
 10d:	3b 05 49 13 11 01    	cmp    0x1111349,%eax
 113:	12 06                	adc    (%esi),%al
 115:	40                   	inc    %eax
 116:	18 97 42 19 00 00    	sbb    %dl,0x1942(%edi)
 11c:	12 2e                	adc    (%esi),%ch
 11e:	01 3f                	add    %edi,(%edi)
 120:	19 03                	sbb    %eax,(%ebx)
 122:	0e                   	push   %cs
 123:	3a 0b                	cmp    (%ebx),%cl
 125:	3b 05 27 19 11 01    	cmp    0x1111927,%eax
 12b:	12 06                	adc    (%esi),%al
 12d:	40                   	inc    %eax
 12e:	18 97 42 19 01 13    	sbb    %dl,0x13011942(%edi)
 134:	00 00                	add    %al,(%eax)
 136:	13 34 00             	adc    (%eax,%eax,1),%esi
 139:	03 0e                	add    (%esi),%ecx
 13b:	3a 0b                	cmp    (%ebx),%cl
 13d:	3b 0b                	cmp    (%ebx),%ecx
 13f:	49                   	dec    %ecx
 140:	13 02                	adc    (%edx),%eax
 142:	18 00                	sbb    %al,(%eax)
 144:	00 14 35 00 49 13 00 	add    %dl,0x134900(,%esi,1)
 14b:	00 15 34 00 03 0e    	add    %dl,0xe030034
 151:	3a 0b                	cmp    (%ebx),%cl
 153:	3b 05 6e 0e 49 13    	cmp    0x13490e6e,%eax
 159:	3f                   	aas    
 15a:	19 3c 19             	sbb    %edi,(%ecx,%ebx,1)
 15d:	00 00                	add    %al,(%eax)
 15f:	16                   	push   %ss
 160:	26 00 49 13          	add    %cl,%es:0x13(%ecx)
 164:	00 00                	add    %al,(%eax)
 166:	00 01                	add    %al,(%ecx)
 168:	11 00                	adc    %eax,(%eax)
 16a:	10 06                	adc    %al,(%esi)
 16c:	11 01                	adc    %eax,(%ecx)
 16e:	12 01                	adc    (%ecx),%al
 170:	03 08                	add    (%eax),%ecx
 172:	1b 08                	sbb    (%eax),%ecx
 174:	25 08 13 05 00       	and    $0x51308,%eax
 179:	00 00                	add    %al,(%eax)
 17b:	01 11                	add    %edx,(%ecx)
 17d:	00 10                	add    %dl,(%eax)
 17f:	06                   	push   %es
 180:	11 01                	adc    %eax,(%ecx)
 182:	12 01                	adc    (%ecx),%al
 184:	03 08                	add    (%eax),%ecx
 186:	1b 08                	sbb    (%eax),%ecx
 188:	25 08 13 05 00       	and    $0x51308,%eax
 18d:	00 00                	add    %al,(%eax)
 18f:	01 11                	add    %edx,(%ecx)
 191:	00 10                	add    %dl,(%eax)
 193:	06                   	push   %es
 194:	11 01                	adc    %eax,(%ecx)
 196:	12 01                	adc    (%ecx),%al
 198:	03 08                	add    (%eax),%ecx
 19a:	1b 08                	sbb    (%eax),%ecx
 19c:	25 08 13 05 00       	and    $0x51308,%eax
 1a1:	00 00                	add    %al,(%eax)
 1a3:	01 11                	add    %edx,(%ecx)
 1a5:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
 1ab:	0e                   	push   %cs
 1ac:	55                   	push   %ebp
 1ad:	17                   	pop    %ss
 1ae:	11 01                	adc    %eax,(%ecx)
 1b0:	10 17                	adc    %dl,(%edi)
 1b2:	00 00                	add    %al,(%eax)
 1b4:	02 24 00             	add    (%eax,%eax,1),%ah
 1b7:	0b 0b                	or     (%ebx),%ecx
 1b9:	3e 0b 03             	or     %ds:(%ebx),%eax
 1bc:	08 00                	or     %al,(%eax)
 1be:	00 03                	add    %al,(%ebx)
 1c0:	16                   	push   %ss
 1c1:	00 03                	add    %al,(%ebx)
 1c3:	0e                   	push   %cs
 1c4:	3a 0b                	cmp    (%ebx),%cl
 1c6:	3b 0b                	cmp    (%ebx),%ecx
 1c8:	49                   	dec    %ecx
 1c9:	13 00                	adc    (%eax),%eax
 1cb:	00 04 24             	add    %al,(%esp)
 1ce:	00 0b                	add    %cl,(%ebx)
 1d0:	0b 3e                	or     (%esi),%edi
 1d2:	0b 03                	or     (%ebx),%eax
 1d4:	0e                   	push   %cs
 1d5:	00 00                	add    %al,(%eax)
 1d7:	05 0f 00 0b 0b       	add    $0xb0b000f,%eax
 1dc:	00 00                	add    %al,(%eax)
 1de:	06                   	push   %es
 1df:	0f 00 0b             	str    (%ebx)
 1e2:	0b 49 13             	or     0x13(%ecx),%ecx
 1e5:	00 00                	add    %al,(%eax)
 1e7:	07                   	pop    %es
 1e8:	26 00 49 13          	add    %cl,%es:0x13(%ecx)
 1ec:	00 00                	add    %al,(%eax)
 1ee:	08 2e                	or     %ch,(%esi)
 1f0:	01 3f                	add    %edi,(%edi)
 1f2:	19 03                	sbb    %eax,(%ebx)
 1f4:	0e                   	push   %cs
 1f5:	3a 0b                	cmp    (%ebx),%cl
 1f7:	3b 0b                	cmp    (%ebx),%ecx
 1f9:	27                   	daa    
 1fa:	19 49 13             	sbb    %ecx,0x13(%ecx)
 1fd:	11 01                	adc    %eax,(%ecx)
 1ff:	12 06                	adc    (%esi),%al
 201:	40                   	inc    %eax
 202:	18 97 42 19 01 13    	sbb    %dl,0x13011942(%edi)
 208:	00 00                	add    %al,(%eax)
 20a:	09 05 00 03 0e 3a    	or     %eax,0x3a0e0300
 210:	0b 3b                	or     (%ebx),%edi
 212:	0b 49 13             	or     0x13(%ecx),%ecx
 215:	02 18                	add    (%eax),%bl
 217:	00 00                	add    %al,(%eax)
 219:	0a 05 00 03 0e 3a    	or     0x3a0e0300,%al
 21f:	0b 3b                	or     (%ebx),%edi
 221:	0b 49 13             	or     0x13(%ecx),%ecx
 224:	02 17                	add    (%edi),%dl
 226:	00 00                	add    %al,(%eax)
 228:	0b 34 00             	or     (%eax,%eax,1),%esi
 22b:	03 08                	add    (%eax),%ecx
 22d:	3a 0b                	cmp    (%ebx),%cl
 22f:	3b 0b                	cmp    (%ebx),%ecx
 231:	49                   	dec    %ecx
 232:	13 02                	adc    (%edx),%eax
 234:	17                   	pop    %ss
 235:	00 00                	add    %al,(%eax)
 237:	0c 26                	or     $0x26,%al
 239:	00 00                	add    %al,(%eax)
 23b:	00 00                	add    %al,(%eax)
 23d:	01 11                	add    %edx,(%ecx)
 23f:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
 245:	0e                   	push   %cs
 246:	55                   	push   %ebp
 247:	17                   	pop    %ss
 248:	11 01                	adc    %eax,(%ecx)
 24a:	10 17                	adc    %dl,(%edi)
 24c:	00 00                	add    %al,(%eax)
 24e:	02 24 00             	add    (%eax,%eax,1),%ah
 251:	0b 0b                	or     (%ebx),%ecx
 253:	3e 0b 03             	or     %ds:(%ebx),%eax
 256:	08 00                	or     %al,(%eax)
 258:	00 03                	add    %al,(%ebx)
 25a:	16                   	push   %ss
 25b:	00 03                	add    %al,(%ebx)
 25d:	0e                   	push   %cs
 25e:	3a 0b                	cmp    (%ebx),%cl
 260:	3b 0b                	cmp    (%ebx),%ecx
 262:	49                   	dec    %ecx
 263:	13 00                	adc    (%eax),%eax
 265:	00 04 24             	add    %al,(%esp)
 268:	00 0b                	add    %cl,(%ebx)
 26a:	0b 3e                	or     (%esi),%edi
 26c:	0b 03                	or     (%ebx),%eax
 26e:	0e                   	push   %cs
 26f:	00 00                	add    %al,(%eax)
 271:	05 0f 00 0b 0b       	add    $0xb0b000f,%eax
 276:	00 00                	add    %al,(%eax)
 278:	06                   	push   %es
 279:	0f 00 0b             	str    (%ebx)
 27c:	0b 49 13             	or     0x13(%ecx),%ecx
 27f:	00 00                	add    %al,(%eax)
 281:	07                   	pop    %es
 282:	2e 01 3f             	add    %edi,%cs:(%edi)
 285:	19 03                	sbb    %eax,(%ebx)
 287:	0e                   	push   %cs
 288:	3a 0b                	cmp    (%ebx),%cl
 28a:	3b 0b                	cmp    (%ebx),%ecx
 28c:	27                   	daa    
 28d:	19 49 13             	sbb    %ecx,0x13(%ecx)
 290:	11 01                	adc    %eax,(%ecx)
 292:	12 06                	adc    (%esi),%al
 294:	40                   	inc    %eax
 295:	18 97 42 19 00 00    	sbb    %dl,0x1942(%edi)
 29b:	08 05 00 03 08 3a    	or     %al,0x3a080300
 2a1:	0b 3b                	or     (%ebx),%edi
 2a3:	0b 49 13             	or     0x13(%ecx),%ecx
 2a6:	02 18                	add    (%eax),%bl
 2a8:	00 00                	add    %al,(%eax)
 2aa:	09 05 00 03 08 3a    	or     %eax,0x3a080300
 2b0:	0b 3b                	or     (%ebx),%edi
 2b2:	0b 49 13             	or     0x13(%ecx),%ecx
 2b5:	02 17                	add    (%edi),%dl
 2b7:	00 00                	add    %al,(%eax)
 2b9:	0a 34 00             	or     (%eax,%eax,1),%dh
 2bc:	03 08                	add    (%eax),%ecx
 2be:	3a 0b                	cmp    (%ebx),%cl
 2c0:	3b 0b                	cmp    (%ebx),%ecx
 2c2:	49                   	dec    %ecx
 2c3:	13 02                	adc    (%edx),%eax
 2c5:	17                   	pop    %ss
 2c6:	00 00                	add    %al,(%eax)
 2c8:	00 01                	add    %al,(%ecx)
 2ca:	11 00                	adc    %eax,(%eax)
 2cc:	10 06                	adc    %al,(%esi)
 2ce:	55                   	push   %ebp
 2cf:	06                   	push   %es
 2d0:	03 08                	add    (%eax),%ecx
 2d2:	1b 08                	sbb    (%eax),%ecx
 2d4:	25 08 13 05 00       	and    $0x51308,%eax
	...

Disassembly of section .debug_line:

00000000 <L0>:
   0:	fb                   	sti    
   1:	00 00                	add    %al,(%eax)
   3:	00 02                	add    %al,(%edx)
   5:	00 57 00             	add    %dl,0x0(%edi)
   8:	00 00                	add    %al,(%eax)
   a:	01 01                	add    %eax,(%ecx)
   c:	fb                   	sti    
   d:	0e                   	push   %cs
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%eax)
  15:	00 00                	add    %al,(%eax)
  17:	01 00                	add    %eax,(%eax)
  19:	00 01                	add    %al,(%ecx)
  1b:	2f                   	das    
  1c:	6f                   	outsl  %ds:(%esi),(%dx)
  1d:	70 74                	jo     93 <L0+0x3>
  1f:	2f                   	das    
  20:	72 65                	jb     87 <L0+0x17>
  22:	64 68 61 74 2f 6d    	fs push $0x6d2f7461
  28:	73 70                	jae    9a <L0+0xa>
  2a:	34 33                	xor    $0x33,%al
  2c:	30 2d 31 34 72 31    	xor    %ch,0x31723431
  32:	2d 33 36 34 2f       	sub    $0x2f343633,%eax
  37:	73 6f                	jae    a8 <L0+0x18>
  39:	75 72                	jne    ad <L0+0x1d>
  3b:	63 65 73             	arpl   %sp,0x73(%ebp)
  3e:	2f                   	das    
  3f:	74 6f                	je     b0 <L0+0x20>
  41:	6f                   	outsl  %ds:(%esi),(%dx)
  42:	6c                   	insb   (%dx),%es:(%edi)
  43:	73 2f                	jae    74 <L0+0x4>
  45:	6c                   	insb   (%dx),%es:(%edi)
  46:	69 62 67 6c 6f 73 73 	imul   $0x73736f6c,0x67(%edx),%esp
  4d:	2f                   	das    
  4e:	6d                   	insl   (%dx),%es:(%edi)
  4f:	73 70                	jae    c1 <L0+0x31>
  51:	34 33                	xor    $0x33,%al
  53:	30 00                	xor    %al,(%eax)
  55:	00 63 72             	add    %ah,0x72(%ebx)
  58:	74 30                	je     8a <L0+0x1a>
  5a:	2e 53                	cs push %ebx
  5c:	00 01                	add    %al,(%ecx)
  5e:	00 00                	add    %al,(%eax)
  60:	00 00                	add    %al,(%eax)
  62:	05 02 a4 55 00       	add    $0x55a402,%eax
  67:	00 03                	add    %al,(%ebx)
  69:	3d 01 09 04 00       	cmp    $0x40901,%eax
  6e:	00 01                	add    %al,(%ecx)
  70:	01 00                	add    %eax,(%eax)
  72:	05 02 d4 55 00       	add    $0x55d402,%eax
  77:	00 03                	add    %al,(%ebx)
  79:	e8 01 01 03 01       	call   103017f <__high_dataend+0x102017d>
  7e:	09 04 00             	or     %eax,(%eax,%eax,1)
  81:	01 03                	add    %eax,(%ebx)
  83:	01 09                	add    %ecx,(%ecx)
  85:	04 00                	add    $0x0,%al
  87:	01 03                	add    %eax,(%ebx)
  89:	01 09                	add    %ecx,(%ecx)
  8b:	02 00                	add    (%eax),%al
  8d:	01 03                	add    %eax,(%ebx)
  8f:	05 09 02 00 01       	add    $0x1000209,%eax
  94:	03 01                	add    (%ecx),%eax
  96:	09 04 00             	or     %eax,(%eax,%eax,1)
  99:	01 03                	add    %eax,(%ebx)
  9b:	01 09                	add    %ecx,(%ecx)
  9d:	04 00                	add    $0x0,%al
  9f:	01 03                	add    %eax,(%ebx)
  a1:	01 09                	add    %ecx,(%ecx)
  a3:	02 00                	add    (%eax),%al
  a5:	01 03                	add    %eax,(%ebx)
  a7:	05 09 02 00 01       	add    $0x1000209,%eax
  ac:	03 01                	add    (%ecx),%eax
  ae:	09 04 00             	or     %eax,(%eax,%eax,1)
  b1:	01 03                	add    %eax,(%ebx)
  b3:	01 09                	add    %ecx,(%ecx)
  b5:	04 00                	add    $0x0,%al
  b7:	01 03                	add    %eax,(%ebx)
  b9:	01 09                	add    %ecx,(%ecx)
  bb:	04 00                	add    $0x0,%al
  bd:	01 03                	add    %eax,(%ebx)
  bf:	03 09                	add    (%ecx),%ecx
  c1:	02 00                	add    (%eax),%al
  c3:	01 03                	add    %eax,(%ebx)
  c5:	01 09                	add    %ecx,(%ecx)
  c7:	02 00                	add    (%eax),%al
  c9:	01 03                	add    %eax,(%ebx)
  cb:	01 09                	add    %ecx,(%ecx)
  cd:	02 00                	add    (%eax),%al
  cf:	01 03                	add    %eax,(%ebx)
  d1:	01 09                	add    %ecx,(%ecx)
  d3:	02 00                	add    (%eax),%al
  d5:	01 03                	add    %eax,(%ebx)
  d7:	01 09                	add    %ecx,(%ecx)
  d9:	02 00                	add    (%eax),%al
  db:	01 03                	add    %eax,(%ebx)
  dd:	01 09                	add    %ecx,(%ecx)
  df:	02 00                	add    (%eax),%al
  e1:	01 03                	add    %eax,(%ebx)
  e3:	03 09                	add    (%ecx),%ecx
  e5:	04 00                	add    $0x0,%al
  e7:	01 09                	add    %ecx,(%ecx)
  e9:	02 00                	add    (%eax),%al
  eb:	00 01                	add    %al,(%ecx)
  ed:	01 00                	add    %eax,(%eax)
  ef:	05 02 88 6e 00       	add    $0x6e8802,%eax
  f4:	00 03                	add    %al,(%ebx)
  f6:	93                   	xchg   %eax,%ebx
  f7:	02 01                	add    (%ecx),%al
  f9:	09 04 00             	or     %eax,(%eax,%eax,1)
  fc:	00 01                	add    %al,(%ecx)
  fe:	01 77 03             	add    %esi,0x3(%edi)

000000ff <L0>:
  ff:	77 03                	ja     104 <L0+0x5>
 101:	00 00                	add    %al,(%eax)
 103:	02 00                	add    (%eax),%al
 105:	ab                   	stos   %eax,%es:(%edi)
 106:	00 00                	add    %al,(%eax)
 108:	00 01                	add    %al,(%ecx)
 10a:	01 fb                	add    %edi,%ebx
 10c:	0e                   	push   %cs
 10d:	0d 00 01 01 01       	or     $0x1010100,%eax
 112:	01 00                	add    %eax,(%eax)
 114:	00 00                	add    %al,(%eax)
 116:	01 00                	add    %eax,(%eax)
 118:	00 01                	add    %al,(%ecx)
 11a:	2e 2e 2f             	cs cs das 
 11d:	2e 2e 2f             	cs cs das 
 120:	73 72                	jae    194 <L0+0x95>
 122:	63 2f                	arpl   %bp,(%edi)
 124:	77 69                	ja     18f <L0+0x90>
 126:	72 65                	jb     18d <L0+0x8e>
 128:	64 00 2f             	add    %ch,%fs:(%edi)
 12b:	6f                   	outsl  %ds:(%esi),(%dx)
 12c:	70 74                	jo     1a2 <L0+0xa3>
 12e:	2f                   	das    
 12f:	74 69                	je     19a <L0+0x9b>
 131:	2f                   	das    
 132:	6d                   	insl   (%dx),%es:(%edi)
 133:	73 70                	jae    1a5 <L0+0xa6>
 135:	67 63 63 2f          	arpl   %sp,0x2f(%bp,%di)
 139:	6d                   	insl   (%dx),%es:(%edi)
 13a:	73 70                	jae    1ac <L0+0xad>
 13c:	34 33                	xor    $0x33,%al
 13e:	30 2d 65 6c 66 2f    	xor    %ch,0x2f666c65
 144:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%esi),%ebp
 14b:	2f                   	das    
 14c:	6d                   	insl   (%dx),%es:(%edi)
 14d:	61                   	popa   
 14e:	63 68 69             	arpl   %bp,0x69(%eax)
 151:	6e                   	outsb  %ds:(%esi),(%dx)
 152:	65 00 2f             	add    %ch,%gs:(%edi)
 155:	6f                   	outsl  %ds:(%esi),(%dx)
 156:	70 74                	jo     1cc <L0+0xcd>
 158:	2f                   	das    
 159:	74 69                	je     1c4 <L0+0xc5>
 15b:	2f                   	das    
 15c:	6d                   	insl   (%dx),%es:(%edi)
 15d:	73 70                	jae    1cf <L0+0xd0>
 15f:	67 63 63 2f          	arpl   %sp,0x2f(%bp,%di)
 163:	6d                   	insl   (%dx),%es:(%edi)
 164:	73 70                	jae    1d6 <L0+0xd7>
 166:	34 33                	xor    $0x33,%al
 168:	30 2d 65 6c 66 2f    	xor    %ch,0x2f666c65
 16e:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%esi),%ebp
 175:	00 00                	add    %al,(%eax)
 177:	75 61                	jne    1da <L0+0xdb>
 179:	72 74                	jb     1ef <L0+0xf0>
 17b:	2e 63 00             	arpl   %ax,%cs:(%eax)
 17e:	01 00                	add    %eax,(%eax)
 180:	00 5f 64             	add    %bl,0x64(%edi)
 183:	65 66 61             	gs popaw 
 186:	75 6c                	jne    1f4 <L0+0xf5>
 188:	74 5f                	je     1e9 <L0+0xea>
 18a:	74 79                	je     205 <L0+0x106>
 18c:	70 65                	jo     1f3 <L0+0xf4>
 18e:	73 2e                	jae    1be <L0+0xbf>
 190:	68 00 02 00 00       	push   $0x200
 195:	73 74                	jae    20b <L0+0x10c>
 197:	64 69 6e 74 2e 68 00 	imul   $0x300682e,%fs:0x74(%esi),%ebp
 19e:	03 
 19f:	00 00                	add    %al,(%eax)
 1a1:	6d                   	insl   (%dx),%es:(%edi)
 1a2:	73 70                	jae    214 <L0+0x115>
 1a4:	34 33                	xor    $0x33,%al
 1a6:	30 66 72             	xor    %ah,0x72(%esi)
 1a9:	35 39 36 39 2e       	xor    $0x2e393639,%eax
 1ae:	68 00 03 00 00       	push   $0x300
 1b3:	00 00                	add    %al,(%eax)
 1b5:	05 02 c6 6b 00       	add    $0x6bc602,%eax
 1ba:	00 03                	add    %al,(%ebx)
 1bc:	1f                   	pop    %ds
 1bd:	01 03                	add    %eax,(%ebx)
 1bf:	03 09                	add    (%ecx),%ecx
 1c1:	00 00                	add    %al,(%eax)
 1c3:	01 03                	add    %eax,(%ebx)
 1c5:	01 09                	add    %ecx,(%ecx)
 1c7:	04 00                	add    $0x0,%al
 1c9:	01 03                	add    %eax,(%ebx)
 1cb:	21 09                	and    %ecx,(%ecx)
 1cd:	06                   	push   %es
 1ce:	00 01                	add    %al,(%ecx)
 1d0:	03 01                	add    (%ecx),%eax
 1d2:	09 04 00             	or     %eax,(%eax,%eax,1)
 1d5:	01 03                	add    %eax,(%ebx)
 1d7:	01 09                	add    %ecx,(%ecx)
 1d9:	04 00                	add    $0x0,%al
 1db:	01 03                	add    %eax,(%ebx)
 1dd:	05 09 06 00 01       	add    $0x1000609,%eax
 1e2:	03 01                	add    (%ecx),%eax
 1e4:	09 04 00             	or     %eax,(%eax,%eax,1)
 1e7:	01 03                	add    %eax,(%ebx)
 1e9:	02 09                	add    (%ecx),%cl
 1eb:	04 00                	add    $0x0,%al
 1ed:	01 03                	add    %eax,(%ebx)
 1ef:	01 09                	add    %ecx,(%ecx)
 1f1:	04 00                	add    $0x0,%al
 1f3:	01 03                	add    %eax,(%ebx)
 1f5:	0b 09                	or     (%ecx),%ecx
 1f7:	04 00                	add    $0x0,%al
 1f9:	01 03                	add    %eax,(%ebx)
 1fb:	03 09                	add    (%ecx),%ecx
 1fd:	04 00                	add    $0x0,%al
 1ff:	01 03                	add    %eax,(%ebx)
 201:	01 09                	add    %ecx,(%ecx)
 203:	08 00                	or     %al,(%eax)
 205:	01 03                	add    %eax,(%ebx)
 207:	01 09                	add    %ecx,(%ecx)
 209:	04 00                	add    $0x0,%al
 20b:	01 03                	add    %eax,(%ebx)
 20d:	01 09                	add    %ecx,(%ecx)
 20f:	04 00                	add    $0x0,%al
 211:	01 03                	add    %eax,(%ebx)
 213:	02 09                	add    (%ecx),%cl
 215:	04 00                	add    $0x0,%al
 217:	01 03                	add    %eax,(%ebx)
 219:	03 09                	add    (%ecx),%ecx
 21b:	02 00                	add    (%eax),%al
 21d:	01 03                	add    %eax,(%ebx)
 21f:	04 09                	add    $0x9,%al
 221:	00 00                	add    %al,(%eax)
 223:	01 03                	add    %eax,(%ebx)
 225:	01 09                	add    %ecx,(%ecx)
 227:	04 00                	add    $0x0,%al
 229:	01 03                	add    %eax,(%ebx)
 22b:	01 09                	add    %ecx,(%ecx)
 22d:	04 00                	add    $0x0,%al
 22f:	01 03                	add    %eax,(%ebx)
 231:	01 09                	add    %ecx,(%ecx)
 233:	04 00                	add    $0x0,%al
 235:	01 03                	add    %eax,(%ebx)
 237:	01 09                	add    %ecx,(%ecx)
 239:	04 00                	add    $0x0,%al
 23b:	01 03                	add    %eax,(%ebx)
 23d:	01 09                	add    %ecx,(%ecx)
 23f:	04 00                	add    $0x0,%al
 241:	01 03                	add    %eax,(%ebx)
 243:	01 09                	add    %ecx,(%ecx)
 245:	04 00                	add    $0x0,%al
 247:	01 03                	add    %eax,(%ebx)
 249:	01 09                	add    %ecx,(%ecx)
 24b:	04 00                	add    $0x0,%al
 24d:	01 03                	add    %eax,(%ebx)
 24f:	01 09                	add    %ecx,(%ecx)
 251:	04 00                	add    $0x0,%al
 253:	01 03                	add    %eax,(%ebx)
 255:	01 09                	add    %ecx,(%ecx)
 257:	04 00                	add    $0x0,%al
 259:	01 03                	add    %eax,(%ebx)
 25b:	09 09                	or     %ecx,(%ecx)
 25d:	02 00                	add    (%eax),%al
 25f:	01 03                	add    %eax,(%ebx)
 261:	03 09                	add    (%ecx),%ecx
 263:	00 00                	add    %al,(%eax)
 265:	01 00                	add    %eax,(%eax)
 267:	02 04 01             	add    (%ecx,%eax,1),%al
 26a:	06                   	push   %es
 26b:	03 00                	add    (%eax),%eax
 26d:	09 04 00             	or     %eax,(%eax,%eax,1)
 270:	01 06                	add    %eax,(%esi)
 272:	03 04 09             	add    (%ecx,%ecx,1),%eax
 275:	06                   	push   %es
 276:	00 01                	add    %al,(%ecx)
 278:	03 01                	add    (%ecx),%eax
 27a:	09 08                	or     %ecx,(%eax)
 27c:	00 01                	add    %al,(%ecx)
 27e:	03 01                	add    (%ecx),%eax
 280:	09 04 00             	or     %eax,(%eax,%eax,1)
 283:	01 03                	add    %eax,(%ebx)
 285:	02 09                	add    (%ecx),%cl
 287:	04 00                	add    $0x0,%al
 289:	01 03                	add    %eax,(%ebx)
 28b:	02 09                	add    (%ecx),%cl
 28d:	04 00                	add    $0x0,%al
 28f:	01 03                	add    %eax,(%ebx)
 291:	06                   	push   %es
 292:	09 04 00             	or     %eax,(%eax,%eax,1)
 295:	01 03                	add    %eax,(%ebx)
 297:	09 09                	or     %ecx,(%ecx)
 299:	02 00                	add    (%eax),%al
 29b:	01 03                	add    %eax,(%ebx)
 29d:	02 09                	add    (%ecx),%cl
 29f:	00 00                	add    %al,(%eax)
 2a1:	01 03                	add    %eax,(%ebx)
 2a3:	03 09                	add    (%ecx),%ecx
 2a5:	04 00                	add    $0x0,%al
 2a7:	01 00                	add    %eax,(%eax)
 2a9:	02 04 01             	add    (%ecx,%eax,1),%al
 2ac:	06                   	push   %es
 2ad:	03 00                	add    (%eax),%eax
 2af:	09 04 00             	or     %eax,(%eax,%eax,1)
 2b2:	01 06                	add    %eax,(%esi)
 2b4:	03 02                	add    (%edx),%eax
 2b6:	09 06                	or     %eax,(%esi)
 2b8:	00 01                	add    %al,(%ecx)
 2ba:	03 06                	add    (%esi),%eax
 2bc:	09 02                	or     %eax,(%edx)
 2be:	00 01                	add    %al,(%ecx)
 2c0:	03 03                	add    (%ebx),%eax
 2c2:	09 00                	or     %eax,(%eax)
 2c4:	00 01                	add    %al,(%ecx)
 2c6:	00 02                	add    %al,(%edx)
 2c8:	04 01                	add    $0x1,%al
 2ca:	06                   	push   %es
 2cb:	03 00                	add    (%eax),%eax
 2cd:	09 04 00             	or     %eax,(%eax,%eax,1)
 2d0:	01 06                	add    %eax,(%esi)
 2d2:	03 04 09             	add    (%ecx,%ecx,1),%eax
 2d5:	06                   	push   %es
 2d6:	00 01                	add    %al,(%ecx)
 2d8:	03 01                	add    (%ecx),%eax
 2da:	09 08                	or     %ecx,(%eax)
 2dc:	00 01                	add    %al,(%ecx)
 2de:	03 01                	add    (%ecx),%eax
 2e0:	09 04 00             	or     %eax,(%eax,%eax,1)
 2e3:	01 03                	add    %eax,(%ebx)
 2e5:	02 09                	add    (%ecx),%cl
 2e7:	04 00                	add    $0x0,%al
 2e9:	01 03                	add    %eax,(%ebx)
 2eb:	02 09                	add    (%ecx),%cl
 2ed:	04 00                	add    $0x0,%al
 2ef:	01 03                	add    %eax,(%ebx)
 2f1:	01 09                	add    %ecx,(%ecx)
 2f3:	10 00                	adc    %al,(%eax)
 2f5:	01 00                	add    %eax,(%eax)
 2f7:	02 04 01             	add    (%ecx,%eax,1),%al
 2fa:	03 01                	add    (%ecx),%eax
 2fc:	09 18                	or     %ebx,(%eax)
 2fe:	00 01                	add    %al,(%ecx)
 300:	03 02                	add    (%edx),%eax
 302:	09 06                	or     %eax,(%esi)
 304:	00 01                	add    %al,(%ecx)
 306:	03 7c 09 04          	add    0x4(%ecx,%ecx,1),%edi
 30a:	00 01                	add    %al,(%ecx)
 30c:	03 07                	add    (%edi),%eax
 30e:	09 10                	or     %edx,(%eax)
 310:	00 01                	add    %al,(%ecx)
 312:	03 01                	add    (%ecx),%eax
 314:	09 04 00             	or     %eax,(%eax,%eax,1)
 317:	01 03                	add    %eax,(%ebx)
 319:	05 09 02 00 01       	add    $0x1000209,%eax
 31e:	03 02                	add    (%edx),%eax
 320:	09 00                	or     %eax,(%eax)
 322:	00 01                	add    %al,(%ecx)
 324:	03 08                	add    (%eax),%ecx
 326:	09 06                	or     %eax,(%esi)
 328:	00 01                	add    %al,(%ecx)
 32a:	03 03                	add    (%ebx),%eax
 32c:	09 00                	or     %eax,(%eax)
 32e:	00 01                	add    %al,(%ecx)
 330:	00 02                	add    %al,(%edx)
 332:	04 01                	add    $0x1,%al
 334:	06                   	push   %es
 335:	03 00                	add    (%eax),%eax
 337:	09 04 00             	or     %eax,(%eax,%eax,1)
 33a:	01 06                	add    %eax,(%esi)
 33c:	03 04 09             	add    (%ecx,%ecx,1),%eax
 33f:	08 00                	or     %al,(%eax)
 341:	01 03                	add    %eax,(%ebx)
 343:	01 09                	add    %ecx,(%ecx)
 345:	08 00                	or     %al,(%eax)
 347:	01 03                	add    %eax,(%ebx)
 349:	01 09                	add    %ecx,(%ecx)
 34b:	04 00                	add    $0x0,%al
 34d:	01 03                	add    %eax,(%ebx)
 34f:	02 09                	add    (%ecx),%cl
 351:	04 00                	add    $0x0,%al
 353:	01 03                	add    %eax,(%ebx)
 355:	02 09                	add    (%ecx),%cl
 357:	04 00                	add    $0x0,%al
 359:	01 03                	add    %eax,(%ebx)
 35b:	05 09 04 00 01       	add    $0x1000409,%eax
 360:	03 09                	add    (%ecx),%ecx
 362:	09 02                	or     %eax,(%edx)
 364:	00 01                	add    %al,(%ecx)
 366:	03 02                	add    (%edx),%eax
 368:	09 00                	or     %eax,(%eax)
 36a:	00 01                	add    %al,(%ecx)
 36c:	03 03                	add    (%ebx),%eax
 36e:	09 04 00             	or     %eax,(%eax,%eax,1)
 371:	01 00                	add    %eax,(%eax)
 373:	02 04 01             	add    (%ecx,%eax,1),%al
 376:	06                   	push   %es
 377:	03 00                	add    (%eax),%eax
 379:	09 04 00             	or     %eax,(%eax,%eax,1)
 37c:	01 06                	add    %eax,(%esi)
 37e:	03 02                	add    (%edx),%eax
 380:	09 08                	or     %ecx,(%eax)
 382:	00 01                	add    %al,(%ecx)
 384:	03 06                	add    (%esi),%eax
 386:	09 02                	or     %eax,(%edx)
 388:	00 01                	add    %al,(%ecx)
 38a:	03 03                	add    (%ebx),%eax
 38c:	09 00                	or     %eax,(%eax)
 38e:	00 01                	add    %al,(%ecx)
 390:	00 02                	add    %al,(%edx)
 392:	04 01                	add    $0x1,%al
 394:	06                   	push   %es
 395:	03 00                	add    (%eax),%eax
 397:	09 04 00             	or     %eax,(%eax,%eax,1)
 39a:	01 06                	add    %eax,(%esi)
 39c:	03 04 09             	add    (%ecx,%ecx,1),%eax
 39f:	08 00                	or     %al,(%eax)
 3a1:	01 03                	add    %eax,(%ebx)
 3a3:	01 09                	add    %ecx,(%ecx)
 3a5:	08 00                	or     %al,(%eax)
 3a7:	01 03                	add    %eax,(%ebx)
 3a9:	01 09                	add    %ecx,(%ecx)
 3ab:	04 00                	add    $0x0,%al
 3ad:	01 03                	add    %eax,(%ebx)
 3af:	02 09                	add    (%ecx),%cl
 3b1:	04 00                	add    $0x0,%al
 3b3:	01 03                	add    %eax,(%ebx)
 3b5:	02 09                	add    (%ecx),%cl
 3b7:	04 00                	add    $0x0,%al
 3b9:	01 00                	add    %eax,(%eax)
 3bb:	02 04 01             	add    (%ecx,%eax,1),%al
 3be:	03 06                	add    (%esi),%eax
 3c0:	09 10                	or     %edx,(%eax)
 3c2:	00 01                	add    %al,(%ecx)
 3c4:	00 02                	add    %al,(%edx)
 3c6:	04 01                	add    $0x1,%al
 3c8:	03 7b 09             	add    0x9(%ebx),%edi
 3cb:	02 00                	add    (%eax),%al
 3cd:	01 03                	add    %eax,(%ebx)
 3cf:	02 09                	add    (%ecx),%cl
 3d1:	06                   	push   %es
 3d2:	00 01                	add    %al,(%ecx)
 3d4:	03 02                	add    (%edx),%eax
 3d6:	09 04 00             	or     %eax,(%eax,%eax,1)
 3d9:	01 03                	add    %eax,(%ebx)
 3db:	01 09                	add    %ecx,(%ecx)
 3dd:	04 00                	add    $0x0,%al
 3df:	01 03                	add    %eax,(%ebx)
 3e1:	7f 09                	jg     3ec <L0+0x2ed>
 3e3:	0c 00                	or     $0x0,%al
 3e5:	01 03                	add    %eax,(%ebx)
 3e7:	7b 09                	jnp    3f2 <L0+0x2f3>
 3e9:	04 00                	add    $0x0,%al
 3eb:	01 03                	add    %eax,(%ebx)
 3ed:	09 09                	or     %ecx,(%ecx)
 3ef:	10 00                	adc    %al,(%eax)
 3f1:	01 03                	add    %eax,(%ebx)
 3f3:	01 09                	add    %ecx,(%ecx)
 3f5:	04 00                	add    $0x0,%al
 3f7:	01 03                	add    %eax,(%ebx)
 3f9:	05 09 02 00 01       	add    $0x1000209,%eax
 3fe:	03 02                	add    (%edx),%eax
 400:	09 00                	or     %eax,(%eax)
 402:	00 01                	add    %al,(%ecx)
 404:	03 07                	add    (%edi),%eax
 406:	09 06                	or     %eax,(%esi)
 408:	00 01                	add    %al,(%ecx)
 40a:	03 01                	add    (%ecx),%eax
 40c:	09 00                	or     %eax,(%eax)
 40e:	00 01                	add    %al,(%ecx)
 410:	03 01                	add    (%ecx),%eax
 412:	09 06                	or     %eax,(%esi)
 414:	00 01                	add    %al,(%ecx)
 416:	03 0e                	add    (%esi),%ecx
 418:	09 08                	or     %ecx,(%eax)
 41a:	00 01                	add    %al,(%ecx)
 41c:	03 03                	add    (%ebx),%eax
 41e:	09 02                	or     %eax,(%edx)
 420:	00 01                	add    %al,(%ecx)
 422:	03 04 09             	add    (%ecx,%ecx,1),%eax
 425:	0e                   	push   %cs
 426:	00 01                	add    %al,(%ecx)
 428:	03 01                	add    (%ecx),%eax
 42a:	09 14 00             	or     %edx,(%eax,%eax,1)
 42d:	01 03                	add    %eax,(%ebx)
 42f:	01 09                	add    %ecx,(%ecx)
 431:	04 00                	add    $0x0,%al
 433:	01 03                	add    %eax,(%ebx)
 435:	7f 09                	jg     440 <L0+0x341>
 437:	0c 00                	or     $0x0,%al
 439:	01 03                	add    %eax,(%ebx)
 43b:	04 09                	add    $0x9,%al
 43d:	04 00                	add    $0x0,%al
 43f:	01 03                	add    %eax,(%ebx)
 441:	01 09                	add    %ecx,(%ecx)
 443:	08 00                	or     %al,(%eax)
 445:	01 03                	add    %eax,(%ebx)
 447:	01 09                	add    %ecx,(%ecx)
 449:	04 00                	add    $0x0,%al
 44b:	01 03                	add    %eax,(%ebx)
 44d:	05 09 06 00 01       	add    $0x1000609,%eax
 452:	03 01                	add    (%ecx),%eax
 454:	09 1a                	or     %ebx,(%edx)
 456:	00 01                	add    %al,(%ecx)
 458:	00 02                	add    %al,(%edx)
 45a:	04 01                	add    $0x1,%al
 45c:	03 02                	add    (%edx),%eax
 45e:	09 0e                	or     %ecx,(%esi)
 460:	00 01                	add    %al,(%ecx)
 462:	03 01                	add    (%ecx),%eax
 464:	09 06                	or     %eax,(%esi)
 466:	00 01                	add    %al,(%ecx)
 468:	03 01                	add    (%ecx),%eax
 46a:	09 04 00             	or     %eax,(%eax,%eax,1)
 46d:	01 03                	add    %eax,(%ebx)
 46f:	08 09                	or     %cl,(%ecx)
 471:	04 00                	add    $0x0,%al
 473:	01 09                	add    %ecx,(%ecx)
 475:	04 00                	add    $0x0,%al
 477:	00 01                	add    %al,(%ecx)
 479:	01 80 00 00 00 02    	add    %eax,0x2000000(%eax)

0000047a <L0>:
 47a:	80 00 00             	addb   $0x0,(%eax)
 47d:	00 02                	add    %al,(%edx)
 47f:	00 57 00             	add    %dl,0x0(%edi)
 482:	00 00                	add    %al,(%eax)
 484:	01 01                	add    %eax,(%ecx)
 486:	fb                   	sti    
 487:	0e                   	push   %cs
 488:	0d 00 01 01 01       	or     $0x1010100,%eax
 48d:	01 00                	add    %eax,(%eax)
 48f:	00 00                	add    %al,(%eax)
 491:	01 00                	add    %eax,(%eax)
 493:	00 01                	add    %al,(%ecx)
 495:	2f                   	das    
 496:	6f                   	outsl  %ds:(%esi),(%dx)
 497:	70 74                	jo     50d <L0+0xf>
 499:	2f                   	das    
 49a:	72 65                	jb     501 <L0+0x3>
 49c:	64 68 61 74 2f 6d    	fs push $0x6d2f7461
 4a2:	73 70                	jae    514 <L0+0x16>
 4a4:	34 33                	xor    $0x33,%al
 4a6:	30 2d 31 34 72 31    	xor    %ch,0x31723431
 4ac:	2d 33 36 34 2f       	sub    $0x2f343633,%eax
 4b1:	73 6f                	jae    522 <L0+0x24>
 4b3:	75 72                	jne    527 <L0+0x29>
 4b5:	63 65 73             	arpl   %sp,0x73(%ebp)
 4b8:	2f                   	das    
 4b9:	74 6f                	je     52a <L0+0x2c>
 4bb:	6f                   	outsl  %ds:(%esi),(%dx)
 4bc:	6c                   	insb   (%dx),%es:(%edi)
 4bd:	73 2f                	jae    4ee <L0+0x3d>
 4bf:	6c                   	insb   (%dx),%es:(%edi)
 4c0:	69 62 67 6c 6f 73 73 	imul   $0x73736f6c,0x67(%edx),%esp
 4c7:	2f                   	das    
 4c8:	6d                   	insl   (%dx),%es:(%edi)
 4c9:	73 70                	jae    53b <L0+0x3d>
 4cb:	34 33                	xor    $0x33,%al
 4cd:	30 00                	xor    %al,(%eax)
 4cf:	00 63 72             	add    %ah,0x72(%ebx)
 4d2:	74 30                	je     504 <L0+0x6>
 4d4:	2e 53                	cs push %ebx
 4d6:	00 01                	add    %al,(%ecx)
 4d8:	00 00                	add    %al,(%eax)
 4da:	00 00                	add    %al,(%eax)
 4dc:	05 02 a8 55 00       	add    $0x55a802,%eax
 4e1:	00 03                	add    %al,(%ebx)
 4e3:	cd 00                	int    $0x0
 4e5:	01 03                	add    %eax,(%ebx)
 4e7:	01 09                	add    %ecx,(%ecx)
 4e9:	04 00                	add    $0x0,%al
 4eb:	01 03                	add    %eax,(%ebx)
 4ed:	01 09                	add    %ecx,(%ecx)
 4ef:	02 00                	add    (%eax),%al
 4f1:	01 03                	add    %eax,(%ebx)
 4f3:	04 09                	add    $0x9,%al
 4f5:	04 00                	add    $0x0,%al
 4f7:	01 09                	add    %ecx,(%ecx)
 4f9:	04 00                	add    $0x0,%al
 4fb:	00 01                	add    %al,(%ecx)
 4fd:	01 8c 00 00 00 02 00 	add    %ecx,0x20000(%eax,%eax,1)

000004fe <L0>:
 4fe:	8c 00                	mov    %es,(%eax)
 500:	00 00                	add    %al,(%eax)
 502:	02 00                	add    (%eax),%al
 504:	57                   	push   %edi
 505:	00 00                	add    %al,(%eax)
 507:	00 01                	add    %al,(%ecx)
 509:	01 fb                	add    %edi,%ebx
 50b:	0e                   	push   %cs
 50c:	0d 00 01 01 01       	or     $0x1010100,%eax
 511:	01 00                	add    %eax,(%eax)
 513:	00 00                	add    %al,(%eax)
 515:	01 00                	add    %eax,(%eax)
 517:	00 01                	add    %al,(%ecx)
 519:	2f                   	das    
 51a:	6f                   	outsl  %ds:(%esi),(%dx)
 51b:	70 74                	jo     591 <L0+0x3>
 51d:	2f                   	das    
 51e:	72 65                	jb     585 <L0+0x2>
 520:	64 68 61 74 2f 6d    	fs push $0x6d2f7461
 526:	73 70                	jae    598 <L0+0xa>
 528:	34 33                	xor    $0x33,%al
 52a:	30 2d 31 34 72 31    	xor    %ch,0x31723431
 530:	2d 33 36 34 2f       	sub    $0x2f343633,%eax
 535:	73 6f                	jae    5a6 <L0+0x18>
 537:	75 72                	jne    5ab <L0+0x1d>
 539:	63 65 73             	arpl   %sp,0x73(%ebp)
 53c:	2f                   	das    
 53d:	74 6f                	je     5ae <L0+0x20>
 53f:	6f                   	outsl  %ds:(%esi),(%dx)
 540:	6c                   	insb   (%dx),%es:(%edi)
 541:	73 2f                	jae    572 <L0+0x74>
 543:	6c                   	insb   (%dx),%es:(%edi)
 544:	69 62 67 6c 6f 73 73 	imul   $0x73736f6c,0x67(%edx),%esp
 54b:	2f                   	das    
 54c:	6d                   	insl   (%dx),%es:(%edi)
 54d:	73 70                	jae    5bf <L0+0x31>
 54f:	34 33                	xor    $0x33,%al
 551:	30 00                	xor    %al,(%eax)
 553:	00 63 72             	add    %ah,0x72(%ebx)
 556:	74 30                	je     588 <L0+0x5>
 558:	2e 53                	cs push %ebx
 55a:	00 01                	add    %al,(%ecx)
 55c:	00 00                	add    %al,(%eax)
 55e:	00 00                	add    %al,(%eax)
 560:	05 02 b6 55 00       	add    $0x55b602,%eax
 565:	00 03                	add    %al,(%ebx)
 567:	f9                   	stc    
 568:	00 01                	add    %al,(%ecx)
 56a:	03 01                	add    (%ecx),%eax
 56c:	09 04 00             	or     %eax,(%eax,%eax,1)
 56f:	01 03                	add    %eax,(%ebx)
 571:	03 09                	add    (%ecx),%ecx
 573:	04 00                	add    $0x0,%al
 575:	01 03                	add    %eax,(%ebx)
 577:	01 09                	add    %ecx,(%ecx)
 579:	02 00                	add    (%eax),%al
 57b:	01 03                	add    %eax,(%ebx)
 57d:	02 09                	add    (%ecx),%cl
 57f:	02 00                	add    (%eax),%al
 581:	01 03                	add    %eax,(%ebx)
 583:	02 09                	add    (%ecx),%cl
 585:	04 00                	add    $0x0,%al
 587:	01 09                	add    %ecx,(%ecx)
 589:	04 00                	add    $0x0,%al
 58b:	00 01                	add    %al,(%ecx)
 58d:	01 7a 00             	add    %edi,0x0(%edx)

0000058e <L0>:
 58e:	7a 00                	jp     590 <L0+0x2>
 590:	00 00                	add    %al,(%eax)
 592:	02 00                	add    (%eax),%al
 594:	57                   	push   %edi
 595:	00 00                	add    %al,(%eax)
 597:	00 01                	add    %al,(%ecx)
 599:	01 fb                	add    %edi,%ebx
 59b:	0e                   	push   %cs
 59c:	0d 00 01 01 01       	or     $0x1010100,%eax
 5a1:	01 00                	add    %eax,(%eax)
 5a3:	00 00                	add    %al,(%eax)
 5a5:	01 00                	add    %eax,(%eax)
 5a7:	00 01                	add    %al,(%ecx)
 5a9:	2f                   	das    
 5aa:	6f                   	outsl  %ds:(%esi),(%dx)
 5ab:	70 74                	jo     621 <.Ldebug_line_start+0x15>
 5ad:	2f                   	das    
 5ae:	72 65                	jb     615 <.Ldebug_line_start+0x9>
 5b0:	64 68 61 74 2f 6d    	fs push $0x6d2f7461
 5b6:	73 70                	jae    628 <.Ldebug_line_start+0x1c>
 5b8:	34 33                	xor    $0x33,%al
 5ba:	30 2d 31 34 72 31    	xor    %ch,0x31723431
 5c0:	2d 33 36 34 2f       	sub    $0x2f343633,%eax
 5c5:	73 6f                	jae    636 <.Ldebug_line_start+0x2a>
 5c7:	75 72                	jne    63b <.Ldebug_line_start+0x2f>
 5c9:	63 65 73             	arpl   %sp,0x73(%ebp)
 5cc:	2f                   	das    
 5cd:	74 6f                	je     63e <.Ldebug_line_start+0x32>
 5cf:	6f                   	outsl  %ds:(%esi),(%dx)
 5d0:	6c                   	insb   (%dx),%es:(%edi)
 5d1:	73 2f                	jae    602 <L0+0x74>
 5d3:	6c                   	insb   (%dx),%es:(%edi)
 5d4:	69 62 67 6c 6f 73 73 	imul   $0x73736f6c,0x67(%edx),%esp
 5db:	2f                   	das    
 5dc:	6d                   	insl   (%dx),%es:(%edi)
 5dd:	73 70                	jae    64f <.Ldebug_line_start+0x43>
 5df:	34 33                	xor    $0x33,%al
 5e1:	30 00                	xor    %al,(%eax)
 5e3:	00 63 72             	add    %ah,0x72(%ebx)
 5e6:	74 30                	je     618 <.Ldebug_line_start+0xc>
 5e8:	2e 53                	cs push %ebx
 5ea:	00 01                	add    %al,(%ecx)
 5ec:	00 00                	add    %al,(%eax)
 5ee:	00 00                	add    %al,(%eax)
 5f0:	05 02 ca 55 00       	add    $0x55ca02,%eax
 5f5:	00 03                	add    %al,(%ebx)
 5f7:	cb                   	lret   
 5f8:	01 01                	add    %eax,(%ecx)
 5fa:	03 02                	add    (%edx),%eax
 5fc:	09 04 00             	or     %eax,(%eax,%eax,1)
 5ff:	01 03                	add    %eax,(%ebx)
 601:	01 09                	add    %ecx,(%ecx)
 603:	02 00                	add    (%eax),%al
 605:	01 09                	add    %ecx,(%ecx)
 607:	04 00                	add    $0x0,%al
 609:	00 01                	add    %al,(%ecx)
 60b:	01 54 01 00          	add    %edx,0x0(%ecx,%eax,1)

0000060c <.Ldebug_line_start>:
 60c:	54                   	push   %esp
 60d:	01 00                	add    %eax,(%eax)
 60f:	00 02                	add    %al,(%edx)
 611:	00 0e                	add    %cl,(%esi)
 613:	01 00                	add    %eax,(%eax)
 615:	00 01                	add    %al,(%ecx)
 617:	01 fb                	add    %edi,%ebx
 619:	0e                   	push   %cs
 61a:	0d 00 01 01 01       	or     $0x1010100,%eax
 61f:	01 00                	add    %eax,(%eax)
 621:	00 00                	add    %al,(%eax)
 623:	01 00                	add    %eax,(%eax)
 625:	00 01                	add    %al,(%ecx)
 627:	2f                   	das    
 628:	6f                   	outsl  %ds:(%esi),(%dx)
 629:	70 74                	jo     69f <L0+0x4a>
 62b:	2f                   	das    
 62c:	72 65                	jb     693 <L0+0x3e>
 62e:	64 68 61 74 2f 6d    	fs push $0x6d2f7461
 634:	73 70                	jae    6a6 <L0+0x51>
 636:	34 33                	xor    $0x33,%al
 638:	30 2d 31 34 72 31    	xor    %ch,0x31723431
 63e:	2d 33 36 34 2f       	sub    $0x2f343633,%eax
 643:	73 6f                	jae    6b4 <L0+0x5f>
 645:	75 72                	jne    6b9 <L0+0x64>
 647:	63 65 73             	arpl   %sp,0x73(%ebp)
 64a:	2f                   	das    
 64b:	74 6f                	je     6bc <L0+0x67>
 64d:	6f                   	outsl  %ds:(%esi),(%dx)
 64e:	6c                   	insb   (%dx),%es:(%edi)
 64f:	73 2f                	jae    680 <L0+0x2b>
 651:	6e                   	outsb  %ds:(%esi),(%dx)
 652:	65 77 6c             	gs ja  6c1 <L0+0x6c>
 655:	69 62 2f 6c 69 62 63 	imul   $0x6362696c,0x2f(%edx),%esp
 65c:	2f                   	das    
 65d:	73 74                	jae    6d3 <L0+0x7e>
 65f:	72 69                	jb     6ca <L0+0x75>
 661:	6e                   	outsb  %ds:(%esi),(%dx)
 662:	67 00 2f             	add    %ch,(%bx)
 665:	65 73 2f             	gs jae 697 <L0+0x42>
 668:	62 75 69             	bound  %esi,0x69(%ebp)
 66b:	6c                   	insb   (%dx),%es:(%edi)
 66c:	64 2f                	fs das 
 66e:	6d                   	insl   (%dx),%es:(%edi)
 66f:	73 70                	jae    6e1 <L0+0x8c>
 671:	34 33                	xor    $0x33,%al
 673:	30 2d 31 34 72 31    	xor    %ch,0x31723431
 679:	2f                   	das    
 67a:	33 36                	xor    (%esi),%esi
 67c:	34 2f                	xor    $0x2f,%al
 67e:	69 36 38 36 2d 72    	imul   $0x722d3638,(%esi),%esi
 684:	65 64 68 61 74 2d 6c 	gs fs push $0x6c2d7461
 68b:	69 6e 75 78 2f 58 2d 	imul   $0x2d582f78,0x75(%esi),%ebp
 692:	69 36 38 36 2d 72    	imul   $0x722d3638,(%esi),%esi
 698:	65 64 68 61 74 2d 6c 	gs fs push $0x6c2d7461
 69f:	69 6e 75 78 2d 78 2d 	imul   $0x2d782d78,0x75(%esi),%ebp
 6a6:	6d                   	insl   (%dx),%es:(%edi)
 6a7:	73 70                	jae    719 <L0+0xc4>
 6a9:	34 33                	xor    $0x33,%al
 6ab:	30 2d 65 6c 66 2f    	xor    %ch,0x2f666c65
 6b1:	2e 2f                	cs das 
 6b3:	67 63 63 2f          	arpl   %sp,0x2f(%bp,%di)
 6b7:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%esi),%ebp
 6be:	00 2f                	add    %ch,(%edi)
 6c0:	6f                   	outsl  %ds:(%esi),(%dx)
 6c1:	70 74                	jo     737 <L0+0xe2>
 6c3:	2f                   	das    
 6c4:	72 65                	jb     72b <L0+0xd6>
 6c6:	64 68 61 74 2f 6d    	fs push $0x6d2f7461
 6cc:	73 70                	jae    73e <L0+0xe9>
 6ce:	34 33                	xor    $0x33,%al
 6d0:	30 2d 31 34 72 31    	xor    %ch,0x31723431
 6d6:	2d 33 36 34 2f       	sub    $0x2f343633,%eax
 6db:	73 6f                	jae    74c <L0+0xf7>
 6dd:	75 72                	jne    751 <L0+0xfc>
 6df:	63 65 73             	arpl   %sp,0x73(%ebp)
 6e2:	2f                   	das    
 6e3:	74 6f                	je     754 <L0+0xff>
 6e5:	6f                   	outsl  %ds:(%esi),(%dx)
 6e6:	6c                   	insb   (%dx),%es:(%edi)
 6e7:	73 2f                	jae    718 <L0+0xc3>
 6e9:	6e                   	outsb  %ds:(%esi),(%dx)
 6ea:	65 77 6c             	gs ja  759 <L0+0x104>
 6ed:	69 62 2f 6c 69 62 63 	imul   $0x6362696c,0x2f(%edx),%esp
 6f4:	2f                   	das    
 6f5:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%esi),%ebp
 6fc:	00 00                	add    %al,(%eax)
 6fe:	6d                   	insl   (%dx),%es:(%edi)
 6ff:	65 6d                	gs insl (%dx),%es:(%edi)
 701:	6d                   	insl   (%dx),%es:(%edi)
 702:	6f                   	outsl  %ds:(%esi),(%dx)
 703:	76 65                	jbe    76a <.Ldebug_line_start+0x6>
 705:	2e 63 00             	arpl   %ax,%cs:(%eax)
 708:	01 00                	add    %eax,(%eax)
 70a:	00 73 74             	add    %dh,0x74(%ebx)
 70d:	64 64 65 66 2e 68 00 	fs fs gs cs pushw $0x200
 714:	02 
 715:	00 00                	add    %al,(%eax)
 717:	73 74                	jae    78d <.Ldebug_line_start+0x29>
 719:	72 69                	jb     784 <.Ldebug_line_start+0x20>
 71b:	6e                   	outsb  %ds:(%esi),(%dx)
 71c:	67 2e 68 00 03 00 00 	addr16 cs push $0x300
 723:	00 00                	add    %al,(%eax)
 725:	05 02 04 6e 00       	add    $0x6e0402,%eax
 72a:	00 03                	add    %al,(%ebx)
 72c:	3f                   	aas    
 72d:	01 03                	add    %eax,(%ebx)
 72f:	05 09 02 00 01       	add    $0x1000209,%eax
 734:	00 02                	add    %al,(%edx)
 736:	04 01                	add    $0x1,%al
 738:	06                   	push   %es
 739:	03 00                	add    (%eax),%eax
 73b:	09 04 00             	or     %eax,(%eax,%eax,1)
 73e:	01 06                	add    %eax,(%esi)
 740:	03 05 09 08 00 01    	add    0x1000809,%eax
 746:	03 02                	add    (%edx),%eax
 748:	09 12                	or     %edx,(%edx)
 74a:	00 01                	add    %al,(%ecx)
 74c:	03 05 09 08 00 01    	add    0x1000809,%eax
 752:	03 02                	add    (%edx),%eax
 754:	09 0c 00             	or     %ecx,(%eax,%eax,1)
 757:	01 03                	add    %eax,(%ebx)
 759:	3d 09 08 00 01       	cmp    $0x1000809,%eax
 75e:	09 04 00             	or     %eax,(%eax,%eax,1)
 761:	00 01                	add    %al,(%ecx)
 763:	01 35 01 00 00 02    	add    %esi,0x2000001

00000764 <.Ldebug_line_start>:
 764:	35 01 00 00 02       	xor    $0x2000001,%eax
 769:	00 0d 01 00 00 01    	add    %cl,0x1000001
 76f:	01 fb                	add    %edi,%ebx
 771:	0e                   	push   %cs
 772:	0d 00 01 01 01       	or     $0x1010100,%eax
 777:	01 00                	add    %eax,(%eax)
 779:	00 00                	add    %al,(%eax)
 77b:	01 00                	add    %eax,(%eax)
 77d:	00 01                	add    %al,(%ecx)
 77f:	2f                   	das    
 780:	6f                   	outsl  %ds:(%esi),(%dx)
 781:	70 74                	jo     7f7 <.Ldebug_line_start+0x93>
 783:	2f                   	das    
 784:	72 65                	jb     7eb <.Ldebug_line_start+0x87>
 786:	64 68 61 74 2f 6d    	fs push $0x6d2f7461
 78c:	73 70                	jae    7fe <.Ldebug_line_start+0x9a>
 78e:	34 33                	xor    $0x33,%al
 790:	30 2d 31 34 72 31    	xor    %ch,0x31723431
 796:	2d 33 36 34 2f       	sub    $0x2f343633,%eax
 79b:	73 6f                	jae    80c <.Ldebug_line_start+0xa8>
 79d:	75 72                	jne    811 <.Ldebug_line_start+0xad>
 79f:	63 65 73             	arpl   %sp,0x73(%ebp)
 7a2:	2f                   	das    
 7a3:	74 6f                	je     814 <.Ldebug_line_start+0xb0>
 7a5:	6f                   	outsl  %ds:(%esi),(%dx)
 7a6:	6c                   	insb   (%dx),%es:(%edi)
 7a7:	73 2f                	jae    7d8 <.Ldebug_line_start+0x74>
 7a9:	6e                   	outsb  %ds:(%esi),(%dx)
 7aa:	65 77 6c             	gs ja  819 <.Ldebug_line_start+0xb5>
 7ad:	69 62 2f 6c 69 62 63 	imul   $0x6362696c,0x2f(%edx),%esp
 7b4:	2f                   	das    
 7b5:	73 74                	jae    82b <.Ldebug_line_start+0xc7>
 7b7:	72 69                	jb     822 <.Ldebug_line_start+0xbe>
 7b9:	6e                   	outsb  %ds:(%esi),(%dx)
 7ba:	67 00 2f             	add    %ch,(%bx)
 7bd:	65 73 2f             	gs jae 7ef <.Ldebug_line_start+0x8b>
 7c0:	62 75 69             	bound  %esi,0x69(%ebp)
 7c3:	6c                   	insb   (%dx),%es:(%edi)
 7c4:	64 2f                	fs das 
 7c6:	6d                   	insl   (%dx),%es:(%edi)
 7c7:	73 70                	jae    839 <.Ldebug_line_start+0xd5>
 7c9:	34 33                	xor    $0x33,%al
 7cb:	30 2d 31 34 72 31    	xor    %ch,0x31723431
 7d1:	2f                   	das    
 7d2:	33 36                	xor    (%esi),%esi
 7d4:	34 2f                	xor    $0x2f,%al
 7d6:	69 36 38 36 2d 72    	imul   $0x722d3638,(%esi),%esi
 7dc:	65 64 68 61 74 2d 6c 	gs fs push $0x6c2d7461
 7e3:	69 6e 75 78 2f 58 2d 	imul   $0x2d582f78,0x75(%esi),%ebp
 7ea:	69 36 38 36 2d 72    	imul   $0x722d3638,(%esi),%esi
 7f0:	65 64 68 61 74 2d 6c 	gs fs push $0x6c2d7461
 7f7:	69 6e 75 78 2d 78 2d 	imul   $0x2d782d78,0x75(%esi),%ebp
 7fe:	6d                   	insl   (%dx),%es:(%edi)
 7ff:	73 70                	jae    871 <.Ldebug_line_start+0x10d>
 801:	34 33                	xor    $0x33,%al
 803:	30 2d 65 6c 66 2f    	xor    %ch,0x2f666c65
 809:	2e 2f                	cs das 
 80b:	67 63 63 2f          	arpl   %sp,0x2f(%bp,%di)
 80f:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%esi),%ebp
 816:	00 2f                	add    %ch,(%edi)
 818:	6f                   	outsl  %ds:(%esi),(%dx)
 819:	70 74                	jo     88f <.Ldebug_line_start+0x12b>
 81b:	2f                   	das    
 81c:	72 65                	jb     883 <.Ldebug_line_start+0x11f>
 81e:	64 68 61 74 2f 6d    	fs push $0x6d2f7461
 824:	73 70                	jae    896 <.Ldebug_line_start+0x132>
 826:	34 33                	xor    $0x33,%al
 828:	30 2d 31 34 72 31    	xor    %ch,0x31723431
 82e:	2d 33 36 34 2f       	sub    $0x2f343633,%eax
 833:	73 6f                	jae    8a4 <L0+0x7>
 835:	75 72                	jne    8a9 <L0+0xc>
 837:	63 65 73             	arpl   %sp,0x73(%ebp)
 83a:	2f                   	das    
 83b:	74 6f                	je     8ac <L0+0xf>
 83d:	6f                   	outsl  %ds:(%esi),(%dx)
 83e:	6c                   	insb   (%dx),%es:(%edi)
 83f:	73 2f                	jae    870 <.Ldebug_line_start+0x10c>
 841:	6e                   	outsb  %ds:(%esi),(%dx)
 842:	65 77 6c             	gs ja  8b1 <L0+0x14>
 845:	69 62 2f 6c 69 62 63 	imul   $0x6362696c,0x2f(%edx),%esp
 84c:	2f                   	das    
 84d:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%esi),%ebp
 854:	00 00                	add    %al,(%eax)
 856:	6d                   	insl   (%dx),%es:(%edi)
 857:	65 6d                	gs insl (%dx),%es:(%edi)
 859:	73 65                	jae    8c0 <L0+0x23>
 85b:	74 2e                	je     88b <.Ldebug_line_start+0x127>
 85d:	63 00                	arpl   %ax,(%eax)
 85f:	01 00                	add    %eax,(%eax)
 861:	00 73 74             	add    %dh,0x74(%ebx)
 864:	64 64 65 66 2e 68 00 	fs fs gs cs pushw $0x200
 86b:	02 
 86c:	00 00                	add    %al,(%eax)
 86e:	73 74                	jae    8e4 <L0+0x47>
 870:	72 69                	jb     8db <L0+0x3e>
 872:	6e                   	outsb  %ds:(%esi),(%dx)
 873:	67 2e 68 00 03 00 00 	addr16 cs push $0x300
 87a:	00 00                	add    %al,(%eax)
 87c:	05 02 44 6e 00       	add    $0x6e4402,%eax
 881:	00 03                	add    %al,(%ebx)
 883:	30 01                	xor    %al,(%ecx)
 885:	03 33                	add    (%ebx),%esi
 887:	09 04 00             	or     %eax,(%eax,%eax,1)
 88a:	01 03                	add    %eax,(%ebx)
 88c:	01 09                	add    %ecx,(%ecx)
 88e:	04 00                	add    $0x0,%al
 890:	01 03                	add    %eax,(%ebx)
 892:	03 09                	add    (%ecx),%ecx
 894:	08 00                	or     %al,(%eax)
 896:	01 09                	add    %ecx,(%ecx)
 898:	02 00                	add    (%eax),%al
 89a:	00 01                	add    %al,(%ecx)
 89c:	01 89 00 00 00 02    	add    %ecx,0x2000000(%ecx)

0000089d <L0>:
 89d:	89 00                	mov    %eax,(%eax)
 89f:	00 00                	add    %al,(%eax)
 8a1:	02 00                	add    (%eax),%al
 8a3:	57                   	push   %edi
 8a4:	00 00                	add    %al,(%eax)
 8a6:	00 01                	add    %al,(%ecx)
 8a8:	01 fb                	add    %edi,%ebx
 8aa:	0e                   	push   %cs
 8ab:	0d 00 01 01 01       	or     $0x1010100,%eax
 8b0:	01 00                	add    %eax,(%eax)
 8b2:	00 00                	add    %al,(%eax)
 8b4:	01 00                	add    %eax,(%eax)
 8b6:	00 01                	add    %al,(%ecx)
 8b8:	2f                   	das    
 8b9:	6f                   	outsl  %ds:(%esi),(%dx)
 8ba:	70 74                	jo     930 <L0+0x3c>
 8bc:	2f                   	das    
 8bd:	72 65                	jb     924 <L0+0x30>
 8bf:	64 68 61 74 2f 6d    	fs push $0x6d2f7461
 8c5:	73 70                	jae    937 <L0+0x43>
 8c7:	34 33                	xor    $0x33,%al
 8c9:	30 2d 31 34 72 31    	xor    %ch,0x31723431
 8cf:	2d 33 36 34 2f       	sub    $0x2f343633,%eax
 8d4:	73 6f                	jae    945 <L0+0x51>
 8d6:	75 72                	jne    94a <L0+0x56>
 8d8:	63 65 73             	arpl   %sp,0x73(%ebp)
 8db:	2f                   	das    
 8dc:	74 6f                	je     94d <L0+0x59>
 8de:	6f                   	outsl  %ds:(%esi),(%dx)
 8df:	6c                   	insb   (%dx),%es:(%edi)
 8e0:	73 2f                	jae    911 <L0+0x1d>
 8e2:	6c                   	insb   (%dx),%es:(%edi)
 8e3:	69 62 67 6c 6f 73 73 	imul   $0x73736f6c,0x67(%edx),%esp
 8ea:	2f                   	das    
 8eb:	6d                   	insl   (%dx),%es:(%edi)
 8ec:	73 70                	jae    95e <L0+0x6a>
 8ee:	34 33                	xor    $0x33,%al
 8f0:	30 00                	xor    %al,(%eax)
 8f2:	00 63 72             	add    %ah,0x72(%ebx)
 8f5:	74 6e                	je     965 <L0+0x71>
 8f7:	2e 53                	cs push %ebx
 8f9:	00 01                	add    %al,(%ecx)
 8fb:	00 00                	add    %al,(%eax)
 8fd:	00 00                	add    %al,(%eax)
 8ff:	05 02 7e 6e 00       	add    $0x6e7e02,%eax
 904:	00 03                	add    %al,(%ebx)
 906:	11 01                	adc    %eax,(%ecx)
 908:	03 01                	add    (%ecx),%eax
 90a:	09 04 00             	or     %eax,(%eax,%eax,1)
 90d:	01 03                	add    %eax,(%ebx)
 90f:	01 09                	add    %ecx,(%ecx)
 911:	04 00                	add    $0x0,%al
 913:	01 09                	add    %ecx,(%ecx)
 915:	02 00                	add    (%eax),%al
 917:	00 01                	add    %al,(%ecx)
 919:	01 00                	add    %eax,(%eax)
 91b:	05 02 90 6e 00       	add    $0x6e9002,%eax
 920:	00 03                	add    %al,(%ebx)
 922:	19 01                	sbb    %eax,(%ecx)
 924:	09 02                	or     %eax,(%edx)
 926:	00 00                	add    %al,(%eax)
 928:	01 01                	add    %eax,(%ecx)

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	10 00                	adc    %al,(%eax)
   2:	00 00                	add    %al,(%eax)
   4:	ff                   	(bad)  
   5:	ff                   	(bad)  
   6:	ff                   	(bad)  
   7:	ff 03                	incl   (%ebx)
   9:	00 01                	add    %al,(%ecx)
   b:	7e 00                	jle    d <__romdatacopysize+0x9>
   d:	0c 01                	or     $0x1,%al
   f:	02 80 01 00 00 0c    	add    0xc000001(%eax),%al
  15:	00 00                	add    %al,(%eax)
  17:	00 00                	add    %al,(%eax)
  19:	00 00                	add    %al,(%eax)
  1b:	00 c6                	add    %al,%dh
  1d:	6b 00 00             	imul   $0x0,(%eax),%eax
  20:	42                   	inc    %edx
  21:	00 00                	add    %al,(%eax)
  23:	00 0c 00             	add    %cl,(%eax,%eax,1)
  26:	00 00                	add    %al,(%eax)
  28:	00 00                	add    %al,(%eax)
  2a:	00 00                	add    %al,(%eax)
  2c:	08 6c 00 00          	or     %ch,0x0(%eax,%eax,1)
  30:	26 00 00             	add    %al,%es:(%eax)
  33:	00 0c 00             	add    %cl,(%eax,%eax,1)
  36:	00 00                	add    %al,(%eax)
  38:	00 00                	add    %al,(%eax)
  3a:	00 00                	add    %al,(%eax)
  3c:	2e 6c                	cs insb (%dx),%es:(%edi)
  3e:	00 00                	add    %al,(%eax)
  40:	24 00                	and    $0x0,%al
  42:	00 00                	add    %al,(%eax)
  44:	0c 00                	or     $0x0,%al
  46:	00 00                	add    %al,(%eax)
  48:	00 00                	add    %al,(%eax)
  4a:	00 00                	add    %al,(%eax)
  4c:	52                   	push   %edx
  4d:	6c                   	insb   (%dx),%es:(%edi)
  4e:	00 00                	add    %al,(%eax)
  50:	10 00                	adc    %al,(%eax)
  52:	00 00                	add    %al,(%eax)
  54:	0c 00                	or     $0x0,%al
  56:	00 00                	add    %al,(%eax)
  58:	00 00                	add    %al,(%eax)
  5a:	00 00                	add    %al,(%eax)
  5c:	62 6c 00 00          	bound  %ebp,0x0(%eax,%eax,1)
  60:	66 00 00             	data16 add %al,(%eax)
  63:	00 0c 00             	add    %cl,(%eax,%eax,1)
  66:	00 00                	add    %al,(%eax)
  68:	00 00                	add    %al,(%eax)
  6a:	00 00                	add    %al,(%eax)
  6c:	c8 6c 00 00          	enter  $0x6c,$0x0
  70:	06                   	push   %es
  71:	00 00                	add    %al,(%eax)
  73:	00 0c 00             	add    %cl,(%eax,%eax,1)
  76:	00 00                	add    %al,(%eax)
  78:	00 00                	add    %al,(%eax)
  7a:	00 00                	add    %al,(%eax)
  7c:	ce                   	into   
  7d:	6c                   	insb   (%dx),%es:(%edi)
  7e:	00 00                	add    %al,(%eax)
  80:	26 00 00             	add    %al,%es:(%eax)
  83:	00 0c 00             	add    %cl,(%eax,%eax,1)
  86:	00 00                	add    %al,(%eax)
  88:	00 00                	add    %al,(%eax)
  8a:	00 00                	add    %al,(%eax)
  8c:	f4                   	hlt    
  8d:	6c                   	insb   (%dx),%es:(%edi)
  8e:	00 00                	add    %al,(%eax)
  90:	12 00                	adc    (%eax),%al
  92:	00 00                	add    %al,(%eax)
  94:	0c 00                	or     $0x0,%al
  96:	00 00                	add    %al,(%eax)
  98:	00 00                	add    %al,(%eax)
  9a:	00 00                	add    %al,(%eax)
  9c:	06                   	push   %es
  9d:	6d                   	insl   (%dx),%es:(%edi)
  9e:	00 00                	add    %al,(%eax)
  a0:	66 00 00             	data16 add %al,(%eax)
  a3:	00 0c 00             	add    %cl,(%eax,%eax,1)
  a6:	00 00                	add    %al,(%eax)
  a8:	00 00                	add    %al,(%eax)
  aa:	00 00                	add    %al,(%eax)
  ac:	6c                   	insb   (%dx),%es:(%edi)
  ad:	6d                   	insl   (%dx),%es:(%edi)
  ae:	00 00                	add    %al,(%eax)
  b0:	06                   	push   %es
  b1:	00 00                	add    %al,(%eax)
  b3:	00 0c 00             	add    %cl,(%eax,%eax,1)
  b6:	00 00                	add    %al,(%eax)
  b8:	00 00                	add    %al,(%eax)
  ba:	00 00                	add    %al,(%eax)
  bc:	72 6d                	jb     12b <L0+0x2c>
  be:	00 00                	add    %al,(%eax)
  c0:	0e                   	push   %cs
  c1:	00 00                	add    %al,(%eax)
  c3:	00 1c 00             	add    %bl,(%eax,%eax,1)
  c6:	00 00                	add    %al,(%eax)
  c8:	00 00                	add    %al,(%eax)
  ca:	00 00                	add    %al,(%eax)
  cc:	80 6d 00 00          	subb   $0x0,0x0(%ebp)
  d0:	84 00                	test   %al,(%eax)
  d2:	00 00                	add    %al,(%eax)
  d4:	04 02                	add    $0x2,%al
  d6:	00 00                	add    %al,(%eax)
  d8:	00 0e                	add    %cl,(%esi)
  da:	0a 8f 02 8e 03 8d    	or     -0x72fc71fe(%edi),%cl
  e0:	04 8c                	add    $0x8c,%al
  e2:	05 00 10 00 00       	add    $0x1000,%eax
  e7:	00 ff                	add    %bh,%bh
  e9:	ff                   	(bad)  
  ea:	ff                   	(bad)  
  eb:	ff 03                	incl   (%ebx)
  ed:	00 01                	add    %al,(%ecx)
  ef:	7e 00                	jle    f1 <L0+0x1>
  f1:	0c 01                	or     $0x1,%al
  f3:	02 80 01 00 00 18    	add    0x18000001(%eax),%al
  f9:	00 00                	add    %al,(%eax)
  fb:	00 e4                	add    %ah,%ah
  fd:	00 00                	add    %al,(%eax)
  ff:	00 04 6e             	add    %al,(%esi,%ebp,2)
 102:	00 00                	add    %al,(%eax)
 104:	40                   	inc    %eax
 105:	00 00                	add    %al,(%eax)
 107:	00 04 02             	add    %al,(%edx,%eax,1)
 10a:	00 00                	add    %al,(%eax)
 10c:	00 0e                	add    %cl,(%esi)
 10e:	04 8a                	add    $0x8a,%al
 110:	02 00                	add    (%eax),%al
 112:	00 00                	add    %al,(%eax)
 114:	10 00                	adc    %al,(%eax)
 116:	00 00                	add    %al,(%eax)
 118:	ff                   	(bad)  
 119:	ff                   	(bad)  
 11a:	ff                   	(bad)  
 11b:	ff 03                	incl   (%ebx)
 11d:	00 01                	add    %al,(%ecx)
 11f:	7e 00                	jle    121 <L0+0x22>
 121:	0c 01                	or     $0x1,%al
 123:	02 80 01 00 00 0c    	add    0xc000001(%eax),%al
 129:	00 00                	add    %al,(%eax)
 12b:	00 14 01             	add    %dl,(%ecx,%eax,1)
 12e:	00 00                	add    %al,(%eax)
 130:	44                   	inc    %esp
 131:	6e                   	outsb  %ds:(%esi),(%dx)
 132:	00 00                	add    %al,(%eax)
 134:	12 00                	adc    (%eax),%al
	...

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	55                   	push   %ebp
   1:	41                   	inc    %ecx
   2:	52                   	push   %edx
   3:	54                   	push   %esp
   4:	5f                   	pop    %edi
   5:	69 73 54 78 42 75 73 	imul   $0x73754278,0x54(%ebx),%esi
   c:	79 00                	jns    e <__romdatacopysize+0xa>
   e:	75 61                	jne    71 <L0+0x1>
  10:	72 74                	jb     86 <L0+0x16>
  12:	5f                   	pop    %edi
  13:	73 6d                	jae    82 <L0+0x12>
  15:	5f                   	pop    %edi
  16:	74 00                	je     18 <__romdatacopysize+0x14>
  18:	55                   	push   %ebp
  19:	41                   	inc    %ecx
  1a:	52                   	push   %edx
  1b:	54                   	push   %esp
  1c:	5f                   	pop    %edi
  1d:	69 73 52 78 42 75 73 	imul   $0x73754278,0x52(%ebx),%esi
  24:	79 00                	jns    26 <__romdatacopysize+0x22>
  26:	73 68                	jae    90 <L0>
  28:	6f                   	outsl  %ds:(%esi),(%dx)
  29:	72 74                	jb     9f <L0+0xf>
  2b:	20 69 6e             	and    %ch,0x6e(%ecx)
  2e:	74 00                	je     30 <__bsssize+0x6>
  30:	55                   	push   %ebp
  31:	41                   	inc    %ecx
  32:	52                   	push   %edx
  33:	54                   	push   %esp
  34:	5f                   	pop    %edi
  35:	74 65                	je     9c <L0+0xc>
  37:	61                   	popa   
  38:	72 64                	jb     9e <L0+0xe>
  3a:	6f                   	outsl  %ds:(%esi),(%dx)
  3b:	77 6e                	ja     ab <L0+0x1b>
  3d:	00 55 41             	add    %dl,0x41(%ebp)
  40:	52                   	push   %edx
  41:	54                   	push   %esp
  42:	5f                   	pop    %edi
  43:	61                   	popa   
  44:	73 79                	jae    bf <L0+0x2f>
  46:	6e                   	outsb  %ds:(%esi),(%dx)
  47:	63 53 65             	arpl   %dx,0x65(%ebx)
  4a:	6e                   	outsb  %ds:(%esi),(%dx)
  4b:	64 00 5f 5f          	add    %bl,%fs:0x5f(%edi)
  4f:	75 69                	jne    ba <L0+0x2a>
  51:	6e                   	outsb  %ds:(%esi),(%dx)
  52:	74 31                	je     85 <L0+0x15>
  54:	36 5f                	ss pop %edi
  56:	74 00                	je     58 <L0+0x8>
  58:	55                   	push   %ebp
  59:	41                   	inc    %ecx
  5a:	52                   	push   %edx
  5b:	54                   	push   %esp
  5c:	5f                   	pop    %edi
  5d:	53                   	push   %ebx
  5e:	4d                   	dec    %ebp
  5f:	00 2e                	add    %ch,(%esi)
  61:	2e 2f                	cs das 
  63:	2e 2e 2f             	cs cs das 
  66:	73 72                	jae    da <L0+0x4a>
  68:	63 2f                	arpl   %bp,(%edi)
  6a:	77 69                	ja     d5 <L0+0x45>
  6c:	72 65                	jb     d3 <L0+0x43>
  6e:	64 2f                	fs das 
  70:	75 61                	jne    d3 <L0+0x43>
  72:	72 74                	jb     e8 <L0+0x58>
  74:	2e 63 00             	arpl   %ax,%cs:(%eax)
  77:	55                   	push   %ebp
  78:	41                   	inc    %ecx
  79:	52                   	push   %edx
  7a:	54                   	push   %esp
  7b:	5f                   	pop    %edi
  7c:	63 72 69             	arpl   %si,0x69(%edx)
  7f:	74 53                	je     d4 <L0+0x44>
  81:	65 6e                	outsb  %gs:(%esi),(%dx)
  83:	64 00 30             	add    %dh,%fs:(%eax)
  86:	78 30                	js     b8 <L0+0x28>
  88:	35 44 43 00 55       	xor    $0x55004344,%eax
  8d:	43                   	inc    %ebx
  8e:	41                   	inc    %ecx
  8f:	30 53 54             	xor    %dl,0x54(%ebx)
  92:	41                   	inc    %ecx
  93:	54                   	push   %esp
  94:	57                   	push   %edi
  95:	00 55 43             	add    %dl,0x43(%ebp)
  98:	41                   	inc    %ecx
  99:	30 49 45             	xor    %cl,0x45(%ecx)
  9c:	00 74 78 42          	add    %dh,0x42(%eax,%edi,2)
  a0:	79 74                	jns    116 <L0+0x17>
  a2:	65 73 52             	gs jae f7 <L0+0x7>
  a5:	65 6d                	gs insl (%dx),%es:(%edi)
  a7:	61                   	popa   
  a8:	69 6e 69 6e 67 00 74 	imul   $0x7400676e,0x69(%esi),%ebp
  af:	78 42                	js     f3 <L0+0x3>
  b1:	75 66                	jne    119 <L0+0x1a>
  b3:	00 55 41             	add    %dl,0x41(%ebp)
  b6:	52                   	push   %edx
  b7:	54                   	push   %esp
  b8:	5f                   	pop    %edi
  b9:	72 65                	jb     120 <L0+0x21>
  bb:	63 65 69             	arpl   %sp,0x69(%ebp)
  be:	76 65                	jbe    125 <L0+0x26>
  c0:	00 6c 6f 6e          	add    %ch,0x6e(%edi,%ebp,2)
  c4:	67 20 6c 6f          	and    %ch,0x6f(%si)
  c8:	6e                   	outsb  %ds:(%esi),(%dx)
  c9:	67 20 69 6e          	and    %ch,0x6e(%bx,%di)
  cd:	74 00                	je     cf <L0+0x3f>
  cf:	30 78 30             	xor    %bh,0x30(%eax)
  d2:	32 30                	xor    (%eax),%dh
  d4:	43                   	inc    %ebx
  d5:	2b 31                	sub    (%ecx),%esi
  d7:	00 55 43             	add    %dl,0x43(%ebp)
  da:	41                   	inc    %ecx
  db:	30 49 56             	xor    %cl,0x56(%ecx)
  de:	00 2f                	add    %ch,(%edi)
  e0:	68 6f 6d 65 2f       	push   $0x2f656d6f
  e5:	72 65                	jb     14c <L0+0x4d>
  e7:	76 69                	jbe    152 <L0+0x53>
  e9:	65 77 65             	gs ja  151 <L0+0x52>
  ec:	72 2f                	jb     11d <L0+0x1e>
  ee:	73 72                	jae    162 <L0+0x63>
  f0:	63 2f                	arpl   %bp,(%edi)
  f2:	61                   	popa   
  f3:	70 70                	jo     165 <L0+0x66>
  f5:	73 2f                	jae    126 <L0+0x27>
  f7:	61                   	popa   
  f8:	70 70                	jo     16a <L0+0x6b>
  fa:	2d 74 65 6d 70       	sub    $0x706d6574,%eax
  ff:	2d 6c 6f 67 2d       	sub    $0x2d676f6c,%eax
 104:	61                   	popa   
 105:	6c                   	insb   (%dx),%es:(%edi)
 106:	70 61                	jo     169 <L0+0x6a>
 108:	63 61 2d             	arpl   %sp,0x2d(%ecx)
 10b:	6e                   	outsb  %ds:(%esi),(%dx)
 10c:	65 77 2f             	gs ja  13e <L0+0x3f>
 10f:	65 78 74             	gs js  186 <L0+0x87>
 112:	2f                   	das    
 113:	6c                   	insb   (%dx),%es:(%edi)
 114:	69 62 77 69 73 70 62 	imul   $0x62707369,0x77(%edx),%esp
 11b:	61                   	popa   
 11c:	73 65                	jae    183 <L0+0x84>
 11e:	2f                   	das    
 11f:	62 6c 64 2f          	bound  %ebp,0x2f(%esp,%eiz,2)
 123:	67 63 63 00          	arpl   %sp,0x0(%bp,%di)
 127:	5f                   	pop    %edi
 128:	5f                   	pop    %edi
 129:	75 69                	jne    194 <L0+0x95>
 12b:	6e                   	outsb  %ds:(%esi),(%dx)
 12c:	74 38                	je     166 <L0+0x67>
 12e:	5f                   	pop    %edi
 12f:	74 00                	je     131 <L0+0x32>
 131:	30 78 30             	xor    %bh,0x30(%eax)
 134:	35 43 30 00 55       	xor    $0x55003043,%eax
 139:	41                   	inc    %ecx
 13a:	52                   	push   %edx
 13b:	54                   	push   %esp
 13c:	5f                   	pop    %edi
 13d:	61                   	popa   
 13e:	73 79                	jae    1b9 <L0+0xba>
 140:	6e                   	outsb  %ds:(%esi),(%dx)
 141:	63 52 65             	arpl   %dx,0x65(%edx)
 144:	63 65 69             	arpl   %sp,0x69(%ebp)
 147:	76 65                	jbe    1ae <L0+0xaf>
 149:	00 30                	add    %dh,(%eax)
 14b:	78 30                	js     17d <L0+0x7e>
 14d:	35 43 36 00 74       	xor    $0x74003643,%eax
 152:	78 50                	js     1a4 <L0+0xa5>
 154:	74 72                	je     1c8 <L0+0xc9>
 156:	00 75 6e             	add    %dh,0x6e(%ebp)
 159:	73 69                	jae    1c4 <L0+0xc5>
 15b:	67 6e                	outsb  %ds:(%si),(%dx)
 15d:	65 64 20 63 68       	gs and %ah,%fs:0x68(%ebx)
 162:	61                   	popa   
 163:	72 00                	jb     165 <L0+0x66>
 165:	55                   	push   %ebp
 166:	43                   	inc    %ebx
 167:	41                   	inc    %ecx
 168:	30 43 54             	xor    %al,0x54(%ebx)
 16b:	4c                   	dec    %esp
 16c:	57                   	push   %edi
 16d:	30 00                	xor    %al,(%eax)
 16f:	6c                   	insb   (%dx),%es:(%edi)
 170:	6f                   	outsl  %ds:(%esi),(%dx)
 171:	6e                   	outsb  %ds:(%esi),(%dx)
 172:	67 20 6c 6f          	and    %ch,0x6f(%si)
 176:	6e                   	outsb  %ds:(%esi),(%dx)
 177:	67 20 75 6e          	and    %dh,0x6e(%di)
 17b:	73 69                	jae    1e6 <L0+0xe7>
 17d:	67 6e                	outsb  %ds:(%si),(%dx)
 17f:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%ecx)
 184:	74 00                	je     186 <L0+0x87>
 186:	30 78 30             	xor    %bh,0x30(%eax)
 189:	35 43 45 00 30       	xor    $0x30004543,%eax
 18e:	78 30                	js     1c0 <L0+0xc1>
 190:	32 30                	xor    (%eax),%dh
 192:	41                   	inc    %ecx
 193:	2b 31                	sub    (%ecx),%esi
 195:	00 72 78             	add    %dh,0x78(%edx)
 198:	42                   	inc    %edx
 199:	79 74                	jns    20f <L0+0x110>
 19b:	65 73 52             	gs jae 1f0 <L0+0xf1>
 19e:	65 6d                	gs insl (%dx),%es:(%edi)
 1a0:	61                   	popa   
 1a1:	69 6e 69 6e 67 00 73 	imul   $0x7300676e,0x69(%esi),%ebp
 1a8:	68 6f 72 74 20       	push   $0x2074726f
 1ad:	75 6e                	jne    21d <L0+0x11e>
 1af:	73 69                	jae    21a <L0+0x11b>
 1b1:	67 6e                	outsb  %ds:(%si),(%dx)
 1b3:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%ecx)
 1b8:	74 00                	je     1ba <L0+0xbb>
 1ba:	55                   	push   %ebp
 1bb:	41                   	inc    %ecx
 1bc:	52                   	push   %edx
 1bd:	54                   	push   %esp
 1be:	5f                   	pop    %edi
 1bf:	73 65                	jae    226 <L0+0x127>
 1c1:	6e                   	outsb  %ds:(%esi),(%dx)
 1c2:	64 00 72 78          	add    %dh,%fs:0x78(%edx)
 1c6:	42                   	inc    %edx
 1c7:	75 66                	jne    22f <L0+0x130>
 1c9:	00 55 43             	add    %dl,0x43(%ebp)
 1cc:	41                   	inc    %ecx
 1cd:	30 42 52             	xor    %al,0x52(%edx)
 1d0:	57                   	push   %edi
 1d1:	5f                   	pop    %edi
 1d2:	4c                   	dec    %esp
 1d3:	00 30                	add    %dh,(%eax)
 1d5:	78 30                	js     207 <L0+0x108>
 1d7:	35 43 38 00 47       	xor    $0x47003843,%eax
 1dc:	4e                   	dec    %esi
 1dd:	55                   	push   %ebp
 1de:	20 43 20             	and    %al,0x20(%ebx)
 1e1:	34 2e                	xor    $0x2e,%al
 1e3:	39 2e                	cmp    %ebp,(%esi)
 1e5:	31 20                	xor    %esp,(%eax)
 1e7:	32 30                	xor    (%eax),%dh
 1e9:	31 34 30             	xor    %esi,(%eax,%esi,1)
 1ec:	37                   	aaa    
 1ed:	30 37                	xor    %dh,(%edi)
 1ef:	20 28                	and    %ch,(%eax)
 1f1:	70 72                	jo     265 <L0+0x166>
 1f3:	65 72 65             	gs jb  25b <L0+0x15c>
 1f6:	6c                   	insb   (%dx),%es:(%edi)
 1f7:	65 61                	gs popa 
 1f9:	73 65                	jae    260 <L0+0x161>
 1fb:	20 28                	and    %ch,(%eax)
 1fd:	6d                   	insl   (%dx),%es:(%edi)
 1fe:	73 70                	jae    270 <L0+0x171>
 200:	34 33                	xor    $0x33,%al
 202:	30 2d 31 34 72 31    	xor    %ch,0x31723431
 208:	2d 33 36 34 29       	sub    $0x29343633,%eax
 20d:	29 20                	sub    %esp,(%eax)
 20f:	28 47 4e             	sub    %al,0x4e(%edi)
 212:	55                   	push   %ebp
 213:	50                   	push   %eax
 214:	72 6f                	jb     285 <L0+0x186>
 216:	20 31                	and    %dh,(%ecx)
 218:	34 72                	xor    $0x72,%al
 21a:	31 29                	xor    %ebp,(%ecx)
 21c:	20 28                	and    %ch,(%eax)
 21e:	42                   	inc    %edx
 21f:	61                   	popa   
 220:	73 65                	jae    287 <L0+0x188>
 222:	64 20 6f 6e          	and    %ch,%fs:0x6e(%edi)
 226:	3a 20                	cmp    (%eax),%ah
 228:	47                   	inc    %edi
 229:	43                   	inc    %ebx
 22a:	43                   	inc    %ebx
 22b:	20 34 2e             	and    %dh,(%esi,%ebp,1)
 22e:	38 20                	cmp    %ah,(%eax)
 230:	47                   	inc    %edi
 231:	44                   	inc    %esp
 232:	42                   	inc    %edx
 233:	20 37                	and    %dh,(%edi)
 235:	2e 37                	cs aaa 
 237:	20 42 69             	and    %al,0x69(%edx)
 23a:	6e                   	outsb  %ds:(%esi),(%dx)
 23b:	75 74                	jne    2b1 <L0+0x1b2>
 23d:	69 6c 73 20 32 2e 32 	imul   $0x34322e32,0x20(%ebx,%esi,2),%ebp
 244:	34 
 245:	20 4e 65             	and    %cl,0x65(%esi)
 248:	77 6c                	ja     2b6 <L0+0x1b7>
 24a:	69 62 20 32 2e 31 29 	imul   $0x29312e32,0x20(%edx),%esp
 251:	20 2d 6d 6d 63 75    	and    %ch,0x75636d6d
 257:	3d 6d 73 70 34       	cmp    $0x3470736d,%eax
 25c:	33 30                	xor    (%eax),%esi
 25e:	66 72 35             	data16 jb 296 <L0+0x197>
 261:	39 36                	cmp    %esi,(%esi)
 263:	39 20                	cmp    %esp,(%eax)
 265:	2d 67 20 2d 4f       	sub    $0x4f2d2067,%eax
 26a:	31 20                	xor    %esp,(%eax)
 26c:	2d 73 74 64 3d       	sub    $0x3d647473,%eax
 271:	63 39                	arpl   %di,(%ecx)
 273:	39 20                	cmp    %esp,(%eax)
 275:	2d 66 6e 6f 2d       	sub    $0x2d6f6e66,%eax
 27a:	62 75 69             	bound  %esi,0x69(%ebp)
 27d:	6c                   	insb   (%dx),%es:(%edi)
 27e:	74 69                	je     2e9 <L0+0x1ea>
 280:	6e                   	outsb  %ds:(%esi),(%dx)
 281:	00 30                	add    %dh,(%eax)
 283:	78 30                	js     2b5 <L0+0x1b6>
 285:	35 43 41 00 55       	xor    $0x55004143,%eax
 28a:	41                   	inc    %ecx
 28b:	52                   	push   %edx
 28c:	54                   	push   %esp
 28d:	5f                   	pop    %edi
 28e:	69 6e 69 74 00 30 78 	imul   $0x78300074,0x69(%esi),%ebp
 295:	30 35 43 43 00 55    	xor    %dh,0x55004343
 29b:	43                   	inc    %ebx
 29c:	41                   	inc    %ecx
 29d:	30 54 58 42          	xor    %dl,0x42(%eax,%ebx,2)
 2a1:	55                   	push   %ebp
 2a2:	46                   	inc    %esi
 2a3:	00 50 41             	add    %dl,0x41(%eax)
 2a6:	53                   	push   %ebx
 2a7:	45                   	inc    %ebp
 2a8:	4c                   	dec    %esp
 2a9:	31 5f 48             	xor    %ebx,0x48(%edi)
 2ac:	00 72 78             	add    %dh,0x78(%edx)
 2af:	50                   	push   %eax
 2b0:	74 72                	je     324 <L0+0x225>
 2b2:	00 30                	add    %dh,(%eax)
 2b4:	78 30                	js     2e6 <L0+0x1e7>
 2b6:	35 44 41 00 73       	xor    $0x73004144,%eax
 2bb:	69 7a 65 00 30 78 30 	imul   $0x30783000,0x65(%edx),%edi
 2c2:	35 44 45 00 30       	xor    $0x30004544,%eax
 2c7:	78 30                	js     2f9 <L0+0x1fa>
 2c9:	35 43 36 2b 31       	xor    $0x312b3643,%eax
 2ce:	00 55 43             	add    %dl,0x43(%ebp)
 2d1:	41                   	inc    %ecx
 2d2:	30 52 58             	xor    %dl,0x58(%edx)
 2d5:	42                   	inc    %edx
 2d6:	55                   	push   %ebp
 2d7:	46                   	inc    %esi
 2d8:	00 55 41             	add    %dl,0x41(%ebp)
 2db:	52                   	push   %edx
 2dc:	54                   	push   %esp
 2dd:	5f                   	pop    %edi
 2de:	69 73 52 78 44 6f 6e 	imul   $0x6e6f4478,0x52(%ebx),%esi
 2e5:	65 00 55 53          	add    %dl,%gs:0x53(%ebp)
 2e9:	43                   	inc    %ebx
 2ea:	49                   	dec    %ecx
 2eb:	5f                   	pop    %edi
 2ec:	41                   	inc    %ecx
 2ed:	30 5f 49             	xor    %bl,0x49(%edi)
 2f0:	53                   	push   %ebx
 2f1:	52                   	push   %edx
 2f2:	00 55 41             	add    %dl,0x41(%ebp)
 2f5:	52                   	push   %edx
 2f6:	54                   	push   %esp
 2f7:	5f                   	pop    %edi
 2f8:	63 72 69             	arpl   %si,0x69(%edx)
 2fb:	74 52                	je     34f <L0+0x250>
 2fd:	65 63 65 69          	arpl   %sp,%gs:0x69(%ebp)
 301:	76 65                	jbe    368 <L0+0x269>
 303:	00 55 43             	add    %dl,0x43(%ebp)
 306:	41                   	inc    %ecx
 307:	30 42 52             	xor    %al,0x52(%edx)
 30a:	57                   	push   %edi
 30b:	5f                   	pop    %edi
 30c:	48                   	dec    %eax
 30d:	00 55 43             	add    %dl,0x43(%ebp)
 310:	41                   	inc    %ecx
 311:	30 4d 43             	xor    %cl,0x43(%ebp)
 314:	54                   	push   %esp
 315:	4c                   	dec    %esp
 316:	57                   	push   %edi
 317:	00 55 43             	add    %dl,0x43(%ebp)
 31a:	41                   	inc    %ecx
 31b:	30 49 46             	xor    %cl,0x46(%ecx)
 31e:	47                   	inc    %edi
 31f:	00 50 41             	add    %dl,0x41(%eax)
 322:	53                   	push   %ebx
 323:	45                   	inc    %ebp
 324:	4c                   	dec    %esp
 325:	30 5f 48             	xor    %bl,0x48(%edi)
 328:	00 6d 65             	add    %ch,0x65(%ebp)
 32b:	6d                   	insl   (%dx),%es:(%edi)
 32c:	6d                   	insl   (%dx),%es:(%edi)
 32d:	6f                   	outsl  %ds:(%esi),(%dx)
 32e:	76 65                	jbe    395 <L0+0x296>
 330:	00 73 69             	add    %dh,0x69(%ebx)
 333:	7a 65                	jp     39a <L0+0x29b>
 335:	5f                   	pop    %edi
 336:	74 00                	je     338 <L0+0x239>
 338:	6c                   	insb   (%dx),%es:(%edi)
 339:	65 6e                	outsb  %gs:(%esi),(%dx)
 33b:	67 74 68             	addr16 je 3a6 <L0+0x2a7>
 33e:	00 64 73 74          	add    %ah,0x74(%ebx,%esi,2)
 342:	5f                   	pop    %edi
 343:	76 6f                	jbe    3b4 <L0+0x2b5>
 345:	69 64 00 73 72 63 5f 	imul   $0x765f6372,0x73(%eax,%eax,1),%esp
 34c:	76 
 34d:	6f                   	outsl  %ds:(%esi),(%dx)
 34e:	69 64 00 2f 6f 70 74 	imul   $0x2f74706f,0x2f(%eax,%eax,1),%esp
 355:	2f 
 356:	72 65                	jb     3bd <L0+0x2be>
 358:	64 68 61 74 2f 6d    	fs push $0x6d2f7461
 35e:	73 70                	jae    3d0 <L0+0x2d1>
 360:	34 33                	xor    $0x33,%al
 362:	30 2d 31 34 72 31    	xor    %ch,0x31723431
 368:	2d 33 36 34 2f       	sub    $0x2f343633,%eax
 36d:	73 6f                	jae    3de <L0+0x2df>
 36f:	75 72                	jne    3e3 <L0+0x2e4>
 371:	63 65 73             	arpl   %sp,0x73(%ebp)
 374:	2f                   	das    
 375:	74 6f                	je     3e6 <L0+0x2e7>
 377:	6f                   	outsl  %ds:(%esi),(%dx)
 378:	6c                   	insb   (%dx),%es:(%edi)
 379:	73 2f                	jae    3aa <L0+0x2ab>
 37b:	6e                   	outsb  %ds:(%esi),(%dx)
 37c:	65 77 6c             	gs ja  3eb <L0+0x2ec>
 37f:	69 62 2f 6c 69 62 63 	imul   $0x6362696c,0x2f(%edx),%esp
 386:	2f                   	das    
 387:	73 74                	jae    3fd <L0+0x2fe>
 389:	72 69                	jb     3f4 <L0+0x2f5>
 38b:	6e                   	outsb  %ds:(%esi),(%dx)
 38c:	67 2f                	addr16 das 
 38e:	6d                   	insl   (%dx),%es:(%edi)
 38f:	65 6d                	gs insl (%dx),%es:(%edi)
 391:	6d                   	insl   (%dx),%es:(%edi)
 392:	6f                   	outsl  %ds:(%esi),(%dx)
 393:	76 65                	jbe    3fa <L0+0x2fb>
 395:	2e 63 00             	arpl   %ax,%cs:(%eax)
 398:	47                   	inc    %edi
 399:	4e                   	dec    %esi
 39a:	55                   	push   %ebp
 39b:	20 43 20             	and    %al,0x20(%ebx)
 39e:	34 2e                	xor    $0x2e,%al
 3a0:	39 2e                	cmp    %ebp,(%esi)
 3a2:	31 20                	xor    %esp,(%eax)
 3a4:	32 30                	xor    (%eax),%dh
 3a6:	31 34 30             	xor    %esi,(%eax,%esi,1)
 3a9:	37                   	aaa    
 3aa:	30 37                	xor    %dh,(%edi)
 3ac:	20 28                	and    %ch,(%eax)
 3ae:	70 72                	jo     422 <L0+0x323>
 3b0:	65 72 65             	gs jb  418 <L0+0x319>
 3b3:	6c                   	insb   (%dx),%es:(%edi)
 3b4:	65 61                	gs popa 
 3b6:	73 65                	jae    41d <L0+0x31e>
 3b8:	20 28                	and    %ch,(%eax)
 3ba:	6d                   	insl   (%dx),%es:(%edi)
 3bb:	73 70                	jae    42d <L0+0x32e>
 3bd:	34 33                	xor    $0x33,%al
 3bf:	30 2d 31 34 72 31    	xor    %ch,0x31723431
 3c5:	2d 33 36 34 29       	sub    $0x29343633,%eax
 3ca:	29 20                	sub    %esp,(%eax)
 3cc:	28 47 4e             	sub    %al,0x4e(%edi)
 3cf:	55                   	push   %ebp
 3d0:	50                   	push   %eax
 3d1:	72 6f                	jb     442 <L0+0x343>
 3d3:	20 31                	and    %dh,(%ecx)
 3d5:	34 72                	xor    $0x72,%al
 3d7:	31 29                	xor    %ebp,(%ecx)
 3d9:	20 28                	and    %ch,(%eax)
 3db:	42                   	inc    %edx
 3dc:	61                   	popa   
 3dd:	73 65                	jae    444 <L0+0x345>
 3df:	64 20 6f 6e          	and    %ch,%fs:0x6e(%edi)
 3e3:	3a 20                	cmp    (%eax),%ah
 3e5:	47                   	inc    %edi
 3e6:	43                   	inc    %ebx
 3e7:	43                   	inc    %ebx
 3e8:	20 34 2e             	and    %dh,(%esi,%ebp,1)
 3eb:	38 20                	cmp    %ah,(%eax)
 3ed:	47                   	inc    %edi
 3ee:	44                   	inc    %esp
 3ef:	42                   	inc    %edx
 3f0:	20 37                	and    %dh,(%edi)
 3f2:	2e 37                	cs aaa 
 3f4:	20 42 69             	and    %al,0x69(%edx)
 3f7:	6e                   	outsb  %ds:(%esi),(%dx)
 3f8:	75 74                	jne    46e <L0+0x36f>
 3fa:	69 6c 73 20 32 2e 32 	imul   $0x34322e32,0x20(%ebx,%esi,2),%ebp
 401:	34 
 402:	20 4e 65             	and    %cl,0x65(%esi)
 405:	77 6c                	ja     473 <L0+0x374>
 407:	69 62 20 32 2e 31 29 	imul   $0x29312e32,0x20(%edx),%esp
 40e:	20 2d 6d 4f 73 20    	and    %ch,0x20734f6d
 414:	2d 67 20 2d 4f       	sub    $0x4f2d2067,%eax
 419:	73 20                	jae    43b <L0+0x33c>
 41b:	2d 4f 32 20 2d       	sub    $0x2d20324f,%eax
 420:	66 66 75 6e          	data16 data16 jne 492 <L0+0x18>
 424:	63 74 69 6f          	arpl   %si,0x6f(%ecx,%ebp,2)
 428:	6e                   	outsb  %ds:(%esi),(%dx)
 429:	2d 73 65 63 74       	sub    $0x74636573,%eax
 42e:	69 6f 6e 73 20 2d 66 	imul   $0x662d2073,0x6e(%edi),%ebp
 435:	64 61                	fs popa 
 437:	74 61                	je     49a <L0+0x20>
 439:	2d 73 65 63 74       	sub    $0x74636573,%eax
 43e:	69 6f 6e 73 20 2d 66 	imul   $0x662d2073,0x6e(%edi),%ebp
 445:	6e                   	outsb  %ds:(%esi),(%dx)
 446:	6f                   	outsl  %ds:(%esi),(%dx)
 447:	2d 62 75 69 6c       	sub    $0x6c697562,%eax
 44c:	74 69                	je     4b7 <L0+0x6>
 44e:	6e                   	outsb  %ds:(%esi),(%dx)
 44f:	00 73 69             	add    %dh,0x69(%ebx)
 452:	7a 65                	jp     4b9 <L0+0x8>
 454:	74 79                	je     4cf <L0+0x1e>
 456:	70 65                	jo     4bd <L0+0xc>
 458:	00 2f                	add    %ch,(%edi)
 45a:	6f                   	outsl  %ds:(%esi),(%dx)
 45b:	70 74                	jo     4d1 <L0+0x20>
 45d:	2f                   	das    
 45e:	72 65                	jb     4c5 <L0+0x14>
 460:	64 68 61 74 2f 6d    	fs push $0x6d2f7461
 466:	73 70                	jae    4d8 <L0+0x27>
 468:	34 33                	xor    $0x33,%al
 46a:	30 2d 31 34 72 31    	xor    %ch,0x31723431
 470:	2d 33 36 34 2f       	sub    $0x2f343633,%eax
 475:	73 6f                	jae    4e6 <L0+0x35>
 477:	75 72                	jne    4eb <L0+0x3a>
 479:	63 65 73             	arpl   %sp,0x73(%ebp)
 47c:	2f                   	das    
 47d:	74 6f                	je     4ee <L0+0x3d>
 47f:	6f                   	outsl  %ds:(%esi),(%dx)
 480:	6c                   	insb   (%dx),%es:(%edi)
 481:	73 2f                	jae    4b2 <L0+0x1>
 483:	6e                   	outsb  %ds:(%esi),(%dx)
 484:	65 77 6c             	gs ja  4f3 <L0+0x42>
 487:	69 62 2f 6c 69 62 63 	imul   $0x6362696c,0x2f(%edx),%esp
 48e:	2f                   	das    
 48f:	73 74                	jae    505 <L0+0x7>
 491:	72 69                	jb     4fc <L0+0x4b>
 493:	6e                   	outsb  %ds:(%esi),(%dx)
 494:	67 2f                	addr16 das 
 496:	6d                   	insl   (%dx),%es:(%edi)
 497:	65 6d                	gs insl (%dx),%es:(%edi)
 499:	73 65                	jae    500 <L0+0x2>
 49b:	74 2e                	je     4cb <L0+0x1a>
 49d:	63 00                	arpl   %ax,(%eax)
 49f:	6d                   	insl   (%dx),%es:(%edi)
 4a0:	65 6d                	gs insl (%dx),%es:(%edi)
 4a2:	73 65                	jae    509 <L0+0xb>
 4a4:	74 00                	je     4a6 <L0+0x2c>

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
   0:	8c 00                	mov    %es,(%eax)
   2:	00 00                	add    %al,(%eax)
   4:	8f 00                	popl   (%eax)
   6:	00 00                	add    %al,(%eax)
   8:	01 00                	add    %eax,(%eax)
   a:	5c                   	pop    %esp
   b:	8f 00                	popl   (%eax)
   d:	00 00                	add    %al,(%eax)
   f:	9c                   	pushf  
  10:	00 00                	add    %al,(%eax)
  12:	00 04 00             	add    %al,(%eax,%eax,1)
  15:	f3 01 5c 9f 00       	repz add %ebx,0x0(%edi,%ebx,4)
  1a:	00 00                	add    %al,(%eax)
  1c:	00 00                	add    %al,(%eax)
  1e:	00 00                	add    %al,(%eax)
  20:	00 8c 00 00 00 8f 00 	add    %cl,0x8f0000(%eax,%eax,1)
  27:	00 00                	add    %al,(%eax)
  29:	01 00                	add    %eax,(%eax)
  2b:	5d                   	pop    %ebp
  2c:	8f 00                	popl   (%eax)
  2e:	00 00                	add    %al,(%eax)
  30:	9c                   	pushf  
  31:	00 00                	add    %al,(%eax)
  33:	00 04 00             	add    %al,(%eax,%eax,1)
  36:	f3 01 5d 9f          	repz add %ebx,-0x61(%ebp)
	...
  42:	9c                   	pushf  
  43:	00 00                	add    %al,(%eax)
  45:	00 be 00 00 00 01    	add    %bh,0x1000000(%esi)
  4b:	00 5c be 00          	add    %bl,0x0(%esi,%edi,4)
  4f:	00 00                	add    %al,(%eax)
  51:	02 01                	add    (%ecx),%al
  53:	00 00                	add    %al,(%eax)
  55:	04 00                	add    $0x0,%al
  57:	f3 01 5c 9f 00       	repz add %ebx,0x0(%edi,%ebx,4)
  5c:	00 00                	add    %al,(%eax)
  5e:	00 00                	add    %al,(%eax)
  60:	00 00                	add    %al,(%eax)
  62:	00 9c 00 00 00 c0 00 	add    %bl,0xc00000(%eax,%eax,1)
  69:	00 00                	add    %al,(%eax)
  6b:	01 00                	add    %eax,(%eax)
  6d:	5d                   	pop    %ebp
  6e:	c0 00 00             	rolb   $0x0,(%eax)
  71:	00 c6                	add    %al,%dh
  73:	00 00                	add    %al,(%eax)
  75:	00 05 00 03 26 1c    	add    %al,0x1c260300
  7b:	00 00                	add    %al,(%eax)
  7d:	c6 00 00             	movb   $0x0,(%eax)
  80:	00 02                	add    %al,(%edx)
  82:	01 00                	add    %eax,(%eax)
  84:	00 04 00             	add    %al,(%eax,%eax,1)
  87:	f3 01 5d 9f          	repz add %ebx,-0x61(%ebp)
	...
  93:	2e 01 00             	add    %eax,%cs:(%eax)
  96:	00 31                	add    %dh,(%ecx)
  98:	01 00                	add    %eax,(%eax)
  9a:	00 01                	add    %al,(%ecx)
  9c:	00 5c 31 01          	add    %bl,0x1(%ecx,%esi,1)
  a0:	00 00                	add    %al,(%eax)
  a2:	40                   	inc    %eax
  a3:	01 00                	add    %eax,(%eax)
  a5:	00 04 00             	add    %al,(%eax,%eax,1)
  a8:	f3 01 5c 9f 00       	repz add %ebx,0x0(%edi,%ebx,4)
  ad:	00 00                	add    %al,(%eax)
  af:	00 00                	add    %al,(%eax)
  b1:	00 00                	add    %al,(%eax)
  b3:	00 2e                	add    %ch,(%esi)
  b5:	01 00                	add    %eax,(%eax)
  b7:	00 31                	add    %dh,(%ecx)
  b9:	01 00                	add    %eax,(%eax)
  bb:	00 01                	add    %al,(%ecx)
  bd:	00 5d 31             	add    %bl,0x31(%ebp)
  c0:	01 00                	add    %eax,(%eax)
  c2:	00 40 01             	add    %al,0x1(%eax)
  c5:	00 00                	add    %al,(%eax)
  c7:	04 00                	add    $0x0,%al
  c9:	f3 01 5d 9f          	repz add %ebx,-0x61(%ebp)
	...
  d5:	40                   	inc    %eax
  d6:	01 00                	add    %eax,(%eax)
  d8:	00 64 01 00          	add    %ah,0x0(%ecx,%eax,1)
  dc:	00 01                	add    %al,(%ecx)
  de:	00 5c 64 01          	add    %bl,0x1(%esp,%eiz,2)
  e2:	00 00                	add    %al,(%eax)
  e4:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
  e5:	01 00                	add    %eax,(%eax)
  e7:	00 04 00             	add    %al,(%eax,%eax,1)
  ea:	f3 01 5c 9f 00       	repz add %ebx,0x0(%edi,%ebx,4)
  ef:	00 00                	add    %al,(%eax)
  f1:	00 00                	add    %al,(%eax)
  f3:	00 00                	add    %al,(%eax)
  f5:	00 40 01             	add    %al,0x1(%eax)
  f8:	00 00                	add    %al,(%eax)
  fa:	66 01 00             	add    %ax,(%eax)
  fd:	00 01                	add    %al,(%ecx)
  ff:	00 5d 66             	add    %bl,0x66(%ebp)
 102:	01 00                	add    %eax,(%eax)
 104:	00 6c 01 00          	add    %ch,0x0(%ecx,%eax,1)
 108:	00 05 00 03 2c 1c    	add    %al,0x1c2c0300
 10e:	00 00                	add    %al,(%eax)
 110:	6c                   	insb   (%dx),%es:(%edi)
 111:	01 00                	add    %eax,(%eax)
 113:	00 a6 01 00 00 04    	add    %ah,0x4000001(%esi)
 119:	00 f3                	add    %dh,%bl
 11b:	01 5d 9f             	add    %ebx,-0x61(%ebp)
	...
 126:	80 01 00             	addb   $0x0,(%ecx)
 129:	00 96 01 00 00 01    	add    %dl,0x1000001(%esi)
 12f:	00 5e 00             	add    %bl,0x0(%esi)
 132:	00 00                	add    %al,(%eax)
 134:	00 00                	add    %al,(%eax)
 136:	00 00                	add    %al,(%eax)
 138:	00 e2                	add    %ah,%dl
 13a:	01 00                	add    %eax,(%eax)
 13c:	00 f2                	add    %dh,%dl
 13e:	01 00                	add    %eax,(%eax)
 140:	00 01                	add    %al,(%ecx)
 142:	00 5e 00             	add    %bl,0x0(%esi)
 145:	00 00                	add    %al,(%eax)
 147:	00 00                	add    %al,(%eax)
 149:	00 00                	add    %al,(%eax)
 14b:	00 04 6e             	add    %al,(%esi,%ebp,2)
 14e:	00 00                	add    %al,(%eax)
 150:	14 6e                	adc    $0x6e,%al
 152:	00 00                	add    %al,(%eax)
 154:	01 00                	add    %eax,(%eax)
 156:	5d                   	pop    %ebp
 157:	14 6e                	adc    $0x6e,%al
 159:	00 00                	add    %al,(%eax)
 15b:	2a 6e 00             	sub    0x0(%esi),%ch
 15e:	00 04 00             	add    %al,(%eax,%eax,1)
 161:	f3 01 5d 9f          	repz add %ebx,-0x61(%ebp)
 165:	2a 6e 00             	sub    0x0(%esi),%ch
 168:	00 40 6e             	add    %al,0x6e(%eax)
 16b:	00 00                	add    %al,(%eax)
 16d:	01 00                	add    %eax,(%eax)
 16f:	5d                   	pop    %ebp
 170:	40                   	inc    %eax
 171:	6e                   	outsb  %ds:(%esi),(%dx)
 172:	00 00                	add    %al,(%eax)
 174:	44                   	inc    %esp
 175:	6e                   	outsb  %ds:(%esi),(%dx)
 176:	00 00                	add    %al,(%eax)
 178:	04 00                	add    $0x0,%al
 17a:	f3 01 5d 9f          	repz add %ebx,-0x61(%ebp)
	...
 186:	04 6e                	add    $0x6e,%al
 188:	00 00                	add    %al,(%eax)
 18a:	14 6e                	adc    $0x6e,%al
 18c:	00 00                	add    %al,(%eax)
 18e:	01 00                	add    %eax,(%eax)
 190:	5e                   	pop    %esi
 191:	14 6e                	adc    $0x6e,%al
 193:	00 00                	add    %al,(%eax)
 195:	2a 6e 00             	sub    0x0(%esi),%ch
 198:	00 01                	add    %al,(%ecx)
 19a:	00 5d 2a             	add    %bl,0x2a(%ebp)
 19d:	6e                   	outsb  %ds:(%esi),(%dx)
 19e:	00 00                	add    %al,(%eax)
 1a0:	2c 6e                	sub    $0x6e,%al
 1a2:	00 00                	add    %al,(%eax)
 1a4:	01 00                	add    %eax,(%eax)
 1a6:	5e                   	pop    %esi
 1a7:	2c 6e                	sub    $0x6e,%al
 1a9:	00 00                	add    %al,(%eax)
 1ab:	3e 6e                	outsb  %ds:(%esi),(%dx)
 1ad:	00 00                	add    %al,(%eax)
 1af:	07                   	pop    %es
 1b0:	00 7f 00             	add    %bh,0x0(%edi)
 1b3:	20 7e 00             	and    %bh,0x0(%esi)
 1b6:	22 9f 3e 6e 00 00    	and    0x6e3e(%edi),%bl
 1bc:	40                   	inc    %eax
 1bd:	6e                   	outsb  %ds:(%esi),(%dx)
 1be:	00 00                	add    %al,(%eax)
 1c0:	06                   	push   %es
 1c1:	00 7e 00             	add    %bh,0x0(%esi)
 1c4:	7f 00                	jg     1c6 <L0+0xc7>
 1c6:	1c 9f                	sbb    $0x9f,%al
	...
 1d0:	06                   	push   %es
 1d1:	6e                   	outsb  %ds:(%esi),(%dx)
 1d2:	00 00                	add    %al,(%eax)
 1d4:	12 6e 00             	adc    0x0(%esi),%ch
 1d7:	00 01                	add    %al,(%ecx)
 1d9:	00 5c 12 6e          	add    %bl,0x6e(%edx,%edx,1)
 1dd:	00 00                	add    %al,(%eax)
 1df:	14 6e                	adc    $0x6e,%al
 1e1:	00 00                	add    %al,(%eax)
 1e3:	06                   	push   %es
 1e4:	00 7c 00 7e          	add    %bh,0x7e(%eax,%eax,1)
 1e8:	00 22                	add    %ah,(%edx)
 1ea:	9f                   	lahf   
 1eb:	14 6e                	adc    $0x6e,%al
 1ed:	00 00                	add    %al,(%eax)
 1ef:	16                   	push   %ss
 1f0:	6e                   	outsb  %ds:(%esi),(%dx)
 1f1:	00 00                	add    %al,(%eax)
 1f3:	06                   	push   %es
 1f4:	00 7c 00 7d          	add    %bh,0x7d(%eax,%eax,1)
 1f8:	00 22                	add    %ah,(%edx)
 1fa:	9f                   	lahf   
 1fb:	16                   	push   %ss
 1fc:	6e                   	outsb  %ds:(%esi),(%dx)
 1fd:	00 00                	add    %al,(%eax)
 1ff:	1a 6e 00             	sbb    0x0(%esi),%ch
 202:	00 08                	add    %cl,(%eax)
 204:	00 7c 00 7d          	add    %bh,0x7d(%eax,%eax,1)
 208:	00 22                	add    %ah,(%edx)
 20a:	23 01                	and    (%ecx),%eax
 20c:	9f                   	lahf   
 20d:	1a 6e 00             	sbb    0x0(%esi),%ch
 210:	00 2a                	add    %ch,(%edx)
 212:	6e                   	outsb  %ds:(%esi),(%dx)
 213:	00 00                	add    %al,(%eax)
 215:	06                   	push   %es
 216:	00 7c 00 7d          	add    %bh,0x7d(%eax,%eax,1)
 21a:	00 22                	add    %ah,(%edx)
 21c:	9f                   	lahf   
 21d:	2a 6e 00             	sub    0x0(%esi),%ch
 220:	00 2c 6e             	add    %ch,(%esi,%ebp,2)
 223:	00 00                	add    %al,(%eax)
 225:	01 00                	add    %eax,(%eax)
 227:	5c                   	pop    %esp
 228:	2c 6e                	sub    $0x6e,%al
 22a:	00 00                	add    %al,(%eax)
 22c:	30 6e 00             	xor    %ch,0x0(%esi)
 22f:	00 06                	add    %al,(%esi)
 231:	00 7c 00 7f          	add    %bh,0x7f(%eax,%eax,1)
 235:	00 22                	add    %ah,(%edx)
 237:	9f                   	lahf   
 238:	30 6e 00             	xor    %ch,0x0(%esi)
 23b:	00 3e                	add    %bh,(%esi)
 23d:	6e                   	outsb  %ds:(%esi),(%dx)
 23e:	00 00                	add    %al,(%eax)
 240:	08 00                	or     %al,(%eax)
 242:	7c 00                	jl     244 <L0+0x145>
 244:	7f 00                	jg     246 <L0+0x147>
 246:	22 23                	and    (%ebx),%ah
 248:	01 9f 3e 6e 00 00    	add    %ebx,0x6e3e(%edi)
 24e:	40                   	inc    %eax
 24f:	6e                   	outsb  %ds:(%esi),(%dx)
 250:	00 00                	add    %al,(%eax)
 252:	06                   	push   %es
 253:	00 7c 00 7f          	add    %bh,0x7f(%eax,%eax,1)
 257:	00 22                	add    %ah,(%edx)
 259:	9f                   	lahf   
	...
 262:	06                   	push   %es
 263:	6e                   	outsb  %ds:(%esi),(%dx)
 264:	00 00                	add    %al,(%eax)
 266:	12 6e 00             	adc    0x0(%esi),%ch
 269:	00 01                	add    %al,(%ecx)
 26b:	00 5d 12             	add    %bl,0x12(%ebp)
 26e:	6e                   	outsb  %ds:(%esi),(%dx)
 26f:	00 00                	add    %al,(%eax)
 271:	14 6e                	adc    $0x6e,%al
 273:	00 00                	add    %al,(%eax)
 275:	01 00                	add    %eax,(%eax)
 277:	5b                   	pop    %ebx
 278:	14 6e                	adc    $0x6e,%al
 27a:	00 00                	add    %al,(%eax)
 27c:	16                   	push   %ss
 27d:	6e                   	outsb  %ds:(%esi),(%dx)
 27e:	00 00                	add    %al,(%eax)
 280:	09 00                	or     %eax,(%eax)
 282:	7b 00                	jnp    284 <L0+0x185>
 284:	7d 00                	jge    286 <L0+0x187>
 286:	22 7e 00             	and    0x0(%esi),%bh
 289:	1c 9f                	sbb    $0x9f,%al
 28b:	16                   	push   %ss
 28c:	6e                   	outsb  %ds:(%esi),(%dx)
 28d:	00 00                	add    %al,(%eax)
 28f:	1a 6e 00             	sbb    0x0(%esi),%ch
 292:	00 0b                	add    %cl,(%ebx)
 294:	00 7b 00             	add    %bh,0x0(%ebx)
 297:	7d 00                	jge    299 <L0+0x19a>
 299:	22 7e 00             	and    0x0(%esi),%bh
 29c:	1c 23                	sbb    $0x23,%al
 29e:	01 9f 1a 6e 00 00    	add    %ebx,0x6e1a(%edi)
 2a4:	2a 6e 00             	sub    0x0(%esi),%ch
 2a7:	00 09                	add    %cl,(%ecx)
 2a9:	00 7b 00             	add    %bh,0x0(%ebx)
 2ac:	7d 00                	jge    2ae <L0+0x1af>
 2ae:	22 7e 00             	and    0x0(%esi),%bh
 2b1:	1c 9f                	sbb    $0x9f,%al
 2b3:	2a 6e 00             	sub    0x0(%esi),%ch
 2b6:	00 2c 6e             	add    %ch,(%esi,%ebp,2)
 2b9:	00 00                	add    %al,(%eax)
 2bb:	01 00                	add    %eax,(%eax)
 2bd:	5d                   	pop    %ebp
 2be:	2c 6e                	sub    $0x6e,%al
 2c0:	00 00                	add    %al,(%eax)
 2c2:	30 6e 00             	xor    %ch,0x0(%esi)
 2c5:	00 06                	add    %al,(%esi)
 2c7:	00 7d 00             	add    %bh,0x0(%ebp)
 2ca:	7f 00                	jg     2cc <L0+0x1cd>
 2cc:	22 9f 30 6e 00 00    	and    0x6e30(%edi),%bl
 2d2:	3e 6e                	outsb  %ds:(%esi),(%dx)
 2d4:	00 00                	add    %al,(%eax)
 2d6:	08 00                	or     %al,(%eax)
 2d8:	7d 00                	jge    2da <L0+0x1db>
 2da:	7f 00                	jg     2dc <L0+0x1dd>
 2dc:	22 23                	and    (%ebx),%ah
 2de:	01 9f 3e 6e 00 00    	add    %ebx,0x6e3e(%edi)
 2e4:	40                   	inc    %eax
 2e5:	6e                   	outsb  %ds:(%esi),(%dx)
 2e6:	00 00                	add    %al,(%eax)
 2e8:	06                   	push   %es
 2e9:	00 7d 00             	add    %bh,0x0(%ebp)
 2ec:	7f 00                	jg     2ee <L0+0x1ef>
 2ee:	22 9f 00 00 00 00    	and    0x0(%edi),%bl
 2f4:	00 00                	add    %al,(%eax)
 2f6:	00 00                	add    %al,(%eax)
 2f8:	44                   	inc    %esp
 2f9:	6e                   	outsb  %ds:(%esi),(%dx)
 2fa:	00 00                	add    %al,(%eax)
 2fc:	48                   	dec    %eax
 2fd:	6e                   	outsb  %ds:(%esi),(%dx)
 2fe:	00 00                	add    %al,(%eax)
 300:	01 00                	add    %eax,(%eax)
 302:	5e                   	pop    %esi
 303:	48                   	dec    %eax
 304:	6e                   	outsb  %ds:(%esi),(%dx)
 305:	00 00                	add    %al,(%eax)
 307:	52                   	push   %edx
 308:	6e                   	outsb  %ds:(%esi),(%dx)
 309:	00 00                	add    %al,(%eax)
 30b:	0b 00                	or     (%eax),%eax
 30d:	7f 00                	jg     30f <L0+0x210>
 30f:	20 f3                	and    %dh,%bl
 311:	01 5e 22             	add    %ebx,0x22(%esi)
 314:	7c 00                	jl     316 <L0+0x217>
 316:	22 9f 52 6e 00 00    	and    0x6e52(%edi),%bl
 31c:	54                   	push   %esp
 31d:	6e                   	outsb  %ds:(%esi),(%dx)
 31e:	00 00                	add    %al,(%eax)
 320:	0a 00                	or     (%eax),%al
 322:	7c 00                	jl     324 <L0+0x225>
 324:	7f 00                	jg     326 <L0+0x227>
 326:	1c f3                	sbb    $0xf3,%al
 328:	01 5e 22             	add    %ebx,0x22(%esi)
 32b:	9f                   	lahf   
 32c:	54                   	push   %esp
 32d:	6e                   	outsb  %ds:(%esi),(%dx)
 32e:	00 00                	add    %al,(%eax)
 330:	56                   	push   %esi
 331:	6e                   	outsb  %ds:(%esi),(%dx)
 332:	00 00                	add    %al,(%eax)
 334:	0b 00                	or     (%eax),%eax
 336:	7f 00                	jg     338 <L0+0x239>
 338:	20 f3                	and    %dh,%bl
 33a:	01 5e 22             	add    %ebx,0x22(%esi)
 33d:	7c 00                	jl     33f <L0+0x240>
 33f:	22 9f 00 00 00 00    	and    0x0(%edi),%bl
 345:	00 00                	add    %al,(%eax)
 347:	00 00                	add    %al,(%eax)
 349:	44                   	inc    %esp
 34a:	6e                   	outsb  %ds:(%esi),(%dx)
 34b:	00 00                	add    %al,(%eax)
 34d:	48                   	dec    %eax
 34e:	6e                   	outsb  %ds:(%esi),(%dx)
 34f:	00 00                	add    %al,(%eax)
 351:	01 00                	add    %eax,(%eax)
 353:	5c                   	pop    %esp
 354:	48                   	dec    %eax
 355:	6e                   	outsb  %ds:(%esi),(%dx)
 356:	00 00                	add    %al,(%eax)
 358:	4c                   	dec    %esp
 359:	6e                   	outsb  %ds:(%esi),(%dx)
 35a:	00 00                	add    %al,(%eax)
 35c:	01 00                	add    %eax,(%eax)
 35e:	5f                   	pop    %edi
 35f:	4c                   	dec    %esp
 360:	6e                   	outsb  %ds:(%esi),(%dx)
 361:	00 00                	add    %al,(%eax)
 363:	52                   	push   %edx
 364:	6e                   	outsb  %ds:(%esi),(%dx)
 365:	00 00                	add    %al,(%eax)
 367:	03 00                	add    (%eax),%eax
 369:	7f 01                	jg     36c <L0+0x26d>
 36b:	9f                   	lahf   
 36c:	52                   	push   %edx
 36d:	6e                   	outsb  %ds:(%esi),(%dx)
 36e:	00 00                	add    %al,(%eax)
 370:	56                   	push   %esi
 371:	6e                   	outsb  %ds:(%esi),(%dx)
 372:	00 00                	add    %al,(%eax)
 374:	01 00                	add    %eax,(%eax)
 376:	5f                   	pop    %edi
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	ff                   	(bad)  
   1:	ff                   	(bad)  
   2:	ff                   	(bad)  
   3:	ff 00                	incl   (%eax)
   5:	00 00                	add    %al,(%eax)
   7:	00 a4 55 00 00 a8 55 	add    %ah,0x55a80000(%ebp,%edx,2)
   e:	00 00                	add    %al,(%eax)
  10:	d4 55                	aam    $0x55
  12:	00 00                	add    %al,(%eax)
  14:	10 56 00             	adc    %dl,0x0(%esi)
  17:	00 88 6e 00 00 8c    	add    %cl,-0x73ffff92(%eax)
  1d:	6e                   	outsb  %ds:(%esi),(%dx)
	...
  26:	00 00                	add    %al,(%eax)
  28:	04 6e                	add    $0x6e,%al
  2a:	00 00                	add    %al,(%eax)
  2c:	44                   	inc    %esp
  2d:	6e                   	outsb  %ds:(%esi),(%dx)
	...
  36:	00 00                	add    %al,(%eax)
  38:	44                   	inc    %esp
  39:	6e                   	outsb  %ds:(%esi),(%dx)
  3a:	00 00                	add    %al,(%eax)
  3c:	56                   	push   %esi
  3d:	6e                   	outsb  %ds:(%esi),(%dx)
	...
  46:	00 00                	add    %al,(%eax)
  48:	ff                   	(bad)  
  49:	ff                   	(bad)  
  4a:	ff                   	(bad)  
  4b:	ff 00                	incl   (%eax)
  4d:	00 00                	add    %al,(%eax)
  4f:	00 7e 6e             	add    %bh,0x6e(%esi)
  52:	00 00                	add    %al,(%eax)
  54:	88 6e 00             	mov    %ch,0x0(%esi)
  57:	00 90 6e 00 00 92    	add    %dl,-0x6dffff92(%eax)
  5d:	6e                   	outsb  %ds:(%esi),(%dx)
	...
