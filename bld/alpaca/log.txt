
templog.out:     file format elf32-msp430


Disassembly of section __interrupt_vector_49:

0000fff0 <__interrupt_vector_49>:
    fff0:	12 77       	interrupt service routine at 0x7712

Disassembly of section .text:

0000514c <__crt0_start>:
    514c:	31 40 00 24 	mov	#9216,	r1	;#0x2400

00005150 <__crt0_init_bss>:
    5150:	3c 40 04 1c 	mov	#7172,	r12	;#0x1c04
    5154:	0d 43       	clr	r13		;
    5156:	3e 40 20 00 	mov	#32,	r14	;#0x0020
    515a:	b0 12 d6 77 	call	#30678		;#0x77d6

0000515e <__crt0_movedata>:
    515e:	3c 40 00 1c 	mov	#7168,	r12	;#0x1c00
    5162:	3d 40 46 51 	mov	#20806,	r13	;#0x5146
    5166:	0d 9c       	cmp	r12,	r13	;
    5168:	04 24       	jz	$+10     	;abs 0x5172
    516a:	3e 40 04 00 	mov	#4,	r14	;
    516e:	b0 12 96 77 	call	#30614		;#0x7796

00005172 <__crt0_call_init_then_main>:
    5172:	b0 12 08 78 	call	#30728		;#0x7808
    5176:	0c 43       	clr	r12		;
    5178:	b0 12 bc 74 	call	#29884		;#0x74bc

0000517c <_msp430_run_init_array>:
    517c:	34 40 f0 4a 	mov	#19184,	r4	;#0x4af0
    5180:	35 40 f0 4a 	mov	#19184,	r5	;#0x4af0
    5184:	26 43       	mov	#2,	r6	;r3 As==10
    5186:	0d 3c       	jmp	$+28     	;abs 0x51a2

00005188 <_msp430_run_preinit_array>:
    5188:	34 40 f0 4a 	mov	#19184,	r4	;#0x4af0
    518c:	35 40 f0 4a 	mov	#19184,	r5	;#0x4af0
    5190:	26 43       	mov	#2,	r6	;r3 As==10
    5192:	07 3c       	jmp	$+16     	;abs 0x51a2

00005194 <_msp430_run_fini_array>:
    5194:	34 40 f0 4a 	mov	#19184,	r4	;#0x4af0
    5198:	35 40 f0 4a 	mov	#19184,	r5	;#0x4af0
    519c:	36 40 fe ff 	mov	#65534,	r6	;#0xfffe
    51a0:	00 3c       	jmp	$+2      	;abs 0x51a2

000051a2 <_msp430_run_array>:
    51a2:	05 94       	cmp	r4,	r5	;
    51a4:	05 24       	jz	$+12     	;abs 0x51b0
    51a6:	27 44       	mov	@r4,	r7	;
    51a8:	04 56       	add	r6,	r4	;
    51aa:	a7 12       	call	@r7		;
    51ac:	10 40 f4 ff 	br	0xfff4		;PC rel. 0x51a2

000051b0 <_msp430_run_done>:
    51b0:	30 41       	ret			

000051b2 <deregister_tm_clones>:
    51b2:	3c 40 24 78 	mov	#30756,	r12	;#0x7824
    51b6:	3c 80 23 78 	sub	#30755,	r12	;#0x7823
    51ba:	2d 43       	mov	#2,	r13	;r3 As==10
    51bc:	0d 9c       	cmp	r12,	r13	;
    51be:	07 2c       	jc	$+16     	;abs 0x51ce
    51c0:	3d 40 00 00 	mov	#0,	r13	;
    51c4:	0d 93       	cmp	#0,	r13	;r3 As==00
    51c6:	03 24       	jz	$+8      	;abs 0x51ce
    51c8:	3c 40 24 78 	mov	#30756,	r12	;#0x7824
    51cc:	8d 12       	call	r13		;
    51ce:	30 41       	ret			

000051d0 <register_tm_clones>:
    51d0:	3d 40 24 78 	mov	#30756,	r13	;#0x7824
    51d4:	3d 80 24 78 	sub	#30756,	r13	;#0x7824
    51d8:	0d 11       	rra	r13		;
    51da:	0c 4d       	mov	r13,	r12	;
    51dc:	5c 03       	rrum	#1,	r12	;
    51de:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    51e2:	0d 5c       	add	r12,	r13	;
    51e4:	0d 11       	rra	r13		;
    51e6:	0d 93       	cmp	#0,	r13	;r3 As==00
    51e8:	07 24       	jz	$+16     	;abs 0x51f8
    51ea:	3e 40 00 00 	mov	#0,	r14	;
    51ee:	0e 93       	cmp	#0,	r14	;r3 As==00
    51f0:	03 24       	jz	$+8      	;abs 0x51f8
    51f2:	3c 40 24 78 	mov	#30756,	r12	;#0x7824
    51f6:	8e 12       	call	r14		;
    51f8:	30 41       	ret			

000051fa <__do_global_dtors_aux>:
    51fa:	0a 15       	pushm	#1,	r10	;16-bit words
    51fc:	c2 93 04 1c 	cmp.b	#0,	&0x1c04	;r3 As==00
    5200:	20 20       	jnz	$+66     	;abs 0x5242
    5202:	1c 42 06 1c 	mov	&0x1c06,r12	;0x1c06
    5206:	3a 40 fa 4a 	mov	#19194,	r10	;#0x4afa
    520a:	3a 80 f8 4a 	sub	#19192,	r10	;#0x4af8
    520e:	0a 11       	rra	r10		;
    5210:	3a 53       	add	#-1,	r10	;r3 As==11
    5212:	0c 9a       	cmp	r10,	r12	;
    5214:	0b 2c       	jc	$+24     	;abs 0x522c
    5216:	1c 53       	inc	r12		;
    5218:	82 4c 06 1c 	mov	r12,	&0x1c06	;
    521c:	0c 5c       	rla	r12		;
    521e:	1c 4c f8 4a 	mov	19192(r12),r12	;0x04af8
    5222:	8c 12       	call	r12		;
    5224:	1c 42 06 1c 	mov	&0x1c06,r12	;0x1c06
    5228:	0c 9a       	cmp	r10,	r12	;
    522a:	f5 2b       	jnc	$-20     	;abs 0x5216
    522c:	b0 12 b2 51 	call	#20914		;#0x51b2
    5230:	3d 40 00 00 	mov	#0,	r13	;
    5234:	0d 93       	cmp	#0,	r13	;r3 As==00
    5236:	03 24       	jz	$+8      	;abs 0x523e
    5238:	3c 40 ec 4a 	mov	#19180,	r12	;#0x4aec
    523c:	8d 12       	call	r13		;
    523e:	d2 43 04 1c 	mov.b	#1,	&0x1c04	;r3 As==01
    5242:	0a 17       	popm	#1,	r10	;16-bit words
    5244:	30 41       	ret			

00005246 <call___do_global_dtors_aux>:
    5246:	30 41       	ret			

00005248 <frame_dummy>:
    5248:	3e 40 00 00 	mov	#0,	r14	;
    524c:	0e 93       	cmp	#0,	r14	;r3 As==00
    524e:	05 24       	jz	$+12     	;abs 0x525a
    5250:	3c 40 ec 4a 	mov	#19180,	r12	;#0x4aec
    5254:	3d 40 08 1c 	mov	#7176,	r13	;#0x1c08
    5258:	8e 12       	call	r14		;
    525a:	3c 40 00 1c 	mov	#7168,	r12	;#0x1c00
    525e:	8c 93 00 00 	cmp	#0,	0(r12)	;r3 As==00
    5262:	03 20       	jnz	$+8      	;abs 0x526a
    5264:	b0 12 d0 51 	call	#20944		;#0x51d0
    5268:	30 41       	ret			
    526a:	3d 40 00 00 	mov	#0,	r13	;
    526e:	0d 93       	cmp	#0,	r13	;r3 As==00
    5270:	f9 27       	jz	$-12     	;abs 0x5264
    5272:	8d 12       	call	r13		;
    5274:	f7 3f       	jmp	$-16     	;abs 0x5264

00005276 <call_frame_dummy>:
    5276:	30 41       	ret			

00005278 <init>:
    5278:	04 12       	push	r4		;
    527a:	04 41       	mov	r1,	r4	;
    527c:	31 80 06 00 	sub	#6,	r1	;
    5280:	b0 12 60 69 	call	#26976		;#0x6960
    5284:	32 d2       	eint			
    5286:	03 43       	nop			
    5288:	1c 42 42 51 	mov	&0x5142,r12	;0x5142
    528c:	2c 4c       	mov	@r12,	r12	;
    528e:	1c 4c 06 00 	mov	6(r12),	r12	;
    5292:	0d 41       	mov	r1,	r13	;
    5294:	8d 4c 02 00 	mov	r12,	2(r13)	;
    5298:	bd 40 00 44 	mov	#17408,	0(r13)	;#0x4400
    529c:	00 00 
    529e:	b0 12 64 6e 	call	#28260		;#0x6e64
    52a2:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    52a6:	31 50 06 00 	add	#6,	r1	;
    52aa:	34 41       	pop	r4		;
    52ac:	30 41       	ret			
	...

000052b0 <task_init>:
    52b0:	04 12       	push	r4		;
    52b2:	04 41       	mov	r1,	r4	;
    52b4:	31 80 14 00 	sub	#20,	r1	;#0x0014
    52b8:	b4 40 0b 00 	mov	#11,	-4(r4)	;#0x000b, 0xfffc
    52bc:	fc ff 
    52be:	0c 41       	mov	r1,	r12	;
    52c0:	bc 40 07 44 	mov	#17415,	0(r12)	;#0x4407
    52c4:	00 00 
    52c6:	b0 12 64 6e 	call	#28260		;#0x6e64
    52ca:	0c 41       	mov	r1,	r12	;
    52cc:	ac 43 02 00 	mov	#2,	2(r12)	;r3 As==10
    52d0:	bc 40 0e 44 	mov	#17422,	0(r12)	;#0x440e
    52d4:	00 00 
    52d6:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    52da:	b0 12 64 6e 	call	#28260		;#0x6e64
    52de:	0c 41       	mov	r1,	r12	;
    52e0:	ac 43 02 00 	mov	#2,	2(r12)	;r3 As==10
    52e4:	bc 40 1a 44 	mov	#17434,	0(r12)	;#0x441a
    52e8:	00 00 
    52ea:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    52ee:	b0 12 64 6e 	call	#28260		;#0x6e64
    52f2:	0c 41       	mov	r1,	r12	;
    52f4:	bc 40 29 44 	mov	#17449,	0(r12)	;#0x4429
    52f8:	00 00 
    52fa:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    52fe:	b0 12 64 6e 	call	#28260		;#0x6e64
    5302:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    5306:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    530a:	00 3c       	jmp	$+2      	;abs 0x530c
    530c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5310:	3c 92       	cmp	#8,	r12	;r2 As==11
    5312:	0f 34       	jge	$+32     	;abs 0x5332
    5314:	00 3c       	jmp	$+2      	;abs 0x5316
    5316:	1c 44 fe ff 	mov	-2(r4),	r12	;
    531a:	5d 4c fc 4a 	mov.b	19196(r12),r13	;0x04afc
    531e:	0c 5c       	rla	r12		;
    5320:	8c 4d 5a 4e 	mov	r13,	20058(r12); 0x4e5a
    5324:	00 3c       	jmp	$+2      	;abs 0x5326
    5326:	1c 44 fe ff 	mov	-2(r4),	r12	;
    532a:	1c 53       	inc	r12		;
    532c:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5330:	ed 3f       	jmp	$-36     	;abs 0x530c
    5332:	0c 41       	mov	r1,	r12	;
    5334:	bc 40 3d 44 	mov	#17469,	0(r12)	;#0x443d
    5338:	00 00 
    533a:	b0 12 64 6e 	call	#28260		;#0x6e64
    533e:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5342:	82 4c 6a 4e 	mov	r12,	&0x4e6a	;
    5346:	82 43 6e 4e 	mov	#0,	&0x4e6e	;r3 As==00
    534a:	82 43 72 4e 	mov	#0,	&0x4e72	;r3 As==00
    534e:	0c 41       	mov	r1,	r12	;
    5350:	bc 40 4d 44 	mov	#17485,	0(r12)	;#0x444d
    5354:	00 00 
    5356:	84 4f f2 ff 	mov	r15,	-14(r4)	; 0xfff2
    535a:	b0 12 64 6e 	call	#28260		;#0x6e64
    535e:	3c 40 3c 4b 	mov	#19260,	r12	;#0x4b3c
    5362:	84 4f f0 ff 	mov	r15,	-16(r4)	; 0xfff0
    5366:	0f 4c       	mov	r12,	r15	;
    5368:	b0 12 a8 73 	call	#29608		;#0x73a8
    536c:	31 50 14 00 	add	#20,	r1	;#0x0014
    5370:	34 41       	pop	r4		;
    5372:	30 41       	ret			

00005374 <task_pad>:
    5374:	04 12       	push	r4		;
    5376:	04 41       	mov	r1,	r4	;
    5378:	31 80 1a 00 	sub	#26,	r1	;#0x001a
    537c:	1c 42 6e 4e 	mov	&0x4e6e,r12	;0x4e6e
    5380:	82 4c 6c 4e 	mov	r12,	&0x4e6c	;
    5384:	1d 42 6a 4e 	mov	&0x4e6a,r13	;0x4e6a
    5388:	0e 41       	mov	r1,	r14	;
    538a:	8e 4c 04 00 	mov	r12,	4(r14)	;
    538e:	8e 4d 02 00 	mov	r13,	2(r14)	;
    5392:	be 40 5a 44 	mov	#17498,	0(r14)	;#0x445a
    5396:	00 00 
    5398:	b0 12 64 6e 	call	#28260		;#0x6e64
    539c:	1c 42 6c 4e 	mov	&0x4e6c,r12	;0x4e6c
    53a0:	1d 42 6a 4e 	mov	&0x4e6a,r13	;0x4e6a
    53a4:	0c 9d       	cmp	r13,	r12	;
    53a6:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    53aa:	16 28       	jnc	$+46     	;abs 0x53d8
    53ac:	00 3c       	jmp	$+2      	;abs 0x53ae
    53ae:	0c 41       	mov	r1,	r12	;
    53b0:	bc 40 72 44 	mov	#17522,	0(r12)	;#0x4472
    53b4:	00 00 
    53b6:	b0 12 64 6e 	call	#28260		;#0x6e64
    53ba:	3e 40 6e 4e 	mov	#20078,	r14	;#0x4e6e
    53be:	3c 40 6c 4e 	mov	#20076,	r12	;#0x4e6c
    53c2:	2d 43       	mov	#2,	r13	;r3 As==10
    53c4:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    53c8:	0f 4c       	mov	r12,	r15	;
    53ca:	b0 12 44 74 	call	#29764		;#0x7444
    53ce:	3f 40 38 4c 	mov	#19512,	r15	;#0x4c38
    53d2:	b0 12 a8 73 	call	#29608		;#0x73a8
    53d6:	00 3c       	jmp	$+2      	;abs 0x53d8
    53d8:	1c 42 6c 4e 	mov	&0x4e6c,r12	;0x4e6c
    53dc:	0d 41       	mov	r1,	r13	;
    53de:	8d 4c 02 00 	mov	r12,	2(r13)	;
    53e2:	bd 40 86 44 	mov	#17542,	0(r13)	;#0x4486
    53e6:	00 00 
    53e8:	b0 12 64 6e 	call	#28260		;#0x6e64
    53ec:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    53f0:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    53f4:	00 3c       	jmp	$+2      	;abs 0x53f6
    53f6:	1c 44 fe ff 	mov	-2(r4),	r12	;
    53fa:	0c 93       	cmp	#0,	r12	;r3 As==00
    53fc:	16 20       	jnz	$+46     	;abs 0x542a
    53fe:	00 3c       	jmp	$+2      	;abs 0x5400
    5400:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5404:	5c 4c b2 4a 	mov.b	19122(r12),r12	;0x04ab2
    5408:	0d 41       	mov	r1,	r13	;
    540a:	8d 4c 02 00 	mov	r12,	2(r13)	;
    540e:	bd 40 b1 44 	mov	#17585,	0(r13)	;#0x44b1
    5412:	00 00 
    5414:	b0 12 64 6e 	call	#28260		;#0x6e64
    5418:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    541c:	00 3c       	jmp	$+2      	;abs 0x541e
    541e:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5422:	1c 53       	inc	r12		;
    5424:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5428:	e6 3f       	jmp	$-50     	;abs 0x53f6
    542a:	0c 41       	mov	r1,	r12	;
    542c:	bc 40 b5 44 	mov	#17589,	0(r12)	;#0x44b5
    5430:	00 00 
    5432:	b0 12 64 6e 	call	#28260		;#0x6e64
    5436:	b4 40 06 00 	mov	#6,	-2(r4)	; 0xfffe
    543a:	fe ff 
    543c:	84 4f f2 ff 	mov	r15,	-14(r4)	; 0xfff2
    5440:	00 3c       	jmp	$+2      	;abs 0x5442
    5442:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5446:	0c 93       	cmp	#0,	r12	;r3 As==00
    5448:	19 38       	jl	$+52     	;abs 0x547c
    544a:	00 3c       	jmp	$+2      	;abs 0x544c
    544c:	1c 42 6c 4e 	mov	&0x4e6c,r12	;0x4e6c
    5450:	1d 44 fe ff 	mov	-2(r4),	r13	;
    5454:	0c 5d       	add	r13,	r12	;
    5456:	5c 4c 06 4b 	mov.b	19206(r12),r12	;0x04b06
    545a:	0d 41       	mov	r1,	r13	;
    545c:	8d 4c 02 00 	mov	r12,	2(r13)	;
    5460:	bd 40 b1 44 	mov	#17585,	0(r13)	;#0x44b1
    5464:	00 00 
    5466:	b0 12 64 6e 	call	#28260		;#0x6e64
    546a:	84 4f f0 ff 	mov	r15,	-16(r4)	; 0xfff0
    546e:	00 3c       	jmp	$+2      	;abs 0x5470
    5470:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5474:	3c 53       	add	#-1,	r12	;r3 As==11
    5476:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    547a:	e3 3f       	jmp	$-56     	;abs 0x5442
    547c:	0c 41       	mov	r1,	r12	;
    547e:	bc 40 04 44 	mov	#17412,	0(r12)	;#0x4404
    5482:	00 00 
    5484:	b0 12 64 6e 	call	#28260		;#0x6e64
    5488:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    548c:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    5490:	84 4f ee ff 	mov	r15,	-18(r4)	; 0xffee
    5494:	00 3c       	jmp	$+2      	;abs 0x5496
    5496:	1c 44 fe ff 	mov	-2(r4),	r12	;
    549a:	3c 90 07 00 	cmp	#7,	r12	;
    549e:	28 2c       	jc	$+82     	;abs 0x54f0
    54a0:	00 3c       	jmp	$+2      	;abs 0x54a2
    54a2:	1c 42 6c 4e 	mov	&0x4e6c,r12	;0x4e6c
    54a6:	1d 44 fe ff 	mov	-2(r4),	r13	;
    54aa:	0c 5d       	add	r13,	r12	;
    54ac:	1d 42 6a 4e 	mov	&0x4e6a,r13	;0x4e6a
    54b0:	0c 9d       	cmp	r13,	r12	;
    54b2:	0b 2c       	jc	$+24     	;abs 0x54ca
    54b4:	00 3c       	jmp	$+2      	;abs 0x54b6
    54b6:	1c 42 6c 4e 	mov	&0x4e6c,r12	;0x4e6c
    54ba:	1d 44 fe ff 	mov	-2(r4),	r13	;
    54be:	0c 5d       	add	r13,	r12	;
    54c0:	5c 4c 06 4b 	mov.b	19206(r12),r12	;0x04b06
    54c4:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    54c8:	05 3c       	jmp	$+12     	;abs 0x54d4
    54ca:	3c 40 ff 00 	mov	#255,	r12	;#0x00ff
    54ce:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    54d2:	00 3c       	jmp	$+2      	;abs 0x54d4
    54d4:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    54d8:	1d 44 fe ff 	mov	-2(r4),	r13	;
    54dc:	0d 5d       	rla	r13		;
    54de:	8d 4c 74 4e 	mov	r12,	20084(r13); 0x4e74
    54e2:	00 3c       	jmp	$+2      	;abs 0x54e4
    54e4:	1c 44 fe ff 	mov	-2(r4),	r12	;
    54e8:	1c 53       	inc	r12		;
    54ea:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    54ee:	d3 3f       	jmp	$-88     	;abs 0x5496
    54f0:	b4 40 07 00 	mov	#7,	-2(r4)	; 0xfffe
    54f4:	fe ff 
    54f6:	00 3c       	jmp	$+2      	;abs 0x54f8
    54f8:	1c 44 fe ff 	mov	-2(r4),	r12	;
    54fc:	3c 92       	cmp	#8,	r12	;r2 As==11
    54fe:	0d 34       	jge	$+28     	;abs 0x551a
    5500:	00 3c       	jmp	$+2      	;abs 0x5502
    5502:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5506:	0c 5c       	rla	r12		;
    5508:	9c 43 74 4e 	mov	#1,	20084(r12);r3 As==01, 0x4e74
    550c:	00 3c       	jmp	$+2      	;abs 0x550e
    550e:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5512:	1c 53       	inc	r12		;
    5514:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5518:	ef 3f       	jmp	$-32     	;abs 0x54f8
    551a:	92 43 b4 4e 	mov	#1,	&0x4eb4	;r3 As==01
    551e:	94 43 fe ff 	mov	#1,	-2(r4)	;r3 As==01, 0xfffe
    5522:	00 3c       	jmp	$+2      	;abs 0x5524
    5524:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5528:	3c 92       	cmp	#8,	r12	;r2 As==11
    552a:	0d 34       	jge	$+28     	;abs 0x5546
    552c:	00 3c       	jmp	$+2      	;abs 0x552e
    552e:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5532:	0c 5c       	rla	r12		;
    5534:	8c 43 b4 4e 	mov	#0,	20148(r12);r3 As==00, 0x4eb4
    5538:	00 3c       	jmp	$+2      	;abs 0x553a
    553a:	1c 44 fe ff 	mov	-2(r4),	r12	;
    553e:	1c 53       	inc	r12		;
    5540:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5544:	ef 3f       	jmp	$-32     	;abs 0x5524
    5546:	1c 42 04 4b 	mov	&0x4b04,r12	;0x4b04
    554a:	82 4c f6 4e 	mov	r12,	&0x4ef6	;
    554e:	3f 40 6c 4e 	mov	#20076,	r15	;#0x4e6c
    5552:	1c 42 6c 4e 	mov	&0x4e6c,r12	;0x4e6c
    5556:	3c 50 07 00 	add	#7,	r12	;
    555a:	82 4c 6c 4e 	mov	r12,	&0x4e6c	;
    555e:	3e 40 6e 4e 	mov	#20078,	r14	;#0x4e6e
    5562:	2d 43       	mov	#2,	r13	;r3 As==10
    5564:	b0 12 44 74 	call	#29764		;#0x7444
    5568:	3f 40 66 4b 	mov	#19302,	r15	;#0x4b66
    556c:	b0 12 a8 73 	call	#29608		;#0x73a8
    5570:	31 50 1a 00 	add	#26,	r1	;#0x001a
    5574:	34 41       	pop	r4		;
    5576:	30 41       	ret			

00005578 <task_exp>:
    5578:	04 12       	push	r4		;
    557a:	04 41       	mov	r1,	r4	;
    557c:	31 80 06 00 	sub	#6,	r1	;
    5580:	1c 42 f6 4e 	mov	&0x4ef6,r12	;0x4ef6
    5584:	82 4c f4 4e 	mov	r12,	&0x4ef4	;
    5588:	0d 41       	mov	r1,	r13	;
    558a:	8d 4c 02 00 	mov	r12,	2(r13)	;
    558e:	bd 40 b7 44 	mov	#17591,	0(r13)	;#0x44b7
    5592:	00 00 
    5594:	b0 12 64 6e 	call	#28260		;#0x6e64
    5598:	5e 42 f4 4e 	mov.b	&0x4ef4,r14	;0x4ef4
    559c:	5e b3       	bit.b	#1,	r14	;r3 As==01
    559e:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    55a2:	13 24       	jz	$+40     	;abs 0x55ca
    55a4:	00 3c       	jmp	$+2      	;abs 0x55a6
    55a6:	3f 40 f4 4e 	mov	#20212,	r15	;#0x4ef4
    55aa:	1c 42 f4 4e 	mov	&0x4ef4,r12	;0x4ef4
    55ae:	12 c3       	clrc			
    55b0:	0c 10       	rrc	r12		;
    55b2:	82 4c f4 4e 	mov	r12,	&0x4ef4	;
    55b6:	3e 40 f6 4e 	mov	#20214,	r14	;#0x4ef6
    55ba:	2d 43       	mov	#2,	r13	;r3 As==10
    55bc:	b0 12 44 74 	call	#29764		;#0x7444
    55c0:	3f 40 90 4b 	mov	#19344,	r15	;#0x4b90
    55c4:	b0 12 a8 73 	call	#29608		;#0x73a8
    55c8:	12 3c       	jmp	$+38     	;abs 0x55ee
    55ca:	3f 40 f4 4e 	mov	#20212,	r15	;#0x4ef4
    55ce:	1c 42 f4 4e 	mov	&0x4ef4,r12	;0x4ef4
    55d2:	12 c3       	clrc			
    55d4:	0c 10       	rrc	r12		;
    55d6:	82 4c f4 4e 	mov	r12,	&0x4ef4	;
    55da:	3e 40 f6 4e 	mov	#20214,	r14	;#0x4ef6
    55de:	2d 43       	mov	#2,	r13	;r3 As==10
    55e0:	b0 12 44 74 	call	#29764		;#0x7444
    55e4:	3f 40 e4 4b 	mov	#19428,	r15	;#0x4be4
    55e8:	b0 12 a8 73 	call	#29608		;#0x73a8
    55ec:	00 3c       	jmp	$+2      	;abs 0x55ee
    55ee:	31 50 06 00 	add	#6,	r1	;
    55f2:	34 41       	pop	r4		;
    55f4:	30 41       	ret			
	...

000055f8 <task_mult_block>:
    55f8:	04 12       	push	r4		;
    55fa:	04 41       	mov	r1,	r4	;
    55fc:	21 82       	sub	#4,	r1	;r2 As==10
    55fe:	0c 41       	mov	r1,	r12	;
    5600:	bc 40 c3 44 	mov	#17603,	0(r12)	;#0x44c3
    5604:	00 00 
    5606:	b0 12 64 6e 	call	#28260		;#0x6e64
    560a:	b2 40 ba 4b 	mov	#19386,	&0x4ef8	;#0x4bba
    560e:	f8 4e 
    5610:	3c 40 62 4c 	mov	#19554,	r12	;#0x4c62
    5614:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    5618:	0f 4c       	mov	r12,	r15	;
    561a:	b0 12 a8 73 	call	#29608		;#0x73a8
    561e:	21 52       	add	#4,	r1	;r2 As==10
    5620:	34 41       	pop	r4		;
    5622:	30 41       	ret			

00005624 <task_mult_block_get_result>:
    5624:	04 12       	push	r4		;
    5626:	04 41       	mov	r1,	r4	;
    5628:	31 80 16 00 	sub	#22,	r1	;#0x0016
    562c:	1c 42 72 4e 	mov	&0x4e72,r12	;0x4e72
    5630:	82 4c 70 4e 	mov	r12,	&0x4e70	;
    5634:	0c 41       	mov	r1,	r12	;
    5636:	bc 40 d0 44 	mov	#17616,	0(r12)	;#0x44d0
    563a:	00 00 
    563c:	b0 12 64 6e 	call	#28260		;#0x6e64
    5640:	b4 40 07 00 	mov	#7,	-2(r4)	; 0xfffe
    5644:	fe ff 
    5646:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    564a:	00 3c       	jmp	$+2      	;abs 0x564c
    564c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5650:	0c 93       	cmp	#0,	r12	;r3 As==00
    5652:	1e 38       	jl	$+62     	;abs 0x5690
    5654:	00 3c       	jmp	$+2      	;abs 0x5656
    5656:	1c 44 fe ff 	mov	-2(r4),	r12	;
    565a:	0c 5c       	rla	r12		;
    565c:	1d 4c 7a 4f 	mov	20346(r12),r13	;0x04f7a
    5660:	8c 4d b4 4e 	mov	r13,	20148(r12); 0x4eb4
    5664:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5668:	0c 5c       	rla	r12		;
    566a:	1c 4c 7a 4f 	mov	20346(r12),r12	;0x04f7a
    566e:	0d 41       	mov	r1,	r13	;
    5670:	8d 4c 02 00 	mov	r12,	2(r13)	;
    5674:	bd 40 b1 44 	mov	#17585,	0(r13)	;#0x44b1
    5678:	00 00 
    567a:	b0 12 64 6e 	call	#28260		;#0x6e64
    567e:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    5682:	00 3c       	jmp	$+2      	;abs 0x5684
    5684:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5688:	3c 53       	add	#-1,	r12	;r3 As==11
    568a:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    568e:	de 3f       	jmp	$-66     	;abs 0x564c
    5690:	0c 41       	mov	r1,	r12	;
    5692:	bc 40 04 44 	mov	#17412,	0(r12)	;#0x4404
    5696:	00 00 
    5698:	b0 12 64 6e 	call	#28260		;#0x6e64
    569c:	1c 42 f6 4e 	mov	&0x4ef6,r12	;0x4ef6
    56a0:	0c 93       	cmp	#0,	r12	;r3 As==00
    56a2:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    56a6:	0d 24       	jz	$+28     	;abs 0x56c2
    56a8:	00 3c       	jmp	$+2      	;abs 0x56aa
    56aa:	3e 40 72 4e 	mov	#20082,	r14	;#0x4e72
    56ae:	3f 40 70 4e 	mov	#20080,	r15	;#0x4e70
    56b2:	2d 43       	mov	#2,	r13	;r3 As==10
    56b4:	b0 12 44 74 	call	#29764		;#0x7444
    56b8:	3f 40 e4 4b 	mov	#19428,	r15	;#0x4be4
    56bc:	b0 12 a8 73 	call	#29608		;#0x73a8
    56c0:	60 3c       	jmp	$+194    	;abs 0x5782
    56c2:	1c 42 70 4e 	mov	&0x4e70,r12	;0x4e70
    56c6:	0d 41       	mov	r1,	r13	;
    56c8:	8d 4c 02 00 	mov	r12,	2(r13)	;
    56cc:	bd 40 ef 44 	mov	#17647,	0(r13)	;#0x44ef
    56d0:	00 00 
    56d2:	b0 12 64 6e 	call	#28260		;#0x6e64
    56d6:	1c 42 70 4e 	mov	&0x4e70,r12	;0x4e70
    56da:	3c 52       	add	#8,	r12	;r2 As==11
    56dc:	3c 90 11 00 	cmp	#17,	r12	;#0x0011
    56e0:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    56e4:	20 2c       	jc	$+66     	;abs 0x5726
    56e6:	00 3c       	jmp	$+2      	;abs 0x56e8
    56e8:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    56ec:	00 3c       	jmp	$+2      	;abs 0x56ee
    56ee:	1c 44 fe ff 	mov	-2(r4),	r12	;
    56f2:	3c 92       	cmp	#8,	r12	;r2 As==11
    56f4:	17 34       	jge	$+48     	;abs 0x5724
    56f6:	00 3c       	jmp	$+2      	;abs 0x56f8
    56f8:	1c 44 fe ff 	mov	-2(r4),	r12	;
    56fc:	0c 5c       	rla	r12		;
    56fe:	1c 4c 7a 4f 	mov	20346(r12),r12	;0x04f7a
    5702:	1d 42 70 4e 	mov	&0x4e70,r13	;0x4e70
    5706:	0d 5d       	rla	r13		;
    5708:	8d 4c ba 4f 	mov	r12,	20410(r13); 0x4fba
    570c:	1c 42 70 4e 	mov	&0x4e70,r12	;0x4e70
    5710:	1c 53       	inc	r12		;
    5712:	82 4c 70 4e 	mov	r12,	&0x4e70	;
    5716:	00 3c       	jmp	$+2      	;abs 0x5718
    5718:	1c 44 fe ff 	mov	-2(r4),	r12	;
    571c:	1c 53       	inc	r12		;
    571e:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5722:	e5 3f       	jmp	$-52     	;abs 0x56ee
    5724:	11 3c       	jmp	$+36     	;abs 0x5748
    5726:	1c 42 70 4e 	mov	&0x4e70,r12	;0x4e70
    572a:	3c 52       	add	#8,	r12	;r2 As==11
    572c:	0d 41       	mov	r1,	r13	;
    572e:	8d 4c 02 00 	mov	r12,	2(r13)	;
    5732:	bd 40 10 00 	mov	#16,	4(r13)	;#0x0010
    5736:	04 00 
    5738:	bd 40 1a 45 	mov	#17690,	0(r13)	;#0x451a
    573c:	00 00 
    573e:	b0 12 64 6e 	call	#28260		;#0x6e64
    5742:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    5746:	00 3c       	jmp	$+2      	;abs 0x5748
    5748:	3f 40 70 4e 	mov	#20080,	r15	;#0x4e70
    574c:	1c 42 70 4e 	mov	&0x4e70,r12	;0x4e70
    5750:	0d 41       	mov	r1,	r13	;
    5752:	8d 4c 02 00 	mov	r12,	2(r13)	;
    5756:	bd 40 4e 45 	mov	#17742,	0(r13)	;#0x454e
    575a:	00 00 
    575c:	84 4f f2 ff 	mov	r15,	-14(r4)	; 0xfff2
    5760:	b0 12 64 6e 	call	#28260		;#0x6e64
    5764:	3e 40 72 4e 	mov	#20082,	r14	;#0x4e72
    5768:	2d 43       	mov	#2,	r13	;r3 As==10
    576a:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    576e:	84 4f f0 ff 	mov	r15,	-16(r4)	; 0xfff0
    5772:	0f 4c       	mov	r12,	r15	;
    5774:	b0 12 44 74 	call	#29764		;#0x7444
    5778:	3f 40 3c 4b 	mov	#19260,	r15	;#0x4b3c
    577c:	b0 12 a8 73 	call	#29608		;#0x73a8
    5780:	00 3c       	jmp	$+2      	;abs 0x5782
    5782:	31 50 16 00 	add	#22,	r1	;#0x0016
    5786:	34 41       	pop	r4		;
    5788:	30 41       	ret			
	...

0000578c <task_square_base>:
    578c:	04 12       	push	r4		;
    578e:	04 41       	mov	r1,	r4	;
    5790:	21 82       	sub	#4,	r1	;r2 As==10
    5792:	0c 41       	mov	r1,	r12	;
    5794:	bc 40 86 45 	mov	#17798,	0(r12)	;#0x4586
    5798:	00 00 
    579a:	b0 12 64 6e 	call	#28260		;#0x6e64
    579e:	b2 40 0e 4c 	mov	#19470,	&0x4ef8	;#0x4c0e
    57a2:	f8 4e 
    57a4:	3c 40 62 4c 	mov	#19554,	r12	;#0x4c62
    57a8:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    57ac:	0f 4c       	mov	r12,	r15	;
    57ae:	b0 12 a8 73 	call	#29608		;#0x73a8
    57b2:	21 52       	add	#4,	r1	;r2 As==10
    57b4:	34 41       	pop	r4		;
    57b6:	30 41       	ret			

000057b8 <task_square_base_get_result>:
    57b8:	04 12       	push	r4		;
    57ba:	04 41       	mov	r1,	r4	;
    57bc:	31 80 0e 00 	sub	#14,	r1	;#0x000e
    57c0:	0c 41       	mov	r1,	r12	;
    57c2:	bc 40 94 45 	mov	#17812,	0(r12)	;#0x4594
    57c6:	00 00 
    57c8:	b0 12 64 6e 	call	#28260		;#0x6e64
    57cc:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    57d0:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    57d4:	00 3c       	jmp	$+2      	;abs 0x57d6
    57d6:	1c 44 fe ff 	mov	-2(r4),	r12	;
    57da:	3c 92       	cmp	#8,	r12	;r2 As==11
    57dc:	21 34       	jge	$+68     	;abs 0x5820
    57de:	00 3c       	jmp	$+2      	;abs 0x57e0
    57e0:	1c 44 fe ff 	mov	-2(r4),	r12	;
    57e4:	0d 4c       	mov	r12,	r13	;
    57e6:	0d 5d       	rla	r13		;
    57e8:	1d 4d 7a 4f 	mov	20346(r13),r13	;0x04f7a
    57ec:	0e 41       	mov	r1,	r14	;
    57ee:	8e 4d 04 00 	mov	r13,	4(r14)	;
    57f2:	8e 4c 02 00 	mov	r12,	2(r14)	;
    57f6:	be 40 ad 45 	mov	#17837,	0(r14)	;#0x45ad
    57fa:	00 00 
    57fc:	b0 12 64 6e 	call	#28260		;#0x6e64
    5800:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5804:	0c 5c       	rla	r12		;
    5806:	1d 4c 7a 4f 	mov	20346(r12),r13	;0x04f7a
    580a:	8c 4d 74 4e 	mov	r13,	20084(r12); 0x4e74
    580e:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    5812:	00 3c       	jmp	$+2      	;abs 0x5814
    5814:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5818:	1c 53       	inc	r12		;
    581a:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    581e:	db 3f       	jmp	$-72     	;abs 0x57d6
    5820:	3f 40 66 4b 	mov	#19302,	r15	;#0x4b66
    5824:	b0 12 a8 73 	call	#29608		;#0x73a8
    5828:	31 50 0e 00 	add	#14,	r1	;#0x000e
    582c:	34 41       	pop	r4		;
    582e:	30 41       	ret			

00005830 <task_print_cyphertext>:
    5830:	04 12       	push	r4		;
    5832:	04 41       	mov	r1,	r4	;
    5834:	31 80 1a 00 	sub	#26,	r1	;#0x001a
    5838:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    583c:	1c 42 72 4e 	mov	&0x4e72,r12	;0x4e72
    5840:	0d 41       	mov	r1,	r13	;
    5842:	8d 4c 02 00 	mov	r12,	2(r13)	;
    5846:	bd 40 d3 45 	mov	#17875,	0(r13)	;#0x45d3
    584a:	00 00 
    584c:	b0 12 64 6e 	call	#28260		;#0x6e64
    5850:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    5854:	84 4f f0 ff 	mov	r15,	-16(r4)	; 0xfff0
    5858:	00 3c       	jmp	$+2      	;abs 0x585a
    585a:	1c 44 fe ff 	mov	-2(r4),	r12	;
    585e:	1d 42 72 4e 	mov	&0x4e72,r13	;0x4e72
    5862:	0c 9d       	cmp	r13,	r12	;
    5864:	53 2c       	jc	$+168    	;abs 0x590c
    5866:	00 3c       	jmp	$+2      	;abs 0x5868
    5868:	1c 44 fe ff 	mov	-2(r4),	r12	;
    586c:	0c 5c       	rla	r12		;
    586e:	1c 4c ba 4f 	mov	20410(r12),r12	;0x04fba
    5872:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    5876:	0d 41       	mov	r1,	r13	;
    5878:	8d 4c 02 00 	mov	r12,	2(r13)	;
    587c:	bd 40 ee 45 	mov	#17902,	0(r13)	;#0x45ee
    5880:	00 00 
    5882:	b0 12 64 6e 	call	#28260		;#0x6e64
    5886:	1c 44 fe ff 	mov	-2(r4),	r12	;
    588a:	1c 53       	inc	r12		;
    588c:	0d 4c       	mov	r12,	r13	;
    588e:	0d 11       	rra	r13		;
    5890:	0d 11       	rra	r13		;
    5892:	0d 11       	rra	r13		;
    5894:	0d 11       	rra	r13		;
    5896:	0d 11       	rra	r13		;
    5898:	0d 11       	rra	r13		;
    589a:	0d 11       	rra	r13		;
    589c:	0d 11       	rra	r13		;
    589e:	0d 11       	rra	r13		;
    58a0:	0d 11       	rra	r13		;
    58a2:	0d 11       	rra	r13		;
    58a4:	0d 11       	rra	r13		;
    58a6:	0d 11       	rra	r13		;
    58a8:	0d 11       	rra	r13		;
    58aa:	0d 11       	rra	r13		;
    58ac:	12 c3       	clrc			
    58ae:	0d 10       	rrc	r13		;
    58b0:	0d 11       	rra	r13		;
    58b2:	0d 11       	rra	r13		;
    58b4:	0d 11       	rra	r13		;
    58b6:	0d 11       	rra	r13		;
    58b8:	0d 11       	rra	r13		;
    58ba:	0d 11       	rra	r13		;
    58bc:	0d 11       	rra	r13		;
    58be:	0d 11       	rra	r13		;
    58c0:	0d 11       	rra	r13		;
    58c2:	0d 11       	rra	r13		;
    58c4:	0d 11       	rra	r13		;
    58c6:	0d 11       	rra	r13		;
    58c8:	0e 4c       	mov	r12,	r14	;
    58ca:	0e 5d       	add	r13,	r14	;
    58cc:	3e f0 f8 ff 	and	#65528,	r14	;#0xfff8
    58d0:	0c 8e       	sub	r14,	r12	;
    58d2:	0c 93       	cmp	#0,	r12	;r3 As==00
    58d4:	84 4f ee ff 	mov	r15,	-18(r4)	; 0xffee
    58d8:	12 20       	jnz	$+38     	;abs 0x58fe
    58da:	00 3c       	jmp	$+2      	;abs 0x58dc
    58dc:	0c 41       	mov	r1,	r12	;
    58de:	bc 40 ed 44 	mov	#17645,	0(r12)	;#0x44ed
    58e2:	00 00 
    58e4:	b0 12 64 6e 	call	#28260		;#0x6e64
    58e8:	0c 41       	mov	r1,	r12	;
    58ea:	bc 40 04 44 	mov	#17412,	0(r12)	;#0x4404
    58ee:	00 00 
    58f0:	84 4f ec ff 	mov	r15,	-20(r4)	; 0xffec
    58f4:	b0 12 64 6e 	call	#28260		;#0x6e64
    58f8:	84 4f ea ff 	mov	r15,	-22(r4)	; 0xffea
    58fc:	00 3c       	jmp	$+2      	;abs 0x58fe
    58fe:	00 3c       	jmp	$+2      	;abs 0x5900
    5900:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5904:	1c 53       	inc	r12		;
    5906:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    590a:	a7 3f       	jmp	$-176    	;abs 0x585a
    590c:	00 3c       	jmp	$+2      	;abs 0x590e
    590e:	ff 3f       	jmp	$+0      	;abs 0x590e

00005910 <task_mult_mod>:
    5910:	04 12       	push	r4		;
    5912:	04 41       	mov	r1,	r4	;
    5914:	21 82       	sub	#4,	r1	;r2 As==10
    5916:	0c 41       	mov	r1,	r12	;
    5918:	bc 40 f4 45 	mov	#17908,	0(r12)	;#0x45f4
    591c:	00 00 
    591e:	b0 12 64 6e 	call	#28260		;#0x6e64
    5922:	82 43 dc 4f 	mov	#0,	&0x4fdc	;r3 As==00
    5926:	82 43 e0 4f 	mov	#0,	&0x4fe0	;r3 As==00
    592a:	3c 40 8c 4c 	mov	#19596,	r12	;#0x4c8c
    592e:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    5932:	0f 4c       	mov	r12,	r15	;
    5934:	b0 12 a8 73 	call	#29608		;#0x73a8
    5938:	21 52       	add	#4,	r1	;r2 As==10
    593a:	34 41       	pop	r4		;
    593c:	30 41       	ret			
	...

00005940 <task_mult>:
    5940:	04 12       	push	r4		;
    5942:	04 41       	mov	r1,	r4	;
    5944:	0b 12       	push	r11		;
    5946:	31 80 20 00 	sub	#32,	r1	;#0x0020
    594a:	1c 42 e0 4f 	mov	&0x4fe0,r12	;0x4fe0
    594e:	82 4c de 4f 	mov	r12,	&0x4fde	;
    5952:	1c 42 dc 4f 	mov	&0x4fdc,r12	;0x4fdc
    5956:	82 4c da 4f 	mov	r12,	&0x4fda	;
    595a:	1d 42 de 4f 	mov	&0x4fde,r13	;0x4fde
    595e:	0e 41       	mov	r1,	r14	;
    5960:	8e 4d 04 00 	mov	r13,	4(r14)	;
    5964:	8e 4c 02 00 	mov	r12,	2(r14)	;
    5968:	be 40 ff 45 	mov	#17919,	0(r14)	;#0x45ff
    596c:	00 00 
    596e:	b0 12 64 6e 	call	#28260		;#0x6e64
    5972:	1c 42 de 4f 	mov	&0x4fde,r12	;0x4fde
    5976:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    597a:	84 43 f6 ff 	mov	#0,	-10(r4)	;r3 As==00, 0xfff6
    597e:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc
    5982:	84 4f f0 ff 	mov	r15,	-16(r4)	; 0xfff0
    5986:	00 3c       	jmp	$+2      	;abs 0x5988
    5988:	1c 44 fc ff 	mov	-4(r4),	r12	;
    598c:	3c 92       	cmp	#8,	r12	;r2 As==11
    598e:	55 34       	jge	$+172    	;abs 0x5a3a
    5990:	00 3c       	jmp	$+2      	;abs 0x5992
    5992:	1c 42 da 4f 	mov	&0x4fda,r12	;0x4fda
    5996:	1d 44 fc ff 	mov	-4(r4),	r13	;
    599a:	0c 8d       	sub	r13,	r12	;
    599c:	0c 93       	cmp	#0,	r12	;r3 As==00
    599e:	46 28       	jnc	$+142    	;abs 0x5a2c
    59a0:	00 3c       	jmp	$+2      	;abs 0x59a2
    59a2:	1c 42 da 4f 	mov	&0x4fda,r12	;0x4fda
    59a6:	1d 44 fc ff 	mov	-4(r4),	r13	;
    59aa:	0c 8d       	sub	r13,	r12	;
    59ac:	3c 92       	cmp	#8,	r12	;r2 As==11
    59ae:	3e 2c       	jc	$+126    	;abs 0x5a2c
    59b0:	00 3c       	jmp	$+2      	;abs 0x59b2
    59b2:	1c 42 da 4f 	mov	&0x4fda,r12	;0x4fda
    59b6:	1d 44 fc ff 	mov	-4(r4),	r13	;
    59ba:	0c 8d       	sub	r13,	r12	;
    59bc:	0c 5c       	rla	r12		;
    59be:	1c 4c 74 4e 	mov	20084(r12),r12	;0x04e74
    59c2:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    59c6:	1c 44 fc ff 	mov	-4(r4),	r12	;
    59ca:	0c 5c       	rla	r12		;
    59cc:	1c 4c b4 4e 	mov	20148(r12),r12	;0x04eb4
    59d0:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    59d4:	1f 44 fa ff 	mov	-6(r4),	r15	;
    59d8:	0e 4c       	mov	r12,	r14	;
    59da:	b0 12 e0 74 	call	#29920		;#0x74e0
    59de:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    59e2:	5c 44 f5 ff 	mov.b	-11(r4),r12	;0xfffffff5
    59e6:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    59ea:	0d 5c       	add	r12,	r13	;
    59ec:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    59f0:	5c 44 f4 ff 	mov.b	-12(r4),r12	;0xfffffff4
    59f4:	1d 44 f2 ff 	mov	-14(r4),r13	;0xfffffff2
    59f8:	0d 5c       	add	r12,	r13	;
    59fa:	84 4d f2 ff 	mov	r13,	-14(r4)	; 0xfff2
    59fe:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5a02:	1e 44 fa ff 	mov	-6(r4),	r14	;
    5a06:	1f 44 f8 ff 	mov	-8(r4),	r15	;
    5a0a:	0b 41       	mov	r1,	r11	;
    5a0c:	8b 4d 08 00 	mov	r13,	8(r11)	;
    5a10:	8b 4f 06 00 	mov	r15,	6(r11)	;
    5a14:	8b 4e 04 00 	mov	r14,	4(r11)	;
    5a18:	8b 4c 02 00 	mov	r12,	2(r11)	;
    5a1c:	bb 40 19 46 	mov	#17945,	0(r11)	;#0x4619
    5a20:	00 00 
    5a22:	b0 12 64 6e 	call	#28260		;#0x6e64
    5a26:	84 4f ee ff 	mov	r15,	-18(r4)	; 0xffee
    5a2a:	00 3c       	jmp	$+2      	;abs 0x5a2c
    5a2c:	00 3c       	jmp	$+2      	;abs 0x5a2e
    5a2e:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5a32:	1c 53       	inc	r12		;
    5a34:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5a38:	a7 3f       	jmp	$-176    	;abs 0x5988
    5a3a:	5c 44 f3 ff 	mov.b	-13(r4),r12	;0xfffffff3
    5a3e:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    5a42:	0d 5c       	add	r12,	r13	;
    5a44:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    5a48:	5c 44 f2 ff 	mov.b	-14(r4),r12	;0xfffffff2
    5a4c:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    5a50:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    5a54:	0e 41       	mov	r1,	r14	;
    5a56:	8e 4c 04 00 	mov	r12,	4(r14)	;
    5a5a:	8e 4d 02 00 	mov	r13,	2(r14)	;
    5a5e:	be 40 35 46 	mov	#17973,	0(r14)	;#0x4635
    5a62:	00 00 
    5a64:	b0 12 64 6e 	call	#28260		;#0x6e64
    5a68:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    5a6c:	1d 42 da 4f 	mov	&0x4fda,r13	;0x4fda
    5a70:	0d 5d       	rla	r13		;
    5a72:	8d 4c 7a 4f 	mov	r12,	20346(r13); 0x4f7a
    5a76:	c2 43 e2 4f 	mov.b	#0,	&0x4fe2	;r3 As==00
    5a7a:	1c 42 da 4f 	mov	&0x4fda,r12	;0x4fda
    5a7e:	1c 53       	inc	r12		;
    5a80:	82 4c da 4f 	mov	r12,	&0x4fda	;
    5a84:	3c 90 10 00 	cmp	#16,	r12	;#0x0010
    5a88:	84 4f ec ff 	mov	r15,	-20(r4)	; 0xffec
    5a8c:	1c 2c       	jc	$+58     	;abs 0x5ac6
    5a8e:	00 3c       	jmp	$+2      	;abs 0x5a90
    5a90:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    5a94:	82 4c de 4f 	mov	r12,	&0x4fde	;
    5a98:	3f 40 de 4f 	mov	#20446,	r15	;#0x4fde
    5a9c:	3e 40 e0 4f 	mov	#20448,	r14	;#0x4fe0
    5aa0:	2c 43       	mov	#2,	r12	;r3 As==10
    5aa2:	0d 4c       	mov	r12,	r13	;
    5aa4:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    5aa8:	b0 12 44 74 	call	#29764		;#0x7444
    5aac:	3e 40 dc 4f 	mov	#20444,	r14	;#0x4fdc
    5ab0:	3f 40 da 4f 	mov	#20442,	r15	;#0x4fda
    5ab4:	1d 44 ea ff 	mov	-22(r4),r13	;0xffffffea
    5ab8:	b0 12 44 74 	call	#29764		;#0x7444
    5abc:	3f 40 8c 4c 	mov	#19596,	r15	;#0x4c8c
    5ac0:	b0 12 a8 73 	call	#29608		;#0x73a8
    5ac4:	1a 3c       	jmp	$+54     	;abs 0x5afa
    5ac6:	b2 40 b6 4c 	mov	#19638,	&0x4fe4	;#0x4cb6
    5aca:	e4 4f 
    5acc:	3e 40 e0 4f 	mov	#20448,	r14	;#0x4fe0
    5ad0:	3f 40 de 4f 	mov	#20446,	r15	;#0x4fde
    5ad4:	2c 43       	mov	#2,	r12	;r3 As==10
    5ad6:	0d 4c       	mov	r12,	r13	;
    5ad8:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    5adc:	b0 12 44 74 	call	#29764		;#0x7444
    5ae0:	3e 40 dc 4f 	mov	#20444,	r14	;#0x4fdc
    5ae4:	3f 40 da 4f 	mov	#20442,	r15	;#0x4fda
    5ae8:	1d 44 e8 ff 	mov	-24(r4),r13	;0xffffffe8
    5aec:	b0 12 44 74 	call	#29764		;#0x7444
    5af0:	3f 40 30 4e 	mov	#20016,	r15	;#0x4e30
    5af4:	b0 12 a8 73 	call	#29608		;#0x73a8
    5af8:	00 3c       	jmp	$+2      	;abs 0x5afa
    5afa:	31 50 20 00 	add	#32,	r1	;#0x0020
    5afe:	3b 41       	pop	r11		;
    5b00:	34 41       	pop	r4		;
    5b02:	30 41       	ret			

00005b04 <task_reduce_digits>:
    5b04:	04 12       	push	r4		;
    5b06:	04 41       	mov	r1,	r4	;
    5b08:	31 80 16 00 	sub	#22,	r1	;#0x0016
    5b0c:	0c 41       	mov	r1,	r12	;
    5b0e:	bc 40 47 46 	mov	#17991,	0(r12)	;#0x4647
    5b12:	00 00 
    5b14:	b0 12 64 6e 	call	#28260		;#0x6e64
    5b18:	b4 40 10 00 	mov	#16,	-2(r4)	;#0x0010, 0xfffe
    5b1c:	fe ff 
    5b1e:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    5b22:	00 3c       	jmp	$+2      	;abs 0x5b24
    5b24:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5b28:	3c 53       	add	#-1,	r12	;r3 As==11
    5b2a:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    5b2e:	0d 4c       	mov	r12,	r13	;
    5b30:	0d 5d       	rla	r13		;
    5b32:	1d 4d 7a 4f 	mov	20346(r13),r13	;0x04f7a
    5b36:	0e 41       	mov	r1,	r14	;
    5b38:	8e 4d 04 00 	mov	r13,	4(r14)	;
    5b3c:	8e 4c 02 00 	mov	r12,	2(r14)	;
    5b40:	be 40 58 46 	mov	#18008,	0(r14)	;#0x4658
    5b44:	00 00 
    5b46:	b0 12 64 6e 	call	#28260		;#0x6e64
    5b4a:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    5b4e:	00 3c       	jmp	$+2      	;abs 0x5b50
    5b50:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5b54:	0c 5c       	rla	r12		;
    5b56:	1c 4c 7a 4f 	mov	20346(r12),r12	;0x04f7a
    5b5a:	4d 43       	clr.b	r13		;
    5b5c:	0c 93       	cmp	#0,	r12	;r3 As==00
    5b5e:	c4 4d f9 ff 	mov.b	r13,	-7(r4)	; 0xfff9
    5b62:	15 20       	jnz	$+44     	;abs 0x5b8e
    5b64:	00 3c       	jmp	$+2      	;abs 0x5b66
    5b66:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5b6a:	0d 43       	clr	r13		;
    5b6c:	1e 43       	mov	#1,	r14	;r3 As==01
    5b6e:	1c 93       	cmp	#1,	r12	;r3 As==01
    5b70:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    5b74:	84 4e f4 ff 	mov	r14,	-12(r4)	; 0xfff4
    5b78:	04 34       	jge	$+10     	;abs 0x5b82
    5b7a:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    5b7e:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    5b82:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    5b86:	4d 4c       	mov.b	r12,	r13	;
    5b88:	c4 4d f9 ff 	mov.b	r13,	-7(r4)	; 0xfff9
    5b8c:	00 3c       	jmp	$+2      	;abs 0x5b8e
    5b8e:	5c 44 f9 ff 	mov.b	-7(r4),	r12	;
    5b92:	4d 4c       	mov.b	r12,	r13	;
    5b94:	1d b3       	bit	#1,	r13	;r3 As==01
    5b96:	c6 23       	jnz	$-114    	;abs 0x5b24
    5b98:	00 3c       	jmp	$+2      	;abs 0x5b9a
    5b9a:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5b9e:	0c 5c       	rla	r12		;
    5ba0:	1c 4c 7a 4f 	mov	20346(r12),r12	;0x04f7a
    5ba4:	0c 93       	cmp	#0,	r12	;r3 As==00
    5ba6:	0f 20       	jnz	$+32     	;abs 0x5bc6
    5ba8:	00 3c       	jmp	$+2      	;abs 0x5baa
    5baa:	0c 41       	mov	r1,	r12	;
    5bac:	bc 40 72 46 	mov	#18034,	0(r12)	;#0x4672
    5bb0:	00 00 
    5bb2:	b0 12 64 6e 	call	#28260		;#0x6e64
    5bb6:	3c 40 12 4b 	mov	#19218,	r12	;#0x4b12
    5bba:	84 4f f2 ff 	mov	r15,	-14(r4)	; 0xfff2
    5bbe:	0f 4c       	mov	r12,	r15	;
    5bc0:	b0 12 a8 73 	call	#29608		;#0x73a8
    5bc4:	00 3c       	jmp	$+2      	;abs 0x5bc6
    5bc6:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5bca:	0d 41       	mov	r1,	r13	;
    5bcc:	8d 4c 02 00 	mov	r12,	2(r13)	;
    5bd0:	bd 40 a3 46 	mov	#18083,	0(r13)	;#0x46a3
    5bd4:	00 00 
    5bd6:	b0 12 64 6e 	call	#28260		;#0x6e64
    5bda:	1c 44 fe ff 	mov	-2(r4),	r12	;
    5bde:	82 4c e8 4f 	mov	r12,	&0x4fe8	;
    5be2:	3c 40 e0 4c 	mov	#19680,	r12	;#0x4ce0
    5be6:	84 4f f0 ff 	mov	r15,	-16(r4)	; 0xfff0
    5bea:	0f 4c       	mov	r12,	r15	;
    5bec:	b0 12 a8 73 	call	#29608		;#0x73a8
    5bf0:	31 50 16 00 	add	#22,	r1	;#0x0016
    5bf4:	34 41       	pop	r4		;
    5bf6:	30 41       	ret			

00005bf8 <task_reduce_normalizable>:
    5bf8:	04 12       	push	r4		;
    5bfa:	04 41       	mov	r1,	r4	;
    5bfc:	0b 12       	push	r11		;
    5bfe:	31 80 1e 00 	sub	#30,	r1	;#0x001e
    5c02:	d4 43 f5 ff 	mov.b	#1,	-11(r4)	;r3 As==01, 0xfff5
    5c06:	0c 41       	mov	r1,	r12	;
    5c08:	bc 40 bc 46 	mov	#18108,	0(r12)	;#0x46bc
    5c0c:	00 00 
    5c0e:	b0 12 64 6e 	call	#28260		;#0x6e64
    5c12:	1c 42 e8 4f 	mov	&0x4fe8,r12	;0x4fe8
    5c16:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    5c1a:	1c 42 e8 4f 	mov	&0x4fe8,r12	;0x4fe8
    5c1e:	3c 50 f9 ff 	add	#65529,	r12	;#0xfff9
    5c22:	82 4c ea 4f 	mov	r12,	&0x4fea	;
    5c26:	1d 42 e8 4f 	mov	&0x4fe8,r13	;0x4fe8
    5c2a:	0e 41       	mov	r1,	r14	;
    5c2c:	8e 4c 04 00 	mov	r12,	4(r14)	;
    5c30:	8e 4d 02 00 	mov	r13,	2(r14)	;
    5c34:	be 40 d3 46 	mov	#18131,	0(r14)	;#0x46d3
    5c38:	00 00 
    5c3a:	84 4f f2 ff 	mov	r15,	-14(r4)	; 0xfff2
    5c3e:	b0 12 64 6e 	call	#28260		;#0x6e64
    5c42:	1c 42 e8 4f 	mov	&0x4fe8,r12	;0x4fe8
    5c46:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5c4a:	84 4f f0 ff 	mov	r15,	-16(r4)	; 0xfff0
    5c4e:	00 3c       	jmp	$+2      	;abs 0x5c50
    5c50:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5c54:	0c 93       	cmp	#0,	r12	;r3 As==00
    5c56:	49 38       	jl	$+148    	;abs 0x5cea
    5c58:	00 3c       	jmp	$+2      	;abs 0x5c5a
    5c5a:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5c5e:	0d 4c       	mov	r12,	r13	;
    5c60:	0d 5d       	rla	r13		;
    5c62:	1d 4d 7a 4f 	mov	20346(r13),r13	;0x04f7a
    5c66:	1e 42 ea 4f 	mov	&0x4fea,r14	;0x4fea
    5c6a:	0f 4c       	mov	r12,	r15	;
    5c6c:	0f 8e       	sub	r14,	r15	;
    5c6e:	0e 4f       	mov	r15,	r14	;
    5c70:	0e 5e       	rla	r14		;
    5c72:	1e 4e 5a 4e 	mov	20058(r14),r14	;0x04e5a
    5c76:	0b 41       	mov	r1,	r11	;
    5c78:	8b 4e 08 00 	mov	r14,	8(r11)	;
    5c7c:	8b 4f 06 00 	mov	r15,	6(r11)	;
    5c80:	8b 4d 04 00 	mov	r13,	4(r11)	;
    5c84:	8b 4c 02 00 	mov	r12,	2(r11)	;
    5c88:	bb 40 fa 46 	mov	#18170,	0(r11)	;#0x46fa
    5c8c:	00 00 
    5c8e:	b0 12 64 6e 	call	#28260		;#0x6e64
    5c92:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5c96:	0d 4c       	mov	r12,	r13	;
    5c98:	0d 5d       	rla	r13		;
    5c9a:	1d 4d 7a 4f 	mov	20346(r13),r13	;0x04f7a
    5c9e:	1e 42 ea 4f 	mov	&0x4fea,r14	;0x4fea
    5ca2:	0c 8e       	sub	r14,	r12	;
    5ca4:	0c 5c       	rla	r12		;
    5ca6:	1c 4c 5a 4e 	mov	20058(r12),r12	;0x04e5a
    5caa:	0c 9d       	cmp	r13,	r12	;
    5cac:	84 4f ee ff 	mov	r15,	-18(r4)	; 0xffee
    5cb0:	02 2c       	jc	$+6      	;abs 0x5cb6
    5cb2:	00 3c       	jmp	$+2      	;abs 0x5cb4
    5cb4:	1a 3c       	jmp	$+54     	;abs 0x5cea
    5cb6:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5cba:	0d 4c       	mov	r12,	r13	;
    5cbc:	0d 5d       	rla	r13		;
    5cbe:	1d 4d 7a 4f 	mov	20346(r13),r13	;0x04f7a
    5cc2:	1e 42 ea 4f 	mov	&0x4fea,r14	;0x4fea
    5cc6:	0c 8e       	sub	r14,	r12	;
    5cc8:	0c 5c       	rla	r12		;
    5cca:	1c 4c 5a 4e 	mov	20058(r12),r12	;0x04e5a
    5cce:	0d 9c       	cmp	r12,	r13	;
    5cd0:	04 2c       	jc	$+10     	;abs 0x5cda
    5cd2:	00 3c       	jmp	$+2      	;abs 0x5cd4
    5cd4:	c4 43 f5 ff 	mov.b	#0,	-11(r4)	;r3 As==00, 0xfff5
    5cd8:	08 3c       	jmp	$+18     	;abs 0x5cea
    5cda:	00 3c       	jmp	$+2      	;abs 0x5cdc
    5cdc:	00 3c       	jmp	$+2      	;abs 0x5cde
    5cde:	1c 44 fc ff 	mov	-4(r4),	r12	;
    5ce2:	3c 53       	add	#-1,	r12	;r3 As==11
    5ce4:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    5ce8:	b3 3f       	jmp	$-152    	;abs 0x5c50
    5cea:	5c 44 f5 ff 	mov.b	-11(r4),r12	;0xfffffff5
    5cee:	1c b3       	bit	#1,	r12	;r3 As==01
    5cf0:	15 20       	jnz	$+44     	;abs 0x5d1c
    5cf2:	00 3c       	jmp	$+2      	;abs 0x5cf4
    5cf4:	1c 42 e8 4f 	mov	&0x4fe8,r12	;0x4fe8
    5cf8:	3c 90 07 00 	cmp	#7,	r12	;
    5cfc:	0f 20       	jnz	$+32     	;abs 0x5d1c
    5cfe:	00 3c       	jmp	$+2      	;abs 0x5d00
    5d00:	0c 41       	mov	r1,	r12	;
    5d02:	bc 40 1c 47 	mov	#18204,	0(r12)	;#0x471c
    5d06:	00 00 
    5d08:	b0 12 64 6e 	call	#28260		;#0x6e64
    5d0c:	1c 42 f8 4e 	mov	&0x4ef8,r12	;0x4ef8
    5d10:	84 4f ec ff 	mov	r15,	-20(r4)	; 0xffec
    5d14:	0f 4c       	mov	r12,	r15	;
    5d16:	b0 12 a8 73 	call	#29608		;#0x73a8
    5d1a:	00 3c       	jmp	$+2      	;abs 0x5d1c
    5d1c:	5c 44 f5 ff 	mov.b	-11(r4),r12	;0xfffffff5
    5d20:	1c f3       	and	#1,	r12	;r3 As==01
    5d22:	0d 41       	mov	r1,	r13	;
    5d24:	8d 4c 02 00 	mov	r12,	2(r13)	;
    5d28:	bd 40 56 47 	mov	#18262,	0(r13)	;#0x4756
    5d2c:	00 00 
    5d2e:	b0 12 64 6e 	call	#28260		;#0x6e64
    5d32:	5c 44 f5 ff 	mov.b	-11(r4),r12	;0xfffffff5
    5d36:	1c b3       	bit	#1,	r12	;r3 As==01
    5d38:	84 4f ea ff 	mov	r15,	-22(r4)	; 0xffea
    5d3c:	06 24       	jz	$+14     	;abs 0x5d4a
    5d3e:	00 3c       	jmp	$+2      	;abs 0x5d40
    5d40:	3f 40 0a 4d 	mov	#19722,	r15	;#0x4d0a
    5d44:	b0 12 a8 73 	call	#29608		;#0x73a8
    5d48:	05 3c       	jmp	$+12     	;abs 0x5d54
    5d4a:	3f 40 34 4d 	mov	#19764,	r15	;#0x4d34
    5d4e:	b0 12 a8 73 	call	#29608		;#0x73a8
    5d52:	00 3c       	jmp	$+2      	;abs 0x5d54
    5d54:	31 50 1e 00 	add	#30,	r1	;#0x001e
    5d58:	3b 41       	pop	r11		;
    5d5a:	34 41       	pop	r4		;
    5d5c:	30 41       	ret			
	...

00005d60 <task_reduce_normalize>:
    5d60:	04 12       	push	r4		;
    5d62:	04 41       	mov	r1,	r4	;
    5d64:	0b 12       	push	r11		;
    5d66:	0a 12       	push	r10		;
    5d68:	09 12       	push	r9		;
    5d6a:	31 80 2a 00 	sub	#42,	r1	;#0x002a
    5d6e:	0c 41       	mov	r1,	r12	;
    5d70:	bc 40 69 47 	mov	#18281,	0(r12)	;#0x4769
    5d74:	00 00 
    5d76:	b0 12 64 6e 	call	#28260		;#0x6e64
    5d7a:	c2 43 e2 4f 	mov.b	#0,	&0x4fe2	;r3 As==00
    5d7e:	84 43 f0 ff 	mov	#0,	-16(r4)	;r3 As==00, 0xfff0
    5d82:	84 43 ee ff 	mov	#0,	-18(r4)	;r3 As==00, 0xffee
    5d86:	84 4f ec ff 	mov	r15,	-20(r4)	; 0xffec
    5d8a:	00 3c       	jmp	$+2      	;abs 0x5d8c
    5d8c:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    5d90:	3c 92       	cmp	#8,	r12	;r2 As==11
    5d92:	9b 34       	jge	$+312    	;abs 0x5eca
    5d94:	00 3c       	jmp	$+2      	;abs 0x5d96
    5d96:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    5d9a:	1d 42 ea 4f 	mov	&0x4fea,r13	;0x4fea
    5d9e:	0c 5d       	add	r13,	r12	;
    5da0:	0d 4c       	mov	r12,	r13	;
    5da2:	0d 5d       	rla	r13		;
    5da4:	1d 4d 3a 4f 	mov	20282(r13),r13	;0x04f3a
    5da8:	1e 42 44 51 	mov	&0x5144,r14	;0x5144
    5dac:	0d 9e       	cmp	r14,	r13	;
    5dae:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    5db2:	09 24       	jz	$+20     	;abs 0x5dc6
    5db4:	00 3c       	jmp	$+2      	;abs 0x5db6
    5db6:	1c 44 ea ff 	mov	-22(r4),r12	;0xffffffea
    5dba:	0c 5c       	rla	r12		;
    5dbc:	1d 4c 7a 4f 	mov	20346(r12),r13	;0x04f7a
    5dc0:	8c 4d fa 4e 	mov	r13,	20218(r12); 0x4efa
    5dc4:	00 3c       	jmp	$+2      	;abs 0x5dc6
    5dc6:	1c 44 ea ff 	mov	-22(r4),r12	;0xffffffea
    5dca:	0c 5c       	rla	r12		;
    5dcc:	1c 4c fa 4e 	mov	20218(r12),r12	;0x04efa
    5dd0:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5dd4:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    5dd8:	0c 5c       	rla	r12		;
    5dda:	1c 4c 5a 4e 	mov	20058(r12),r12	;0x04e5a
    5dde:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    5de2:	1d 44 f0 ff 	mov	-16(r4),r13	;0xfffffff0
    5de6:	0c 5d       	add	r13,	r12	;
    5de8:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    5dec:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    5df0:	0d 9c       	cmp	r12,	r13	;
    5df2:	0a 2c       	jc	$+22     	;abs 0x5e08
    5df4:	00 3c       	jmp	$+2      	;abs 0x5df6
    5df6:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    5dfa:	3c 50 00 01 	add	#256,	r12	;#0x0100
    5dfe:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    5e02:	94 43 f0 ff 	mov	#1,	-16(r4)	;r3 As==01, 0xfff0
    5e06:	03 3c       	jmp	$+8      	;abs 0x5e0e
    5e08:	84 43 f0 ff 	mov	#0,	-16(r4)	;r3 As==00, 0xfff0
    5e0c:	00 3c       	jmp	$+2      	;abs 0x5e0e
    5e0e:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    5e12:	1d 44 f2 ff 	mov	-14(r4),r13	;0xfffffff2
    5e16:	0c 8d       	sub	r13,	r12	;
    5e18:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    5e1c:	1d 44 ee ff 	mov	-18(r4),r13	;0xffffffee
    5e20:	1e 42 ea 4f 	mov	&0x4fea,r14	;0x4fea
    5e24:	0f 4d       	mov	r13,	r15	;
    5e26:	0f 5e       	add	r14,	r15	;
    5e28:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    5e2c:	1b 44 f6 ff 	mov	-10(r4),r11	;0xfffffff6
    5e30:	1a 44 f0 ff 	mov	-16(r4),r10	;0xfffffff0
    5e34:	09 41       	mov	r1,	r9	;
    5e36:	89 4c 0c 00 	mov	r12,	12(r9)	; 0x000c
    5e3a:	89 4a 0a 00 	mov	r10,	10(r9)	; 0x000a
    5e3e:	89 4b 08 00 	mov	r11,	8(r9)	;
    5e42:	89 4d 06 00 	mov	r13,	6(r9)	;
    5e46:	89 4e 04 00 	mov	r14,	4(r9)	;
    5e4a:	89 4f 02 00 	mov	r15,	2(r9)	;
    5e4e:	b9 40 75 47 	mov	#18293,	0(r9)	;#0x4775
    5e52:	00 00 
    5e54:	b0 12 64 6e 	call	#28260		;#0x6e64
    5e58:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    5e5c:	1d 44 ee ff 	mov	-18(r4),r13	;0xffffffee
    5e60:	1e 42 ea 4f 	mov	&0x4fea,r14	;0x4fea
    5e64:	0d 5e       	add	r14,	r13	;
    5e66:	0d 5d       	rla	r13		;
    5e68:	0e 4d       	mov	r13,	r14	;
    5e6a:	3e 50 7a 4f 	add	#20346,	r14	;#0x4f7a
    5e6e:	0b 4d       	mov	r13,	r11	;
    5e70:	3b 50 fa 4e 	add	#20218,	r11	;#0x4efa
    5e74:	1a 42 44 51 	mov	&0x5144,r10	;0x5144
    5e78:	8d 4c fa 4e 	mov	r12,	20218(r13); 0x4efa
    5e7c:	0c 4d       	mov	r13,	r12	;
    5e7e:	3c 50 3a 4f 	add	#20282,	r12	;#0x4f3a
    5e82:	1d 4d 3a 4f 	mov	20282(r13),r13	;0x04f3a
    5e86:	0d 9a       	cmp	r10,	r13	;
    5e88:	84 4f e8 ff 	mov	r15,	-24(r4)	; 0xffe8
    5e8c:	84 4a e6 ff 	mov	r10,	-26(r4)	; 0xffe6
    5e90:	84 4c e4 ff 	mov	r12,	-28(r4)	; 0xffe4
    5e94:	84 4e e2 ff 	mov	r14,	-30(r4)	; 0xffe2
    5e98:	84 4b e0 ff 	mov	r11,	-32(r4)	; 0xffe0
    5e9c:	0f 24       	jz	$+32     	;abs 0x5ebc
    5e9e:	00 3c       	jmp	$+2      	;abs 0x5ea0
    5ea0:	2d 43       	mov	#2,	r13	;r3 As==10
    5ea2:	1f 44 e0 ff 	mov	-32(r4),r15	;0xffffffe0
    5ea6:	1e 44 e2 ff 	mov	-30(r4),r14	;0xffffffe2
    5eaa:	b0 12 44 74 	call	#29764		;#0x7444
    5eae:	1d 44 e4 ff 	mov	-28(r4),r13	;0xffffffe4
    5eb2:	1e 44 e6 ff 	mov	-26(r4),r14	;0xffffffe6
    5eb6:	8d 4e 00 00 	mov	r14,	0(r13)	;
    5eba:	00 3c       	jmp	$+2      	;abs 0x5ebc
    5ebc:	00 3c       	jmp	$+2      	;abs 0x5ebe
    5ebe:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    5ec2:	1c 53       	inc	r12		;
    5ec4:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    5ec8:	61 3f       	jmp	$-316    	;abs 0x5d8c
    5eca:	1c 42 ea 4f 	mov	&0x4fea,r12	;0x4fea
    5ece:	0c 93       	cmp	#0,	r12	;r3 As==00
    5ed0:	05 24       	jz	$+12     	;abs 0x5edc
    5ed2:	00 3c       	jmp	$+2      	;abs 0x5ed4
    5ed4:	b2 40 34 4d 	mov	#19764,	&0x4fe4	;#0x4d34
    5ed8:	e4 4f 
    5eda:	0d 3c       	jmp	$+28     	;abs 0x5ef6
    5edc:	0c 41       	mov	r1,	r12	;
    5ede:	bc 40 9e 47 	mov	#18334,	0(r12)	;#0x479e
    5ee2:	00 00 
    5ee4:	b0 12 64 6e 	call	#28260		;#0x6e64
    5ee8:	1c 42 f8 4e 	mov	&0x4ef8,r12	;0x4ef8
    5eec:	82 4c e4 4f 	mov	r12,	&0x4fe4	;
    5ef0:	84 4f de ff 	mov	r15,	-34(r4)	; 0xffde
    5ef4:	00 3c       	jmp	$+2      	;abs 0x5ef6
    5ef6:	3f 40 30 4e 	mov	#20016,	r15	;#0x4e30
    5efa:	b0 12 a8 73 	call	#29608		;#0x73a8
    5efe:	31 50 2a 00 	add	#42,	r1	;#0x002a
    5f02:	39 41       	pop	r9		;
    5f04:	3a 41       	pop	r10		;
    5f06:	3b 41       	pop	r11		;
    5f08:	34 41       	pop	r4		;
    5f0a:	30 41       	ret			

00005f0c <task_reduce_n_divisor>:
    5f0c:	04 12       	push	r4		;
    5f0e:	04 41       	mov	r1,	r4	;
    5f10:	0b 12       	push	r11		;
    5f12:	31 80 0c 00 	sub	#12,	r1	;#0x000c
    5f16:	0c 41       	mov	r1,	r12	;
    5f18:	bc 40 d7 47 	mov	#18391,	0(r12)	;#0x47d7
    5f1c:	00 00 
    5f1e:	b0 12 64 6e 	call	#28260		;#0x6e64
    5f22:	1c 42 68 4e 	mov	&0x4e68,r12	;0x4e68
    5f26:	0c 5c       	rla	r12		;
    5f28:	0c 5c       	rla	r12		;
    5f2a:	0c 5c       	rla	r12		;
    5f2c:	0c 5c       	rla	r12		;
    5f2e:	0c 5c       	rla	r12		;
    5f30:	0c 5c       	rla	r12		;
    5f32:	0c 5c       	rla	r12		;
    5f34:	0c 5c       	rla	r12		;
    5f36:	1d 42 66 4e 	mov	&0x4e66,r13	;0x4e66
    5f3a:	0c 5d       	add	r13,	r12	;
    5f3c:	82 4c ec 4f 	mov	r12,	&0x4fec	;
    5f40:	1d 42 68 4e 	mov	&0x4e68,r13	;0x4e68
    5f44:	1e 42 66 4e 	mov	&0x4e66,r14	;0x4e66
    5f48:	0b 41       	mov	r1,	r11	;
    5f4a:	8b 4c 06 00 	mov	r12,	6(r11)	;
    5f4e:	8b 4e 04 00 	mov	r14,	4(r11)	;
    5f52:	8b 4d 02 00 	mov	r13,	2(r11)	;
    5f56:	bb 40 eb 47 	mov	#18411,	0(r11)	;#0x47eb
    5f5a:	00 00 
    5f5c:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    5f60:	b0 12 64 6e 	call	#28260		;#0x6e64
    5f64:	3c 40 5e 4d 	mov	#19806,	r12	;#0x4d5e
    5f68:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    5f6c:	0f 4c       	mov	r12,	r15	;
    5f6e:	b0 12 a8 73 	call	#29608		;#0x73a8
    5f72:	31 50 0c 00 	add	#12,	r1	;#0x000c
    5f76:	3b 41       	pop	r11		;
    5f78:	34 41       	pop	r4		;
    5f7a:	30 41       	ret			

00005f7c <task_reduce_quotient>:
    5f7c:	04 12       	push	r4		;
    5f7e:	04 41       	mov	r1,	r4	;
    5f80:	0b 12       	push	r11		;
    5f82:	0a 12       	push	r10		;
    5f84:	09 12       	push	r9		;
    5f86:	31 80 36 00 	sub	#54,	r1	;#0x0036
    5f8a:	1c 42 f0 4f 	mov	&0x4ff0,r12	;0x4ff0
    5f8e:	82 4c ee 4f 	mov	r12,	&0x4fee	;
    5f92:	1c 42 e8 4f 	mov	&0x4fe8,r12	;0x4fe8
    5f96:	82 4c e6 4f 	mov	r12,	&0x4fe6	;
    5f9a:	0d 41       	mov	r1,	r13	;
    5f9c:	8d 4c 02 00 	mov	r12,	2(r13)	;
    5fa0:	bd 40 19 48 	mov	#18457,	0(r13)	;#0x4819
    5fa4:	00 00 
    5fa6:	b0 12 64 6e 	call	#28260		;#0x6e64
    5faa:	1c 42 68 4e 	mov	&0x4e68,r12	;0x4e68
    5fae:	1d 42 e6 4f 	mov	&0x4fe6,r13	;0x4fe6
    5fb2:	0d 5d       	rla	r13		;
    5fb4:	1d 4d 7a 4f 	mov	20346(r13),r13	;0x04f7a
    5fb8:	0e 41       	mov	r1,	r14	;
    5fba:	8e 4d 04 00 	mov	r13,	4(r14)	;
    5fbe:	8e 4c 02 00 	mov	r12,	2(r14)	;
    5fc2:	be 40 32 48 	mov	#18482,	0(r14)	;#0x4832
    5fc6:	00 00 
    5fc8:	84 4f ea ff 	mov	r15,	-22(r4)	; 0xffea
    5fcc:	b0 12 64 6e 	call	#28260		;#0x6e64
    5fd0:	1c 42 e6 4f 	mov	&0x4fe6,r12	;0x4fe6
    5fd4:	0c 5c       	rla	r12		;
    5fd6:	1c 4c 7a 4f 	mov	20346(r12),r12	;0x04f7a
    5fda:	1d 42 68 4e 	mov	&0x4e68,r13	;0x4e68
    5fde:	0c 9d       	cmp	r13,	r12	;
    5fe0:	84 4f e8 ff 	mov	r15,	-24(r4)	; 0xffe8
    5fe4:	05 20       	jnz	$+12     	;abs 0x5ff0
    5fe6:	00 3c       	jmp	$+2      	;abs 0x5fe8
    5fe8:	b2 40 ff 00 	mov	#255,	&0x4fee	;#0x00ff
    5fec:	ee 4f 
    5fee:	18 3c       	jmp	$+50     	;abs 0x6020
    5ff0:	1c 42 e6 4f 	mov	&0x4fe6,r12	;0x4fe6
    5ff4:	0c 5c       	rla	r12		;
    5ff6:	1d 4c 7a 4f 	mov	20346(r12),r13	;0x04f7a
    5ffa:	0d 5d       	rla	r13		;
    5ffc:	0d 5d       	rla	r13		;
    5ffe:	0d 5d       	rla	r13		;
    6000:	0d 5d       	rla	r13		;
    6002:	0d 5d       	rla	r13		;
    6004:	0d 5d       	rla	r13		;
    6006:	0d 5d       	rla	r13		;
    6008:	0d 5d       	rla	r13		;
    600a:	1c 4c 78 4f 	mov	20344(r12),r12	;0x04f78
    600e:	0d 5c       	add	r12,	r13	;
    6010:	1e 42 68 4e 	mov	&0x4e68,r14	;0x4e68
    6014:	0f 4d       	mov	r13,	r15	;
    6016:	b0 12 bc 6d 	call	#28092		;#0x6dbc
    601a:	82 4f ee 4f 	mov	r15,	&0x4fee	;
    601e:	00 3c       	jmp	$+2      	;abs 0x6020
    6020:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6024:	0d 41       	mov	r1,	r13	;
    6026:	8d 4c 02 00 	mov	r12,	2(r13)	;
    602a:	bd 40 55 48 	mov	#18517,	0(r13)	;#0x4855
    602e:	00 00 
    6030:	b0 12 64 6e 	call	#28260		;#0x6e64
    6034:	1c 42 e6 4f 	mov	&0x4fe6,r12	;0x4fe6
    6038:	0c 5c       	rla	r12		;
    603a:	1d 4c 7a 4f 	mov	20346(r12),r13	;0x04f7a
    603e:	1e 4c 78 4f 	mov	20344(r12),r14	;0x04f78
    6042:	0e 5e       	rla	r14		;
    6044:	0e 5e       	rla	r14		;
    6046:	0e 5e       	rla	r14		;
    6048:	0e 5e       	rla	r14		;
    604a:	0e 5e       	rla	r14		;
    604c:	0e 5e       	rla	r14		;
    604e:	0e 5e       	rla	r14		;
    6050:	0e 5e       	rla	r14		;
    6052:	1c 4c 76 4f 	mov	20342(r12),r12	;0x04f76
    6056:	0e 5c       	add	r12,	r14	;
    6058:	0d 63       	adc	r13		;
    605a:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    605e:	84 4e ec ff 	mov	r14,	-20(r4)	; 0xffec
    6062:	1c 42 e6 4f 	mov	&0x4fe6,r12	;0x4fe6
    6066:	0c 5c       	rla	r12		;
    6068:	1b 4c 7a 4f 	mov	20346(r12),r11	;0x04f7a
    606c:	1a 4c 78 4f 	mov	20344(r12),r10	;0x04f78
    6070:	1c 4c 76 4f 	mov	20342(r12),r12	;0x04f76
    6074:	09 41       	mov	r1,	r9	;
    6076:	89 4e 0a 00 	mov	r14,	10(r9)	; 0x000a
    607a:	89 4d 08 00 	mov	r13,	8(r9)	;
    607e:	89 4c 06 00 	mov	r12,	6(r9)	;
    6082:	89 4a 04 00 	mov	r10,	4(r9)	;
    6086:	89 4b 02 00 	mov	r11,	2(r9)	;
    608a:	b9 40 6f 48 	mov	#18543,	0(r9)	;#0x486f
    608e:	00 00 
    6090:	84 4f e6 ff 	mov	r15,	-26(r4)	; 0xffe6
    6094:	b0 12 64 6e 	call	#28260		;#0x6e64
    6098:	1c 42 ec 4f 	mov	&0x4fec,r12	;0x4fec
    609c:	1d 42 ee 4f 	mov	&0x4fee,r13	;0x4fee
    60a0:	0e 41       	mov	r1,	r14	;
    60a2:	8e 4d 04 00 	mov	r13,	4(r14)	;
    60a6:	8e 4c 02 00 	mov	r12,	2(r14)	;
    60aa:	be 40 a8 48 	mov	#18600,	0(r14)	;#0x48a8
    60ae:	00 00 
    60b0:	84 4f e4 ff 	mov	r15,	-28(r4)	; 0xffe4
    60b4:	b0 12 64 6e 	call	#28260		;#0x6e64
    60b8:	1c 42 ee 4f 	mov	&0x4fee,r12	;0x4fee
    60bc:	1c 53       	inc	r12		;
    60be:	82 4c ee 4f 	mov	r12,	&0x4fee	;
    60c2:	84 4f e2 ff 	mov	r15,	-30(r4)	; 0xffe2
    60c6:	00 3c       	jmp	$+2      	;abs 0x60c8
    60c8:	1c 42 ee 4f 	mov	&0x4fee,r12	;0x4fee
    60cc:	3c 53       	add	#-1,	r12	;r3 As==11
    60ce:	82 4c ee 4f 	mov	r12,	&0x4fee	;
    60d2:	1f 42 ec 4f 	mov	&0x4fec,r15	;0x4fec
    60d6:	0e 4c       	mov	r12,	r14	;
    60d8:	b0 12 44 6a 	call	#27204		;#0x6a44
    60dc:	84 4f f2 ff 	mov	r15,	-14(r4)	; 0xfff2
    60e0:	84 4e f0 ff 	mov	r14,	-16(r4)	; 0xfff0
    60e4:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    60e8:	0e 41       	mov	r1,	r14	;
    60ea:	8e 4c 02 00 	mov	r12,	2(r14)	;
    60ee:	be 40 cb 48 	mov	#18635,	0(r14)	;#0x48cb
    60f2:	00 00 
    60f4:	b0 12 64 6e 	call	#28260		;#0x6e64
    60f8:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    60fc:	0e 41       	mov	r1,	r14	;
    60fe:	8e 4c 02 00 	mov	r12,	2(r14)	;
    6102:	be 40 d6 48 	mov	#18646,	0(r14)	;#0x48d6
    6106:	00 00 
    6108:	84 4f e0 ff 	mov	r15,	-32(r4)	; 0xffe0
    610c:	b0 12 64 6e 	call	#28260		;#0x6e64
    6110:	1c 42 ee 4f 	mov	&0x4fee,r12	;0x4fee
    6114:	1e 44 f2 ff 	mov	-14(r4),r14	;0xfffffff2
    6118:	1d 44 f0 ff 	mov	-16(r4),r13	;0xfffffff0
    611c:	0b 41       	mov	r1,	r11	;
    611e:	8b 4d 06 00 	mov	r13,	6(r11)	;
    6122:	8b 4e 04 00 	mov	r14,	4(r11)	;
    6126:	8b 4c 02 00 	mov	r12,	2(r11)	;
    612a:	bb 40 e1 48 	mov	#18657,	0(r11)	;#0x48e1
    612e:	00 00 
    6130:	84 4f de ff 	mov	r15,	-34(r4)	; 0xffde
    6134:	b0 12 64 6e 	call	#28260		;#0x6e64
    6138:	84 4f dc ff 	mov	r15,	-36(r4)	; 0xffdc
    613c:	00 3c       	jmp	$+2      	;abs 0x613e
    613e:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    6142:	1d 44 f2 ff 	mov	-14(r4),r13	;0xfffffff2
    6146:	1e 44 ec ff 	mov	-20(r4),r14	;0xffffffec
    614a:	1f 44 ee ff 	mov	-18(r4),r15	;0xffffffee
    614e:	0f 9d       	cmp	r13,	r15	;
    6150:	0b 42       	mov	r2,	r11	;
    6152:	1a 43       	mov	#1,	r10	;r3 As==01
    6154:	09 4a       	mov	r10,	r9	;
    6156:	09 cb       	bic	r11,	r9	;
    6158:	0e 9c       	cmp	r12,	r14	;
    615a:	0c 42       	mov	r2,	r12	;
    615c:	0a cc       	bic	r12,	r10	;
    615e:	0d 9f       	cmp	r15,	r13	;
    6160:	84 49 da ff 	mov	r9,	-38(r4)	; 0xffda
    6164:	84 4a d8 ff 	mov	r10,	-40(r4)	; 0xffd8
    6168:	04 24       	jz	$+10     	;abs 0x6172
    616a:	1c 44 da ff 	mov	-38(r4),r12	;0xffffffda
    616e:	84 4c d8 ff 	mov	r12,	-40(r4)	; 0xffd8
    6172:	1c 44 d8 ff 	mov	-40(r4),r12	;0xffffffd8
    6176:	1c b3       	bit	#1,	r12	;r3 As==01
    6178:	a7 23       	jnz	$-176    	;abs 0x60c8
    617a:	00 3c       	jmp	$+2      	;abs 0x617c
    617c:	3f 40 ee 4f 	mov	#20462,	r15	;#0x4fee
    6180:	1c 42 ee 4f 	mov	&0x4fee,r12	;0x4fee
    6184:	0d 41       	mov	r1,	r13	;
    6186:	8d 4c 02 00 	mov	r12,	2(r13)	;
    618a:	bd 40 02 49 	mov	#18690,	0(r13)	;#0x4902
    618e:	00 00 
    6190:	84 4f d6 ff 	mov	r15,	-42(r4)	; 0xffd6
    6194:	b0 12 64 6e 	call	#28260		;#0x6e64
    6198:	3c 40 e6 4f 	mov	#20454,	r12	;#0x4fe6
    619c:	1d 42 e6 4f 	mov	&0x4fe6,r13	;0x4fe6
    61a0:	3d 53       	add	#-1,	r13	;r3 As==11
    61a2:	82 4d e6 4f 	mov	r13,	&0x4fe6	;
    61a6:	3e 40 f0 4f 	mov	#20464,	r14	;#0x4ff0
    61aa:	2d 43       	mov	#2,	r13	;r3 As==10
    61ac:	1b 44 d6 ff 	mov	-42(r4),r11	;0xffffffd6
    61b0:	84 4f d4 ff 	mov	r15,	-44(r4)	; 0xffd4
    61b4:	0f 4b       	mov	r11,	r15	;
    61b6:	84 4d d2 ff 	mov	r13,	-46(r4)	; 0xffd2
    61ba:	84 4c d0 ff 	mov	r12,	-48(r4)	; 0xffd0
    61be:	b0 12 44 74 	call	#29764		;#0x7444
    61c2:	3e 40 e8 4f 	mov	#20456,	r14	;#0x4fe8
    61c6:	1f 44 d0 ff 	mov	-48(r4),r15	;0xffffffd0
    61ca:	1d 44 d2 ff 	mov	-46(r4),r13	;0xffffffd2
    61ce:	b0 12 44 74 	call	#29764		;#0x7444
    61d2:	3f 40 88 4d 	mov	#19848,	r15	;#0x4d88
    61d6:	b0 12 a8 73 	call	#29608		;#0x73a8
    61da:	31 50 36 00 	add	#54,	r1	;#0x0036
    61de:	39 41       	pop	r9		;
    61e0:	3a 41       	pop	r10		;
    61e2:	3b 41       	pop	r11		;
    61e4:	34 41       	pop	r4		;
    61e6:	30 41       	ret			

000061e8 <task_reduce_multiply>:
    61e8:	04 12       	push	r4		;
    61ea:	04 41       	mov	r1,	r4	;
    61ec:	0b 12       	push	r11		;
    61ee:	0a 12       	push	r10		;
    61f0:	09 12       	push	r9		;
    61f2:	31 80 1e 00 	sub	#30,	r1	;#0x001e
    61f6:	1c 42 e8 4f 	mov	&0x4fe8,r12	;0x4fe8
    61fa:	1c 53       	inc	r12		;
    61fc:	1d 42 f0 4f 	mov	&0x4ff0,r13	;0x4ff0
    6200:	0e 41       	mov	r1,	r14	;
    6202:	8e 4d 04 00 	mov	r13,	4(r14)	;
    6206:	8e 4c 02 00 	mov	r12,	2(r14)	;
    620a:	be 40 1b 49 	mov	#18715,	0(r14)	;#0x491b
    620e:	00 00 
    6210:	b0 12 64 6e 	call	#28260		;#0x6e64
    6214:	1c 42 e8 4f 	mov	&0x4fe8,r12	;0x4fe8
    6218:	3c 50 f9 ff 	add	#65529,	r12	;#0xfff9
    621c:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    6220:	0d 41       	mov	r1,	r13	;
    6222:	8d 4c 02 00 	mov	r12,	2(r13)	;
    6226:	bd 40 39 49 	mov	#18745,	0(r13)	;#0x4939
    622a:	00 00 
    622c:	84 4f ee ff 	mov	r15,	-18(r4)	; 0xffee
    6230:	b0 12 64 6e 	call	#28260		;#0x6e64
    6234:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8
    6238:	84 4f ec ff 	mov	r15,	-20(r4)	; 0xffec
    623c:	00 3c       	jmp	$+2      	;abs 0x623e
    623e:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6242:	1d 44 f0 ff 	mov	-16(r4),r13	;0xfffffff0
    6246:	0c 9d       	cmp	r13,	r12	;
    6248:	0d 2c       	jc	$+28     	;abs 0x6264
    624a:	00 3c       	jmp	$+2      	;abs 0x624c
    624c:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6250:	0c 5c       	rla	r12		;
    6252:	8c 43 f2 4f 	mov	#0,	20466(r12);r3 As==00, 0x4ff2
    6256:	00 3c       	jmp	$+2      	;abs 0x6258
    6258:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    625c:	1c 53       	inc	r12		;
    625e:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    6262:	ed 3f       	jmp	$-36     	;abs 0x623e
    6264:	84 43 f2 ff 	mov	#0,	-14(r4)	;r3 As==00, 0xfff2
    6268:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    626c:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    6270:	00 3c       	jmp	$+2      	;abs 0x6272
    6272:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6276:	3c 90 10 00 	cmp	#16,	r12	;#0x0010
    627a:	5b 34       	jge	$+184    	;abs 0x6332
    627c:	00 3c       	jmp	$+2      	;abs 0x627e
    627e:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6282:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    6286:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    628a:	1d 44 f0 ff 	mov	-16(r4),r13	;0xfffffff0
    628e:	3d 52       	add	#8,	r13	;r2 As==11
    6290:	0c 9d       	cmp	r13,	r12	;
    6292:	16 2c       	jc	$+46     	;abs 0x62c0
    6294:	00 3c       	jmp	$+2      	;abs 0x6296
    6296:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    629a:	1d 44 f0 ff 	mov	-16(r4),r13	;0xfffffff0
    629e:	0c 8d       	sub	r13,	r12	;
    62a0:	0c 5c       	rla	r12		;
    62a2:	1c 4c 5a 4e 	mov	20058(r12),r12	;0x04e5a
    62a6:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    62aa:	1f 42 f0 4f 	mov	&0x4ff0,r15	;0x4ff0
    62ae:	0e 4c       	mov	r12,	r14	;
    62b0:	b0 12 e0 74 	call	#29920		;#0x74e0
    62b4:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    62b8:	0c 5f       	add	r15,	r12	;
    62ba:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    62be:	03 3c       	jmp	$+8      	;abs 0x62c6
    62c0:	84 43 f4 ff 	mov	#0,	-12(r4)	;r3 As==00, 0xfff4
    62c4:	00 3c       	jmp	$+2      	;abs 0x62c6
    62c6:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    62ca:	1d 44 f0 ff 	mov	-16(r4),r13	;0xfffffff0
    62ce:	0e 4c       	mov	r12,	r14	;
    62d0:	0e 8d       	sub	r13,	r14	;
    62d2:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    62d6:	1f 42 f0 4f 	mov	&0x4ff0,r15	;0x4ff0
    62da:	1b 44 f2 ff 	mov	-14(r4),r11	;0xfffffff2
    62de:	1a 44 f6 ff 	mov	-10(r4),r10	;0xfffffff6
    62e2:	09 41       	mov	r1,	r9	;
    62e4:	89 4a 0c 00 	mov	r10,	12(r9)	; 0x000c
    62e8:	89 4c 0a 00 	mov	r12,	10(r9)	; 0x000a
    62ec:	89 4b 08 00 	mov	r11,	8(r9)	;
    62f0:	89 4f 06 00 	mov	r15,	6(r9)	;
    62f4:	89 4d 04 00 	mov	r13,	4(r9)	;
    62f8:	89 4e 02 00 	mov	r14,	2(r9)	;
    62fc:	b9 40 57 49 	mov	#18775,	0(r9)	;#0x4957
    6300:	00 00 
    6302:	b0 12 64 6e 	call	#28260		;#0x6e64
    6306:	5c 44 f7 ff 	mov.b	-9(r4),	r12	;
    630a:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    630e:	5c 44 f6 ff 	mov.b	-10(r4),r12	;0xfffffff6
    6312:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    6316:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    631a:	0d 5d       	rla	r13		;
    631c:	8d 4c f2 4f 	mov	r12,	20466(r13); 0x4ff2
    6320:	84 4f ea ff 	mov	r15,	-22(r4)	; 0xffea
    6324:	00 3c       	jmp	$+2      	;abs 0x6326
    6326:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    632a:	1c 53       	inc	r12		;
    632c:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    6330:	a0 3f       	jmp	$-190    	;abs 0x6272
    6332:	d2 43 e2 4f 	mov.b	#1,	&0x4fe2	;r3 As==01
    6336:	b2 40 b2 4d 	mov	#19890,	&0x4fe4	;#0x4db2
    633a:	e4 4f 
    633c:	3f 40 30 4e 	mov	#20016,	r15	;#0x4e30
    6340:	b0 12 a8 73 	call	#29608		;#0x73a8
    6344:	31 50 1e 00 	add	#30,	r1	;#0x001e
    6348:	39 41       	pop	r9		;
    634a:	3a 41       	pop	r10		;
    634c:	3b 41       	pop	r11		;
    634e:	34 41       	pop	r4		;
    6350:	30 41       	ret			
	...

00006354 <task_reduce_compare>:
    6354:	04 12       	push	r4		;
    6356:	04 41       	mov	r1,	r4	;
    6358:	31 80 14 00 	sub	#20,	r1	;#0x0014
    635c:	f4 40 3d 00 	mov.b	#61,	-3(r4)	;#0x003d, 0xfffd
    6360:	fd ff 
    6362:	0c 41       	mov	r1,	r12	;
    6364:	bc 40 87 49 	mov	#18823,	0(r12)	;#0x4987
    6368:	00 00 
    636a:	b0 12 64 6e 	call	#28260		;#0x6e64
    636e:	b4 40 0f 00 	mov	#15,	-2(r4)	;#0x000f, 0xfffe
    6372:	fe ff 
    6374:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    6378:	00 3c       	jmp	$+2      	;abs 0x637a
    637a:	1c 44 fe ff 	mov	-2(r4),	r12	;
    637e:	0c 93       	cmp	#0,	r12	;r3 As==00
    6380:	3d 38       	jl	$+124    	;abs 0x63fc
    6382:	00 3c       	jmp	$+2      	;abs 0x6384
    6384:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6388:	0d 4c       	mov	r12,	r13	;
    638a:	0d 5d       	rla	r13		;
    638c:	1e 4d 7a 4f 	mov	20346(r13),r14	;0x04f7a
    6390:	1d 4d f2 4f 	mov	20466(r13),r13	;0x04ff2
    6394:	0f 41       	mov	r1,	r15	;
    6396:	8f 4d 08 00 	mov	r13,	8(r15)	;
    639a:	8f 4c 06 00 	mov	r12,	6(r15)	;
    639e:	8f 4e 04 00 	mov	r14,	4(r15)	;
    63a2:	8f 4c 02 00 	mov	r12,	2(r15)	;
    63a6:	bf 40 99 49 	mov	#18841,	0(r15)	;#0x4999
    63aa:	00 00 
    63ac:	b0 12 64 6e 	call	#28260		;#0x6e64
    63b0:	1c 44 fe ff 	mov	-2(r4),	r12	;
    63b4:	0c 5c       	rla	r12		;
    63b6:	1d 4c 7a 4f 	mov	20346(r12),r13	;0x04f7a
    63ba:	1c 4c f2 4f 	mov	20466(r12),r12	;0x04ff2
    63be:	0c 9d       	cmp	r13,	r12	;
    63c0:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    63c4:	05 2c       	jc	$+12     	;abs 0x63d0
    63c6:	00 3c       	jmp	$+2      	;abs 0x63c8
    63c8:	f4 40 3e 00 	mov.b	#62,	-3(r4)	;#0x003e, 0xfffd
    63cc:	fd ff 
    63ce:	16 3c       	jmp	$+46     	;abs 0x63fc
    63d0:	1c 44 fe ff 	mov	-2(r4),	r12	;
    63d4:	0c 5c       	rla	r12		;
    63d6:	1d 4c 7a 4f 	mov	20346(r12),r13	;0x04f7a
    63da:	1c 4c f2 4f 	mov	20466(r12),r12	;0x04ff2
    63de:	0d 9c       	cmp	r12,	r13	;
    63e0:	05 2c       	jc	$+12     	;abs 0x63ec
    63e2:	00 3c       	jmp	$+2      	;abs 0x63e4
    63e4:	f4 40 3c 00 	mov.b	#60,	-3(r4)	;#0x003c, 0xfffd
    63e8:	fd ff 
    63ea:	08 3c       	jmp	$+18     	;abs 0x63fc
    63ec:	00 3c       	jmp	$+2      	;abs 0x63ee
    63ee:	00 3c       	jmp	$+2      	;abs 0x63f0
    63f0:	1c 44 fe ff 	mov	-2(r4),	r12	;
    63f4:	3c 53       	add	#-1,	r12	;r3 As==11
    63f6:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    63fa:	bf 3f       	jmp	$-128    	;abs 0x637a
    63fc:	5c 44 fd ff 	mov.b	-3(r4),	r12	;
    6400:	8c 11       	sxt	r12		;
    6402:	0d 41       	mov	r1,	r13	;
    6404:	8d 4c 02 00 	mov	r12,	2(r13)	;
    6408:	bd 40 bf 49 	mov	#18879,	0(r13)	;#0x49bf
    640c:	00 00 
    640e:	b0 12 64 6e 	call	#28260		;#0x6e64
    6412:	5e 44 fd ff 	mov.b	-3(r4),	r14	;
    6416:	7e 90 3c 00 	cmp.b	#60,	r14	;#0x003c
    641a:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    641e:	06 20       	jnz	$+14     	;abs 0x642c
    6420:	00 3c       	jmp	$+2      	;abs 0x6422
    6422:	3f 40 dc 4d 	mov	#19932,	r15	;#0x4ddc
    6426:	b0 12 a8 73 	call	#29608		;#0x73a8
    642a:	05 3c       	jmp	$+12     	;abs 0x6436
    642c:	3f 40 06 4e 	mov	#19974,	r15	;#0x4e06
    6430:	b0 12 a8 73 	call	#29608		;#0x73a8
    6434:	00 3c       	jmp	$+2      	;abs 0x6436
    6436:	31 50 14 00 	add	#20,	r1	;#0x0014
    643a:	34 41       	pop	r4		;
    643c:	30 41       	ret			
	...

00006440 <task_reduce_add>:
    6440:	04 12       	push	r4		;
    6442:	04 41       	mov	r1,	r4	;
    6444:	0b 12       	push	r11		;
    6446:	0a 12       	push	r10		;
    6448:	09 12       	push	r9		;
    644a:	08 12       	push	r8		;
    644c:	31 80 40 00 	sub	#64,	r1	;#0x0040
    6450:	1c 42 e8 4f 	mov	&0x4fe8,r12	;0x4fe8
    6454:	3c 50 f9 ff 	add	#65529,	r12	;#0xfff9
    6458:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    645c:	1d 42 e8 4f 	mov	&0x4fe8,r13	;0x4fe8
    6460:	1d 53       	inc	r13		;
    6462:	0e 41       	mov	r1,	r14	;
    6464:	8e 4c 04 00 	mov	r12,	4(r14)	;
    6468:	8e 4d 02 00 	mov	r13,	2(r14)	;
    646c:	be 40 de 49 	mov	#18910,	0(r14)	;#0x49de
    6470:	00 00 
    6472:	b0 12 64 6e 	call	#28260		;#0x6e64
    6476:	84 43 ee ff 	mov	#0,	-18(r4)	;r3 As==00, 0xffee
    647a:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    647e:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    6482:	84 4f ea ff 	mov	r15,	-22(r4)	; 0xffea
    6486:	00 3c       	jmp	$+2      	;abs 0x6488
    6488:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    648c:	3c 90 10 00 	cmp	#16,	r12	;#0x0010
    6490:	02 38       	jl	$+6      	;abs 0x6496
    6492:	1c 3d       	jmp	$+570    	;abs 0x66cc
    6494:	00 3c       	jmp	$+2      	;abs 0x6496
    6496:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    649a:	0d 4c       	mov	r12,	r13	;
    649c:	0d 5d       	rla	r13		;
    649e:	1d 4d 3a 4f 	mov	20282(r13),r13	;0x04f3a
    64a2:	1e 42 44 51 	mov	&0x5144,r14	;0x5144
    64a6:	0d 9e       	cmp	r14,	r13	;
    64a8:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    64ac:	09 24       	jz	$+20     	;abs 0x64c0
    64ae:	00 3c       	jmp	$+2      	;abs 0x64b0
    64b0:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    64b4:	0c 5c       	rla	r12		;
    64b6:	1d 4c 7a 4f 	mov	20346(r12),r13	;0x04f7a
    64ba:	8c 4d fa 4e 	mov	r13,	20218(r12); 0x4efa
    64be:	00 3c       	jmp	$+2      	;abs 0x64c0
    64c0:	1c 44 e8 ff 	mov	-24(r4),r12	;0xffffffe8
    64c4:	0c 5c       	rla	r12		;
    64c6:	1c 4c fa 4e 	mov	20218(r12),r12	;0x04efa
    64ca:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    64ce:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    64d2:	1d 44 ec ff 	mov	-20(r4),r13	;0xffffffec
    64d6:	0c 8d       	sub	r13,	r12	;
    64d8:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    64dc:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    64e0:	1d 44 ec ff 	mov	-20(r4),r13	;0xffffffec
    64e4:	3d 52       	add	#8,	r13	;r2 As==11
    64e6:	0c 9d       	cmp	r13,	r12	;
    64e8:	09 2c       	jc	$+20     	;abs 0x64fc
    64ea:	00 3c       	jmp	$+2      	;abs 0x64ec
    64ec:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    64f0:	0c 5c       	rla	r12		;
    64f2:	1c 4c 5a 4e 	mov	20058(r12),r12	;0x04e5a
    64f6:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    64fa:	05 3c       	jmp	$+12     	;abs 0x6506
    64fc:	84 43 f0 ff 	mov	#0,	-16(r4)	;r3 As==00, 0xfff0
    6500:	84 43 f4 ff 	mov	#0,	-12(r4)	;r3 As==00, 0xfff4
    6504:	00 3c       	jmp	$+2      	;abs 0x6506
    6506:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    650a:	1d 44 f2 ff 	mov	-14(r4),r13	;0xfffffff2
    650e:	0c 5d       	add	r13,	r12	;
    6510:	1d 44 f0 ff 	mov	-16(r4),r13	;0xfffffff0
    6514:	0c 5d       	add	r13,	r12	;
    6516:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    651a:	0d 5d       	rla	r13		;
    651c:	0e 4d       	mov	r13,	r14	;
    651e:	3e 50 7a 4f 	add	#20346,	r14	;#0x4f7a
    6522:	0f 4d       	mov	r13,	r15	;
    6524:	3f 50 fa 4e 	add	#20218,	r15	;#0x4efa
    6528:	1b 42 44 51 	mov	&0x5144,r11	;0x5144
    652c:	8d 4c fa 4e 	mov	r12,	20218(r13); 0x4efa
    6530:	0c 4d       	mov	r13,	r12	;
    6532:	3c 50 3a 4f 	add	#20282,	r12	;#0x4f3a
    6536:	1d 4d 3a 4f 	mov	20282(r13),r13	;0x04f3a
    653a:	0d 9b       	cmp	r11,	r13	;
    653c:	84 4b e6 ff 	mov	r11,	-26(r4)	; 0xffe6
    6540:	84 4c e4 ff 	mov	r12,	-28(r4)	; 0xffe4
    6544:	84 4e e2 ff 	mov	r14,	-30(r4)	; 0xffe2
    6548:	84 4f e0 ff 	mov	r15,	-32(r4)	; 0xffe0
    654c:	0f 24       	jz	$+32     	;abs 0x656c
    654e:	00 3c       	jmp	$+2      	;abs 0x6550
    6550:	2d 43       	mov	#2,	r13	;r3 As==10
    6552:	1f 44 e0 ff 	mov	-32(r4),r15	;0xffffffe0
    6556:	1e 44 e2 ff 	mov	-30(r4),r14	;0xffffffe2
    655a:	b0 12 44 74 	call	#29764		;#0x7444
    655e:	1d 44 e4 ff 	mov	-28(r4),r13	;0xffffffe4
    6562:	1e 44 e6 ff 	mov	-26(r4),r14	;0xffffffe6
    6566:	8d 4e 00 00 	mov	r14,	0(r13)	;
    656a:	00 3c       	jmp	$+2      	;abs 0x656c
    656c:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6570:	0d 4c       	mov	r12,	r13	;
    6572:	1e 44 f2 ff 	mov	-14(r4),r14	;0xfffffff2
    6576:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfffffff4
    657a:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfffffff0
    657e:	1a 44 ee ff 	mov	-18(r4),r10	;0xffffffee
    6582:	09 4c       	mov	r12,	r9	;
    6584:	09 59       	rla	r9		;
    6586:	19 49 3a 4f 	mov	20282(r9),r9	;0x04f3a
    658a:	18 42 44 51 	mov	&0x5144,r8	;0x5144
    658e:	09 98       	cmp	r8,	r9	;
    6590:	84 4c de ff 	mov	r12,	-34(r4)	; 0xffde
    6594:	84 4d dc ff 	mov	r13,	-36(r4)	; 0xffdc
    6598:	84 4e da ff 	mov	r14,	-38(r4)	; 0xffda
    659c:	84 4f d8 ff 	mov	r15,	-40(r4)	; 0xffd8
    65a0:	84 4b d6 ff 	mov	r11,	-42(r4)	; 0xffd6
    65a4:	84 4a d4 ff 	mov	r10,	-44(r4)	; 0xffd4
    65a8:	09 24       	jz	$+20     	;abs 0x65bc
    65aa:	00 3c       	jmp	$+2      	;abs 0x65ac
    65ac:	1c 44 de ff 	mov	-34(r4),r12	;0xffffffde
    65b0:	0c 5c       	rla	r12		;
    65b2:	1d 4c 7a 4f 	mov	20346(r12),r13	;0x04f7a
    65b6:	8c 4d fa 4e 	mov	r13,	20218(r12); 0x4efa
    65ba:	00 3c       	jmp	$+2      	;abs 0x65bc
    65bc:	1c 44 de ff 	mov	-34(r4),r12	;0xffffffde
    65c0:	0c 5c       	rla	r12		;
    65c2:	1c 4c fa 4e 	mov	20218(r12),r12	;0x04efa
    65c6:	0d 41       	mov	r1,	r13	;
    65c8:	8d 4c 0c 00 	mov	r12,	12(r13)	; 0x000c
    65cc:	1c 44 d4 ff 	mov	-44(r4),r12	;0xffffffd4
    65d0:	8d 4c 0a 00 	mov	r12,	10(r13)	; 0x000a
    65d4:	1e 44 d6 ff 	mov	-42(r4),r14	;0xffffffd6
    65d8:	8d 4e 08 00 	mov	r14,	8(r13)	;
    65dc:	1f 44 d8 ff 	mov	-40(r4),r15	;0xffffffd8
    65e0:	8d 4f 06 00 	mov	r15,	6(r13)	;
    65e4:	1b 44 da ff 	mov	-38(r4),r11	;0xffffffda
    65e8:	8d 4b 04 00 	mov	r11,	4(r13)	;
    65ec:	1a 44 dc ff 	mov	-36(r4),r10	;0xffffffdc
    65f0:	8d 4a 02 00 	mov	r10,	2(r13)	;
    65f4:	bd 40 fc 49 	mov	#18940,	0(r13)	;#0x49fc
    65f8:	00 00 
    65fa:	b0 12 64 6e 	call	#28260		;#0x6e64
    65fe:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6602:	0d 4c       	mov	r12,	r13	;
    6604:	0d 5d       	rla	r13		;
    6606:	1d 4d 3a 4f 	mov	20282(r13),r13	;0x04f3a
    660a:	1e 42 44 51 	mov	&0x5144,r14	;0x5144
    660e:	0d 9e       	cmp	r14,	r13	;
    6610:	84 4f d2 ff 	mov	r15,	-46(r4)	; 0xffd2
    6614:	84 4c d0 ff 	mov	r12,	-48(r4)	; 0xffd0
    6618:	09 24       	jz	$+20     	;abs 0x662c
    661a:	00 3c       	jmp	$+2      	;abs 0x661c
    661c:	1c 44 d0 ff 	mov	-48(r4),r12	;0xffffffd0
    6620:	0c 5c       	rla	r12		;
    6622:	1d 4c 7a 4f 	mov	20346(r12),r13	;0x04f7a
    6626:	8c 4d fa 4e 	mov	r13,	20218(r12); 0x4efa
    662a:	00 3c       	jmp	$+2      	;abs 0x662c
    662c:	1c 44 d0 ff 	mov	-48(r4),r12	;0xffffffd0
    6630:	0c 5c       	rla	r12		;
    6632:	5c 4c fb 4e 	mov.b	20219(r12),r12	;0x04efb
    6636:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    663a:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    663e:	0d 4c       	mov	r12,	r13	;
    6640:	0d 5d       	rla	r13		;
    6642:	1d 4d 3a 4f 	mov	20282(r13),r13	;0x04f3a
    6646:	1e 42 44 51 	mov	&0x5144,r14	;0x5144
    664a:	0d 9e       	cmp	r14,	r13	;
    664c:	84 4c ce ff 	mov	r12,	-50(r4)	; 0xffce
    6650:	09 24       	jz	$+20     	;abs 0x6664
    6652:	00 3c       	jmp	$+2      	;abs 0x6654
    6654:	1c 44 ce ff 	mov	-50(r4),r12	;0xffffffce
    6658:	0c 5c       	rla	r12		;
    665a:	1d 4c 7a 4f 	mov	20346(r12),r13	;0x04f7a
    665e:	8c 4d fa 4e 	mov	r13,	20218(r12); 0x4efa
    6662:	00 3c       	jmp	$+2      	;abs 0x6664
    6664:	1c 44 ce ff 	mov	-50(r4),r12	;0xffffffce
    6668:	0c 5c       	rla	r12		;
    666a:	0d 4c       	mov	r12,	r13	;
    666c:	3d 50 7a 4f 	add	#20346,	r13	;#0x4f7a
    6670:	0e 4c       	mov	r12,	r14	;
    6672:	3e 50 fa 4e 	add	#20218,	r14	;#0x4efa
    6676:	5f 4c fa 4e 	mov.b	20218(r12),r15	;0x04efa
    667a:	1b 42 44 51 	mov	&0x5144,r11	;0x5144
    667e:	8c 4f fa 4e 	mov	r15,	20218(r12); 0x4efa
    6682:	0f 4c       	mov	r12,	r15	;
    6684:	3f 50 3a 4f 	add	#20282,	r15	;#0x4f3a
    6688:	1c 4c 3a 4f 	mov	20282(r12),r12	;0x04f3a
    668c:	0c 9b       	cmp	r11,	r12	;
    668e:	84 4f cc ff 	mov	r15,	-52(r4)	; 0xffcc
    6692:	84 4d ca ff 	mov	r13,	-54(r4)	; 0xffca
    6696:	84 4e c8 ff 	mov	r14,	-56(r4)	; 0xffc8
    669a:	84 4b c6 ff 	mov	r11,	-58(r4)	; 0xffc6
    669e:	0f 24       	jz	$+32     	;abs 0x66be
    66a0:	00 3c       	jmp	$+2      	;abs 0x66a2
    66a2:	2d 43       	mov	#2,	r13	;r3 As==10
    66a4:	1f 44 c8 ff 	mov	-56(r4),r15	;0xffffffc8
    66a8:	1e 44 ca ff 	mov	-54(r4),r14	;0xffffffca
    66ac:	b0 12 44 74 	call	#29764		;#0x7444
    66b0:	1d 44 cc ff 	mov	-52(r4),r13	;0xffffffcc
    66b4:	1e 44 c6 ff 	mov	-58(r4),r14	;0xffffffc6
    66b8:	8d 4e 00 00 	mov	r14,	0(r13)	;
    66bc:	00 3c       	jmp	$+2      	;abs 0x66be
    66be:	00 3c       	jmp	$+2      	;abs 0x66c0
    66c0:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    66c4:	1c 53       	inc	r12		;
    66c6:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    66ca:	de 3e       	jmp	$-578    	;abs 0x6488
    66cc:	c2 43 e2 4f 	mov.b	#0,	&0x4fe2	;r3 As==00
    66d0:	b2 40 06 4e 	mov	#19974,	&0x4fe4	;#0x4e06
    66d4:	e4 4f 
    66d6:	3f 40 30 4e 	mov	#20016,	r15	;#0x4e30
    66da:	b0 12 a8 73 	call	#29608		;#0x73a8
    66de:	31 50 40 00 	add	#64,	r1	;#0x0040
    66e2:	38 41       	pop	r8		;
    66e4:	39 41       	pop	r9		;
    66e6:	3a 41       	pop	r10		;
    66e8:	3b 41       	pop	r11		;
    66ea:	34 41       	pop	r4		;
    66ec:	30 41       	ret			
	...

000066f0 <task_reduce_subtract>:
    66f0:	04 12       	push	r4		;
    66f2:	04 41       	mov	r1,	r4	;
    66f4:	0b 12       	push	r11		;
    66f6:	0a 12       	push	r10		;
    66f8:	09 12       	push	r9		;
    66fa:	08 12       	push	r8		;
    66fc:	31 80 38 00 	sub	#56,	r1	;#0x0038
    6700:	0c 41       	mov	r1,	r12	;
    6702:	bc 40 27 4a 	mov	#18983,	0(r12)	;#0x4a27
    6706:	00 00 
    6708:	b0 12 64 6e 	call	#28260		;#0x6e64
    670c:	1c 42 e8 4f 	mov	&0x4fe8,r12	;0x4fe8
    6710:	3c 50 f9 ff 	add	#65529,	r12	;#0xfff9
    6714:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    6718:	1d 42 e8 4f 	mov	&0x4fe8,r13	;0x4fe8
    671c:	1d 53       	inc	r13		;
    671e:	0e 41       	mov	r1,	r14	;
    6720:	8e 4c 04 00 	mov	r12,	4(r14)	;
    6724:	8e 4d 02 00 	mov	r13,	2(r14)	;
    6728:	be 40 3a 4a 	mov	#19002,	0(r14)	;#0x4a3a
    672c:	00 00 
    672e:	84 4f ea ff 	mov	r15,	-22(r4)	; 0xffea
    6732:	b0 12 64 6e 	call	#28260		;#0x6e64
    6736:	84 43 ee ff 	mov	#0,	-18(r4)	;r3 As==00, 0xffee
    673a:	84 43 f6 ff 	mov	#0,	-10(r4)	;r3 As==00, 0xfff6
    673e:	84 4f e8 ff 	mov	r15,	-24(r4)	; 0xffe8
    6742:	00 3c       	jmp	$+2      	;abs 0x6744
    6744:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6748:	3c 90 10 00 	cmp	#16,	r12	;#0x0010
    674c:	c3 34       	jge	$+392    	;abs 0x68d4
    674e:	00 3c       	jmp	$+2      	;abs 0x6750
    6750:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6754:	0d 4c       	mov	r12,	r13	;
    6756:	0d 5d       	rla	r13		;
    6758:	1d 4d 3a 4f 	mov	20282(r13),r13	;0x04f3a
    675c:	1e 42 44 51 	mov	&0x5144,r14	;0x5144
    6760:	0d 9e       	cmp	r14,	r13	;
    6762:	84 4c e6 ff 	mov	r12,	-26(r4)	; 0xffe6
    6766:	09 24       	jz	$+20     	;abs 0x677a
    6768:	00 3c       	jmp	$+2      	;abs 0x676a
    676a:	1c 44 e6 ff 	mov	-26(r4),r12	;0xffffffe6
    676e:	0c 5c       	rla	r12		;
    6770:	1d 4c 7a 4f 	mov	20346(r12),r13	;0x04f7a
    6774:	8c 4d fa 4e 	mov	r13,	20218(r12); 0x4efa
    6778:	00 3c       	jmp	$+2      	;abs 0x677a
    677a:	1c 44 e6 ff 	mov	-26(r4),r12	;0xffffffe6
    677e:	0c 5c       	rla	r12		;
    6780:	1c 4c fa 4e 	mov	20218(r12),r12	;0x04efa
    6784:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    6788:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    678c:	1d 44 ec ff 	mov	-20(r4),r13	;0xffffffec
    6790:	0c 9d       	cmp	r13,	r12	;
    6792:	99 28       	jnc	$+308    	;abs 0x68c6
    6794:	00 3c       	jmp	$+2      	;abs 0x6796
    6796:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    679a:	0c 5c       	rla	r12		;
    679c:	1c 4c f2 4f 	mov	20466(r12),r12	;0x04ff2
    67a0:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    67a4:	1d 44 ee ff 	mov	-18(r4),r13	;0xffffffee
    67a8:	0c 5d       	add	r13,	r12	;
    67aa:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    67ae:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    67b2:	0d 9c       	cmp	r12,	r13	;
    67b4:	0a 2c       	jc	$+22     	;abs 0x67ca
    67b6:	00 3c       	jmp	$+2      	;abs 0x67b8
    67b8:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    67bc:	3c 50 00 01 	add	#256,	r12	;#0x0100
    67c0:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    67c4:	94 43 ee ff 	mov	#1,	-18(r4)	;r3 As==01, 0xffee
    67c8:	03 3c       	jmp	$+8      	;abs 0x67d0
    67ca:	84 43 ee ff 	mov	#0,	-18(r4)	;r3 As==00, 0xffee
    67ce:	00 3c       	jmp	$+2      	;abs 0x67d0
    67d0:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    67d4:	1d 44 f2 ff 	mov	-14(r4),r13	;0xfffffff2
    67d8:	0c 8d       	sub	r13,	r12	;
    67da:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    67de:	0d 5d       	rla	r13		;
    67e0:	0e 4d       	mov	r13,	r14	;
    67e2:	3e 50 7a 4f 	add	#20346,	r14	;#0x4f7a
    67e6:	0f 4d       	mov	r13,	r15	;
    67e8:	3f 50 fa 4e 	add	#20218,	r15	;#0x4efa
    67ec:	1b 42 44 51 	mov	&0x5144,r11	;0x5144
    67f0:	8d 4c fa 4e 	mov	r12,	20218(r13); 0x4efa
    67f4:	0c 4d       	mov	r13,	r12	;
    67f6:	3c 50 3a 4f 	add	#20282,	r12	;#0x4f3a
    67fa:	1d 4d 3a 4f 	mov	20282(r13),r13	;0x04f3a
    67fe:	0d 9b       	cmp	r11,	r13	;
    6800:	84 4b e4 ff 	mov	r11,	-28(r4)	; 0xffe4
    6804:	84 4c e2 ff 	mov	r12,	-30(r4)	; 0xffe2
    6808:	84 4e e0 ff 	mov	r14,	-32(r4)	; 0xffe0
    680c:	84 4f de ff 	mov	r15,	-34(r4)	; 0xffde
    6810:	0f 24       	jz	$+32     	;abs 0x6830
    6812:	00 3c       	jmp	$+2      	;abs 0x6814
    6814:	2d 43       	mov	#2,	r13	;r3 As==10
    6816:	1f 44 de ff 	mov	-34(r4),r15	;0xffffffde
    681a:	1e 44 e0 ff 	mov	-32(r4),r14	;0xffffffe0
    681e:	b0 12 44 74 	call	#29764		;#0x7444
    6822:	1d 44 e2 ff 	mov	-30(r4),r13	;0xffffffe2
    6826:	1e 44 e4 ff 	mov	-28(r4),r14	;0xffffffe4
    682a:	8d 4e 00 00 	mov	r14,	0(r13)	;
    682e:	00 3c       	jmp	$+2      	;abs 0x6830
    6830:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6834:	0d 4c       	mov	r12,	r13	;
    6836:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfffffff4
    683a:	0f 4c       	mov	r12,	r15	;
    683c:	1b 44 f0 ff 	mov	-16(r4),r11	;0xfffffff0
    6840:	1a 44 ee ff 	mov	-18(r4),r10	;0xffffffee
    6844:	09 4c       	mov	r12,	r9	;
    6846:	09 59       	rla	r9		;
    6848:	19 49 3a 4f 	mov	20282(r9),r9	;0x04f3a
    684c:	18 42 44 51 	mov	&0x5144,r8	;0x5144
    6850:	09 98       	cmp	r8,	r9	;
    6852:	84 4c dc ff 	mov	r12,	-36(r4)	; 0xffdc
    6856:	84 4d da ff 	mov	r13,	-38(r4)	; 0xffda
    685a:	84 4e d8 ff 	mov	r14,	-40(r4)	; 0xffd8
    685e:	84 4f d6 ff 	mov	r15,	-42(r4)	; 0xffd6
    6862:	84 4b d4 ff 	mov	r11,	-44(r4)	; 0xffd4
    6866:	84 4a d2 ff 	mov	r10,	-46(r4)	; 0xffd2
    686a:	09 24       	jz	$+20     	;abs 0x687e
    686c:	00 3c       	jmp	$+2      	;abs 0x686e
    686e:	1c 44 dc ff 	mov	-36(r4),r12	;0xffffffdc
    6872:	0c 5c       	rla	r12		;
    6874:	1d 4c 7a 4f 	mov	20346(r12),r13	;0x04f7a
    6878:	8c 4d fa 4e 	mov	r13,	20218(r12); 0x4efa
    687c:	00 3c       	jmp	$+2      	;abs 0x687e
    687e:	1c 44 dc ff 	mov	-36(r4),r12	;0xffffffdc
    6882:	0c 5c       	rla	r12		;
    6884:	1c 4c fa 4e 	mov	20218(r12),r12	;0x04efa
    6888:	0d 41       	mov	r1,	r13	;
    688a:	8d 4c 0c 00 	mov	r12,	12(r13)	; 0x000c
    688e:	1c 44 d2 ff 	mov	-46(r4),r12	;0xffffffd2
    6892:	8d 4c 0a 00 	mov	r12,	10(r13)	; 0x000a
    6896:	1e 44 d4 ff 	mov	-44(r4),r14	;0xffffffd4
    689a:	8d 4e 08 00 	mov	r14,	8(r13)	;
    689e:	1f 44 d6 ff 	mov	-42(r4),r15	;0xffffffd6
    68a2:	8d 4f 06 00 	mov	r15,	6(r13)	;
    68a6:	1b 44 d8 ff 	mov	-40(r4),r11	;0xffffffd8
    68aa:	8d 4b 04 00 	mov	r11,	4(r13)	;
    68ae:	1a 44 da ff 	mov	-38(r4),r10	;0xffffffda
    68b2:	8d 4a 02 00 	mov	r10,	2(r13)	;
    68b6:	bd 40 5d 4a 	mov	#19037,	0(r13)	;#0x4a5d
    68ba:	00 00 
    68bc:	b0 12 64 6e 	call	#28260		;#0x6e64
    68c0:	84 4f d0 ff 	mov	r15,	-48(r4)	; 0xffd0
    68c4:	00 3c       	jmp	$+2      	;abs 0x68c6
    68c6:	00 3c       	jmp	$+2      	;abs 0x68c8
    68c8:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    68cc:	1c 53       	inc	r12		;
    68ce:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    68d2:	38 3f       	jmp	$-398    	;abs 0x6744
    68d4:	c2 43 e2 4f 	mov.b	#0,	&0x4fe2	;r3 As==00
    68d8:	1c 42 e8 4f 	mov	&0x4fe8,r12	;0x4fe8
    68dc:	1c 53       	inc	r12		;
    68de:	3c 90 09 00 	cmp	#9,	r12	;
    68e2:	05 28       	jnc	$+12     	;abs 0x68ee
    68e4:	00 3c       	jmp	$+2      	;abs 0x68e6
    68e6:	b2 40 5e 4d 	mov	#19806,	&0x4fe4	;#0x4d5e
    68ea:	e4 4f 
    68ec:	0d 3c       	jmp	$+28     	;abs 0x6908
    68ee:	0c 41       	mov	r1,	r12	;
    68f0:	bc 40 8e 4a 	mov	#19086,	0(r12)	;#0x4a8e
    68f4:	00 00 
    68f6:	b0 12 64 6e 	call	#28260		;#0x6e64
    68fa:	1c 42 f8 4e 	mov	&0x4ef8,r12	;0x4ef8
    68fe:	82 4c e4 4f 	mov	r12,	&0x4fe4	;
    6902:	84 4f ce ff 	mov	r15,	-50(r4)	; 0xffce
    6906:	00 3c       	jmp	$+2      	;abs 0x6908
    6908:	3f 40 30 4e 	mov	#20016,	r15	;#0x4e30
    690c:	b0 12 a8 73 	call	#29608		;#0x73a8
    6910:	31 50 38 00 	add	#56,	r1	;#0x0038
    6914:	38 41       	pop	r8		;
    6916:	39 41       	pop	r9		;
    6918:	3a 41       	pop	r10		;
    691a:	3b 41       	pop	r11		;
    691c:	34 41       	pop	r4		;
    691e:	30 41       	ret			

00006920 <task_print_product>:
    6920:	04 12       	push	r4		;
    6922:	04 41       	mov	r1,	r4	;
    6924:	21 83       	decd	r1		;
    6926:	1f 42 e4 4f 	mov	&0x4fe4,r15	;0x4fe4
    692a:	b0 12 a8 73 	call	#29608		;#0x73a8
    692e:	21 53       	incd	r1		;
    6930:	34 41       	pop	r4		;
    6932:	30 41       	ret			

00006934 <_entry_task>:
    6934:	04 12       	push	r4		;
    6936:	04 41       	mov	r1,	r4	;
    6938:	3f 40 12 4b 	mov	#19218,	r15	;#0x4b12
    693c:	b0 12 a8 73 	call	#29608		;#0x73a8
    6940:	34 41       	pop	r4		;
    6942:	30 41       	ret			

00006944 <_init>:
    6944:	04 12       	push	r4		;
    6946:	04 41       	mov	r1,	r4	;
    6948:	b0 12 78 52 	call	#21112		;#0x5278
    694c:	34 41       	pop	r4		;
    694e:	30 41       	ret			

00006950 <clear_isDirty>:
    6950:	3f 40 3a 4f 	mov	#20282,	r15	;#0x4f3a
    6954:	0e 43       	clr	r14		;
    6956:	3d 40 40 00 	mov	#64,	r13	;#0x0040
    695a:	b0 12 0c 6a 	call	#27148		;#0x6a0c
    695e:	30 41       	ret			

00006960 <init_hw>:
    6960:	04 12       	push	r4		;
    6962:	04 41       	mov	r1,	r4	;
    6964:	b0 12 94 69 	call	#27028		;#0x6994
    6968:	1c 42 30 01 	mov	&0x0130,r12	;0x0130
    696c:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    6970:	82 4c 30 01 	mov	r12,	&0x0130	;
    6974:	b0 12 24 6a 	call	#27172		;#0x6a24
    6978:	34 41       	pop	r4		;
    697a:	30 41       	ret			

0000697c <msp_watchdog_enable>:
    697c:	04 12       	push	r4		;
    697e:	04 41       	mov	r1,	r4	;
    6980:	4c 4f       	mov.b	r15,	r12	;
    6982:	3f d0 08 5a 	bis	#23048,	r15	;#0x5a08
    6986:	82 4f 5c 01 	mov	r15,	&0x015c	;
    698a:	c2 4c 16 1c 	mov.b	r12,	&0x1c16	;
    698e:	34 41       	pop	r4		;
    6990:	30 41       	ret			
	...

00006994 <msp_watchdog_disable>:
    6994:	04 12       	push	r4		;
    6996:	04 41       	mov	r1,	r4	;
    6998:	b2 40 80 5a 	mov	#23168,	&0x015c	;#0x5a80
    699c:	5c 01 
    699e:	34 41       	pop	r4		;
    69a0:	30 41       	ret			
	...

000069a4 <msp_watchdog_kick>:
    69a4:	04 12       	push	r4		;
    69a6:	04 41       	mov	r1,	r4	;
    69a8:	5c 42 16 1c 	mov.b	&0x1c16,r12	;0x1c16
    69ac:	3c d0 08 5a 	bis	#23048,	r12	;#0x5a08
    69b0:	82 4c 5c 01 	mov	r12,	&0x015c	;
    69b4:	34 41       	pop	r4		;
    69b6:	30 41       	ret			

000069b8 <memcpy>:
    69b8:	04 12       	push	r4		;
    69ba:	04 41       	mov	r1,	r4	;
    69bc:	31 82       	sub	#8,	r1	;r2 As==11
    69be:	0c 4d       	mov	r13,	r12	;
    69c0:	0d 93       	cmp	#0,	r13	;r3 As==00
    69c2:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    69c6:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    69ca:	84 4e fa ff 	mov	r14,	-6(r4)	; 0xfffa
    69ce:	19 24       	jz	$+52     	;abs 0x6a02
    69d0:	00 3c       	jmp	$+2      	;abs 0x69d2
    69d2:	0c 43       	clr	r12		;
    69d4:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    69d8:	00 3c       	jmp	$+2      	;abs 0x69da
    69da:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    69de:	1d 44 fa ff 	mov	-6(r4),	r13	;
    69e2:	0d 5c       	add	r12,	r13	;
    69e4:	6e 4d       	mov.b	@r13,	r14	;
    69e6:	1d 44 fe ff 	mov	-2(r4),	r13	;
    69ea:	0d 5c       	add	r12,	r13	;
    69ec:	cd 4e 00 00 	mov.b	r14,	0(r13)	;
    69f0:	1c 53       	inc	r12		;
    69f2:	1d 44 fc ff 	mov	-4(r4),	r13	;
    69f6:	0c 9d       	cmp	r13,	r12	;
    69f8:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    69fc:	ee 23       	jnz	$-34     	;abs 0x69da
    69fe:	00 3c       	jmp	$+2      	;abs 0x6a00
    6a00:	00 3c       	jmp	$+2      	;abs 0x6a02
    6a02:	1f 44 fe ff 	mov	-2(r4),	r15	;
    6a06:	31 52       	add	#8,	r1	;r2 As==11
    6a08:	34 41       	pop	r4		;
    6a0a:	30 41       	ret			

00006a0c <my_memset>:
    6a0c:	04 12       	push	r4		;
    6a0e:	04 41       	mov	r1,	r4	;
    6a10:	0c 4f       	mov	r15,	r12	;
    6a12:	0d 5f       	add	r15,	r13	;
    6a14:	0c 9d       	cmp	r13,	r12	;
    6a16:	04 24       	jz	$+10     	;abs 0x6a20
    6a18:	cc 4e 00 00 	mov.b	r14,	0(r12)	;
    6a1c:	1c 53       	inc	r12		;
    6a1e:	fa 3f       	jmp	$-10     	;abs 0x6a14
    6a20:	34 41       	pop	r4		;
    6a22:	30 41       	ret			

00006a24 <msp_clock_setup>:
    6a24:	04 12       	push	r4		;
    6a26:	04 41       	mov	r1,	r4	;
    6a28:	f2 40 a5 ff 	mov.b	#65445,	&0x0161	;#0xffa5
    6a2c:	61 01 
    6a2e:	b2 40 46 00 	mov	#70,	&0x0162	;#0x0046
    6a32:	62 01 
    6a34:	b2 40 33 00 	mov	#51,	&0x0164	;#0x0033
    6a38:	64 01 
    6a3a:	82 43 66 01 	mov	#0,	&0x0166	;r3 As==00
    6a3e:	34 41       	pop	r4		;
    6a40:	30 41       	ret			
	...

00006a44 <mult16>:
    6a44:	82 4f c0 04 	mov	r15,	&0x04c0	;
    6a48:	82 4e c8 04 	mov	r14,	&0x04c8	;
    6a4c:	1e 42 ca 04 	mov	&0x04ca,r14	;0x04ca
    6a50:	1f 42 cc 04 	mov	&0x04cc,r15	;0x04cc
    6a54:	30 41       	ret			
	...

00006a58 <sqrt16>:
    6a58:	04 12       	push	r4		;
    6a5a:	04 41       	mov	r1,	r4	;
    6a5c:	0b 12       	push	r11		;
    6a5e:	31 80 1e 00 	sub	#30,	r1	;#0x001e
    6a62:	0c 4f       	mov	r15,	r12	;
    6a64:	0d 4e       	mov	r14,	r13	;
    6a66:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    6a6a:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    6a6e:	b4 43 f6 ff 	mov	#-1,	-10(r4)	;r3 As==11, 0xfff6
    6a72:	84 43 f4 ff 	mov	#0,	-12(r4)	;r3 As==00, 0xfff4
    6a76:	1e 44 f6 ff 	mov	-10(r4),r14	;0xfffffff6
    6a7a:	12 c3       	clrc			
    6a7c:	0e 10       	rrc	r14		;
    6a7e:	84 4e f2 ff 	mov	r14,	-14(r4)	; 0xfff2
    6a82:	84 43 ee ff 	mov	#0,	-18(r4)	;r3 As==00, 0xffee
    6a86:	84 43 ec ff 	mov	#0,	-20(r4)	;r3 As==00, 0xffec
    6a8a:	84 4d ea ff 	mov	r13,	-22(r4)	; 0xffea
    6a8e:	84 4c e8 ff 	mov	r12,	-24(r4)	; 0xffe8
    6a92:	00 3c       	jmp	$+2      	;abs 0x6a94
    6a94:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6a98:	1d 44 ee ff 	mov	-18(r4),r13	;0xffffffee
    6a9c:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    6aa0:	1f 44 fa ff 	mov	-6(r4),	r15	;
    6aa4:	4b 43       	clr.b	r11		;
    6aa6:	0d ef       	xor	r15,	r13	;
    6aa8:	0c ee       	xor	r14,	r12	;
    6aaa:	0c dd       	bis	r13,	r12	;
    6aac:	0c 93       	cmp	#0,	r12	;r3 As==00
    6aae:	c4 4b e7 ff 	mov.b	r11,	-25(r4)	; 0xffe7
    6ab2:	0d 24       	jz	$+28     	;abs 0x6ace
    6ab4:	00 3c       	jmp	$+2      	;abs 0x6ab6
    6ab6:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6aba:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    6abe:	0c 8d       	sub	r13,	r12	;
    6ac0:	2c 93       	cmp	#2,	r12	;r3 As==10
    6ac2:	0c 42       	mov	r2,	r12	;
    6ac4:	1c f3       	and	#1,	r12	;r3 As==01
    6ac6:	4e 4c       	mov.b	r12,	r14	;
    6ac8:	c4 4e e7 ff 	mov.b	r14,	-25(r4)	; 0xffe7
    6acc:	00 3c       	jmp	$+2      	;abs 0x6ace
    6ace:	5c 44 e7 ff 	mov.b	-25(r4),r12	;0xffffffe7
    6ad2:	4d 4c       	mov.b	r12,	r13	;
    6ad4:	1d b3       	bit	#1,	r13	;r3 As==01
    6ad6:	48 24       	jz	$+146    	;abs 0x6b68
    6ad8:	00 3c       	jmp	$+2      	;abs 0x6ada
    6ada:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6ade:	1d 44 f4 ff 	mov	-12(r4),r13	;0xfffffff4
    6ae2:	0e 43       	clr	r14		;
    6ae4:	0c 5d       	add	r13,	r12	;
    6ae6:	0e 63       	adc	r14		;
    6ae8:	12 c3       	clrc			
    6aea:	0c 10       	rrc	r12		;
    6aec:	0e 5e       	rla	r14		;
    6aee:	0e 5e       	rla	r14		;
    6af0:	0e 5e       	rla	r14		;
    6af2:	0e 5e       	rla	r14		;
    6af4:	0e 5e       	rla	r14		;
    6af6:	0e 5e       	rla	r14		;
    6af8:	0e 5e       	rla	r14		;
    6afa:	0e 5e       	rla	r14		;
    6afc:	0e 5e       	rla	r14		;
    6afe:	0e 5e       	rla	r14		;
    6b00:	0e 5e       	rla	r14		;
    6b02:	0e 5e       	rla	r14		;
    6b04:	0e 5e       	rla	r14		;
    6b06:	0e 5e       	rla	r14		;
    6b08:	0e 5e       	rla	r14		;
    6b0a:	0c de       	bis	r14,	r12	;
    6b0c:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    6b10:	0f 4c       	mov	r12,	r15	;
    6b12:	0e 4c       	mov	r12,	r14	;
    6b14:	b0 12 44 6a 	call	#27204		;#0x6a44
    6b18:	84 4f ee ff 	mov	r15,	-18(r4)	; 0xffee
    6b1c:	84 4e ec ff 	mov	r14,	-20(r4)	; 0xffec
    6b20:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6b24:	1d 44 fa ff 	mov	-6(r4),	r13	;
    6b28:	0f 9d       	cmp	r13,	r15	;
    6b2a:	0b 42       	mov	r2,	r11	;
    6b2c:	1b f3       	and	#1,	r11	;r3 As==01
    6b2e:	0e 9c       	cmp	r12,	r14	;
    6b30:	0c 42       	mov	r2,	r12	;
    6b32:	1c f3       	and	#1,	r12	;r3 As==01
    6b34:	0f 9d       	cmp	r13,	r15	;
    6b36:	84 4b e4 ff 	mov	r11,	-28(r4)	; 0xffe4
    6b3a:	84 4c e2 ff 	mov	r12,	-30(r4)	; 0xffe2
    6b3e:	04 24       	jz	$+10     	;abs 0x6b48
    6b40:	1c 44 e4 ff 	mov	-28(r4),r12	;0xffffffe4
    6b44:	84 4c e2 ff 	mov	r12,	-30(r4)	; 0xffe2
    6b48:	1c 44 e2 ff 	mov	-30(r4),r12	;0xffffffe2
    6b4c:	1c b3       	bit	#1,	r12	;r3 As==01
    6b4e:	06 20       	jnz	$+14     	;abs 0x6b5c
    6b50:	00 3c       	jmp	$+2      	;abs 0x6b52
    6b52:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6b56:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    6b5a:	05 3c       	jmp	$+12     	;abs 0x6b66
    6b5c:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6b60:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    6b64:	00 3c       	jmp	$+2      	;abs 0x6b66
    6b66:	96 3f       	jmp	$-210    	;abs 0x6a94
    6b68:	1f 44 f2 ff 	mov	-14(r4),r15	;0xfffffff2
    6b6c:	31 50 1e 00 	add	#30,	r1	;#0x001e
    6b70:	3b 41       	pop	r11		;
    6b72:	34 41       	pop	r4		;
    6b74:	30 41       	ret			
	...

00006b78 <udivmodhi4>:
    6b78:	04 12       	push	r4		;
    6b7a:	04 41       	mov	r1,	r4	;
    6b7c:	0b 12       	push	r11		;
    6b7e:	0a 12       	push	r10		;
    6b80:	31 80 14 00 	sub	#20,	r1	;#0x0014
    6b84:	0c 4d       	mov	r13,	r12	;
    6b86:	0b 4e       	mov	r14,	r11	;
    6b88:	0a 4f       	mov	r15,	r10	;
    6b8a:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    6b8e:	84 4e f6 ff 	mov	r14,	-10(r4)	; 0xfff6
    6b92:	84 4d f4 ff 	mov	r13,	-12(r4)	; 0xfff4
    6b96:	94 43 f2 ff 	mov	#1,	-14(r4)	;r3 As==01, 0xfff2
    6b9a:	84 43 f0 ff 	mov	#0,	-16(r4)	;r3 As==00, 0xfff0
    6b9e:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    6ba2:	84 4b ec ff 	mov	r11,	-20(r4)	; 0xffec
    6ba6:	84 4a ea ff 	mov	r10,	-22(r4)	; 0xffea
    6baa:	00 3c       	jmp	$+2      	;abs 0x6bac
    6bac:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6bb0:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    6bb4:	4e 43       	clr.b	r14		;
    6bb6:	0c 9d       	cmp	r13,	r12	;
    6bb8:	c4 4e e9 ff 	mov.b	r14,	-23(r4)	; 0xffe9
    6bbc:	14 2c       	jc	$+42     	;abs 0x6be6
    6bbe:	00 3c       	jmp	$+2      	;abs 0x6bc0
    6bc0:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6bc4:	4d 43       	clr.b	r13		;
    6bc6:	0c 93       	cmp	#0,	r12	;r3 As==00
    6bc8:	c4 4d e9 ff 	mov.b	r13,	-23(r4)	; 0xffe9
    6bcc:	0c 24       	jz	$+26     	;abs 0x6be6
    6bce:	00 3c       	jmp	$+2      	;abs 0x6bd0
    6bd0:	5c 44 f7 ff 	mov.b	-9(r4),	r12	;
    6bd4:	7c b0 80 ff 	bit.b	#65408,	r12	;#0xff80
    6bd8:	0d 42       	mov	r2,	r13	;
    6bda:	0d 11       	rra	r13		;
    6bdc:	1d f3       	and	#1,	r13	;r3 As==01
    6bde:	4c 4d       	mov.b	r13,	r12	;
    6be0:	c4 4c e9 ff 	mov.b	r12,	-23(r4)	; 0xffe9
    6be4:	00 3c       	jmp	$+2      	;abs 0x6be6
    6be6:	5c 44 e9 ff 	mov.b	-23(r4),r12	;0xffffffe9
    6bea:	4d 4c       	mov.b	r12,	r13	;
    6bec:	1d b3       	bit	#1,	r13	;r3 As==01
    6bee:	0c 24       	jz	$+26     	;abs 0x6c08
    6bf0:	00 3c       	jmp	$+2      	;abs 0x6bf2
    6bf2:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6bf6:	0c 5c       	rla	r12		;
    6bf8:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    6bfc:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6c00:	0c 5c       	rla	r12		;
    6c02:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    6c06:	d2 3f       	jmp	$-90     	;abs 0x6bac
    6c08:	00 3c       	jmp	$+2      	;abs 0x6c0a
    6c0a:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6c0e:	0c 93       	cmp	#0,	r12	;r3 As==00
    6c10:	24 24       	jz	$+74     	;abs 0x6c5a
    6c12:	00 3c       	jmp	$+2      	;abs 0x6c14
    6c14:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6c18:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    6c1c:	0c 9d       	cmp	r13,	r12	;
    6c1e:	10 28       	jnc	$+34     	;abs 0x6c40
    6c20:	00 3c       	jmp	$+2      	;abs 0x6c22
    6c22:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6c26:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    6c2a:	0d 8c       	sub	r12,	r13	;
    6c2c:	84 4d f8 ff 	mov	r13,	-8(r4)	; 0xfff8
    6c30:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6c34:	1d 44 f0 ff 	mov	-16(r4),r13	;0xfffffff0
    6c38:	0d dc       	bis	r12,	r13	;
    6c3a:	84 4d f0 ff 	mov	r13,	-16(r4)	; 0xfff0
    6c3e:	00 3c       	jmp	$+2      	;abs 0x6c40
    6c40:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    6c44:	12 c3       	clrc			
    6c46:	0c 10       	rrc	r12		;
    6c48:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    6c4c:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    6c50:	12 c3       	clrc			
    6c52:	0c 10       	rrc	r12		;
    6c54:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    6c58:	d8 3f       	jmp	$-78     	;abs 0x6c0a
    6c5a:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    6c5e:	0c 93       	cmp	#0,	r12	;r3 As==00
    6c60:	06 24       	jz	$+14     	;abs 0x6c6e
    6c62:	00 3c       	jmp	$+2      	;abs 0x6c64
    6c64:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6c68:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    6c6c:	05 3c       	jmp	$+12     	;abs 0x6c78
    6c6e:	1c 44 f0 ff 	mov	-16(r4),r12	;0xfffffff0
    6c72:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    6c76:	00 3c       	jmp	$+2      	;abs 0x6c78
    6c78:	1f 44 fa ff 	mov	-6(r4),	r15	;
    6c7c:	31 50 14 00 	add	#20,	r1	;#0x0014
    6c80:	3a 41       	pop	r10		;
    6c82:	3b 41       	pop	r11		;
    6c84:	34 41       	pop	r4		;
    6c86:	30 41       	ret			

00006c88 <__divhi3>:
    6c88:	04 12       	push	r4		;
    6c8a:	04 41       	mov	r1,	r4	;
    6c8c:	31 80 0c 00 	sub	#12,	r1	;#0x000c
    6c90:	0c 4e       	mov	r14,	r12	;
    6c92:	0d 4f       	mov	r15,	r13	;
    6c94:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6c98:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    6c9c:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa
    6ca0:	1e 44 fe ff 	mov	-2(r4),	r14	;
    6ca4:	0e 93       	cmp	#0,	r14	;r3 As==00
    6ca6:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    6caa:	84 4d f4 ff 	mov	r13,	-12(r4)	; 0xfff4
    6cae:	10 34       	jge	$+34     	;abs 0x6cd0
    6cb0:	00 3c       	jmp	$+2      	;abs 0x6cb2
    6cb2:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6cb6:	0d 43       	clr	r13		;
    6cb8:	0d 8c       	sub	r12,	r13	;
    6cba:	84 4d fe ff 	mov	r13,	-2(r4)	; 0xfffe
    6cbe:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6cc2:	0c 93       	cmp	#0,	r12	;r3 As==00
    6cc4:	0c 42       	mov	r2,	r12	;
    6cc6:	0c 11       	rra	r12		;
    6cc8:	1c f3       	and	#1,	r12	;r3 As==01
    6cca:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    6cce:	00 3c       	jmp	$+2      	;abs 0x6cd0
    6cd0:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6cd4:	0c 93       	cmp	#0,	r12	;r3 As==00
    6cd6:	10 34       	jge	$+34     	;abs 0x6cf8
    6cd8:	00 3c       	jmp	$+2      	;abs 0x6cda
    6cda:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6cde:	0d 43       	clr	r13		;
    6ce0:	0d 8c       	sub	r12,	r13	;
    6ce2:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    6ce6:	1c 44 fa ff 	mov	-6(r4),	r12	;
    6cea:	0c 93       	cmp	#0,	r12	;r3 As==00
    6cec:	0c 42       	mov	r2,	r12	;
    6cee:	0c 11       	rra	r12		;
    6cf0:	1c f3       	and	#1,	r12	;r3 As==01
    6cf2:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    6cf6:	00 3c       	jmp	$+2      	;abs 0x6cf8
    6cf8:	1f 44 fe ff 	mov	-2(r4),	r15	;
    6cfc:	1e 44 fc ff 	mov	-4(r4),	r14	;
    6d00:	0d 43       	clr	r13		;
    6d02:	b0 12 78 6b 	call	#27512		;#0x6b78
    6d06:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    6d0a:	1d 44 fa ff 	mov	-6(r4),	r13	;
    6d0e:	0d 93       	cmp	#0,	r13	;r3 As==00
    6d10:	08 24       	jz	$+18     	;abs 0x6d22
    6d12:	00 3c       	jmp	$+2      	;abs 0x6d14
    6d14:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6d18:	0d 43       	clr	r13		;
    6d1a:	0d 8c       	sub	r12,	r13	;
    6d1c:	84 4d f8 ff 	mov	r13,	-8(r4)	; 0xfff8
    6d20:	00 3c       	jmp	$+2      	;abs 0x6d22
    6d22:	1f 44 f8 ff 	mov	-8(r4),	r15	;
    6d26:	31 50 0c 00 	add	#12,	r1	;#0x000c
    6d2a:	34 41       	pop	r4		;
    6d2c:	30 41       	ret			
	...

00006d30 <__modhi3>:
    6d30:	04 12       	push	r4		;
    6d32:	04 41       	mov	r1,	r4	;
    6d34:	31 80 0c 00 	sub	#12,	r1	;#0x000c
    6d38:	0c 4e       	mov	r14,	r12	;
    6d3a:	0d 4f       	mov	r15,	r13	;
    6d3c:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6d40:	84 4e fc ff 	mov	r14,	-4(r4)	; 0xfffc
    6d44:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa
    6d48:	1e 44 fe ff 	mov	-2(r4),	r14	;
    6d4c:	0e 93       	cmp	#0,	r14	;r3 As==00
    6d4e:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    6d52:	84 4d f4 ff 	mov	r13,	-12(r4)	; 0xfff4
    6d56:	0a 34       	jge	$+22     	;abs 0x6d6c
    6d58:	00 3c       	jmp	$+2      	;abs 0x6d5a
    6d5a:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6d5e:	0d 43       	clr	r13		;
    6d60:	0d 8c       	sub	r12,	r13	;
    6d62:	84 4d fe ff 	mov	r13,	-2(r4)	; 0xfffe
    6d66:	94 43 fa ff 	mov	#1,	-6(r4)	;r3 As==01, 0xfffa
    6d6a:	00 3c       	jmp	$+2      	;abs 0x6d6c
    6d6c:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6d70:	0c 93       	cmp	#0,	r12	;r3 As==00
    6d72:	08 34       	jge	$+18     	;abs 0x6d84
    6d74:	00 3c       	jmp	$+2      	;abs 0x6d76
    6d76:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6d7a:	0d 43       	clr	r13		;
    6d7c:	0d 8c       	sub	r12,	r13	;
    6d7e:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    6d82:	00 3c       	jmp	$+2      	;abs 0x6d84
    6d84:	1f 44 fe ff 	mov	-2(r4),	r15	;
    6d88:	1e 44 fc ff 	mov	-4(r4),	r14	;
    6d8c:	1d 43       	mov	#1,	r13	;r3 As==01
    6d8e:	b0 12 78 6b 	call	#27512		;#0x6b78
    6d92:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    6d96:	1d 44 fa ff 	mov	-6(r4),	r13	;
    6d9a:	0d 93       	cmp	#0,	r13	;r3 As==00
    6d9c:	08 24       	jz	$+18     	;abs 0x6dae
    6d9e:	00 3c       	jmp	$+2      	;abs 0x6da0
    6da0:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6da4:	0d 43       	clr	r13		;
    6da6:	0d 8c       	sub	r12,	r13	;
    6da8:	84 4d f8 ff 	mov	r13,	-8(r4)	; 0xfff8
    6dac:	00 3c       	jmp	$+2      	;abs 0x6dae
    6dae:	1f 44 f8 ff 	mov	-8(r4),	r15	;
    6db2:	31 50 0c 00 	add	#12,	r1	;#0x000c
    6db6:	34 41       	pop	r4		;
    6db8:	30 41       	ret			
	...

00006dbc <__udivhi3>:
    6dbc:	04 12       	push	r4		;
    6dbe:	04 41       	mov	r1,	r4	;
    6dc0:	0b 12       	push	r11		;
    6dc2:	31 82       	sub	#8,	r1	;r2 As==11
    6dc4:	0c 4e       	mov	r14,	r12	;
    6dc6:	0d 4f       	mov	r15,	r13	;
    6dc8:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    6dcc:	84 4e fa ff 	mov	r14,	-6(r4)	; 0xfffa
    6dd0:	1f 44 fc ff 	mov	-4(r4),	r15	;
    6dd4:	0b 43       	clr	r11		;
    6dd6:	84 4d f8 ff 	mov	r13,	-8(r4)	; 0xfff8
    6dda:	0d 4b       	mov	r11,	r13	;
    6ddc:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    6de0:	b0 12 78 6b 	call	#27512		;#0x6b78
    6de4:	31 52       	add	#8,	r1	;r2 As==11
    6de6:	3b 41       	pop	r11		;
    6de8:	34 41       	pop	r4		;
    6dea:	30 41       	ret			

00006dec <__umodhi3>:
    6dec:	04 12       	push	r4		;
    6dee:	04 41       	mov	r1,	r4	;
    6df0:	0b 12       	push	r11		;
    6df2:	31 82       	sub	#8,	r1	;r2 As==11
    6df4:	0c 4e       	mov	r14,	r12	;
    6df6:	0d 4f       	mov	r15,	r13	;
    6df8:	84 4f fc ff 	mov	r15,	-4(r4)	; 0xfffc
    6dfc:	84 4e fa ff 	mov	r14,	-6(r4)	; 0xfffa
    6e00:	1f 44 fc ff 	mov	-4(r4),	r15	;
    6e04:	1b 43       	mov	#1,	r11	;r3 As==01
    6e06:	84 4d f8 ff 	mov	r13,	-8(r4)	; 0xfff8
    6e0a:	0d 4b       	mov	r11,	r13	;
    6e0c:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    6e10:	b0 12 78 6b 	call	#27512		;#0x6b78
    6e14:	31 52       	add	#8,	r1	;r2 As==11
    6e16:	3b 41       	pop	r11		;
    6e18:	34 41       	pop	r4		;
    6e1a:	30 41       	ret			

00006e1c <puts>:
    6e1c:	04 12       	push	r4		;
    6e1e:	04 41       	mov	r1,	r4	;
    6e20:	31 80 06 00 	sub	#6,	r1	;
    6e24:	0c 4f       	mov	r15,	r12	;
    6e26:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    6e2a:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    6e2e:	00 3c       	jmp	$+2      	;abs 0x6e30
    6e30:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6e34:	6d 4c       	mov.b	@r12,	r13	;
    6e36:	4d 93       	cmp.b	#0,	r13	;r3 As==00
    6e38:	0f 24       	jz	$+32     	;abs 0x6e58
    6e3a:	00 3c       	jmp	$+2      	;abs 0x6e3c
    6e3c:	1c 44 fe ff 	mov	-2(r4),	r12	;
    6e40:	0d 4c       	mov	r12,	r13	;
    6e42:	1d 53       	inc	r13		;
    6e44:	84 4d fe ff 	mov	r13,	-2(r4)	; 0xfffe
    6e48:	6c 4c       	mov.b	@r12,	r12	;
    6e4a:	8c 11       	sxt	r12		;
    6e4c:	0f 4c       	mov	r12,	r15	;
    6e4e:	b0 12 f4 74 	call	#29940		;#0x74f4
    6e52:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    6e56:	ec 3f       	jmp	$-38     	;abs 0x6e30
    6e58:	0f 43       	clr	r15		;
    6e5a:	31 50 06 00 	add	#6,	r1	;
    6e5e:	34 41       	pop	r4		;
    6e60:	30 41       	ret			
	...

00006e64 <printf>:
    6e64:	04 12       	push	r4		;
    6e66:	04 41       	mov	r1,	r4	;
    6e68:	31 80 20 00 	sub	#32,	r1	;#0x0020
    6e6c:	1c 44 04 00 	mov	4(r4),	r12	;
    6e70:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    6e74:	0c 44       	mov	r4,	r12	;
    6e76:	3c 50 06 00 	add	#6,	r12	;
    6e7a:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    6e7e:	00 3c       	jmp	$+2      	;abs 0x6e80
    6e80:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6e84:	0d 4c       	mov	r12,	r13	;
    6e86:	1d 53       	inc	r13		;
    6e88:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    6e8c:	6e 4c       	mov.b	@r12,	r14	;
    6e8e:	c4 4e fb ff 	mov.b	r14,	-5(r4)	; 0xfffb
    6e92:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    6e94:	02 20       	jnz	$+6      	;abs 0x6e9a
    6e96:	52 3d       	jmp	$+678    	;abs 0x713c
    6e98:	00 3c       	jmp	$+2      	;abs 0x6e9a
    6e9a:	5c 44 fb ff 	mov.b	-5(r4),	r12	;
    6e9e:	7c 90 25 00 	cmp.b	#37,	r12	;#0x0025
    6ea2:	02 24       	jz	$+6      	;abs 0x6ea8
    6ea4:	40 3d       	jmp	$+642    	;abs 0x7126
    6ea6:	00 3c       	jmp	$+2      	;abs 0x6ea8
    6ea8:	84 43 f2 ff 	mov	#0,	-14(r4)	;r3 As==00, 0xfff2
    6eac:	00 3c       	jmp	$+2      	;abs 0x6eae
    6eae:	1c 44 fc ff 	mov	-4(r4),	r12	;
    6eb2:	0d 4c       	mov	r12,	r13	;
    6eb4:	1d 53       	inc	r13		;
    6eb6:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    6eba:	6c 4c       	mov.b	@r12,	r12	;
    6ebc:	8c 11       	sxt	r12		;
    6ebe:	4e 4c       	mov.b	r12,	r14	;
    6ec0:	c4 4e fb ff 	mov.b	r14,	-5(r4)	; 0xfffb
    6ec4:	0c 93       	cmp	#0,	r12	;r3 As==00
    6ec6:	84 4c ec ff 	mov	r12,	-20(r4)	; 0xffec
    6eca:	02 20       	jnz	$+6      	;abs 0x6ed0
    6ecc:	27 3d       	jmp	$+592    	;abs 0x711c
    6ece:	00 3c       	jmp	$+2      	;abs 0x6ed0
    6ed0:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6ed4:	3c 90 30 00 	cmp	#48,	r12	;#0x0030
    6ed8:	02 20       	jnz	$+6      	;abs 0x6ede
    6eda:	0f 3d       	jmp	$+544    	;abs 0x70fa
    6edc:	00 3c       	jmp	$+2      	;abs 0x6ede
    6ede:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6ee2:	3c 90 63 00 	cmp	#99,	r12	;#0x0063
    6ee6:	34 24       	jz	$+106    	;abs 0x6f50
    6ee8:	00 3c       	jmp	$+2      	;abs 0x6eea
    6eea:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6eee:	3c 90 69 00 	cmp	#105,	r12	;#0x0069
    6ef2:	3d 24       	jz	$+124    	;abs 0x6f6e
    6ef4:	00 3c       	jmp	$+2      	;abs 0x6ef6
    6ef6:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6efa:	3c 90 6c 00 	cmp	#108,	r12	;#0x006c
    6efe:	66 24       	jz	$+206    	;abs 0x6fcc
    6f00:	00 3c       	jmp	$+2      	;abs 0x6f02
    6f02:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6f06:	3c 90 6e 00 	cmp	#110,	r12	;#0x006e
    6f0a:	60 24       	jz	$+194    	;abs 0x6fcc
    6f0c:	00 3c       	jmp	$+2      	;abs 0x6f0e
    6f0e:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6f12:	3c 90 73 00 	cmp	#115,	r12	;#0x0073
    6f16:	0d 24       	jz	$+28     	;abs 0x6f32
    6f18:	00 3c       	jmp	$+2      	;abs 0x6f1a
    6f1a:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6f1e:	3c 90 75 00 	cmp	#117,	r12	;#0x0075
    6f22:	25 24       	jz	$+76     	;abs 0x6f6e
    6f24:	00 3c       	jmp	$+2      	;abs 0x6f26
    6f26:	1c 44 ec ff 	mov	-20(r4),r12	;0xffffffec
    6f2a:	3c 90 78 00 	cmp	#120,	r12	;#0x0078
    6f2e:	8a 24       	jz	$+278    	;abs 0x7044
    6f30:	f8 3c       	jmp	$+498    	;abs 0x7122
    6f32:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    6f36:	1c 53       	inc	r12		;
    6f38:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    6f3c:	0d 4c       	mov	r12,	r13	;
    6f3e:	2d 53       	incd	r13		;
    6f40:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    6f44:	2f 4c       	mov	@r12,	r15	;
    6f46:	b0 12 1c 75 	call	#29980		;#0x751c
    6f4a:	84 4f ea ff 	mov	r15,	-22(r4)	; 0xffea
    6f4e:	ea 3c       	jmp	$+470    	;abs 0x7124
    6f50:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    6f54:	1c 53       	inc	r12		;
    6f56:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    6f5a:	0d 4c       	mov	r12,	r13	;
    6f5c:	2d 53       	incd	r13		;
    6f5e:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    6f62:	2f 4c       	mov	@r12,	r15	;
    6f64:	b0 12 f4 74 	call	#29940		;#0x74f4
    6f68:	84 4f e8 ff 	mov	r15,	-24(r4)	; 0xffe8
    6f6c:	db 3c       	jmp	$+440    	;abs 0x7124
    6f6e:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    6f72:	1c 53       	inc	r12		;
    6f74:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    6f78:	0d 4c       	mov	r12,	r13	;
    6f7a:	2d 53       	incd	r13		;
    6f7c:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    6f80:	2c 4c       	mov	@r12,	r12	;
    6f82:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    6f86:	5e 44 fb ff 	mov.b	-5(r4),	r14	;
    6f8a:	7e 90 69 00 	cmp.b	#105,	r14	;#0x0069
    6f8e:	13 20       	jnz	$+40     	;abs 0x6fb6
    6f90:	00 3c       	jmp	$+2      	;abs 0x6f92
    6f92:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6f96:	0c 93       	cmp	#0,	r12	;r3 As==00
    6f98:	0e 34       	jge	$+30     	;abs 0x6fb6
    6f9a:	00 3c       	jmp	$+2      	;abs 0x6f9c
    6f9c:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    6fa0:	0d 43       	clr	r13		;
    6fa2:	0d 8c       	sub	r12,	r13	;
    6fa4:	84 4d f8 ff 	mov	r13,	-8(r4)	; 0xfff8
    6fa8:	3f 40 2d 00 	mov	#45,	r15	;#0x002d
    6fac:	b0 12 f4 74 	call	#29940		;#0x74f4
    6fb0:	84 4f e6 ff 	mov	r15,	-26(r4)	; 0xffe6
    6fb4:	00 3c       	jmp	$+2      	;abs 0x6fb6
    6fb6:	1e 44 f8 ff 	mov	-8(r4),	r14	;
    6fba:	3c 40 14 00 	mov	#20,	r12	;#0x0014
    6fbe:	3c 50 b4 4a 	add	#19124,	r12	;#0x4ab4
    6fc2:	0f 43       	clr	r15		;
    6fc4:	0d 4c       	mov	r12,	r13	;
    6fc6:	b0 12 50 71 	call	#29008		;#0x7150
    6fca:	ac 3c       	jmp	$+346    	;abs 0x7124
    6fcc:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    6fd0:	1c 53       	inc	r12		;
    6fd2:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    6fd6:	0d 4c       	mov	r12,	r13	;
    6fd8:	2d 53       	incd	r13		;
    6fda:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    6fde:	2c 4c       	mov	@r12,	r12	;
    6fe0:	1d 44 ee ff 	mov	-18(r4),r13	;0xffffffee
    6fe4:	0e 4d       	mov	r13,	r14	;
    6fe6:	2e 53       	incd	r14		;
    6fe8:	84 4e ee ff 	mov	r14,	-18(r4)	; 0xffee
    6fec:	2d 4d       	mov	@r13,	r13	;
    6fee:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    6ff2:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    6ff6:	5f 44 fb ff 	mov.b	-5(r4),	r15	;
    6ffa:	7f 90 6c 00 	cmp.b	#108,	r15	;#0x006c
    6ffe:	19 20       	jnz	$+52     	;abs 0x7032
    7000:	00 3c       	jmp	$+2      	;abs 0x7002
    7002:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    7006:	0c 93       	cmp	#0,	r12	;r3 As==00
    7008:	14 34       	jge	$+42     	;abs 0x7032
    700a:	00 3c       	jmp	$+2      	;abs 0x700c
    700c:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    7010:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    7014:	0e 43       	clr	r14		;
    7016:	0f 4e       	mov	r14,	r15	;
    7018:	0f 8c       	sub	r12,	r15	;
    701a:	0e 7d       	subc	r13,	r14	;
    701c:	84 4e f6 ff 	mov	r14,	-10(r4)	; 0xfff6
    7020:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    7024:	3f 40 2d 00 	mov	#45,	r15	;#0x002d
    7028:	b0 12 f4 74 	call	#29940		;#0x74f4
    702c:	84 4f e4 ff 	mov	r15,	-28(r4)	; 0xffe4
    7030:	00 3c       	jmp	$+2      	;abs 0x7032
    7032:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfffffff6
    7036:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfffffff4
    703a:	3d 40 b4 4a 	mov	#19124,	r13	;#0x4ab4
    703e:	b0 12 50 71 	call	#29008		;#0x7150
    7042:	70 3c       	jmp	$+226    	;abs 0x7124
    7044:	1c 44 ee ff 	mov	-18(r4),r12	;0xffffffee
    7048:	1c 53       	inc	r12		;
    704a:	3c f0 fe ff 	and	#65534,	r12	;#0xfffe
    704e:	0d 4c       	mov	r12,	r13	;
    7050:	2d 53       	incd	r13		;
    7052:	84 4d ee ff 	mov	r13,	-18(r4)	; 0xffee
    7056:	2c 4c       	mov	@r12,	r12	;
    7058:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    705c:	0c 11       	rra	r12		;
    705e:	0c 11       	rra	r12		;
    7060:	0c 11       	rra	r12		;
    7062:	0c 11       	rra	r12		;
    7064:	0c 11       	rra	r12		;
    7066:	0c 11       	rra	r12		;
    7068:	0c 11       	rra	r12		;
    706a:	0c 11       	rra	r12		;
    706c:	0c 11       	rra	r12		;
    706e:	0c 11       	rra	r12		;
    7070:	0c 11       	rra	r12		;
    7072:	0c 11       	rra	r12		;
    7074:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    7078:	0c 93       	cmp	#0,	r12	;r3 As==00
    707a:	06 20       	jnz	$+14     	;abs 0x7088
    707c:	00 3c       	jmp	$+2      	;abs 0x707e
    707e:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    7082:	2c 92       	cmp	#4,	r12	;r2 As==10
    7084:	06 38       	jl	$+14     	;abs 0x7092
    7086:	00 3c       	jmp	$+2      	;abs 0x7088
    7088:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfffffff0
    708c:	b0 12 9c 72 	call	#29340		;#0x729c
    7090:	00 3c       	jmp	$+2      	;abs 0x7092
    7092:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    7096:	0c 11       	rra	r12		;
    7098:	0c 11       	rra	r12		;
    709a:	0c 11       	rra	r12		;
    709c:	0c 11       	rra	r12		;
    709e:	0c 11       	rra	r12		;
    70a0:	0c 11       	rra	r12		;
    70a2:	0c 11       	rra	r12		;
    70a4:	0c 11       	rra	r12		;
    70a6:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    70aa:	0c 93       	cmp	#0,	r12	;r3 As==00
    70ac:	07 20       	jnz	$+16     	;abs 0x70bc
    70ae:	00 3c       	jmp	$+2      	;abs 0x70b0
    70b0:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    70b4:	3c 90 03 00 	cmp	#3,	r12	;
    70b8:	06 38       	jl	$+14     	;abs 0x70c6
    70ba:	00 3c       	jmp	$+2      	;abs 0x70bc
    70bc:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfffffff0
    70c0:	b0 12 9c 72 	call	#29340		;#0x729c
    70c4:	00 3c       	jmp	$+2      	;abs 0x70c6
    70c6:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    70ca:	0c 11       	rra	r12		;
    70cc:	0c 11       	rra	r12		;
    70ce:	0c 11       	rra	r12		;
    70d0:	0c 11       	rra	r12		;
    70d2:	84 4c f0 ff 	mov	r12,	-16(r4)	; 0xfff0
    70d6:	0c 93       	cmp	#0,	r12	;r3 As==00
    70d8:	06 20       	jnz	$+14     	;abs 0x70e6
    70da:	00 3c       	jmp	$+2      	;abs 0x70dc
    70dc:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    70e0:	2c 93       	cmp	#2,	r12	;r3 As==10
    70e2:	06 38       	jl	$+14     	;abs 0x70f0
    70e4:	00 3c       	jmp	$+2      	;abs 0x70e6
    70e6:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfffffff0
    70ea:	b0 12 9c 72 	call	#29340		;#0x729c
    70ee:	00 3c       	jmp	$+2      	;abs 0x70f0
    70f0:	1f 44 f8 ff 	mov	-8(r4),	r15	;
    70f4:	b0 12 9c 72 	call	#29340		;#0x729c
    70f8:	15 3c       	jmp	$+44     	;abs 0x7124
    70fa:	1c 44 fc ff 	mov	-4(r4),	r12	;
    70fe:	0d 4c       	mov	r12,	r13	;
    7100:	1d 53       	inc	r13		;
    7102:	84 4d fc ff 	mov	r13,	-4(r4)	; 0xfffc
    7106:	6e 4c       	mov.b	@r12,	r14	;
    7108:	c4 4e fb ff 	mov.b	r14,	-5(r4)	; 0xfffb
    710c:	5c 44 fb ff 	mov.b	-5(r4),	r12	;
    7110:	8c 11       	sxt	r12		;
    7112:	3c 50 d0 ff 	add	#65488,	r12	;#0xffd0
    7116:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    711a:	c9 3e       	jmp	$-620    	;abs 0x6eae
    711c:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    7120:	10 3c       	jmp	$+34     	;abs 0x7142
    7122:	02 3c       	jmp	$+6      	;abs 0x7128
    7124:	0a 3c       	jmp	$+22     	;abs 0x713a
    7126:	00 3c       	jmp	$+2      	;abs 0x7128
    7128:	5c 44 fb ff 	mov.b	-5(r4),	r12	;
    712c:	8c 11       	sxt	r12		;
    712e:	0f 4c       	mov	r12,	r15	;
    7130:	b0 12 f4 74 	call	#29940		;#0x74f4
    7134:	84 4f e2 ff 	mov	r15,	-30(r4)	; 0xffe2
    7138:	00 3c       	jmp	$+2      	;abs 0x713a
    713a:	a2 3e       	jmp	$-698    	;abs 0x6e80
    713c:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    7140:	00 3c       	jmp	$+2      	;abs 0x7142
    7142:	1f 44 fe ff 	mov	-2(r4),	r15	;
    7146:	31 50 20 00 	add	#32,	r1	;#0x0020
    714a:	34 41       	pop	r4		;
    714c:	30 41       	ret			
	...

00007150 <xtoa>:
    7150:	04 12       	push	r4		;
    7152:	04 41       	mov	r1,	r4	;
    7154:	0b 12       	push	r11		;
    7156:	0a 12       	push	r10		;
    7158:	09 12       	push	r9		;
    715a:	31 80 22 00 	sub	#34,	r1	;#0x0022
    715e:	0c 4f       	mov	r15,	r12	;
    7160:	0b 4e       	mov	r14,	r11	;
    7162:	0a 4d       	mov	r13,	r10	;
    7164:	84 4f f6 ff 	mov	r15,	-10(r4)	; 0xfff6
    7168:	84 4e f4 ff 	mov	r14,	-12(r4)	; 0xfff4
    716c:	84 4d f2 ff 	mov	r13,	-14(r4)	; 0xfff2
    7170:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    7174:	1e 44 f4 ff 	mov	-12(r4),r14	;0xfffffff4
    7178:	0e dd       	bis	r13,	r14	;
    717a:	0e 93       	cmp	#0,	r14	;r3 As==00
    717c:	84 4c ea ff 	mov	r12,	-22(r4)	; 0xffea
    7180:	84 4a e8 ff 	mov	r10,	-24(r4)	; 0xffe8
    7184:	84 4b e6 ff 	mov	r11,	-26(r4)	; 0xffe6
    7188:	7a 24       	jz	$+246    	;abs 0x727e
    718a:	00 3c       	jmp	$+2      	;abs 0x718c
    718c:	00 3c       	jmp	$+2      	;abs 0x718e
    718e:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    7192:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    7196:	1e 44 f2 ff 	mov	-14(r4),r14	;0xfffffff2
    719a:	2f 4e       	mov	@r14,	r15	;
    719c:	1e 4e 02 00 	mov	2(r14),	r14	;
    71a0:	0d 9e       	cmp	r14,	r13	;
    71a2:	0b 42       	mov	r2,	r11	;
    71a4:	1b f3       	and	#1,	r11	;r3 As==01
    71a6:	0c 9f       	cmp	r15,	r12	;
    71a8:	0c 42       	mov	r2,	r12	;
    71aa:	1c f3       	and	#1,	r12	;r3 As==01
    71ac:	0d 9e       	cmp	r14,	r13	;
    71ae:	84 4b e4 ff 	mov	r11,	-28(r4)	; 0xffe4
    71b2:	84 4c e2 ff 	mov	r12,	-30(r4)	; 0xffe2
    71b6:	04 24       	jz	$+10     	;abs 0x71c0
    71b8:	1c 44 e4 ff 	mov	-28(r4),r12	;0xffffffe4
    71bc:	84 4c e2 ff 	mov	r12,	-30(r4)	; 0xffe2
    71c0:	1c 44 e2 ff 	mov	-30(r4),r12	;0xffffffe2
    71c4:	1c b3       	bit	#1,	r12	;r3 As==01
    71c6:	07 20       	jnz	$+16     	;abs 0x71d6
    71c8:	00 3c       	jmp	$+2      	;abs 0x71ca
    71ca:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    71ce:	2c 52       	add	#4,	r12	;r2 As==10
    71d0:	84 4c f2 ff 	mov	r12,	-14(r4)	; 0xfff2
    71d4:	dc 3f       	jmp	$-70     	;abs 0x718e
    71d6:	00 3c       	jmp	$+2      	;abs 0x71d8
    71d8:	1c 44 f2 ff 	mov	-14(r4),r12	;0xfffffff2
    71dc:	0d 4c       	mov	r12,	r13	;
    71de:	2d 52       	add	#4,	r13	;r2 As==10
    71e0:	84 4d f2 ff 	mov	r13,	-14(r4)	; 0xfff2
    71e4:	2d 4c       	mov	@r12,	r13	;
    71e6:	1c 4c 02 00 	mov	2(r12),	r12	;
    71ea:	84 4c ee ff 	mov	r12,	-18(r4)	; 0xffee
    71ee:	84 4d ec ff 	mov	r13,	-20(r4)	; 0xffec
    71f2:	f4 40 30 00 	mov.b	#48,	-15(r4)	;#0x0030, 0xfff1
    71f6:	f1 ff 
    71f8:	00 3c       	jmp	$+2      	;abs 0x71fa
    71fa:	1c 44 f4 ff 	mov	-12(r4),r12	;0xfffffff4
    71fe:	1d 44 f6 ff 	mov	-10(r4),r13	;0xfffffff6
    7202:	1e 44 ec ff 	mov	-20(r4),r14	;0xffffffec
    7206:	1f 44 ee ff 	mov	-18(r4),r15	;0xffffffee
    720a:	0d 9f       	cmp	r15,	r13	;
    720c:	0b 42       	mov	r2,	r11	;
    720e:	1a 43       	mov	#1,	r10	;r3 As==01
    7210:	09 4a       	mov	r10,	r9	;
    7212:	09 cb       	bic	r11,	r9	;
    7214:	0c 9e       	cmp	r14,	r12	;
    7216:	0c 42       	mov	r2,	r12	;
    7218:	0a cc       	bic	r12,	r10	;
    721a:	0d 9f       	cmp	r15,	r13	;
    721c:	84 49 e0 ff 	mov	r9,	-32(r4)	; 0xffe0
    7220:	84 4a de ff 	mov	r10,	-34(r4)	; 0xffde
    7224:	04 24       	jz	$+10     	;abs 0x722e
    7226:	1c 44 e0 ff 	mov	-32(r4),r12	;0xffffffe0
    722a:	84 4c de ff 	mov	r12,	-34(r4)	; 0xffde
    722e:	1c 44 de ff 	mov	-34(r4),r12	;0xffffffde
    7232:	1c b3       	bit	#1,	r12	;r3 As==01
    7234:	15 20       	jnz	$+44     	;abs 0x7260
    7236:	00 3c       	jmp	$+2      	;abs 0x7238
    7238:	5c 44 f1 ff 	mov.b	-15(r4),r12	;0xfffffff1
    723c:	5c 53       	inc.b	r12		;
    723e:	c4 4c f1 ff 	mov.b	r12,	-15(r4)	; 0xfff1
    7242:	1d 44 ec ff 	mov	-20(r4),r13	;0xffffffec
    7246:	1e 44 ee ff 	mov	-18(r4),r14	;0xffffffee
    724a:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfffffff4
    724e:	1b 44 f6 ff 	mov	-10(r4),r11	;0xfffffff6
    7252:	0f 8d       	sub	r13,	r15	;
    7254:	0b 7e       	subc	r14,	r11	;
    7256:	84 4b f6 ff 	mov	r11,	-10(r4)	; 0xfff6
    725a:	84 4f f4 ff 	mov	r15,	-12(r4)	; 0xfff4
    725e:	cd 3f       	jmp	$-100    	;abs 0x71fa
    7260:	5c 44 f1 ff 	mov.b	-15(r4),r12	;0xfffffff1
    7264:	8c 11       	sxt	r12		;
    7266:	0f 4c       	mov	r12,	r15	;
    7268:	b0 12 f4 74 	call	#29940		;#0x74f4
    726c:	84 4f dc ff 	mov	r15,	-36(r4)	; 0xffdc
    7270:	00 3c       	jmp	$+2      	;abs 0x7272
    7272:	5c 44 ec ff 	mov.b	-20(r4),r12	;0xffffffec
    7276:	5c b3       	bit.b	#1,	r12	;r3 As==01
    7278:	af 27       	jz	$-160    	;abs 0x71d8
    727a:	00 3c       	jmp	$+2      	;abs 0x727c
    727c:	07 3c       	jmp	$+16     	;abs 0x728c
    727e:	3f 40 30 00 	mov	#48,	r15	;#0x0030
    7282:	b0 12 f4 74 	call	#29940		;#0x74f4
    7286:	84 4f da ff 	mov	r15,	-38(r4)	; 0xffda
    728a:	00 3c       	jmp	$+2      	;abs 0x728c
    728c:	31 50 22 00 	add	#34,	r1	;#0x0022
    7290:	39 41       	pop	r9		;
    7292:	3a 41       	pop	r10		;
    7294:	3b 41       	pop	r11		;
    7296:	34 41       	pop	r4		;
    7298:	30 41       	ret			
	...

0000729c <puth>:
    729c:	04 12       	push	r4		;
    729e:	04 41       	mov	r1,	r4	;
    72a0:	31 82       	sub	#8,	r1	;r2 As==11
    72a2:	0c 4f       	mov	r15,	r12	;
    72a4:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    72a8:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    72ac:	5d 4f dc 4a 	mov.b	19164(r15),r13	;0x04adc
    72b0:	c4 4d fd ff 	mov.b	r13,	-3(r4)	; 0xfffd
    72b4:	1f 44 fe ff 	mov	-2(r4),	r15	;
    72b8:	3f f0 0f 00 	and	#15,	r15	;#0x000f
    72bc:	5f 4f dc 4a 	mov.b	19164(r15),r15	;0x04adc
    72c0:	8f 11       	sxt	r15		;
    72c2:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    72c6:	b0 12 f4 74 	call	#29940		;#0x74f4
    72ca:	84 4f f8 ff 	mov	r15,	-8(r4)	; 0xfff8
    72ce:	31 52       	add	#8,	r1	;r2 As==11
    72d0:	34 41       	pop	r4		;
    72d2:	30 41       	ret			

000072d4 <task_prologue>:
    72d4:	04 12       	push	r4		;
    72d6:	04 41       	mov	r1,	r4	;
    72d8:	31 82       	sub	#8,	r1	;r2 As==11
    72da:	1c 42 44 51 	mov	&0x5144,r12	;0x5144
    72de:	3c 93       	cmp	#-1,	r12	;r3 As==11
    72e0:	09 20       	jnz	$+20     	;abs 0x72f4
    72e2:	00 3c       	jmp	$+2      	;abs 0x72e4
    72e4:	b0 12 50 69 	call	#26960		;#0x6950
    72e8:	1c 42 44 51 	mov	&0x5144,r12	;0x5144
    72ec:	1c 53       	inc	r12		;
    72ee:	82 4c 44 51 	mov	r12,	&0x5144	;
    72f2:	00 3c       	jmp	$+2      	;abs 0x72f4
    72f4:	1c 42 44 51 	mov	&0x5144,r12	;0x5144
    72f8:	1c 53       	inc	r12		;
    72fa:	82 4c 44 51 	mov	r12,	&0x5144	;
    72fe:	1c 42 42 51 	mov	&0x5142,r12	;0x5142
    7302:	1c 4c 04 00 	mov	4(r12),	r12	;
    7306:	2c 4c       	mov	@r12,	r12	;
    7308:	84 4c fe ff 	mov	r12,	-2(r4)	; 0xfffe
    730c:	1c 42 42 51 	mov	&0x5142,r12	;0x5142
    7310:	1c 4c 02 00 	mov	2(r12),	r12	;
    7314:	1d 44 fe ff 	mov	-2(r4),	r13	;
    7318:	1d 4d 08 00 	mov	8(r13),	r13	;
    731c:	0c 9d       	cmp	r13,	r12	;
    731e:	3e 24       	jz	$+126    	;abs 0x739c
    7320:	00 3c       	jmp	$+2      	;abs 0x7322
    7322:	00 3c       	jmp	$+2      	;abs 0x7324
    7324:	1c 42 24 51 	mov	&0x5124,r12	;0x5124
    7328:	1d 42 26 51 	mov	&0x5126,r13	;0x5126
    732c:	0c 9d       	cmp	r13,	r12	;
    732e:	29 2c       	jc	$+84     	;abs 0x7382
    7330:	00 3c       	jmp	$+2      	;abs 0x7332
    7332:	1c 42 20 51 	mov	&0x5120,r12	;0x5120
    7336:	1d 42 24 51 	mov	&0x5124,r13	;0x5124
    733a:	0d 5d       	rla	r13		;
    733c:	0c 5d       	add	r13,	r12	;
    733e:	2c 4c       	mov	@r12,	r12	;
    7340:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    7344:	1c 42 1e 51 	mov	&0x511e,r12	;0x511e
    7348:	1d 42 24 51 	mov	&0x5124,r13	;0x5124
    734c:	0d 5d       	rla	r13		;
    734e:	0c 5d       	add	r13,	r12	;
    7350:	2c 4c       	mov	@r12,	r12	;
    7352:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    7356:	1c 42 22 51 	mov	&0x5122,r12	;0x5122
    735a:	1d 42 24 51 	mov	&0x5124,r13	;0x5124
    735e:	0d 5d       	rla	r13		;
    7360:	0c 5d       	add	r13,	r12	;
    7362:	2c 4c       	mov	@r12,	r12	;
    7364:	84 4c f8 ff 	mov	r12,	-8(r4)	; 0xfff8
    7368:	1f 44 fc ff 	mov	-4(r4),	r15	;
    736c:	1e 44 fa ff 	mov	-6(r4),	r14	;
    7370:	0d 4c       	mov	r12,	r13	;
    7372:	b0 12 b8 69 	call	#27064		;#0x69b8
    7376:	1c 42 24 51 	mov	&0x5124,r12	;0x5124
    737a:	1c 53       	inc	r12		;
    737c:	82 4c 24 51 	mov	r12,	&0x5124	;
    7380:	d1 3f       	jmp	$-92     	;abs 0x7324
    7382:	82 43 26 51 	mov	#0,	&0x5126	;r3 As==00
    7386:	82 43 24 51 	mov	#0,	&0x5124	;r3 As==00
    738a:	1c 42 42 51 	mov	&0x5142,r12	;0x5142
    738e:	1c 4c 02 00 	mov	2(r12),	r12	;
    7392:	1d 44 fe ff 	mov	-2(r4),	r13	;
    7396:	8d 4c 08 00 	mov	r12,	8(r13)	;
    739a:	03 3c       	jmp	$+8      	;abs 0x73a2
    739c:	82 43 26 51 	mov	#0,	&0x5126	;r3 As==00
    73a0:	00 3c       	jmp	$+2      	;abs 0x73a2
    73a2:	31 52       	add	#8,	r1	;r2 As==11
    73a4:	34 41       	pop	r4		;
    73a6:	30 41       	ret			

000073a8 <transition_to>:
    73a8:	04 12       	push	r4		;
    73aa:	04 41       	mov	r1,	r4	;
    73ac:	31 80 0a 00 	sub	#10,	r1	;#0x000a
    73b0:	0c 4f       	mov	r15,	r12	;
    73b2:	84 4f fe ff 	mov	r15,	-2(r4)	; 0xfffe
    73b6:	1f 42 42 51 	mov	&0x5142,r15	;0x5142
    73ba:	3d 40 3c 51 	mov	#20796,	r13	;#0x513c
    73be:	3e 40 30 51 	mov	#20784,	r14	;#0x5130
    73c2:	0f 9d       	cmp	r13,	r15	;
    73c4:	84 4c fa ff 	mov	r12,	-6(r4)	; 0xfffa
    73c8:	84 4d f8 ff 	mov	r13,	-8(r4)	; 0xfff8
    73cc:	84 4e f6 ff 	mov	r14,	-10(r4)	; 0xfff6
    73d0:	04 24       	jz	$+10     	;abs 0x73da
    73d2:	1c 44 f8 ff 	mov	-8(r4),	r12	;
    73d6:	84 4c f6 ff 	mov	r12,	-10(r4)	; 0xfff6
    73da:	1c 44 f6 ff 	mov	-10(r4),r12	;0xfffffff6
    73de:	84 4c fc ff 	mov	r12,	-4(r4)	; 0xfffc
    73e2:	1d 44 fe ff 	mov	-2(r4),	r13	;
    73e6:	8c 4d 00 00 	mov	r13,	0(r12)	;
    73ea:	1c 42 42 51 	mov	&0x5142,r12	;0x5142
    73ee:	1c 4c 02 00 	mov	2(r12),	r12	;
    73f2:	1c 53       	inc	r12		;
    73f4:	1d 44 fc ff 	mov	-4(r4),	r13	;
    73f8:	8d 4c 02 00 	mov	r12,	2(r13)	;
    73fc:	1c 42 42 51 	mov	&0x5142,r12	;0x5142
    7400:	1c 4c 02 00 	mov	2(r12),	r12	;
    7404:	1d 44 fc ff 	mov	-4(r4),	r13	;
    7408:	1d 4d 04 00 	mov	4(r13),	r13	;
    740c:	8d 4c 02 00 	mov	r12,	2(r13)	;
    7410:	1c 42 42 51 	mov	&0x5142,r12	;0x5142
    7414:	2c 4c       	mov	@r12,	r12	;
    7416:	1d 44 fc ff 	mov	-4(r4),	r13	;
    741a:	1d 4d 04 00 	mov	4(r13),	r13	;
    741e:	8d 4c 00 00 	mov	r12,	0(r13)	;
    7422:	1c 44 fc ff 	mov	-4(r4),	r12	;
    7426:	82 4c 42 51 	mov	r12,	&0x5142	;
    742a:	b0 12 d4 72 	call	#29396		;#0x72d4
    742e:	1c 44 fe ff 	mov	-2(r4),	r12	;
    7432:	2c 4c       	mov	@r12,	r12	;
    7434:	31 40 00 24 	mov	#9216,	r1	;#0x2400
    7438:	00 4c       	br	r12		;
    743a:	31 50 0a 00 	add	#10,	r1	;#0x000a
    743e:	34 41       	pop	r4		;
    7440:	30 41       	ret			
	...

00007444 <write_to_gbuf>:
    7444:	04 12       	push	r4		;
    7446:	04 41       	mov	r1,	r4	;
    7448:	0b 12       	push	r11		;
    744a:	0a 12       	push	r10		;
    744c:	31 80 0c 00 	sub	#12,	r1	;#0x000c
    7450:	0c 4d       	mov	r13,	r12	;
    7452:	0b 4e       	mov	r14,	r11	;
    7454:	0a 4f       	mov	r15,	r10	;
    7456:	84 4f fa ff 	mov	r15,	-6(r4)	; 0xfffa
    745a:	84 4e f8 ff 	mov	r14,	-8(r4)	; 0xfff8
    745e:	84 4d f6 ff 	mov	r13,	-10(r4)	; 0xfff6
    7462:	1e 42 22 51 	mov	&0x5122,r14	;0x5122
    7466:	1f 42 26 51 	mov	&0x5126,r15	;0x5126
    746a:	0f 5f       	rla	r15		;
    746c:	0e 5f       	add	r15,	r14	;
    746e:	8e 4d 00 00 	mov	r13,	0(r14)	;
    7472:	1d 44 f8 ff 	mov	-8(r4),	r13	;
    7476:	1e 42 20 51 	mov	&0x5120,r14	;0x5120
    747a:	1f 42 26 51 	mov	&0x5126,r15	;0x5126
    747e:	0f 5f       	rla	r15		;
    7480:	0e 5f       	add	r15,	r14	;
    7482:	8e 4d 00 00 	mov	r13,	0(r14)	;
    7486:	1d 44 fa ff 	mov	-6(r4),	r13	;
    748a:	1e 42 1e 51 	mov	&0x511e,r14	;0x511e
    748e:	1f 42 26 51 	mov	&0x5126,r15	;0x5126
    7492:	0f 5f       	rla	r15		;
    7494:	0e 5f       	add	r15,	r14	;
    7496:	8e 4d 00 00 	mov	r13,	0(r14)	;
    749a:	1d 42 26 51 	mov	&0x5126,r13	;0x5126
    749e:	1d 53       	inc	r13		;
    74a0:	82 4d 26 51 	mov	r13,	&0x5126	;
    74a4:	84 4c f4 ff 	mov	r12,	-12(r4)	; 0xfff4
    74a8:	84 4b f2 ff 	mov	r11,	-14(r4)	; 0xfff2
    74ac:	84 4a f0 ff 	mov	r10,	-16(r4)	; 0xfff0
    74b0:	31 50 0c 00 	add	#12,	r1	;#0x000c
    74b4:	3a 41       	pop	r10		;
    74b6:	3b 41       	pop	r11		;
    74b8:	34 41       	pop	r4		;
    74ba:	30 41       	ret			

000074bc <main>:
    74bc:	04 12       	push	r4		;
    74be:	04 41       	mov	r1,	r4	;
    74c0:	21 83       	decd	r1		;
    74c2:	84 43 fe ff 	mov	#0,	-2(r4)	;r3 As==00, 0xfffe
    74c6:	b0 12 44 69 	call	#26948		;#0x6944
    74ca:	b0 12 d4 72 	call	#29396		;#0x72d4
    74ce:	1c 42 42 51 	mov	&0x5142,r12	;0x5142
    74d2:	2c 4c       	mov	@r12,	r12	;
    74d4:	2c 4c       	mov	@r12,	r12	;
    74d6:	00 4c       	br	r12		;
    74d8:	0f 43       	clr	r15		;
    74da:	21 53       	incd	r1		;
    74dc:	34 41       	pop	r4		;
    74de:	30 41       	ret			

000074e0 <__mulhi3hw_noint>:
    74e0:	82 4f c0 04 	mov	r15,	&0x04c0	;
    74e4:	82 4e c8 04 	mov	r14,	&0x04c8	;
    74e8:	1f 42 ca 04 	mov	&0x04ca,r15	;0x04ca
    74ec:	30 41       	ret			

000074ee <mspconsole_init>:

#include <stdlib.h>

void mspconsole_init()
{
    UART_init();
    74ee:	b0 12 58 75 	call	#30040		;#0x7558
}
    74f2:	30 41       	ret			

000074f4 <io_putchar>:

int io_putchar(int c)
{
	unsigned r12;
        __asm__ volatile ("mov r12, %0\n"
    74f4:	0c 4c       	mov	r12,	r12	;
    74f6:	0c 4f       	mov	r15,	r12	;
    74f8:	b0 12 00 75 	call	#29952		;#0x7500
    74fc:	0c 4c       	mov	r12,	r12	;
			"mov r15, r12\n"
			"call #io_putchar_c\n"
			"mov %0, r12\n"
			: "=r" (r12)
			);
}
    74fe:	30 41       	ret			

00007500 <io_putchar_c>:

int io_putchar_c(int c)
{
    7500:	0a 15       	pushm	#1,	r10	;16-bit words
    7502:	21 83       	decd	r1		;
    7504:	0a 4c       	mov	r12,	r10	;
    uint8_t ch = c;
    7506:	c1 4c 01 00 	mov.b	r12,	1(r1)	;
    UART_send(&ch, 1);
    750a:	0c 41       	mov	r1,	r12	;
    750c:	1c 53       	inc	r12		;
    750e:	1d 43       	mov	#1,	r13	;r3 As==01
    7510:	b0 12 e4 75 	call	#30180		;#0x75e4
    return c;
}
    7514:	0c 4a       	mov	r10,	r12	;
    7516:	21 53       	incd	r1		;
    7518:	0a 17       	popm	#1,	r10	;16-bit words
    751a:	30 41       	ret			

0000751c <io_puts_no_newline>:

int io_puts_no_newline(const char *ptr)
{
    751c:	0a 15       	pushm	#1,	r10	;16-bit words
    unsigned len = 0;
    const char *p = ptr;

    while (*p++ != '\0')
    751e:	cc 93 00 00 	cmp.b	#0,	0(r12)	;r3 As==00
    7522:	08 24       	jz	$+18     	;abs 0x7534
    7524:	0a 43       	clr	r10		;
        len++;
    7526:	1a 53       	inc	r10		;
    7528:	0d 4c       	mov	r12,	r13	;
    752a:	0d 5a       	add	r10,	r13	;
int io_puts_no_newline(const char *ptr)
{
    unsigned len = 0;
    const char *p = ptr;

    while (*p++ != '\0')
    752c:	cd 93 00 00 	cmp.b	#0,	0(r13)	;r3 As==00
    7530:	fa 23       	jnz	$-10     	;abs 0x7526
    7532:	01 3c       	jmp	$+4      	;abs 0x7536
    return c;
}

int io_puts_no_newline(const char *ptr)
{
    unsigned len = 0;
    7534:	0a 43       	clr	r10		;
    const char *p = ptr;

    while (*p++ != '\0')
        len++;

    UART_send((uint8_t *)ptr, len);
    7536:	0d 4a       	mov	r10,	r13	;
    7538:	b0 12 e4 75 	call	#30180		;#0x75e4
    return len;
}
    753c:	0c 4a       	mov	r10,	r12	;
    753e:	0a 17       	popm	#1,	r10	;16-bit words
    7540:	30 41       	ret			

00007542 <io_puts>:

int io_puts(const char *ptr)
{
    7542:	0a 15       	pushm	#1,	r10	;16-bit words
    unsigned len;

    len = io_puts_no_newline(ptr);
    7544:	b0 12 1c 75 	call	#29980		;#0x751c
    7548:	0a 4c       	mov	r12,	r10	;

    // Semantics of puts are annoying...
    io_putchar('\n');
    754a:	3c 40 0a 00 	mov	#10,	r12	;#0x000a
    754e:	b0 12 f4 74 	call	#29940		;#0x74f4

    return len;
}
    7552:	0c 4a       	mov	r10,	r12	;
    7554:	0a 17       	popm	#1,	r10	;16-bit words
    7556:	30 41       	ret			

00007558 <UART_init>:
 * @todo Currently assumes an 8MHz SMCLK. Make robust to clock frequency changes by using 32k ACLK.
 */
void UART_init(void) {

    // Configure USCI_A0 for UART mode
    UCA0CTLW0 = UCSWRST;                      // Put eUSCI in reset
    7558:	92 43 c0 05 	mov	#1,	&0x05c0	;r3 As==01
    UCA0CTLW0 |= UCSSEL__SMCLK;               // CLK = SMCLK
    755c:	b2 d0 80 00 	bis	#128,	&0x05c0	;#0x0080
    7560:	c0 05 
    UCA0BR1 = 0;
    UCA0MCTLW = UCOS16 | UCBRF_2 | (0xBB << 8);
#endif // UART_BAUDRATE
#elif UART_CLOCK == 8000000
#if UART_BAUDRATE == 115200
    UCA0BR0 = 4;
    7562:	e2 42 c6 05 	mov.b	#4,	&0x05c6	;r2 As==10
    UCA0BR1 = 0;
    7566:	c2 43 c7 05 	mov.b	#0,	&0x05c7	;r3 As==00
    UCA0MCTLW = UCOS16 | UCBRF_4 | (0x55 << 8);
    756a:	b2 40 41 55 	mov	#21825,	&0x05c8	;#0x5541
    756e:	c8 05 
#endif // UART_BAUDRATE
#endif // UART_CLOCK

#if defined(__MSP430FR5969__) || defined(__MSP430FR5949__)
    PUART_TXSEL0 &= ~PIN_UART_TX; // TX pin to UART module
    7570:	d2 c3 0b 02 	bic.b	#1,	&0x020b	;r3 As==01
    PUART_TXSEL1 |= PIN_UART_TX;
    7574:	d2 d3 0d 02 	bis.b	#1,	&0x020d	;r3 As==01

    PUART_RXSEL0 &= ~PIN_UART_RX; // RX pin to UART module
    7578:	e2 c3 0b 02 	bic.b	#2,	&0x020b	;r3 As==10
    PUART_RXSEL1 |= PIN_UART_RX;
    757c:	e2 d3 0d 02 	bis.b	#2,	&0x020d	;r3 As==10
    PUART_RXSEL1 &= ~PIN_UART_RX;
#else
#error MCU not supported
#endif

    UCA0CTLW0 &= ~UCSWRST;                    // Initialize eUSCI
    7580:	92 c3 c0 05 	bic	#1,	&0x05c0	;r3 As==01

    // Initialize module state
    UART_SM.isTxBusy = FALSE;
    7584:	3c 40 18 1c 	mov	#7192,	r12	;#0x1c18
    7588:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    UART_SM.txBytesRemaining = 0;
    758c:	8c 43 04 00 	mov	#0,	4(r12)	;r3 As==00
    UART_SM.isRxBusy = FALSE;
    7590:	cc 43 06 00 	mov.b	#0,	6(r12)	;r3 As==00
    UART_SM.rxBytesRemaining = 0;
    7594:	8c 43 0a 00 	mov	#0,	10(r12)	;r3 As==00, 0x000a

}
    7598:	30 41       	ret			

0000759a <UART_teardown>:
void UART_teardown()
{
    // disable UART
    // Not sure how to do this best, but set all UCA0* registers to
    // their default values.  See User's Guide for default values.
    PUART_TXSEL0 &= ~PIN_UART_TX;
    759a:	d2 c3 0b 02 	bic.b	#1,	&0x020b	;r3 As==01
    PUART_TXSEL1 &= ~PIN_UART_TX;
    759e:	d2 c3 0d 02 	bic.b	#1,	&0x020d	;r3 As==01
    PUART_RXSEL0 &= ~PIN_UART_RX;
    75a2:	e2 c3 0b 02 	bic.b	#2,	&0x020b	;r3 As==10
    PUART_RXSEL1 &= ~PIN_UART_RX;
    75a6:	e2 c3 0d 02 	bic.b	#2,	&0x020d	;r3 As==10
    UCA0CTLW0 = 0x0001;
    75aa:	92 43 c0 05 	mov	#1,	&0x05c0	;r3 As==01
    UCA0BR0 = 0x0000;
    75ae:	c2 43 c6 05 	mov.b	#0,	&0x05c6	;r3 As==00
    UCA0MCTLW = 0x0000;
    75b2:	82 43 c8 05 	mov	#0,	&0x05c8	;r3 As==00
    UCA0IE = 0x0000;
    75b6:	82 43 da 05 	mov	#0,	&0x05da	;r3 As==00
    UCA0IFG = 0x0000;
    75ba:	82 43 dc 05 	mov	#0,	&0x05dc	;r3 As==00
}
    75be:	30 41       	ret			

000075c0 <UART_asyncSend>:
 * @param size the number of bytes to send
 */
void UART_asyncSend(uint8_t* txBuf, uint16_t size) {

    // Block until prior transmission has completed
    while (UART_SM.isTxBusy)
    75c0:	3f 40 18 1c 	mov	#7192,	r15	;#0x1c18
    75c4:	6e 4f       	mov.b	@r15,	r14	;
    75c6:	0e 93       	cmp	#0,	r14	;r3 As==00
    75c8:	fd 23       	jnz	$-4      	;abs 0x75c4
        ;

    // Set up for start of transmission
    UART_SM.isTxBusy = TRUE;
    75ca:	3e 40 18 1c 	mov	#7192,	r14	;#0x1c18
    75ce:	de 43 00 00 	mov.b	#1,	0(r14)	;r3 As==01
    UART_SM.txPtr = txBuf;
    75d2:	8e 4c 02 00 	mov	r12,	2(r14)	;
    UART_SM.txBytesRemaining = size;
    75d6:	8e 4d 04 00 	mov	r13,	4(r14)	;

    UCA0IFG &= ~(USCI_UART_UCTXIFG); // Clear the 'ready to accept byte' flag
    75da:	a2 c2 dc 05 	bic	#4,	&0x05dc	;r2 As==10

    UCA0IE |= UCTXIE; // Enable USCI_A0 TX interrupt ('ready to accept byte')
    75de:	a2 d3 da 05 	bis	#2,	&0x05da	;r3 As==10
    //UCA0TXBUF = *(UART_SM.txPtr++); // Load in first byte

    // The bytes are transmitted in the TX ISR (which is called whenever the
    // UART is ready to accept a byte), and the isBusy flag is cleared when the
    // last byte has *finished* transmitting.
}
    75e2:	30 41       	ret			

000075e4 <UART_send>:
 * @param size the number of bytes to send
 *
 */
void UART_send(uint8_t* txBuf, uint16_t size) {

    UART_asyncSend(txBuf, size);
    75e4:	b0 12 c0 75 	call	#30144		;#0x75c0

    // Block until complete
    while (UART_SM.isTxBusy)
    75e8:	3d 40 18 1c 	mov	#7192,	r13	;#0x1c18
    75ec:	6c 4d       	mov.b	@r13,	r12	;
    75ee:	0c 93       	cmp	#0,	r12	;r3 As==00
    75f0:	fd 23       	jnz	$-4      	;abs 0x75ec
        ;
}
    75f2:	30 41       	ret			

000075f4 <UART_critSend>:
 *  and use UART status register polling instead of interrupts.
 */
void UART_critSend(uint8_t* txBuf, uint16_t size) {

    // Block until prior transmission has completed
    while (UART_SM.isTxBusy)
    75f4:	3f 40 18 1c 	mov	#7192,	r15	;#0x1c18
    75f8:	6e 4f       	mov.b	@r15,	r14	;
    75fa:	0e 93       	cmp	#0,	r14	;r3 As==00
    75fc:	fd 23       	jnz	$-4      	;abs 0x75f8
        ;

    // Set up for start of transmission
    UART_SM.isTxBusy = TRUE;
    75fe:	3e 40 18 1c 	mov	#7192,	r14	;#0x1c18
    7602:	de 43 00 00 	mov.b	#1,	0(r14)	;r3 As==01
    UART_SM.txPtr = txBuf;
    7606:	8e 4c 02 00 	mov	r12,	2(r14)	;
    UART_SM.txBytesRemaining = size;
    760a:	8e 4d 04 00 	mov	r13,	4(r14)	;

    UCA0IV &= ~(USCI_UART_UCTXIFG); // Clear byte completion flag
    760e:	a2 c2 de 05 	bic	#4,	&0x05de	;r2 As==10

    while (UART_SM.txBytesRemaining--) {
    7612:	1c 4e 04 00 	mov	4(r14),	r12	;
    7616:	0d 4c       	mov	r12,	r13	;
    7618:	3d 53       	add	#-1,	r13	;r3 As==11
    761a:	8e 4d 04 00 	mov	r13,	4(r14)	;
    761e:	0c 93       	cmp	#0,	r12	;r3 As==00
    7620:	19 24       	jz	$+52     	;abs 0x7654
        UCA0TXBUF = *(UART_SM.txPtr++); // Load in next byte
    7622:	0c 4e       	mov	r14,	r12	;
    7624:	1d 4c 02 00 	mov	2(r12),	r13	;
    7628:	0e 4d       	mov	r13,	r14	;
    762a:	1e 53       	inc	r14		;
    762c:	8c 4e 02 00 	mov	r14,	2(r12)	;
    7630:	6d 4d       	mov.b	@r13,	r13	;
    7632:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    7636:	82 4d ce 05 	mov	r13,	&0x05ce	;
        while (!(UCA0IFG & UCTXIFG))
    763a:	a2 b3 dc 05 	bit	#2,	&0x05dc	;r3 As==10
    763e:	fd 27       	jz	$-4      	;abs 0x763a
            ; // Wait for byte transmission to complete
        UCA0IFG &= ~(UCTXIFG); // Clear byte completion flag
    7640:	a2 c3 dc 05 	bic	#2,	&0x05dc	;r3 As==10
    UART_SM.txPtr = txBuf;
    UART_SM.txBytesRemaining = size;

    UCA0IV &= ~(USCI_UART_UCTXIFG); // Clear byte completion flag

    while (UART_SM.txBytesRemaining--) {
    7644:	1d 4c 04 00 	mov	4(r12),	r13	;
    7648:	0e 4d       	mov	r13,	r14	;
    764a:	3e 53       	add	#-1,	r14	;r3 As==11
    764c:	8c 4e 04 00 	mov	r14,	4(r12)	;
    7650:	0d 93       	cmp	#0,	r13	;r3 As==00
    7652:	e8 23       	jnz	$-46     	;abs 0x7624
        while (!(UCA0IFG & UCTXIFG))
            ; // Wait for byte transmission to complete
        UCA0IFG &= ~(UCTXIFG); // Clear byte completion flag
    }

    UART_SM.isTxBusy = FALSE;
    7654:	c2 43 18 1c 	mov.b	#0,	&0x1c18	;r3 As==00
}
    7658:	30 41       	ret			

0000765a <UART_isTxBusy>:
/**
 * Return true if UART TX module is in the middle of an operation, false if not.
 */
uint8_t UART_isTxBusy() {
    return UART_SM.isTxBusy;
}
    765a:	5c 42 18 1c 	mov.b	&0x1c18,r12	;0x1c18
    765e:	30 41       	ret			

00007660 <UART_asyncReceive>:
 * @param size the number of bytes to receive
 */
void UART_asyncReceive(uint8_t* rxBuf, uint16_t size) {

    // Block until prior reception has completed
    while (UART_SM.isRxBusy)
    7660:	3f 40 18 1c 	mov	#7192,	r15	;#0x1c18
    7664:	5e 4f 06 00 	mov.b	6(r15),	r14	;
    7668:	0e 93       	cmp	#0,	r14	;r3 As==00
    766a:	fc 23       	jnz	$-6      	;abs 0x7664
        ;

    // Set up for start of reception
    UART_SM.isRxBusy = TRUE;
    766c:	3e 40 18 1c 	mov	#7192,	r14	;#0x1c18
    7670:	de 43 06 00 	mov.b	#1,	6(r14)	;r3 As==01
    UART_SM.rxPtr = rxBuf;
    7674:	8e 4c 08 00 	mov	r12,	8(r14)	;
    UART_SM.rxBytesRemaining = size;
    7678:	8e 4d 0a 00 	mov	r13,	10(r14)	; 0x000a

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag
    767c:	92 c3 dc 05 	bic	#1,	&0x05dc	;r3 As==01

    UCA0IE |= UCRXIE; // Enable USCI_A0 RX interrupt
    7680:	92 d3 da 05 	bis	#1,	&0x05da	;r3 As==01

    // The rest of the reception will be completed by the RX ISR (which
    //  will wake after each byte has been received), and the isBusy flag
    //  will be cleared when done.
}
    7684:	30 41       	ret			

00007686 <UART_receive>:
 * @param size the number of bytes to receive
 *
 */
void UART_receive(uint8_t* rxBuf, uint16_t size) {

    UART_asyncReceive(rxBuf, size);
    7686:	b0 12 60 76 	call	#30304		;#0x7660

    // Block until complete
    while (UART_SM.isRxBusy)
    768a:	3d 40 18 1c 	mov	#7192,	r13	;#0x1c18
    768e:	5c 4d 06 00 	mov.b	6(r13),	r12	;
    7692:	0c 93       	cmp	#0,	r12	;r3 As==00
    7694:	fc 23       	jnz	$-6      	;abs 0x768e
        ;
}
    7696:	30 41       	ret			

00007698 <UART_critReceive>:
 *  and use UART status register polling instead of interrupts.
 */
void UART_critReceive(uint8_t* rxBuf, uint16_t size) {

    // Block until prior reception has completed
    while (UART_SM.isRxBusy)
    7698:	3f 40 18 1c 	mov	#7192,	r15	;#0x1c18
    769c:	5e 4f 06 00 	mov.b	6(r15),	r14	;
    76a0:	0e 93       	cmp	#0,	r14	;r3 As==00
    76a2:	fc 23       	jnz	$-6      	;abs 0x769c
        ;

    // Set up for start of reception
    UART_SM.isRxBusy = TRUE;
    76a4:	3e 40 18 1c 	mov	#7192,	r14	;#0x1c18
    76a8:	de 43 06 00 	mov.b	#1,	6(r14)	;r3 As==01
    UART_SM.rxPtr = rxBuf;
    76ac:	8e 4c 08 00 	mov	r12,	8(r14)	;
    UART_SM.rxBytesRemaining = size;
    76b0:	8e 4d 0a 00 	mov	r13,	10(r14)	; 0x000a

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag
    76b4:	92 c3 dc 05 	bic	#1,	&0x05dc	;r3 As==01

    while (UART_SM.rxBytesRemaining--) {
    76b8:	1c 4e 0a 00 	mov	10(r14),r12	;0x0000a
    76bc:	0d 4c       	mov	r12,	r13	;
    76be:	3d 53       	add	#-1,	r13	;r3 As==11
    76c0:	8e 4d 0a 00 	mov	r13,	10(r14)	; 0x000a
    76c4:	0c 93       	cmp	#0,	r12	;r3 As==00
    76c6:	18 24       	jz	$+50     	;abs 0x76f8
        while (!(UCA0IFG & UCRXIFG))
            ; // Wait for byte reception to complete
        UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

        uint8_t rec = UCA0RXBUF; // Read next byte
        *(UART_SM.rxPtr++) = rec; // Store byte
    76c8:	0c 4e       	mov	r14,	r12	;
    UART_SM.rxBytesRemaining = size;

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

    while (UART_SM.rxBytesRemaining--) {
        while (!(UCA0IFG & UCRXIFG))
    76ca:	92 b3 dc 05 	bit	#1,	&0x05dc	;r3 As==01
    76ce:	fd 27       	jz	$-4      	;abs 0x76ca
            ; // Wait for byte reception to complete
        UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag
    76d0:	92 c3 dc 05 	bic	#1,	&0x05dc	;r3 As==01

        uint8_t rec = UCA0RXBUF; // Read next byte
    76d4:	1e 42 cc 05 	mov	&0x05cc,r14	;0x05cc
        *(UART_SM.rxPtr++) = rec; // Store byte
    76d8:	1d 4c 08 00 	mov	8(r12),	r13	;
    76dc:	0f 4d       	mov	r13,	r15	;
    76de:	1f 53       	inc	r15		;
    76e0:	8c 4f 08 00 	mov	r15,	8(r12)	;
    while (UART_SM.rxBytesRemaining--) {
        while (!(UCA0IFG & UCRXIFG))
            ; // Wait for byte reception to complete
        UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

        uint8_t rec = UCA0RXBUF; // Read next byte
    76e4:	cd 4e 00 00 	mov.b	r14,	0(r13)	;
    UART_SM.rxPtr = rxBuf;
    UART_SM.rxBytesRemaining = size;

    UCA0IFG &= ~(UCRXIFG); // Clear byte completion flag

    while (UART_SM.rxBytesRemaining--) {
    76e8:	1d 4c 0a 00 	mov	10(r12),r13	;0x0000a
    76ec:	0e 4d       	mov	r13,	r14	;
    76ee:	3e 53       	add	#-1,	r14	;r3 As==11
    76f0:	8c 4e 0a 00 	mov	r14,	10(r12)	; 0x000a
    76f4:	0d 93       	cmp	#0,	r13	;r3 As==00
    76f6:	e9 23       	jnz	$-44     	;abs 0x76ca

        uint8_t rec = UCA0RXBUF; // Read next byte
        *(UART_SM.rxPtr++) = rec; // Store byte
    }

    UART_SM.isRxBusy = FALSE;
    76f8:	c2 43 1e 1c 	mov.b	#0,	&0x1c1e	;r3 As==00
}
    76fc:	30 41       	ret			

000076fe <UART_isRxBusy>:
/**
 * Return true if UART RX module is in the middle of an operation, false if not.
 */
uint8_t UART_isRxBusy() {
    return UART_SM.isRxBusy;
}
    76fe:	5c 42 1e 1c 	mov.b	&0x1c1e,r12	;0x1c1e
    7702:	30 41       	ret			

00007704 <UART_isRxDone>:
 * Return true if UART RX module is not in the middle of an operation (e.g. done), false if not.
 *
 * Could be used in combination with UART_asyncReceive.
 */
uint8_t UART_isRxDone() {
    return !(UART_SM.isRxBusy);
    7704:	5c 42 1e 1c 	mov.b	&0x1c1e,r12	;0x1c1e
    7708:	3c 53       	add	#-1,	r12	;r3 As==11
}
    770a:	5c 03       	rrum	#1,	r12	;
    770c:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    7710:	30 41       	ret			

00007712 <USCI_A0_ISR>:
#elif defined(__GNUC__)
void __attribute__ ((interrupt(USCI_A0_VECTOR))) USCI_A0_ISR (void)
#else
#error Compiler not supported!
#endif
{
    7712:	3f 15       	pushm	#4,	r15	;16-bit words
    uint8_t rec;

    switch (__even_in_range(UCA0IV, USCI_UART_UCTXCPTIFG)) {
    7714:	1c 42 de 05 	mov	&0x05de,r12	;0x05de
    7718:	2c 93       	cmp	#2,	r12	;r3 As==10
    771a:	03 24       	jz	$+8      	;abs 0x7722
    771c:	2c 92       	cmp	#4,	r12	;r2 As==10
    771e:	1e 24       	jz	$+62     	;abs 0x775c
    7720:	38 3c       	jmp	$+114    	;abs 0x7792
    case USCI_NONE:
        break;
    case USCI_UART_UCRXIFG:
        if (UART_SM.rxBytesRemaining--) {
    7722:	3d 40 18 1c 	mov	#7192,	r13	;#0x1c18
    7726:	1c 4d 0a 00 	mov	10(r13),r12	;0x0000a
    772a:	0e 4c       	mov	r12,	r14	;
    772c:	3e 53       	add	#-1,	r14	;r3 As==11
    772e:	8d 4e 0a 00 	mov	r14,	10(r13)	; 0x000a
    7732:	0c 93       	cmp	#0,	r12	;r3 As==00
    7734:	0a 24       	jz	$+22     	;abs 0x774a
            rec = UCA0RXBUF; // Read next byte
    7736:	1e 42 cc 05 	mov	&0x05cc,r14	;0x05cc
            *(UART_SM.rxPtr++) = rec; // Store byte
    773a:	1c 4d 08 00 	mov	8(r13),	r12	;
    773e:	0f 4c       	mov	r12,	r15	;
    7740:	1f 53       	inc	r15		;
    7742:	8d 4f 08 00 	mov	r15,	8(r13)	;
    switch (__even_in_range(UCA0IV, USCI_UART_UCTXCPTIFG)) {
    case USCI_NONE:
        break;
    case USCI_UART_UCRXIFG:
        if (UART_SM.rxBytesRemaining--) {
            rec = UCA0RXBUF; // Read next byte
    7746:	cc 4e 00 00 	mov.b	r14,	0(r12)	;
            *(UART_SM.rxPtr++) = rec; // Store byte
        }

        if (0 == UART_SM.rxBytesRemaining) {
    774a:	1c 42 22 1c 	mov	&0x1c22,r12	;0x1c22
    774e:	0c 93       	cmp	#0,	r12	;r3 As==00
    7750:	20 20       	jnz	$+66     	;abs 0x7792
            UCA0IE &= ~(UCRXIE); // Disable USCI_A0 RX interrupt
    7752:	92 c3 da 05 	bic	#1,	&0x05da	;r3 As==01
            UART_SM.isRxBusy = FALSE;
    7756:	c2 43 1e 1c 	mov.b	#0,	&0x1c1e	;r3 As==00
    775a:	1b 3c       	jmp	$+56     	;abs 0x7792
        }

        break;
    case USCI_UART_UCTXIFG:
        UCA0TXBUF = *(UART_SM.txPtr++); // if interrupt was enabled, there must be bytes
    775c:	3c 40 18 1c 	mov	#7192,	r12	;#0x1c18
    7760:	1d 4c 02 00 	mov	2(r12),	r13	;
    7764:	0e 4d       	mov	r13,	r14	;
    7766:	1e 53       	inc	r14		;
    7768:	8c 4e 02 00 	mov	r14,	2(r12)	;
    776c:	6d 4d       	mov.b	@r13,	r13	;
    776e:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    7772:	82 4d ce 05 	mov	r13,	&0x05ce	;
        if (--UART_SM.txBytesRemaining == 0) {
    7776:	1d 4c 04 00 	mov	4(r12),	r13	;
    777a:	3d 53       	add	#-1,	r13	;r3 As==11
    777c:	8c 4d 04 00 	mov	r13,	4(r12)	;
    7780:	0d 93       	cmp	#0,	r13	;r3 As==00
    7782:	07 20       	jnz	$+16     	;abs 0x7792
            // TODO: actually, this wait should probably happen for blocking version only
            while (UCA0STATW & UCBUSY); // wait for last byte to finish transmitting
    7784:	d2 b3 ca 05 	bit.b	#1,	&0x05ca	;r3 As==01
    7788:	fd 23       	jnz	$-4      	;abs 0x7784
            UCA0IE &= ~(UCTXIE); // Disable USCI_A0 TX interrupt
    778a:	a2 c3 da 05 	bic	#2,	&0x05da	;r3 As==10
            UART_SM.isTxBusy = FALSE;
    778e:	c2 43 18 1c 	mov.b	#0,	&0x1c18	;r3 As==00
    case USCI_UART_UCSTTIFG:
        break;
    case USCI_UART_UCTXCPTIFG:
        break;
    }
}
    7792:	3c 17       	popm	#4,	r15	;16-bit words
    7794:	00 13       	reti			

00007796 <memmove>:
    7796:	0a 15       	pushm	#1,	r10	;16-bit words
    7798:	0d 9c       	cmp	r12,	r13	;
    779a:	10 2c       	jc	$+34     	;abs 0x77bc
    779c:	0b 4d       	mov	r13,	r11	;
    779e:	0b 5e       	add	r14,	r11	;
    77a0:	0c 9b       	cmp	r11,	r12	;
    77a2:	0c 2c       	jc	$+26     	;abs 0x77bc
    77a4:	0d 4e       	mov	r14,	r13	;
    77a6:	3d 53       	add	#-1,	r13	;r3 As==11
    77a8:	3d 93       	cmp	#-1,	r13	;r3 As==11
    77aa:	13 24       	jz	$+40     	;abs 0x77d2
    77ac:	0f 4d       	mov	r13,	r15	;
    77ae:	0f 8e       	sub	r14,	r15	;
    77b0:	0f 5b       	add	r11,	r15	;
    77b2:	0a 4c       	mov	r12,	r10	;
    77b4:	0a 5d       	add	r13,	r10	;
    77b6:	ea 4f 00 00 	mov.b	@r15,	0(r10)	;
    77ba:	f5 3f       	jmp	$-20     	;abs 0x77a6
    77bc:	0f 43       	clr	r15		;
    77be:	0f 9e       	cmp	r14,	r15	;
    77c0:	08 24       	jz	$+18     	;abs 0x77d2
    77c2:	0a 4d       	mov	r13,	r10	;
    77c4:	0a 5f       	add	r15,	r10	;
    77c6:	0b 4c       	mov	r12,	r11	;
    77c8:	0b 5f       	add	r15,	r11	;
    77ca:	eb 4a 00 00 	mov.b	@r10,	0(r11)	;
    77ce:	1f 53       	inc	r15		;
    77d0:	f6 3f       	jmp	$-18     	;abs 0x77be
    77d2:	0a 17       	popm	#1,	r10	;16-bit words
    77d4:	30 41       	ret			

000077d6 <memset>:
    77d6:	0f 4c       	mov	r12,	r15	;
    77d8:	0e 5c       	add	r12,	r14	;
    77da:	0f 9e       	cmp	r14,	r15	;
    77dc:	04 24       	jz	$+10     	;abs 0x77e6
    77de:	cf 4d 00 00 	mov.b	r13,	0(r15)	;
    77e2:	1f 53       	inc	r15		;
    77e4:	fa 3f       	jmp	$-10     	;abs 0x77da
    77e6:	30 41       	ret			

000077e8 <__do_global_ctors_aux>:
    77e8:	0a 15       	pushm	#1,	r10	;16-bit words
    77ea:	1c 42 f4 4a 	mov	&0x4af4,r12	;0x4af4
    77ee:	3c 93       	cmp	#-1,	r12	;r3 As==11
    77f0:	08 24       	jz	$+18     	;abs 0x7802
    77f2:	3a 40 f4 4a 	mov	#19188,	r10	;#0x4af4
    77f6:	8c 12       	call	r12		;
    77f8:	3a 50 fe ff 	add	#65534,	r10	;#0xfffe
    77fc:	2c 4a       	mov	@r10,	r12	;
    77fe:	3c 93       	cmp	#-1,	r12	;r3 As==11
    7800:	fa 23       	jnz	$-10     	;abs 0x77f6
    7802:	0a 17       	popm	#1,	r10	;16-bit words
    7804:	30 41       	ret			

00007806 <call___do_global_ctors_aux>:
    7806:	30 41       	ret			

00007808 <__msp430_init>:
    7808:	b0 12 48 52 	call	#21064		;#0x5248
    780c:	b0 12 e8 77 	call	#30696		;#0x77e8
    7810:	b0 12 88 51 	call	#20872		;#0x5188
    7814:	b0 12 7c 51 	call	#20860		;#0x517c
    7818:	30 41       	ret			

0000781a <__msp430_fini>:
    781a:	b0 12 94 51 	call	#20884		;#0x5194
    781e:	b0 12 fa 51 	call	#20986		;#0x51fa
    7822:	30 41       	ret			
